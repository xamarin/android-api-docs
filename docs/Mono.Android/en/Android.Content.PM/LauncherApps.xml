<Type Name="LauncherApps" FullName="Android.Content.PM.LauncherApps">
  <TypeSignature Language="C#" Value="public class LauncherApps : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LauncherApps extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Content.PM.LauncherApps" />
  <TypeSignature Language="F#" Value="type LauncherApps = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/content/pm/LauncherApps", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/content/pm/LauncherApps", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Class for retrieving a list of launchable activities for the current user and any associated
            managed profiles that are visible to the current user, which can be retrieved with
            <c>#getProfiles</c>.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/content/pm/LauncherApps" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LauncherApps (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Content.PM.LauncherApps : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Content.PM.LauncherApps" Usage="new Android.Content.PM.LauncherApps (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionConfirmPinAppwidget">
      <MemberSignature Language="C#" Value="public const string ActionConfirmPinAppwidget;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionConfirmPinAppwidget" />
      <MemberSignature Language="DocId" Value="F:Android.Content.PM.LauncherApps.ActionConfirmPinAppwidget" />
      <MemberSignature Language="F#" Value="val mutable ActionConfirmPinAppwidget : string" Usage="Android.Content.PM.LauncherApps.ActionConfirmPinAppwidget" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_CONFIRM_PIN_APPWIDGET", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_CONFIRM_PIN_APPWIDGET", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: For the default launcher to show the confirmation dialog to create
            a pinned app widget.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#ACTION_CONFIRM_PIN_APPWIDGET" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.ACTION_CONFIRM_PIN_APPWIDGET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionConfirmPinShortcut">
      <MemberSignature Language="C#" Value="public const string ActionConfirmPinShortcut;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionConfirmPinShortcut" />
      <MemberSignature Language="DocId" Value="F:Android.Content.PM.LauncherApps.ActionConfirmPinShortcut" />
      <MemberSignature Language="F#" Value="val mutable ActionConfirmPinShortcut : string" Usage="Android.Content.PM.LauncherApps.ActionConfirmPinShortcut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_CONFIRM_PIN_SHORTCUT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_CONFIRM_PIN_SHORTCUT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: For the default launcher to show the confirmation dialog to create
            a pinned shortcut.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#ACTION_CONFIRM_PIN_SHORTCUT" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.ACTION_CONFIRM_PIN_SHORTCUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllPackageInstallerSessions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller.SessionInfo&gt; AllPackageInstallerSessions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInstaller/SessionInfo&gt; AllPackageInstallerSessions" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.LauncherApps.AllPackageInstallerSessions" />
      <MemberSignature Language="F#" Value="member this.AllPackageInstallerSessions : System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller.SessionInfo&gt;" Usage="Android.Content.PM.LauncherApps.AllPackageInstallerSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllPackageInstallerSessions", "()Ljava/util/List;", "GetGetAllPackageInstallerSessionsHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllPackageInstallerSessions", "()Ljava/util/List;", "GetGetAllPackageInstallerSessionsHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller+SessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all known install sessions in this user and managed profiles, regardless
            of the installer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getAllPackageInstallerSessions()" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getAllPackageInstallerSessions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraPinItemRequest">
      <MemberSignature Language="C#" Value="public const string ExtraPinItemRequest;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPinItemRequest" />
      <MemberSignature Language="DocId" Value="F:Android.Content.PM.LauncherApps.ExtraPinItemRequest" />
      <MemberSignature Language="F#" Value="val mutable ExtraPinItemRequest : string" Usage="Android.Content.PM.LauncherApps.ExtraPinItemRequest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PIN_ITEM_REQUEST", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PIN_ITEM_REQUEST", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An extra for <c>#ACTION_CONFIRM_PIN_SHORTCUT</c> &amp;amp; <c>#ACTION_CONFIRM_PIN_APPWIDGET</c>
            containing a <c>PinItemRequest</c> of appropriate type asked to pin.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#EXTRA_PIN_ITEM_REQUEST" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.EXTRA_PIN_ITEM_REQUEST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;? GetActivityList (string? packageName, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.LauncherActivityInfo&gt; GetActivityList(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetActivityList(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetActivityList : string * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;&#xA;override this.GetActivityList : string * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;" Usage="launcherApps.GetActivityList (packageName, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityList", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetActivityList_Ljava_lang_String_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityList", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetActivityList_Ljava_lang_String_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The specific package to query. If null, it checks all installed packages
                       in the profile.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Retrieves a list of activities that specify <c>Intent#ACTION_MAIN</c> and
            <c>Intent#CATEGORY_LAUNCHER</c>, across all apps, for a specified user.</summary>
        <returns>List of launchable activities. Can be an empty list but will not be null.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getActivityList(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getActivityList(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ApplicationInfo? GetApplicationInfo (string packageName, Android.Content.PM.PackageInfoFlags flags, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ApplicationInfo GetApplicationInfo(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetApplicationInfo(System.String,Android.Content.PM.PackageInfoFlags,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationInfo : string * Android.Content.PM.PackageInfoFlags * Android.OS.UserHandle -&gt; Android.Content.PM.ApplicationInfo&#xA;override this.GetApplicationInfo : string * Android.Content.PM.PackageInfoFlags * Android.OS.UserHandle -&gt; Android.Content.PM.ApplicationInfo" Usage="launcherApps.GetApplicationInfo (packageName, flags, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationInfo", "(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfo_Ljava_lang_String_ILandroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationInfo", "(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfo_Ljava_lang_String_ILandroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the application</param>
        <param name="flags">Additional option flags <c>PackageManager#getApplicationInfo</c></param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Returns <c>ApplicationInfo</c> about an application installed for a specific user profile.</summary>
        <returns>
          <c>ApplicationInfo</c> containing information about the package. Returns
                    <c>null</c> if the package isn't installed for the given profile, or the profile
                    isn't enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getApplicationInfo(java.lang.String,%20int,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getApplicationInfo(java.lang.String, int, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPinItemRequest">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.LauncherApps.PinItemRequest? GetPinItemRequest (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.LauncherApps/PinItemRequest GetPinItemRequest(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetPinItemRequest(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member GetPinItemRequest : Android.Content.Intent -&gt; Android.Content.PM.LauncherApps.PinItemRequest&#xA;override this.GetPinItemRequest : Android.Content.Intent -&gt; Android.Content.PM.LauncherApps.PinItemRequest" Usage="launcherApps.GetPinItemRequest intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPinItemRequest", "(Landroid/content/Intent;)Landroid/content/pm/LauncherApps$PinItemRequest;", "GetGetPinItemRequest_Landroid_content_Intent_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPinItemRequest", "(Landroid/content/Intent;)Landroid/content/pm/LauncherApps$PinItemRequest;", "GetGetPinItemRequest_Landroid_content_Intent_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.LauncherApps+PinItemRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>A helper method to extract a <c>PinItemRequest</c> set to
            the <c>#EXTRA_PIN_ITEM_REQUEST</c> extra.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getPinItemRequest(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getPinItemRequest(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortcutBadgedIconDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? GetShortcutBadgedIconDrawable (Android.Content.PM.ShortcutInfo? shortcut, int density);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetShortcutBadgedIconDrawable(class Android.Content.PM.ShortcutInfo shortcut, int32 density) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetShortcutBadgedIconDrawable(Android.Content.PM.ShortcutInfo,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetShortcutBadgedIconDrawable : Android.Content.PM.ShortcutInfo * int -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.GetShortcutBadgedIconDrawable : Android.Content.PM.ShortcutInfo * int -&gt; Android.Graphics.Drawables.Drawable" Usage="launcherApps.GetShortcutBadgedIconDrawable (shortcut, density)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortcutBadgedIconDrawable", "(Landroid/content/pm/ShortcutInfo;I)Landroid/graphics/drawable/Drawable;", "GetGetShortcutBadgedIconDrawable_Landroid_content_pm_ShortcutInfo_IHandler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortcutBadgedIconDrawable", "(Landroid/content/pm/ShortcutInfo;I)Landroid/graphics/drawable/Drawable;", "GetGetShortcutBadgedIconDrawable_Landroid_content_pm_ShortcutInfo_IHandler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="Android.Content.PM.ShortcutInfo" />
        <Parameter Name="density" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortcut">To be added.</param>
        <param name="density">Optional density for the icon, or 0 to use the default density. Use</param>
        <summary>Returns the shortcut icon with badging appropriate for the profile.</summary>
        <returns>A badged icon for the shortcut.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,%20int)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortcutConfigActivityIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.IntentSender? GetShortcutConfigActivityIntent (Android.Content.PM.LauncherActivityInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.IntentSender GetShortcutConfigActivityIntent(class Android.Content.PM.LauncherActivityInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetShortcutConfigActivityIntent(Android.Content.PM.LauncherActivityInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetShortcutConfigActivityIntent : Android.Content.PM.LauncherActivityInfo -&gt; Android.Content.IntentSender&#xA;override this.GetShortcutConfigActivityIntent : Android.Content.PM.LauncherActivityInfo -&gt; Android.Content.IntentSender" Usage="launcherApps.GetShortcutConfigActivityIntent info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortcutConfigActivityIntent", "(Landroid/content/pm/LauncherActivityInfo;)Landroid/content/IntentSender;", "GetGetShortcutConfigActivityIntent_Landroid_content_pm_LauncherActivityInfo_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortcutConfigActivityIntent", "(Landroid/content/pm/LauncherActivityInfo;)Landroid/content/IntentSender;", "GetGetShortcutConfigActivityIntent_Landroid_content_pm_LauncherActivityInfo_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.IntentSender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.LauncherActivityInfo" />
      </Parameters>
      <Docs>
        <param name="info">a configuration activity returned by <c>#getShortcutConfigActivityList</c></param>
        <summary>Returns an intent sender which can be used to start the configure activity for creating
            custom shortcuts.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortcutConfigActivityList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;? GetShortcutConfigActivityList (string? packageName, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.LauncherActivityInfo&gt; GetShortcutConfigActivityList(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetShortcutConfigActivityList(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetShortcutConfigActivityList : string * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;&#xA;override this.GetShortcutConfigActivityList : string * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;" Usage="launcherApps.GetShortcutConfigActivityList (packageName, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortcutConfigActivityList", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetShortcutConfigActivityList_Ljava_lang_String_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortcutConfigActivityList", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetShortcutConfigActivityList_Ljava_lang_String_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The specific package to query. If null, it checks all installed packages
                       in the profile.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Retrieves a list of config activities for creating <c>ShortcutInfo</c>.</summary>
        <returns>List of config activities. Can be an empty list but will not be null.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getShortcutConfigActivityList(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getShortcutConfigActivityList(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortcutIconDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? GetShortcutIconDrawable (Android.Content.PM.ShortcutInfo shortcut, int density);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetShortcutIconDrawable(class Android.Content.PM.ShortcutInfo shortcut, int32 density) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetShortcutIconDrawable(Android.Content.PM.ShortcutInfo,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetShortcutIconDrawable : Android.Content.PM.ShortcutInfo * int -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.GetShortcutIconDrawable : Android.Content.PM.ShortcutInfo * int -&gt; Android.Graphics.Drawables.Drawable" Usage="launcherApps.GetShortcutIconDrawable (shortcut, density)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortcutIconDrawable", "(Landroid/content/pm/ShortcutInfo;I)Landroid/graphics/drawable/Drawable;", "GetGetShortcutIconDrawable_Landroid_content_pm_ShortcutInfo_IHandler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortcutIconDrawable", "(Landroid/content/pm/ShortcutInfo;I)Landroid/graphics/drawable/Drawable;", "GetGetShortcutIconDrawable_Landroid_content_pm_ShortcutInfo_IHandler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="Android.Content.PM.ShortcutInfo" />
        <Parameter Name="density" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortcut">To be added.</param>
        <param name="density">The preferred density of the icon, zero for default density. Use
            density DPI values from <c>DisplayMetrics</c>.</param>
        <summary>Returns the icon for this shortcut, without any badging for the profile.</summary>
        <returns>The drawable associated with the shortcut.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getShortcutIconDrawable(android.content.pm.ShortcutInfo,%20int)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getShortcutIconDrawable(android.content.pm.ShortcutInfo, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortcutIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent? GetShortcutIntent (string packageName, string shortcutId, Android.OS.Bundle? opts, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetShortcutIntent(string packageName, string shortcutId, class Android.OS.Bundle opts, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetShortcutIntent(System.String,System.String,Android.OS.Bundle,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetShortcutIntent : string * string * Android.OS.Bundle * Android.OS.UserHandle -&gt; Android.App.PendingIntent&#xA;override this.GetShortcutIntent : string * string * Android.OS.Bundle * Android.OS.UserHandle -&gt; Android.App.PendingIntent" Usage="launcherApps.GetShortcutIntent (packageName, shortcutId, opts, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortcutIntent", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Landroid/os/UserHandle;)Landroid/app/PendingIntent;", "GetGetShortcutIntent_Ljava_lang_String_Ljava_lang_String_Landroid_os_Bundle_Landroid_os_UserHandle_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortcutIntent", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Landroid/os/UserHandle;)Landroid/app/PendingIntent;", "GetGetShortcutIntent_Ljava_lang_String_Ljava_lang_String_Landroid_os_Bundle_Landroid_os_UserHandle_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="shortcutId" Type="System.String" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The packageName of the shortcut</param>
        <param name="shortcutId">The id of the shortcut</param>
        <param name="opts">This parameter is no longer supported</param>
        <param name="user">The UserHandle of the profile</param>
        <summary>Returns PendingIntent associated with specified shortcut.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getShortcutIntent(java.lang.String,%20java.lang.String,%20android.os.Bundle,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getShortcutIntent(java.lang.String, java.lang.String, android.os.Bundle, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortcuts">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.ShortcutInfo&gt;? GetShortcuts (Android.Content.PM.LauncherApps.ShortcutQuery query, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ShortcutInfo&gt; GetShortcuts(class Android.Content.PM.LauncherApps/ShortcutQuery query, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetShortcuts(Android.Content.PM.LauncherApps.ShortcutQuery,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetShortcuts : Android.Content.PM.LauncherApps.ShortcutQuery * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ShortcutInfo&gt;&#xA;override this.GetShortcuts : Android.Content.PM.LauncherApps.ShortcutQuery * Android.OS.UserHandle -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ShortcutInfo&gt;" Usage="launcherApps.GetShortcuts (query, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortcuts", "(Landroid/content/pm/LauncherApps$ShortcutQuery;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetShortcuts_Landroid_content_pm_LauncherApps_ShortcutQuery_Landroid_os_UserHandle_Handler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortcuts", "(Landroid/content/pm/LauncherApps$ShortcutQuery;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetShortcuts_Landroid_content_pm_LauncherApps_ShortcutQuery_Landroid_os_UserHandle_Handler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ShortcutInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Android.Content.PM.LauncherApps+ShortcutQuery" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="query">result includes shortcuts matching this query.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Returns <c>ShortcutInfo</c>s that match <c>query</c>.</summary>
        <returns>the IDs of <c>ShortcutInfo</c>s that match the query.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getShortcuts(android.content.pm.ShortcutQuery,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getShortcuts(android.content.pm.ShortcutQuery, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendedPackageLauncherExtras">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle? GetSuspendedPackageLauncherExtras (string? packageName, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetSuspendedPackageLauncherExtras(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.GetSuspendedPackageLauncherExtras(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member GetSuspendedPackageLauncherExtras : string * Android.OS.UserHandle -&gt; Android.OS.Bundle&#xA;override this.GetSuspendedPackageLauncherExtras : string * Android.OS.UserHandle -&gt; Android.OS.Bundle" Usage="launcherApps.GetSuspendedPackageLauncherExtras (packageName, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSuspendedPackageLauncherExtras", "(Ljava/lang/String;Landroid/os/UserHandle;)Landroid/os/Bundle;", "GetGetSuspendedPackageLauncherExtras_Ljava_lang_String_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSuspendedPackageLauncherExtras", "(Ljava/lang/String;Landroid/os/UserHandle;)Landroid/os/Bundle;", "GetGetSuspendedPackageLauncherExtras_Ljava_lang_String_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The package for which to fetch the launcher extras.</param>
        <param name="user">The <c>UserHandle</c> of the profile.</param>
        <summary>Gets the launcher extras supplied to the system when the given package was suspended via
            <c>PackageManager#setPackagesSuspended(String[], boolean, PersistableBundle,
            PersistableBundle, String)</c>.</summary>
        <returns>A <c>Bundle</c> of launcher extras. Or <c>null</c> if the package is not currently
                    suspended.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getSuspendedPackageLauncherExtras(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getSuspendedPackageLauncherExtras(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShortcutHostPermission">
      <MemberSignature Language="C#" Value="public virtual bool HasShortcutHostPermission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShortcutHostPermission" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.LauncherApps.HasShortcutHostPermission" />
      <MemberSignature Language="F#" Value="member this.HasShortcutHostPermission : bool" Usage="Android.Content.PM.LauncherApps.HasShortcutHostPermission" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasShortcutHostPermission", "()Z", "GetHasShortcutHostPermissionHandler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasShortcutHostPermission", "()Z", "GetHasShortcutHostPermissionHandler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the caller can access the shortcut information.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#hasShortcutHostPermission()" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.hasShortcutHostPermission()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActivityEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsActivityEnabled (Android.Content.ComponentName? component, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsActivityEnabled(class Android.Content.ComponentName component, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.IsActivityEnabled(Android.Content.ComponentName,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member IsActivityEnabled : Android.Content.ComponentName * Android.OS.UserHandle -&gt; bool&#xA;override this.IsActivityEnabled : Android.Content.ComponentName * Android.OS.UserHandle -&gt; bool" Usage="launcherApps.IsActivityEnabled (component, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isActivityEnabled", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetIsActivityEnabled_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isActivityEnabled", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetIsActivityEnabled_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="component">The activity to check.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Checks if the activity exists and it enabled for a profile.</summary>
        <returns>true if the activity exists and is enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#isActivityEnabled(android.content.ComponentName,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.isActivityEnabled(android.content.ComponentName, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPackageEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsPackageEnabled (string? packageName, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPackageEnabled(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.IsPackageEnabled(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member IsPackageEnabled : string * Android.OS.UserHandle -&gt; bool&#xA;override this.IsPackageEnabled : string * Android.OS.UserHandle -&gt; bool" Usage="launcherApps.IsPackageEnabled (packageName, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isPackageEnabled", "(Ljava/lang/String;Landroid/os/UserHandle;)Z", "GetIsPackageEnabled_Ljava_lang_String_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isPackageEnabled", "(Ljava/lang/String;Landroid/os/UserHandle;)Z", "GetIsPackageEnabled_Ljava_lang_String_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The package to check.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Checks if the package is installed and enabled for a profile.</summary>
        <returns>true if the package exists and is enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#isPackageEnabled(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.isPackageEnabled(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.LauncherApps.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Content.PM.LauncherApps.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinShortcuts">
      <MemberSignature Language="C#" Value="public virtual void PinShortcuts (string packageName, System.Collections.Generic.IList&lt;string&gt; shortcutIds, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PinShortcuts(string packageName, class System.Collections.Generic.IList`1&lt;string&gt; shortcutIds, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.PinShortcuts(System.String,System.Collections.Generic.IList{System.String},Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member PinShortcuts : string * System.Collections.Generic.IList&lt;string&gt; * Android.OS.UserHandle -&gt; unit&#xA;override this.PinShortcuts : string * System.Collections.Generic.IList&lt;string&gt; * Android.OS.UserHandle -&gt; unit" Usage="launcherApps.PinShortcuts (packageName, shortcutIds, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pinShortcuts", "(Ljava/lang/String;Ljava/util/List;Landroid/os/UserHandle;)V", "GetPinShortcuts_Ljava_lang_String_Ljava_util_List_Landroid_os_UserHandle_Handler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pinShortcuts", "(Ljava/lang/String;Ljava/util/List;Landroid/os/UserHandle;)V", "GetPinShortcuts_Ljava_lang_String_Ljava_util_List_Landroid_os_UserHandle_Handler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="shortcutIds" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The target package name.</param>
        <param name="shortcutIds">The IDs of the shortcut to be pinned.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Pin shortcuts on a package.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#pinShortcuts(java.lang.String,%20java.util.List%3Cjava.lang.String%3E,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.pinShortcuts(java.lang.String, java.util.List&lt;java.lang.String&gt;, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Profiles">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;? Profiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.OS.UserHandle&gt; Profiles" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.LauncherApps.Profiles" />
      <MemberSignature Language="F#" Value="member this.Profiles : System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;" Usage="Android.Content.PM.LauncherApps.Profiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProfiles", "()Ljava/util/List;", "GetGetProfilesHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProfiles", "()Ljava/util/List;", "GetGetProfilesHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a list of profiles that the caller can access via the <c>LauncherApps</c> APIs.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#getProfiles()" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.getProfiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterCallback (Android.Content.PM.LauncherApps.Callback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCallback(class Android.Content.PM.LauncherApps/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.RegisterCallback(Android.Content.PM.LauncherApps.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterCallback : Android.Content.PM.LauncherApps.Callback -&gt; unit&#xA;override this.RegisterCallback : Android.Content.PM.LauncherApps.Callback -&gt; unit" Usage="launcherApps.RegisterCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", "GetRegisterCallback_Landroid_content_pm_LauncherApps_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", "GetRegisterCallback_Landroid_content_pm_LauncherApps_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.LauncherApps+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to register.</param>
        <summary>Registers a callback for changes to packages in this user and managed profiles.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#registerCallback(android.content.pm.Callback)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.registerCallback(android.content.pm.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterCallback (Android.Content.PM.LauncherApps.Callback? callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCallback(class Android.Content.PM.LauncherApps/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.RegisterCallback(Android.Content.PM.LauncherApps.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterCallback : Android.Content.PM.LauncherApps.Callback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterCallback : Android.Content.PM.LauncherApps.Callback * Android.OS.Handler -&gt; unit" Usage="launcherApps.RegisterCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;Landroid/os/Handler;)V", "GetRegisterCallback_Landroid_content_pm_LauncherApps_Callback_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;Landroid/os/Handler;)V", "GetRegisterCallback_Landroid_content_pm_LauncherApps_Callback_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.LauncherApps+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to register.</param>
        <param name="handler">that should be used to post callbacks on, may be null.
</param>
        <summary>Registers a callback for changes to packages in this user and managed profiles.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#registerCallback(android.content.pm.Callback)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.registerCallback(android.content.pm.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPackageInstallerSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterPackageInstallerSessionCallback (Java.Util.Concurrent.IExecutor executor, Android.Content.PM.PackageInstaller.SessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterPackageInstallerSessionCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Content.PM.PackageInstaller/SessionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.RegisterPackageInstallerSessionCallback(Java.Util.Concurrent.IExecutor,Android.Content.PM.PackageInstaller.SessionCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterPackageInstallerSessionCallback : Java.Util.Concurrent.IExecutor * Android.Content.PM.PackageInstaller.SessionCallback -&gt; unit&#xA;override this.RegisterPackageInstallerSessionCallback : Java.Util.Concurrent.IExecutor * Android.Content.PM.PackageInstaller.SessionCallback -&gt; unit" Usage="launcherApps.RegisterPackageInstallerSessionCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerPackageInstallerSessionCallback", "(Ljava/util/concurrent/Executor;Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetRegisterPackageInstallerSessionCallback_Ljava_util_concurrent_Executor_Landroid_content_pm_PackageInstaller_SessionCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerPackageInstallerSessionCallback", "(Ljava/util/concurrent/Executor;Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetRegisterPackageInstallerSessionCallback_Ljava_util_concurrent_Executor_Landroid_content_pm_PackageInstaller_SessionCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
      </Parameters>
      <Docs>
        <param name="executor">
          <c>Executor</c> to handle the callbacks, cannot be null.</param>
        <param name="callback">The callback to register.</param>
        <summary>Register a callback to watch for session lifecycle events in this user and managed profiles.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#registerPackageInstallerSessionCallback(java.util.concurrent.Executor,%20android.content.pm.SessionCallback)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.registerPackageInstallerSessionCallback(java.util.concurrent.Executor, android.content.pm.SessionCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveActivity">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.LauncherActivityInfo? ResolveActivity (Android.Content.Intent? intent, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.LauncherActivityInfo ResolveActivity(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.ResolveActivity(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member ResolveActivity : Android.Content.Intent * Android.OS.UserHandle -&gt; Android.Content.PM.LauncherActivityInfo&#xA;override this.ResolveActivity : Android.Content.Intent * Android.OS.UserHandle -&gt; Android.Content.PM.LauncherActivityInfo" Usage="launcherApps.ResolveActivity (intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveActivity", "(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/pm/LauncherActivityInfo;", "GetResolveActivity_Landroid_content_Intent_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveActivity", "(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/pm/LauncherActivityInfo;", "GetResolveActivity_Landroid_content_Intent_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.LauncherActivityInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to find a match for.</param>
        <param name="user">The profile to look in for a match.</param>
        <summary>Returns the activity info for a given intent and user handle, if it resolves.</summary>
        <returns>An activity info object if there is a match.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#resolveActivity(android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.resolveActivity(android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHideFromSuggestions">
      <MemberSignature Language="C#" Value="public virtual bool ShouldHideFromSuggestions (string packageName, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldHideFromSuggestions(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.ShouldHideFromSuggestions(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member ShouldHideFromSuggestions : string * Android.OS.UserHandle -&gt; bool&#xA;override this.ShouldHideFromSuggestions : string * Android.OS.UserHandle -&gt; bool" Usage="launcherApps.ShouldHideFromSuggestions (packageName, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldHideFromSuggestions", "(Ljava/lang/String;Landroid/os/UserHandle;)Z", "GetShouldHideFromSuggestions_Ljava_lang_String_Landroid_os_UserHandle_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldHideFromSuggestions", "(Ljava/lang/String;Landroid/os/UserHandle;)Z", "GetShouldHideFromSuggestions_Ljava_lang_String_Landroid_os_UserHandle_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The package for which to check.</param>
        <param name="user">the <c>UserHandle</c> of the profile.</param>
        <summary>Returns whether a package should be hidden from suggestions to the user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#shouldHideFromSuggestions(java.lang.String,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.shouldHideFromSuggestions(java.lang.String, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAppDetailsActivity">
      <MemberSignature Language="C#" Value="public virtual void StartAppDetailsActivity (Android.Content.ComponentName? component, Android.OS.UserHandle? user, Android.Graphics.Rect? sourceBounds, Android.OS.Bundle? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAppDetailsActivity(class Android.Content.ComponentName component, class Android.OS.UserHandle user, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.StartAppDetailsActivity(Android.Content.ComponentName,Android.OS.UserHandle,Android.Graphics.Rect,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartAppDetailsActivity : Android.Content.ComponentName * Android.OS.UserHandle * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit&#xA;override this.StartAppDetailsActivity : Android.Content.ComponentName * Android.OS.UserHandle * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit" Usage="launcherApps.StartAppDetailsActivity (component, user, sourceBounds, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startAppDetailsActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartAppDetailsActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Landroid_graphics_Rect_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startAppDetailsActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartAppDetailsActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Landroid_graphics_Rect_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="component">The ComponentName of the package to launch settings for.</param>
        <param name="user">The UserHandle of the profile</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon</param>
        <param name="opts">Options to pass to startActivity</param>
        <summary>Starts the settings activity to show the application details for a
            package in the specified profile.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#startAppDetailsActivity(android.content.ComponentName,%20android.os.UserHandle,%20android.graphics.Rect,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.startAppDetailsActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartMainActivity">
      <MemberSignature Language="C#" Value="public virtual void StartMainActivity (Android.Content.ComponentName? component, Android.OS.UserHandle? user, Android.Graphics.Rect? sourceBounds, Android.OS.Bundle? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMainActivity(class Android.Content.ComponentName component, class Android.OS.UserHandle user, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.StartMainActivity(Android.Content.ComponentName,Android.OS.UserHandle,Android.Graphics.Rect,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartMainActivity : Android.Content.ComponentName * Android.OS.UserHandle * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit&#xA;override this.StartMainActivity : Android.Content.ComponentName * Android.OS.UserHandle * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit" Usage="launcherApps.StartMainActivity (component, user, sourceBounds, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startMainActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartMainActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Landroid_graphics_Rect_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startMainActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartMainActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Landroid_graphics_Rect_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="component">The ComponentName of the activity to launch</param>
        <param name="user">The UserHandle of the profile</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon</param>
        <param name="opts">Options to pass to startActivity</param>
        <summary>Starts a Main activity in the specified profile.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#startMainActivity(android.content.ComponentName,%20android.os.UserHandle,%20android.graphics.Rect,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.startMainActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPackageInstallerSessionDetailsActivity">
      <MemberSignature Language="C#" Value="public virtual void StartPackageInstallerSessionDetailsActivity (Android.Content.PM.PackageInstaller.SessionInfo sessionInfo, Android.Graphics.Rect? sourceBounds, Android.OS.Bundle? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartPackageInstallerSessionDetailsActivity(class Android.Content.PM.PackageInstaller/SessionInfo sessionInfo, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.StartPackageInstallerSessionDetailsActivity(Android.Content.PM.PackageInstaller.SessionInfo,Android.Graphics.Rect,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartPackageInstallerSessionDetailsActivity : Android.Content.PM.PackageInstaller.SessionInfo * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit&#xA;override this.StartPackageInstallerSessionDetailsActivity : Android.Content.PM.PackageInstaller.SessionInfo * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit" Usage="launcherApps.StartPackageInstallerSessionDetailsActivity (sessionInfo, sourceBounds, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startPackageInstallerSessionDetailsActivity", "(Landroid/content/pm/PackageInstaller$SessionInfo;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartPackageInstallerSessionDetailsActivity_Landroid_content_pm_PackageInstaller_SessionInfo_Landroid_graphics_Rect_Landroid_os_Bundle_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startPackageInstallerSessionDetailsActivity", "(Landroid/content/pm/PackageInstaller$SessionInfo;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartPackageInstallerSessionDetailsActivity_Landroid_content_pm_PackageInstaller_SessionInfo_Landroid_graphics_Rect_Landroid_os_Bundle_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionInfo" Type="Android.Content.PM.PackageInstaller+SessionInfo" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="sessionInfo">The SessionInfo of the session</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon</param>
        <param name="opts">Options to pass to startActivity</param>
        <summary>Starts an activity to show the details of the specified session.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#startPackageInstallerSessionDetailsActivity(android.content.pm.SessionInfo,%20android.graphics.Rect,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.startPackageInstallerSessionDetailsActivity(android.content.pm.SessionInfo, android.graphics.Rect, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartShortcut">
      <MemberSignature Language="C#" Value="public virtual void StartShortcut (Android.Content.PM.ShortcutInfo shortcut, Android.Graphics.Rect? sourceBounds, Android.OS.Bundle? startActivityOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartShortcut(class Android.Content.PM.ShortcutInfo shortcut, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle startActivityOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.StartShortcut(Android.Content.PM.ShortcutInfo,Android.Graphics.Rect,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartShortcut : Android.Content.PM.ShortcutInfo * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit&#xA;override this.StartShortcut : Android.Content.PM.ShortcutInfo * Android.Graphics.Rect * Android.OS.Bundle -&gt; unit" Usage="launcherApps.StartShortcut (shortcut, sourceBounds, startActivityOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startShortcut", "(Landroid/content/pm/ShortcutInfo;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartShortcut_Landroid_content_pm_ShortcutInfo_Landroid_graphics_Rect_Landroid_os_Bundle_Handler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startShortcut", "(Landroid/content/pm/ShortcutInfo;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartShortcut_Landroid_content_pm_ShortcutInfo_Landroid_graphics_Rect_Landroid_os_Bundle_Handler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="Android.Content.PM.ShortcutInfo" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="startActivityOptions" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="shortcut">The target shortcut.</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon.</param>
        <param name="startActivityOptions">Options to pass to startActivity.</param>
        <summary>Launches a shortcut.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#startShortcut(android.content.pm.ShortcutInfo,%20android.graphics.Rect,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.startShortcut(android.content.pm.ShortcutInfo, android.graphics.Rect, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartShortcut">
      <MemberSignature Language="C#" Value="public virtual void StartShortcut (string packageName, string shortcutId, Android.Graphics.Rect? sourceBounds, Android.OS.Bundle? startActivityOptions, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartShortcut(string packageName, string shortcutId, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle startActivityOptions, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.StartShortcut(System.String,System.String,Android.Graphics.Rect,Android.OS.Bundle,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member StartShortcut : string * string * Android.Graphics.Rect * Android.OS.Bundle * Android.OS.UserHandle -&gt; unit&#xA;override this.StartShortcut : string * string * Android.Graphics.Rect * Android.OS.Bundle * Android.OS.UserHandle -&gt; unit" Usage="launcherApps.StartShortcut (packageName, shortcutId, sourceBounds, startActivityOptions, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startShortcut", "(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;Landroid/os/Bundle;Landroid/os/UserHandle;)V", "GetStartShortcut_Ljava_lang_String_Ljava_lang_String_Landroid_graphics_Rect_Landroid_os_Bundle_Landroid_os_UserHandle_Handler", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startShortcut", "(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;Landroid/os/Bundle;Landroid/os/UserHandle;)V", "GetStartShortcut_Ljava_lang_String_Ljava_lang_String_Landroid_graphics_Rect_Landroid_os_Bundle_Landroid_os_UserHandle_Handler", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="shortcutId" Type="System.String" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="startActivityOptions" Type="Android.OS.Bundle" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The target shortcut package name.</param>
        <param name="shortcutId">The target shortcut ID.</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon.</param>
        <param name="startActivityOptions">Options to pass to startActivity.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Starts a shortcut.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#startShortcut(java.lang.String,%20java.lang.String,%20android.graphics.Rect,%20android.os.Bundle,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.startShortcut(java.lang.String, java.lang.String, android.graphics.Rect, android.os.Bundle, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.LauncherApps.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Content.PM.LauncherApps.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.LauncherApps.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Content.PM.LauncherApps.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterCallback (Android.Content.PM.LauncherApps.Callback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCallback(class Android.Content.PM.LauncherApps/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.UnregisterCallback(Android.Content.PM.LauncherApps.Callback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterCallback : Android.Content.PM.LauncherApps.Callback -&gt; unit&#xA;override this.UnregisterCallback : Android.Content.PM.LauncherApps.Callback -&gt; unit" Usage="launcherApps.UnregisterCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", "GetUnregisterCallback_Landroid_content_pm_LauncherApps_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", "GetUnregisterCallback_Landroid_content_pm_LauncherApps_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.LauncherApps+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to unregister.</param>
        <summary>Unregisters a callback that was previously registered.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#unregisterCallback(android.content.pm.Callback)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.unregisterCallback(android.content.pm.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Content.PM.LauncherApps.RegisterCallback(.Callback)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterPackageInstallerSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterPackageInstallerSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterPackageInstallerSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.LauncherApps.UnregisterPackageInstallerSessionCallback(Android.Content.PM.PackageInstaller.SessionCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterPackageInstallerSessionCallback : Android.Content.PM.PackageInstaller.SessionCallback -&gt; unit&#xA;override this.UnregisterPackageInstallerSessionCallback : Android.Content.PM.PackageInstaller.SessionCallback -&gt; unit" Usage="launcherApps.UnregisterPackageInstallerSessionCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterPackageInstallerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetUnregisterPackageInstallerSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterPackageInstallerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetUnregisterPackageInstallerSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to unregister.</param>
        <summary>Unregisters a callback that was previously registered.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/LauncherApps#unregisterPackageInstallerSessionCallback(android.content.pm.SessionCallback)" title="Reference documentation">Java documentation for <code>android.content.pm.LauncherApps.unregisterPackageInstallerSessionCallback(android.content.pm.SessionCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
