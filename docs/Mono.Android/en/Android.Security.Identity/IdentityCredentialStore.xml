<Type Name="IdentityCredentialStore" FullName="Android.Security.Identity.IdentityCredentialStore">
  <TypeSignature Language="C#" Value="public abstract class IdentityCredentialStore : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityCredentialStore extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Security.Identity.IdentityCredentialStore" />
  <TypeSignature Language="F#" Value="type IdentityCredentialStore = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/security/identity/IdentityCredentialStore", ApiSince=30, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/security/identity/IdentityCredentialStore", ApiSince=30, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An interface to a secure store for user identity documents.</summary>
    <remarks>
      <para>An interface to a secure store for user identity documents.</para>
      <para>This interface is deliberately fairly general and abstract.  To the extent possible,
            specification of the message formats and semantics of communication with credential
            verification devices and issuing authorities (IAs) is out of scope. It provides the
            interface with secure storage but a credential-specific Android application will be
            required to implement the presentation and verification protocols and processes
            appropriate for the specific credential type.</para>
      <para>Multiple credentials can be created.  Each credential comprises:</para>
      <para>&lt;ul&gt;
            &lt;li&gt;A document type, which is a string.&lt;/li&gt;
            
            &lt;li&gt;A set of namespaces, which serve to disambiguate value names. It is recommended
            that namespaces be structured as reverse domain names so that IANA effectively serves
            as the namespace registrar.&lt;/li&gt;
            
            &lt;li&gt;For each namespace, a set of name/value pairs, each with an associated set of
            access control profile IDs.  Names are strings and values are typed and can be any
            value supported by <see href="http://cbor.io/">CBOR</see>.&lt;/li&gt;
            
            &lt;li&gt;A set of access control profiles (up to 32), each with a profile ID and a specification
            of the conditions which satisfy the profile's requirements.&lt;/li&gt;
            
            &lt;li&gt;An asymmetric key pair which is used to authenticate the credential to the Issuing
            Authority, called the &lt;em&gt;CredentialKey&lt;/em&gt;.&lt;/li&gt;
            
            &lt;li&gt;A set of zero or more named reader authentication public keys, which are used to
            authenticate an authorized reader to the credential.&lt;/li&gt;
            
            &lt;li&gt;A set of named signing keys, which are used to sign collections of values and session
            transcripts.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>Implementing support for user identity documents in secure storage requires dedicated
            hardware-backed support and may not always be available.</para>
      <para>Two different credential stores exist - the &lt;em&gt;default&lt;/em&gt; store and the
            &lt;em&gt;direct access&lt;/em&gt; store. Most often credentials will be accessed through the default
            store but that requires that the Android device be powered up and fully functional.
            It is desirable to allow identity credential usage when the Android device's battery is too
            low to boot the Android operating system, so direct access to the secure hardware via NFC
            may allow data retrieval, if the secure hardware chooses to implement it.</para>
      <para>Credentials provisioned to the direct access store should &lt;strong&gt;always&lt;/strong&gt; use reader
            authentication to protect data elements. The reason for this is user authentication or user
            approval of data release is not possible when the device is off.</para>
      <para>The Identity Credential API is designed to be able to evolve and change over time
            but still provide 100% backwards compatibility. This is complicated by the fact that
            there may be a version skew between the API used by the application and the version
            implemented in secure hardware. To solve this problem, the API provides for a way
            for the application to query which feature version the hardware implements (if any
            at all) using
            <c>android.content.pm#FEATURE_IDENTITY_CREDENTIAL_HARDWARE</c> and
            <c>android.content.pm#FEATURE_IDENTITY_CREDENTIAL_HARDWARE_DIRECT_ACCESS</c>.
            Methods which only work on certain feature versions are clearly documented as
            such.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityCredentialStore (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Security.Identity.IdentityCredentialStore : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Security.Identity.IdentityCredentialStore" Usage="new Android.Security.Identity.IdentityCredentialStore (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256">
      <MemberSignature Language="C#" Value="public const Android.Security.Identity.CredentialStoreCipherSuite CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Security.Identity.CredentialStoreCipherSuite CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256 = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Security.Identity.IdentityCredentialStore.CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256" />
      <MemberSignature Language="F#" Value="val mutable CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256 : Android.Security.Identity.CredentialStoreCipherSuite" Usage="Android.Security.Identity.IdentityCredentialStore.CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Security.Identity.CredentialStoreCipherSuite enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Security.Identity.CredentialStoreCipherSuite enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.CredentialStoreCipherSuite</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Specifies that the cipher suite that will be used to secure communications between the reader
            and the prover is using the following primitives
            
            &lt;ul&gt;
            &lt;li&gt;ECKA-DH (Elliptic Curve Key Agreement Algorithm - Diffie-Hellman, see BSI TR-03111).</summary>
        <remarks>
          <para>Specifies that the cipher suite that will be used to secure communications between the reader
            and the prover is using the following primitives
            
            &lt;ul&gt;
            &lt;li&gt;ECKA-DH (Elliptic Curve Key Agreement Algorithm - Diffie-Hellman, see BSI TR-03111).&lt;/li&gt;
            
            &lt;li&gt;HKDF-SHA-256 (see RFC 5869).&lt;/li&gt;
            
            &lt;li&gt;AES-256-GCM (see NIST SP 800-38D).&lt;/li&gt;
            
            &lt;li&gt;HMAC-SHA-256 (see RFC 2104).&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The exact way these primitives are combined to derive the session key is specified in
            section 9.2.1.4 of ISO/IEC 18013-5 (see description of cipher suite '1').</para>
          <para />
          <para>At present this is the only supported cipher suite.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredential">
      <MemberSignature Language="C#" Value="public abstract Android.Security.Identity.WritableIdentityCredential CreateCredential (string credentialName, string docType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Security.Identity.WritableIdentityCredential CreateCredential(string credentialName, string docType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.CreateCredential(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateCredential : string * string -&gt; Android.Security.Identity.WritableIdentityCredential" Usage="identityCredentialStore.CreateCredential (credentialName, docType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCredential", "(Ljava/lang/String;Ljava/lang/String;)Landroid/security/identity/WritableIdentityCredential;", "GetCreateCredential_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCredential", "(Ljava/lang/String;Ljava/lang/String;)Landroid/security/identity/WritableIdentityCredential;", "GetCreateCredential_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.WritableIdentityCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" />
        <Parameter Name="docType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credentialName">The name used to identify the credential.</param>
        <param name="docType">The document type for the credential.</param>
        <summary>Creates a new credential.</summary>
        <returns>A <c>WritableIdentityCredential</c> that can be used to create a new credential.</returns>
        <remarks>
          <para>Creates a new credential.</para>
          <para>When a credential is created, a cryptographic key-pair - CredentialKey - is created which
            is used to authenticate the store to the Issuing Authority.  The private part of this
            key-pair never leaves secure hardware and the public part can be obtained using
            <c>WritableIdentityCredential#getCredentialKeyCertificateChain(byte[])</c> on the
            returned object.</para>
          <para>In addition, all of the Credential data content is imported and a certificate for the
            CredentialKey and a signature produced with the CredentialKey are created.  These latter
            values may be checked by an issuing authority to verify that the data was imported into
            secure hardware and that it was imported unmodified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#createCredential(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.createCredential(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePresentationSession">
      <MemberSignature Language="C#" Value="public virtual Android.Security.Identity.PresentationSession CreatePresentationSession (int cipherSuite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Security.Identity.PresentationSession CreatePresentationSession(int32 cipherSuite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.CreatePresentationSession(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreatePresentationSession : int -&gt; Android.Security.Identity.PresentationSession&#xA;override this.CreatePresentationSession : int -&gt; Android.Security.Identity.PresentationSession" Usage="identityCredentialStore.CreatePresentationSession cipherSuite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createPresentationSession", "(I)Landroid/security/identity/PresentationSession;", "GetCreatePresentationSession_IHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createPresentationSession", "(I)Landroid/security/identity/PresentationSession;", "GetCreatePresentationSession_IHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.PresentationSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cipherSuite" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256" }, Type="Android.Security.Identity.IdentityCredentialStore")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256" }, Type="Android.Security.Identity.IdentityCredentialStore")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cipherSuite">the cipher suite to use for communicating with the verifier.</param>
        <summary>Creates a new presentation session.</summary>
        <returns>The presentation session.</returns>
        <remarks>
          <para>Creates a new presentation session.</para>
          <para>This method gets an object to be used for interaction with a remote verifier for
            presentation of one or more credentials.</para>
          <para>This is only implemented in feature version 202201 or later. If not implemented, the call
            fails with <c>UnsupportedOperationException</c>. See
            <c>android.content.pm.PackageManager#FEATURE_IDENTITY_CREDENTIAL_HARDWARE</c> for known
            feature versions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#createPresentationSession(int)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.createPresentationSession(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCredentialByName">
      <MemberSignature Language="C#" Value="public abstract byte[]? DeleteCredentialByName (string credentialName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DeleteCredentialByName(string credentialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.DeleteCredentialByName(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteCredentialByName : string -&gt; byte[]" Usage="identityCredentialStore.DeleteCredentialByName credentialName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteCredentialByName", "(Ljava/lang/String;)[B", "GetDeleteCredentialByName_Ljava_lang_String_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteCredentialByName", "(Ljava/lang/String;)[B", "GetDeleteCredentialByName_Ljava_lang_String_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credentialName">the name of the credential to delete.</param>
        <summary>Delete a named credential.</summary>
        <returns>
          <c>null</c> if the credential was not found, the COSE_Sign1 data structure above
                if the credential was found and deleted.</returns>
        <remarks>
          <para>Delete a named credential.</para>
          <para>This method returns a COSE_Sign1 data structure signed by the CredentialKey
            with payload set to <c>ProofOfDeletion</c> as defined below:</para>
          <code lang="text/java">ProofOfDeletion = [
                     "ProofOfDeletion",            ; tstr
                     tstr,                         ; DocType
                     bool                          ; true if this is a test credential, should
                                                   ; always be false.
                 ]
            </code>
          <para>This member is deprecated. Use <c>IdentityCredential#delete(byte[])</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#deleteCredentialByName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.deleteCredentialByName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredentialByName">
      <MemberSignature Language="C#" Value="public abstract Android.Security.Identity.IdentityCredential? GetCredentialByName (string credentialName, int cipherSuite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Security.Identity.IdentityCredential GetCredentialByName(string credentialName, int32 cipherSuite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.GetCredentialByName(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetCredentialByName : string * int -&gt; Android.Security.Identity.IdentityCredential" Usage="identityCredentialStore.GetCredentialByName (credentialName, cipherSuite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCredentialByName", "(Ljava/lang/String;I)Landroid/security/identity/IdentityCredential;", "GetGetCredentialByName_Ljava_lang_String_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCredentialByName", "(Ljava/lang/String;I)Landroid/security/identity/IdentityCredential;", "GetGetCredentialByName_Ljava_lang_String_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.IdentityCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" />
        <Parameter Name="cipherSuite" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256" }, Type="Android.Security.Identity.IdentityCredentialStore")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "CiphersuiteEcdheHkdfEcdsaWithAes256GcmSha256" }, Type="Android.Security.Identity.IdentityCredentialStore")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="credentialName">the name of the credential to retrieve.</param>
        <param name="cipherSuite">the cipher suite to use for communicating with the verifier.</param>
        <summary>Retrieve a named credential.</summary>
        <returns>The named credential, or null if not found.</returns>
        <remarks>
          <para>Retrieve a named credential.</para>
          <para>The cipher suite used to communicate with the remote verifier must also be specified.
            Currently only a single cipher-suite is supported. Support for other cipher suites may be
            added in a future version of this API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#getCredentialByName(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.getCredentialByName(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectAccessInstance">
      <MemberSignature Language="C#" Value="public static Android.Security.Identity.IdentityCredentialStore? GetDirectAccessInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Security.Identity.IdentityCredentialStore GetDirectAccessInstance(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.GetDirectAccessInstance(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetDirectAccessInstance : Android.Content.Context -&gt; Android.Security.Identity.IdentityCredentialStore" Usage="Android.Security.Identity.IdentityCredentialStore.GetDirectAccessInstance context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirectAccessInstance", "(Landroid/content/Context;)Landroid/security/identity/IdentityCredentialStore;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirectAccessInstance", "(Landroid/content/Context;)Landroid/security/identity/IdentityCredentialStore;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.IdentityCredentialStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">the application context.</param>
        <summary>Gets the <c>IdentityCredentialStore</c> for direct access.</summary>
        <returns>the <c>IdentityCredentialStore</c> or <c>null</c> if direct access is not
                supported on this device.</returns>
        <remarks>
          <para>Gets the <c>IdentityCredentialStore</c> for direct access.</para>
          <para>Direct access requires specialized NFC hardware and may not be supported on all
            devices even if default store is available. Credentials provisioned to the direct
            access store should &lt;strong&gt;always&lt;/strong&gt; use reader authentication to protect
            data elements.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#getDirectAccessInstance(android.content.Context)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.getDirectAccessInstance(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Security.Identity.IdentityCredentialStore? GetInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Security.Identity.IdentityCredentialStore GetInstance(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.GetInstance(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetInstance : Android.Content.Context -&gt; Android.Security.Identity.IdentityCredentialStore" Usage="Android.Security.Identity.IdentityCredentialStore.GetInstance context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/security/identity/IdentityCredentialStore;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/security/identity/IdentityCredentialStore;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.IdentityCredentialStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">the application context.</param>
        <summary>Gets the default <c>IdentityCredentialStore</c>.</summary>
        <returns>the <c>IdentityCredentialStore</c> or <c>null</c> if the device doesn't
                have hardware-backed support for secure storage of user identity documents.</returns>
        <remarks>
          <para>Gets the default <c>IdentityCredentialStore</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#getInstance(android.content.Context)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.getInstance(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedDocTypes">
      <MemberSignature Language="C#" Value="public abstract string[] GetSupportedDocTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSupportedDocTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredentialStore.GetSupportedDocTypes" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedDocTypes : unit -&gt; string[]" Usage="identityCredentialStore.GetSupportedDocTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedDocTypes", "()[Ljava/lang/String;", "GetGetSupportedDocTypesHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedDocTypes", "()[Ljava/lang/String;", "GetGetSupportedDocTypesHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a list of supported document types.</summary>
        <returns>The supported document types or the empty array if any document type is supported.</returns>
        <remarks>
          <para>Gets a list of supported document types.</para>
          <para>Only the direct-access store may restrict the kind of document types that can be used for
            credentials. The default store always supports any document type.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredentialStore#getSupportedDocTypes()" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredentialStore.getSupportedDocTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredentialStore.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Security.Identity.IdentityCredentialStore.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredentialStore.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Security.Identity.IdentityCredentialStore.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredentialStore.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Security.Identity.IdentityCredentialStore.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
