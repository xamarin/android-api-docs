<Type Name="IdentityCredential" FullName="Android.Security.Identity.IdentityCredential">
  <TypeSignature Language="C#" Value="public abstract class IdentityCredential : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityCredential extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Security.Identity.IdentityCredential" />
  <TypeSignature Language="F#" Value="type IdentityCredential = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/security/identity/IdentityCredential", ApiSince=30, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/security/identity/IdentityCredential", ApiSince=30, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class used to read data from a previously provisioned credential.</summary>
    <remarks>
      <para>Class used to read data from a previously provisioned credential.
            
            Use <c>IdentityCredentialStore#getCredentialByName(String, int)</c> to get a
            <c>IdentityCredential</c> instance.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityCredential (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Security.Identity.IdentityCredential : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Security.Identity.IdentityCredential" Usage="new Android.Security.Identity.IdentityCredential (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Security.Identity.AuthenticationKeyMetadata&gt; AuthenticationKeyMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Security.Identity.AuthenticationKeyMetadata&gt; AuthenticationKeyMetadata" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredential.AuthenticationKeyMetadata" />
      <MemberSignature Language="F#" Value="member this.AuthenticationKeyMetadata : System.Collections.Generic.IList&lt;Android.Security.Identity.AuthenticationKeyMetadata&gt;" Usage="Android.Security.Identity.IdentityCredential.AuthenticationKeyMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAuthenticationKeyMetadata", "()Ljava/util/List;", "GetGetAuthenticationKeyMetadataHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAuthenticationKeyMetadata", "()Ljava/util/List;", "GetGetAuthenticationKeyMetadataHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Security.Identity.AuthenticationKeyMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get information about dynamic authentication keys.</summary>
        <value>list of authentication key metadata objects.</value>
        <remarks>
          <para>Get information about dynamic authentication keys.</para>
          <para>The returned list may have <c>null</c> values if certification for the dynamic
            authentication key is pending.</para>
          <para>The list is always <c>keyCount</c> elements long.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#getAuthenticationKeyMetadata()" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.getAuthenticationKeyMetadata()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthKeysNeedingCertification">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;Java.Security.Cert.X509Certificate&gt; AuthKeysNeedingCertification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Java.Security.Cert.X509Certificate&gt; AuthKeysNeedingCertification" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredential.AuthKeysNeedingCertification" />
      <MemberSignature Language="F#" Value="member this.AuthKeysNeedingCertification : System.Collections.Generic.ICollection&lt;Java.Security.Cert.X509Certificate&gt;" Usage="Android.Security.Identity.IdentityCredential.AuthKeysNeedingCertification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAuthKeysNeedingCertification", "()Ljava/util/Collection;", "GetGetAuthKeysNeedingCertificationHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAuthKeysNeedingCertification", "()Ljava/util/Collection;", "GetGetAuthKeysNeedingCertificationHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Security.Cert.X509Certificate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEphemeralKeyPair">
      <MemberSignature Language="C#" Value="public abstract Java.Security.KeyPair CreateEphemeralKeyPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.KeyPair CreateEphemeralKeyPair() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.CreateEphemeralKeyPair" />
      <MemberSignature Language="F#" Value="abstract member CreateEphemeralKeyPair : unit -&gt; Java.Security.KeyPair" Usage="identityCredential.CreateEphemeralKeyPair " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createEphemeralKeyPair", "()Ljava/security/KeyPair;", "GetCreateEphemeralKeyPairHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createEphemeralKeyPair", "()Ljava/security/KeyPair;", "GetCreateEphemeralKeyPairHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPair</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create an ephemeral key pair to use to establish a secure channel with a reader.</summary>
        <returns>ephemeral key pair to use to establish a secure channel with a reader.</returns>
        <remarks>
          <para>Create an ephemeral key pair to use to establish a secure channel with a reader.</para>
          <para>Applications should use this key-pair for the communications channel with the reader
            using a protocol / cipher-suite appropriate for the application. One example of such a
            protocol is the one used for Mobile Driving Licenses, see ISO 18013-5 section 9.2.1 "Session
            encryption".</para>
          <para>This member is deprecated. Use <c>PresentationSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#createEphemeralKeyPair()" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.createEphemeralKeyPair()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CredentialKeyCertificateChain">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;Java.Security.Cert.X509Certificate&gt; CredentialKeyCertificateChain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Java.Security.Cert.X509Certificate&gt; CredentialKeyCertificateChain" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredential.CredentialKeyCertificateChain" />
      <MemberSignature Language="F#" Value="member this.CredentialKeyCertificateChain : System.Collections.Generic.ICollection&lt;Java.Security.Cert.X509Certificate&gt;" Usage="Android.Security.Identity.IdentityCredential.CredentialKeyCertificateChain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCredentialKeyCertificateChain", "()Ljava/util/Collection;", "GetGetCredentialKeyCertificateChainHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCredentialKeyCertificateChain", "()Ljava/util/Collection;", "GetGetCredentialKeyCertificateChainHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Security.Cert.X509Certificate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptMessageFromReader">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptMessageFromReader (byte[] messageCiphertext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptMessageFromReader(unsigned int8[] messageCiphertext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.DecryptMessageFromReader(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member DecryptMessageFromReader : byte[] -&gt; byte[]" Usage="identityCredential.DecryptMessageFromReader messageCiphertext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decryptMessageFromReader", "([B)[B", "GetDecryptMessageFromReader_arrayBHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decryptMessageFromReader", "([B)[B", "GetDecryptMessageFromReader_arrayBHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageCiphertext" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="messageCiphertext">encrypted message to decrypt.</param>
        <summary>Decrypt a message received from the reader.</summary>
        <returns>decrypted message.</returns>
        <remarks>
          <para>Decrypt a message received from the reader.</para>
          <para>Do not use. In this version of the API, this method produces an incorrect
            result. Instead, applications should implement message encryption/decryption themselves as
            detailed in the <c>#createEphemeralKeyPair()</c> method. In a future API-level, this
            method will be deprecated.</para>
          <para>This member is deprecated. Applications should use <c>PresentationSession</c> and
                        implement encryption/decryption themselves.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#decryptMessageFromReader(byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.decryptMessageFromReader(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual byte[] Delete (byte[] challenge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Delete(unsigned int8[] challenge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.Delete(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Delete : byte[] -&gt; byte[]&#xA;override this.Delete : byte[] -&gt; byte[]" Usage="identityCredential.Delete challenge" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delete", "([B)[B", "GetDelete_arrayBHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("delete", "([B)[B", "GetDelete_arrayBHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="challenge">is a non-empty byte array whose contents should be unique, fresh and
                             provided by the issuing authority. The value provided is embedded in the
                             generated CBOR and enables the issuing authority to verify that the
                             returned proof is fresh. Implementations are required to support
                             challenges at least 32 bytes of length.</param>
        <summary>Deletes a credential.</summary>
        <returns>the COSE_Sign1 data structure above</returns>
        <remarks>
          <para>Deletes a credential.</para>
          <para>This method returns a COSE_Sign1 data structure signed by the CredentialKey
            with payload set to <c>ProofOfDeletion</c> as defined below.</para>
          <code lang="text/java">ProofOfDeletion = [
                     "ProofOfDeletion",            ; tstr
                     tstr,                         ; DocType
                     bstr,                         ; Challenge
                     bool                          ; true if this is a test credential, should
                                                   ; always be false.
                 ]
            </code>
          <para>This is only implemented in feature version 202101 or later. If not implemented, the call
            fails with <c>UnsupportedOperationException</c>. See
            <c>android.content.pm.PackageManager#FEATURE_IDENTITY_CREDENTIAL_HARDWARE</c> for known
            feature versions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#delete(byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.delete(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptMessageToReader">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptMessageToReader (byte[] messagePlaintext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptMessageToReader(unsigned int8[] messagePlaintext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.EncryptMessageToReader(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member EncryptMessageToReader : byte[] -&gt; byte[]" Usage="identityCredential.EncryptMessageToReader messagePlaintext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("encryptMessageToReader", "([B)[B", "GetEncryptMessageToReader_arrayBHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("encryptMessageToReader", "([B)[B", "GetEncryptMessageToReader_arrayBHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messagePlaintext" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="messagePlaintext">unencrypted message to encrypt.</param>
        <summary>Encrypt a message for transmission to the reader.</summary>
        <returns>encrypted message.</returns>
        <remarks>
          <para>Encrypt a message for transmission to the reader.</para>
          <para>Do not use. In this version of the API, this method produces an incorrect
            result. Instead, applications should implement message encryption/decryption themselves as
            detailed in the <c>#createEphemeralKeyPair()</c> method. In a future API-level, this
            method will be deprecated.</para>
          <para>This member is deprecated. Applications should use <c>PresentationSession</c> and
                        implement encryption/decryption themselves.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#encryptMessageToReader(byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.encryptMessageToReader(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthenticationDataUsageCount">
      <MemberSignature Language="C#" Value="public abstract int[] GetAuthenticationDataUsageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetAuthenticationDataUsageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.GetAuthenticationDataUsageCount" />
      <MemberSignature Language="F#" Value="abstract member GetAuthenticationDataUsageCount : unit -&gt; int[]" Usage="identityCredential.GetAuthenticationDataUsageCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAuthenticationDataUsageCount", "()[I", "GetGetAuthenticationDataUsageCountHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAuthenticationDataUsageCount", "()[I", "GetGetAuthenticationDataUsageCountHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the number of times the dynamic authentication keys have been used.</summary>
        <returns>int array of dynamic authentication key usage counts.</returns>
        <remarks>
          <para>Get the number of times the dynamic authentication keys have been used.</para>
          <para>This member is deprecated. Use <c>#getAuthenticationKeyMetadata()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#getAuthenticationDataUsageCount()" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.getAuthenticationDataUsageCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntries">
      <MemberSignature Language="C#" Value="public abstract Android.Security.Identity.ResultData GetEntries (byte[]? requestMessage, System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.ICollection&lt;string&gt;&gt; entriesToRequest, byte[]? sessionTranscript, byte[]? readerSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Security.Identity.ResultData GetEntries(unsigned int8[] requestMessage, class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.ICollection`1&lt;string&gt;&gt; entriesToRequest, unsigned int8[] sessionTranscript, unsigned int8[] readerSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.GetEntries(System.Byte[],System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{System.String}},System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member GetEntries : byte[] * System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.ICollection&lt;string&gt;&gt; * byte[] * byte[] -&gt; Android.Security.Identity.ResultData" Usage="identityCredential.GetEntries (requestMessage, entriesToRequest, sessionTranscript, readerSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEntries", "([BLjava/util/Map;[B[B)Landroid/security/identity/ResultData;", "GetGetEntries_arrayBLjava_util_Map_arrayBarrayBHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEntries", "([BLjava/util/Map;[B[B)Landroid/security/identity/ResultData;", "GetGetEntries_arrayBLjava_util_Map_arrayBarrayBHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.ResultData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.Byte[]" />
        <Parameter Name="entriesToRequest" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.ICollection&lt;System.String&gt;&gt;" />
        <Parameter Name="sessionTranscript" Type="System.Byte[]" />
        <Parameter Name="readerSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionTranscript">To be added.</param>
        <param name="requestMessage">If not <c>null</c>, must contain CBOR data conforming to
                                          the schema mentioned above.</param>
        <param name="entriesToRequest">The entries to request, organized as a map of namespace
                                          names with each value being a collection of data elements
                                          in the given namespace.</param>
        <param name="readerSignature">A <c>COSE_Sign1</c> structure as described above or
                                          <c>null</c> if reader authentication is not being used.</param>
        <summary>Retrieve data entries and associated data from this <c>IdentityCredential</c>.</summary>
        <returns>A <c>ResultData</c> object containing entry data organized by namespace and a
                    cryptographically authenticated representation of the same data.</returns>
        <remarks>
          <para>Retrieve data entries and associated data from this <c>IdentityCredential</c>.</para>
          <para>If an access control check fails for one of the requested entries or if the entry
            doesn't exist, the entry is simply not returned. The application can detect this
            by using the <c>ResultData#getStatus(String, String)</c> method on each of the requested
            entries.</para>
          <para>It is permissible to call this method multiple times using the same instance but if this
            is done, the <c>sessionTranscript</c> parameter must be identical for each call. If this is
            not the case, the <c>SessionTranscriptMismatchException</c> exception is thrown.
            Additionally, if this is done the same auth-key will be used.</para>
          <para>The application should not make any assumptions on whether user authentication is needed.
            Instead, the application should request the data elements values first and then examine
            the returned <c>ResultData</c>. If <c>ResultData#STATUS_USER_AUTHENTICATION_FAILED</c>
            is returned the application should get a
            <c>android.hardware.biometrics.BiometricPrompt.CryptoObject</c> which references this
            object and use it with a <c>android.hardware.biometrics.BiometricPrompt</c>. Upon successful
            authentication the application may call <c>#getEntries(byte[], Map, byte[], byte[])</c>
            again.</para>
          <para>If not <c>null</c> the <c>requestMessage</c> parameter must contain data for the request
            from the verifier. The content can be defined in the way appropriate for the credential, but
            there are three requirements that must be met to work with this API:
            &lt;ul&gt;
            &lt;li&gt;The content must be a CBOR-encoded structure.&lt;/li&gt;
            &lt;li&gt;The CBOR structure must be a map.&lt;/li&gt;
            &lt;li&gt;The map must contain a tstr key "nameSpaces" whose value contains a map, as described in
                the example below.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>If these requirements are not met the <c>InvalidRequestMessageException</c> exception
            is thrown.</para>
          <para>Here's an example of CBOR which conforms to this requirement:</para>
          <code lang="text/java">ItemsRequest = {
                ? "docType" : DocType,
                "nameSpaces" : NameSpaces,
                ? "RequestInfo" : {* tstr =&gt; any} ; Additional info the reader wants to provide
              }
            
              DocType = tstr
            
              NameSpaces = {
                + NameSpace =&gt; DataElements    ; Requested data elements for each NameSpace
              }
            
              NameSpace = tstr
            
              DataElements = {
                + DataElement =&gt; IntentToRetain
              }
            
              DataElement = tstr
              IntentToRetain = bool
            </code>
          <para>If mdoc session encryption is used (e.g. if <c>#createEphemeralKeyPair()</c> has been
            called) and if the <c>sessionTranscript</c> parameter is not <c>null</c>, the X and Y
            coordinates of the public part of the key-pair previously generated by
            <c>#createEphemeralKeyPair()</c> must appear somewhere in the bytes of the CBOR. Each of
            these coordinates must appear encoded with the most significant bits first and use the
            exact amount of bits indicated by the key size of the ephemeral keys. For example, if the
            ephemeral key is using the P-256 curve then the 32 bytes for the X coordinate encoded with
            the most significant bits first must appear somewhere in <c>sessionTranscript</c> and
            ditto for the 32 bytes for the Y coordinate.</para>
          <para>If <c>readerSignature</c> is not <c>null</c> it must be the bytes of a
            <c>COSE_Sign1</c> structure as defined in RFC 8152. For the payload nil shall be used and
            the detached payload is the ReaderAuthenticationBytes CBOR described below.</para>
          <code lang="text/java">ReaderAuthentication = [
                  "ReaderAuthentication",
                  SessionTranscript,
                  ItemsRequestBytes
                ]
            
                ItemsRequestBytes = #6.24(bstr .cbor ItemsRequest)
            
                ReaderAuthenticationBytes = #6.24(bstr .cbor ReaderAuthentication)
            </code>
          <para>where <c>ItemsRequestBytes</c> are the bytes in the <c>requestMessage</c> parameter.</para>
          <para>The public key corresponding to the key used to make the signature, can be found in the
            <c>x5chain</c> unprotected header element of the <c>COSE_Sign1</c> structure (as as
            described in
            <see href="https://tools.ietf.org/html/draft-ietf-cose-x509-04">draft-ietf-cose-x509-04</see>).
            There will be at least one certificate in said element and there may be more (and if so,
            each certificate must be signed by its successor).</para>
          <para>Data elements protected by reader authentication are returned if, and only if, they are
            mentioned in <c>requestMessage</c>, <c>requestMessage</c> is signed by the top-most
            certificate in the reader's certificate chain, and the data element is configured
            with an <c>AccessControlProfile</c> configured with an X.509 certificate which appears
            in the certificate chain.</para>
          <para>Note that only items referenced in <c>entriesToRequest</c> are returned - the
            <c>requestMessage</c> parameter is used only for enforcing reader authentication.</para>
          <para>The reason for having <c>requestMessage</c> and <c>entriesToRequest</c> as separate
            parameters is that the former represents a request from the remote verifier device
            (optionally signed) and this allows the application to filter the request to not include
            data elements which the user has not consented to sharing.</para>
          <para>This member is deprecated. Use <c>PresentationSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#getEntries(byte[],%20java.util.Map%3Cjava.lang.String,%20java.util.Collection%3Cjava.lang.String%3E%3E,%20byte[],%20byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.getEntries(byte[], java.util.Map&lt;java.lang.String, java.util.Collection&lt;java.lang.String&gt;&gt;, byte[], byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredential.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Security.Identity.IdentityCredential.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProveOwnership">
      <MemberSignature Language="C#" Value="public virtual byte[] ProveOwnership (byte[] challenge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ProveOwnership(unsigned int8[] challenge) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.ProveOwnership(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member ProveOwnership : byte[] -&gt; byte[]&#xA;override this.ProveOwnership : byte[] -&gt; byte[]" Usage="identityCredential.ProveOwnership challenge" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("proveOwnership", "([B)[B", "GetProveOwnership_arrayBHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("proveOwnership", "([B)[B", "GetProveOwnership_arrayBHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="challenge">is a non-empty byte array whose contents should be unique, fresh and
                             provided by the issuing authority. The value provided is embedded in the
                             generated CBOR and enables the issuing authority to verify that the
                             returned proof is fresh. Implementations are required to support
                             challenges at least 32 bytes of length.</param>
        <summary>Proves ownership of a credential.</summary>
        <returns>the COSE_Sign1 data structure above</returns>
        <remarks>
          <para>Proves ownership of a credential.</para>
          <para>This method returns a COSE_Sign1 data structure signed by the CredentialKey
            with payload set to <c>ProofOfDeletion</c> as defined below.</para>
          <para>The returned CBOR is the following:</para>
          <code lang="text/java">ProofOfOwnership = [
                     "ProofOfOwnership",           ; tstr
                     tstr,                         ; DocType
                     bstr,                         ; Challenge
                     bool                          ; true if this is a test credential, should
                                                   ; always be false.
                 ]
            </code>
          <para>This is only implemented in feature version 202101 or later. If not implemented, the call
            fails with <c>UnsupportedOperationException</c>. See
            <c>android.content.pm.PackageManager#FEATURE_IDENTITY_CREDENTIAL_HARDWARE</c> for known
            feature versions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#proveOwnership(byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.proveOwnership(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowUsingExhaustedKeys">
      <MemberSignature Language="C#" Value="public abstract void SetAllowUsingExhaustedKeys (bool allowUsingExhaustedKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllowUsingExhaustedKeys(bool allowUsingExhaustedKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.SetAllowUsingExhaustedKeys(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAllowUsingExhaustedKeys : bool -&gt; unit" Usage="identityCredential.SetAllowUsingExhaustedKeys allowUsingExhaustedKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAllowUsingExhaustedKeys", "(Z)V", "GetSetAllowUsingExhaustedKeys_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAllowUsingExhaustedKeys", "(Z)V", "GetSetAllowUsingExhaustedKeys_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowUsingExhaustedKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowUsingExhaustedKeys">whether to allow using an authentication key which use count
                                           has been exceeded if no other key is available.</param>
        <summary>Sets whether to allow using an authentication key which use count has been exceeded if no
            other key is available.</summary>
        <remarks>
          <para>Sets whether to allow using an authentication key which use count has been exceeded if no
            other key is available. This must be called prior to calling
            <c>#getEntries(byte[], Map, byte[], byte[])</c>.
            
            By default this is set to true.</para>
          <para>This member is deprecated. Use <c>PresentationSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#setAllowUsingExhaustedKeys(boolean)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.setAllowUsingExhaustedKeys(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowUsingExpiredKeys">
      <MemberSignature Language="C#" Value="public virtual void SetAllowUsingExpiredKeys (bool allowUsingExpiredKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllowUsingExpiredKeys(bool allowUsingExpiredKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.SetAllowUsingExpiredKeys(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAllowUsingExpiredKeys : bool -&gt; unit&#xA;override this.SetAllowUsingExpiredKeys : bool -&gt; unit" Usage="identityCredential.SetAllowUsingExpiredKeys allowUsingExpiredKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAllowUsingExpiredKeys", "(Z)V", "GetSetAllowUsingExpiredKeys_ZHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAllowUsingExpiredKeys", "(Z)V", "GetSetAllowUsingExpiredKeys_ZHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowUsingExpiredKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowUsingExpiredKeys">whether to allow using an authentication key which use count
                                         has been exceeded if no other key is available.</param>
        <summary>Sets whether to allow using an authentication key which has been expired if no
            other key is available.</summary>
        <remarks>
          <para>Sets whether to allow using an authentication key which has been expired if no
            other key is available. This must be called prior to calling
            <c>#getEntries(byte[], Map, byte[], byte[])</c>.</para>
          <para>By default this is set to false.</para>
          <para>This is only implemented in feature version 202101 or later. If not implemented, the call
            fails with <c>UnsupportedOperationException</c>. See
            <c>android.content.pm.PackageManager#FEATURE_IDENTITY_CREDENTIAL_HARDWARE</c> for known
            feature versions.</para>
          <para>This member is deprecated. Use <c>PresentationSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#setAllowUsingExpiredKeys(boolean)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.setAllowUsingExpiredKeys(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAvailableAuthenticationKeys">
      <MemberSignature Language="C#" Value="public abstract void SetAvailableAuthenticationKeys (int keyCount, int maxUsesPerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAvailableAuthenticationKeys(int32 keyCount, int32 maxUsesPerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.SetAvailableAuthenticationKeys(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAvailableAuthenticationKeys : int * int -&gt; unit" Usage="identityCredential.SetAvailableAuthenticationKeys (keyCount, maxUsesPerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAvailableAuthenticationKeys", "(II)V", "GetSetAvailableAuthenticationKeys_IIHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAvailableAuthenticationKeys", "(II)V", "GetSetAvailableAuthenticationKeys_IIHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCount" Type="System.Int32" />
        <Parameter Name="maxUsesPerKey" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keyCount">The number of active, certified dynamic authentication keys the
                                 <c>IdentityCredential</c> will try to keep available. This value
                                 must be non-negative.</param>
        <param name="maxUsesPerKey">The maximum number of times each of the keys will be used before it's
                                 eligible for replacement. This value must be greater than zero.</param>
        <summary>Sets the number of dynamic authentication keys the <c>IdentityCredential</c> will maintain,
            and the number of times each should be used.</summary>
        <remarks>
          <para>Sets the number of dynamic authentication keys the <c>IdentityCredential</c> will maintain,
            and the number of times each should be used.</para>
          <para>The Identity Credential system will select the least-used dynamic authentication key each
            time <c>#getEntries(byte[], Map, byte[], byte[])</c> is called. Identity Credentials
            for which this method has not been called behave as though it had been called wit
            <c>keyCount</c> 0 and <c>maxUsesPerKey</c> 1.</para>
          <para>The effect of this method is like calling
            <c>#setAvailableAuthenticationKeys(int, int, long)</c> with the last parameter is set to 0.</para>
          <para>This member is deprecated. Use <c>#setAvailableAuthenticationKeys(int, int, long)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#setAvailableAuthenticationKeys(int,%20int)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.setAvailableAuthenticationKeys(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAvailableAuthenticationKeys">
      <MemberSignature Language="C#" Value="public virtual void SetAvailableAuthenticationKeys (int keyCount, int maxUsesPerKey, long minValidTimeMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAvailableAuthenticationKeys(int32 keyCount, int32 maxUsesPerKey, int64 minValidTimeMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.SetAvailableAuthenticationKeys(System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetAvailableAuthenticationKeys : int * int * int64 -&gt; unit&#xA;override this.SetAvailableAuthenticationKeys : int * int * int64 -&gt; unit" Usage="identityCredential.SetAvailableAuthenticationKeys (keyCount, maxUsesPerKey, minValidTimeMillis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAvailableAuthenticationKeys", "(IIJ)V", "GetSetAvailableAuthenticationKeys_IIJHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAvailableAuthenticationKeys", "(IIJ)V", "GetSetAvailableAuthenticationKeys_IIJHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCount" Type="System.Int32" />
        <Parameter Name="maxUsesPerKey" Type="System.Int32" />
        <Parameter Name="minValidTimeMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="keyCount">The number of active, certified dynamic authentication keys the
                                 <c>IdentityCredential</c> will try to keep available. This value
                                 must be non-negative.</param>
        <param name="maxUsesPerKey">The maximum number of times each of the keys will be used before it's
                                 eligible for replacement. This value must be greater than zero.</param>
        <param name="minValidTimeMillis">If a key has less time left than this value it will be eliglible
                                      for replacement. This value must be non-negative.</param>
        <summary>Sets the number of dynamic authentication keys the <c>IdentityCredential</c> will maintain,
            the number of times each should be used, and the minimum amount of time it's valid for.</summary>
        <remarks>
          <para>Sets the number of dynamic authentication keys the <c>IdentityCredential</c> will maintain,
            the number of times each should be used, and the minimum amount of time it's valid for.</para>
          <para>The Identity Credential system will select the least-used dynamic authentication key each
            time <c>#getEntries(byte[], Map, byte[], byte[])</c> is called. Identity Credentials
            for which this method has not been called behave as though it had been called wit
            <c>keyCount</c> 0, <c>maxUsesPerKey</c> 1, and <c>minValidTimeMillis</c> 0.</para>
          <para>Applications can use <c>#getAuthenticationKeyMetadata()</c> to get a picture of the
            usage andtime left of each configured authentication key. This can be used to determine
            how urgent it is recertify new authentication keys via the
            <c>#getAuthKeysNeedingCertification()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#setAvailableAuthenticationKeys(int,%20int,%20long)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.setAvailableAuthenticationKeys(int, int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReaderEphemeralPublicKey">
      <MemberSignature Language="C#" Value="public abstract void SetReaderEphemeralPublicKey (Java.Security.IPublicKey readerEphemeralPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetReaderEphemeralPublicKey(class Java.Security.IPublicKey readerEphemeralPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.SetReaderEphemeralPublicKey(Java.Security.IPublicKey)" />
      <MemberSignature Language="F#" Value="abstract member SetReaderEphemeralPublicKey : Java.Security.IPublicKey -&gt; unit" Usage="identityCredential.SetReaderEphemeralPublicKey readerEphemeralPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setReaderEphemeralPublicKey", "(Ljava/security/PublicKey;)V", "GetSetReaderEphemeralPublicKey_Ljava_security_PublicKey_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setReaderEphemeralPublicKey", "(Ljava/security/PublicKey;)V", "GetSetReaderEphemeralPublicKey_Ljava_security_PublicKey_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerEphemeralPublicKey" Type="Java.Security.IPublicKey" />
      </Parameters>
      <Docs>
        <param name="readerEphemeralPublicKey">The ephemeral public key provided by the reader to
                                            establish a secure session.</param>
        <summary>Set the ephemeral public key provided by the reader.</summary>
        <remarks>
          <para>Set the ephemeral public key provided by the reader. If called, this must be called before
            <c>#getEntries(byte[], Map, byte[], byte[])</c> is called.</para>
          <para>This member is deprecated. Use <c>PresentationSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#setReaderEphemeralPublicKey(java.security.PublicKey)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.setReaderEphemeralPublicKey(java.security.PublicKey)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreStaticAuthenticationData">
      <MemberSignature Language="C#" Value="public abstract void StoreStaticAuthenticationData (Java.Security.Cert.X509Certificate authenticationKey, byte[] staticAuthData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreStaticAuthenticationData(class Java.Security.Cert.X509Certificate authenticationKey, unsigned int8[] staticAuthData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.StoreStaticAuthenticationData(Java.Security.Cert.X509Certificate,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member StoreStaticAuthenticationData : Java.Security.Cert.X509Certificate * byte[] -&gt; unit" Usage="identityCredential.StoreStaticAuthenticationData (authenticationKey, staticAuthData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("storeStaticAuthenticationData", "(Ljava/security/cert/X509Certificate;[B)V", "GetStoreStaticAuthenticationData_Ljava_security_cert_X509Certificate_arrayBHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("storeStaticAuthenticationData", "(Ljava/security/cert/X509Certificate;[B)V", "GetStoreStaticAuthenticationData_Ljava_security_cert_X509Certificate_arrayBHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationKey" Type="Java.Security.Cert.X509Certificate" />
        <Parameter Name="staticAuthData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="authenticationKey">The dynamic authentication key for which certification and
                                     associated static
                                     authentication data is being provided.</param>
        <param name="staticAuthData">Static authentication data provided by the issuer that validates
                                     the authenticity
                                     and integrity of the credential data fields.</param>
        <summary>Store authentication data associated with a dynamic authentication key.</summary>
        <remarks>
          <para>Store authentication data associated with a dynamic authentication key.
            
            This should only be called for an authenticated key returned by
            <c>#getAuthKeysNeedingCertification()</c>.</para>
          <para>This member is deprecated. Use <c>#storeStaticAuthenticationData(X509Certificate, Instant, byte[])</c>
                instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#storeStaticAuthenticationData(java.security.cert.X509Certificate,%20byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.storeStaticAuthenticationData(java.security.cert.X509Certificate, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreStaticAuthenticationData">
      <MemberSignature Language="C#" Value="public virtual void StoreStaticAuthenticationData (Java.Security.Cert.X509Certificate authenticationKey, Java.Time.Instant expirationDate, byte[] staticAuthData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreStaticAuthenticationData(class Java.Security.Cert.X509Certificate authenticationKey, class Java.Time.Instant expirationDate, unsigned int8[] staticAuthData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.StoreStaticAuthenticationData(Java.Security.Cert.X509Certificate,Java.Time.Instant,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member StoreStaticAuthenticationData : Java.Security.Cert.X509Certificate * Java.Time.Instant * byte[] -&gt; unit&#xA;override this.StoreStaticAuthenticationData : Java.Security.Cert.X509Certificate * Java.Time.Instant * byte[] -&gt; unit" Usage="identityCredential.StoreStaticAuthenticationData (authenticationKey, expirationDate, staticAuthData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("storeStaticAuthenticationData", "(Ljava/security/cert/X509Certificate;Ljava/time/Instant;[B)V", "GetStoreStaticAuthenticationData_Ljava_security_cert_X509Certificate_Ljava_time_Instant_arrayBHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("storeStaticAuthenticationData", "(Ljava/security/cert/X509Certificate;Ljava/time/Instant;[B)V", "GetStoreStaticAuthenticationData_Ljava_security_cert_X509Certificate_Ljava_time_Instant_arrayBHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationKey" Type="Java.Security.Cert.X509Certificate" />
        <Parameter Name="expirationDate" Type="Java.Time.Instant" />
        <Parameter Name="staticAuthData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="authenticationKey">The dynamic authentication key for which certification and
                                     associated static
                                     authentication data is being provided.</param>
        <param name="expirationDate">The expiration date of the static authentication data.</param>
        <param name="staticAuthData">Static authentication data provided by the issuer that validates
                                     the authenticity
                                     and integrity of the credential data fields.</param>
        <summary>Store authentication data associated with a dynamic authentication key.</summary>
        <remarks>
          <para>Store authentication data associated with a dynamic authentication key.
            
            This should only be called for an authenticated key returned by
            <c>#getAuthKeysNeedingCertification()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#storeStaticAuthenticationData(java.security.cert.X509Certificate,%20java.time.Instant,%20byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.storeStaticAuthenticationData(java.security.cert.X509Certificate, java.time.Instant, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredential.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Security.Identity.IdentityCredential.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.IdentityCredential.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Security.Identity.IdentityCredential.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual byte[] Update (Android.Security.Identity.PersonalizationData personalizationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Update(class Android.Security.Identity.PersonalizationData personalizationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.IdentityCredential.Update(Android.Security.Identity.PersonalizationData)" />
      <MemberSignature Language="F#" Value="abstract member Update : Android.Security.Identity.PersonalizationData -&gt; byte[]&#xA;override this.Update : Android.Security.Identity.PersonalizationData -&gt; byte[]" Usage="identityCredential.Update personalizationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(Landroid/security/identity/PersonalizationData;)[B", "GetUpdate_Landroid_security_identity_PersonalizationData_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(Landroid/security/identity/PersonalizationData;)[B", "GetUpdate_Landroid_security_identity_PersonalizationData_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="personalizationData" Type="Android.Security.Identity.PersonalizationData" />
      </Parameters>
      <Docs>
        <param name="personalizationData">The data to update, including access control profiles
                                         and data elements and their values, grouped into namespaces.</param>
        <summary>Updates the credential with new access control profiles and data items.</summary>
        <returns>A COSE_Sign1 data structure, see above.</returns>
        <remarks>
          <para>Updates the credential with new access control profiles and data items.</para>
          <para>This method is similar to
            <c>WritableIdentityCredential#personalize(PersonalizationData)</c> except that it operates
            on an existing credential, see the documentation for that method for the format of the
            returned data.</para>
          <para>If this call succeeds an side-effect is that all dynamic authentication keys for the
            credential are deleted. The application will need to use
            <c>#getAuthKeysNeedingCertification()</c> to generate replacement keys and return
            them for issuer certification.</para>
          <para>This is only implemented in feature version 202101 or later. If not implemented, the call
            fails with <c>UnsupportedOperationException</c>. See
            <c>android.content.pm.PackageManager#FEATURE_IDENTITY_CREDENTIAL_HARDWARE</c> for known
            feature versions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/IdentityCredential#update(android.security.identity.PersonalizationData)" title="Reference documentation">Java documentation for <code>android.security.identity.IdentityCredential.update(android.security.identity.PersonalizationData)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
