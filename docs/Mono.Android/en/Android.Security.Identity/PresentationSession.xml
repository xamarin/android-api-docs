<Type Name="PresentationSession" FullName="Android.Security.Identity.PresentationSession">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSession&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSession abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class PresentationSession : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PresentationSession extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Security.Identity.PresentationSession" />
  <TypeSignature Language="F#" Value="type PresentationSession = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/security/identity/PresentationSession", ApiSince=33, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/security/identity/PresentationSession", ApiSince=33, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class for presenting multiple documents to a remote verifier.</summary>
    <remarks>
      <para>Class for presenting multiple documents to a remote verifier.</para>
      <para>This should be used for all interactions with a remote verifier instead of the now deprecated
            <c>IdentityCredential#getEntries(byte[], Map, byte[], byte[])</c> method.
            
            Use <c>IdentityCredentialStore#createPresentationSession(int)</c> to create a <c>PresentationSession</c> instance.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/security/identity/PresentationSession" title="Reference documentation">Java documentation for <code>android.security.identity.PresentationSession</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSession(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected PresentationSession (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.PresentationSession.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Security.Identity.PresentationSession : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Security.Identity.PresentationSession" Usage="new Android.Security.Identity.PresentationSession (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EphemeralKeyPair">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EphemeralKeyPair As KeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Java::Security::KeyPair ^ EphemeralKeyPair { Java::Security::KeyPair ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Java.Security.KeyPair EphemeralKeyPair { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.KeyPair EphemeralKeyPair" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.PresentationSession.EphemeralKeyPair" />
      <MemberSignature Language="F#" Value="member this.EphemeralKeyPair : Java.Security.KeyPair" Usage="Android.Security.Identity.PresentationSession.EphemeralKeyPair" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEphemeralKeyPair", "()Ljava/security/KeyPair;", "GetGetEphemeralKeyPairHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEphemeralKeyPair", "()Ljava/security/KeyPair;", "GetGetEphemeralKeyPairHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredentialData">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCredentialData (credentialName As String, request As CredentialDataRequest) As CredentialDataResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Android::Security::Identity::CredentialDataResult ^ GetCredentialData(System::String ^ credentialName, Android::Security::Identity::CredentialDataRequest ^ request);" />
      <MemberSignature Language="C#" Value="public abstract Android.Security.Identity.CredentialDataResult? GetCredentialData (string credentialName, Android.Security.Identity.CredentialDataRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Security.Identity.CredentialDataResult GetCredentialData(string credentialName, class Android.Security.Identity.CredentialDataRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.PresentationSession.GetCredentialData(System.String,Android.Security.Identity.CredentialDataRequest)" />
      <MemberSignature Language="F#" Value="abstract member GetCredentialData : string * Android.Security.Identity.CredentialDataRequest -&gt; Android.Security.Identity.CredentialDataResult" Usage="presentationSession.GetCredentialData (credentialName, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCredentialData", "(Ljava/lang/String;Landroid/security/identity/CredentialDataRequest;)Landroid/security/identity/CredentialDataResult;", "GetGetCredentialData_Ljava_lang_String_Landroid_security_identity_CredentialDataRequest_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCredentialData", "(Ljava/lang/String;Landroid/security/identity/CredentialDataRequest;)Landroid/security/identity/CredentialDataResult;", "GetGetCredentialData_Ljava_lang_String_Landroid_security_identity_CredentialDataRequest_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.Identity.CredentialDataResult</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" />
        <Parameter Name="request" Type="Android.Security.Identity.CredentialDataRequest" />
      </Parameters>
      <Docs>
        <param name="credentialName">the name of the credential to retrieve.</param>
        <param name="request">the data to retrieve from the credential</param>
        <summary>Retrieves data from a named credential in the current presentation session.</summary>
        <returns>If the credential wasn't found, returns null. Otherwise a
                    <c>CredentialDataResult</c> object containing entry data organized by namespace and
                    a cryptographically authenticated representation of the same data, bound to the
                    current session.</returns>
        <remarks>
          <para>Retrieves data from a named credential in the current presentation session.</para>
          <para>If an access control check fails for one of the requested entries or if the entry
            doesn't exist, the entry is simply not returned. The application can detect this
            by using the <c>CredentialDataResult.Entries#getStatus(String, String)</c> method on
            each of the requested entries.</para>
          <para>The application should not make any assumptions on whether user authentication is needed.
            Instead, the application should request the data elements values first and then examine
            the returned <c>CredentialDataResult.Entries</c>. If
            <c>CredentialDataResult.Entries#STATUS_USER_AUTHENTICATION_FAILED</c> is returned the
            application should get a
            <c>android.hardware.biometrics.BiometricPrompt.CryptoObject</c> which references this
            object and use it with a <c>android.hardware.biometrics.BiometricPrompt</c>. Upon successful
            authentication the application may call
            <c>#getCredentialData(String, CredentialDataRequest)</c> again.</para>
          <para>It is permissible to call this method multiple times using the same credential name.
            If this is done the same auth-key will be used.</para>
          <para>If the reader signature is set in the request parameter (via the
            <c>CredentialDataRequest.Builder#setReaderSignature(byte[])</c> method) it must contain
            the bytes of a <c>COSE_Sign1</c> structure as defined in RFC 8152. For the payload
            <c>nil</c> shall be used and the detached payload is the <c>ReaderAuthenticationBytes</c>
            CBOR described below.</para>
          <code lang="text/java">ReaderAuthentication = [
                  "ReaderAuthentication",
                  SessionTranscript,
                  ItemsRequestBytes
                ]
            
                ItemsRequestBytes = #6.24(bstr .cbor ItemsRequest)
            
                ReaderAuthenticationBytes = #6.24(bstr .cbor ReaderAuthentication)
            </code>
          <para>where <c>ItemsRequestBytes</c> are the bytes of the request message set in
            the request parameter (via the
            <c>CredentialDataRequest.Builder#setRequestMessage(byte[])</c> method).</para>
          <para>The public key corresponding to the key used to make the signature, can be found in the
            <c>x5chain</c> unprotected header element of the <c>COSE_Sign1</c> structure (as as
            described in
            <see href="https://tools.ietf.org/html/draft-ietf-cose-x509-08">draft-ietf-cose-x509-08</see>).
            There will be at least one certificate in said element and there may be more (and if so,
            each certificate must be signed by its successor).</para>
          <para>Data elements protected by reader authentication are returned if, and only if,
            <c>requestMessage</c> is signed by the top-most certificate in the reader's certificate
            chain, and the data element is configured with an <c>AccessControlProfile</c> configured
            with an X.509 certificate for a key which appear in the certificate chain.</para>
          <para>Note that the request message CBOR is used only for enforcing reader authentication, it's
            not used for determining which entries this API will return. The application is expected to
            have parsed the request message and filtered it according to user preference and/or consent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/PresentationSession#getCredentialData(java.lang.String,%20android.security.identity.CredentialDataRequest)" title="Reference documentation">Java documentation for <code>android.security.identity.PresentationSession.getCredentialData(java.lang.String, android.security.identity.CredentialDataRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.PresentationSession.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Security.Identity.PresentationSession.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReaderEphemeralPublicKey">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetReaderEphemeralPublicKey (readerEphemeralPublicKey As IPublicKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetReaderEphemeralPublicKey(Java::Security::IPublicKey ^ readerEphemeralPublicKey);" />
      <MemberSignature Language="C#" Value="public abstract void SetReaderEphemeralPublicKey (Java.Security.IPublicKey readerEphemeralPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetReaderEphemeralPublicKey(class Java.Security.IPublicKey readerEphemeralPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.PresentationSession.SetReaderEphemeralPublicKey(Java.Security.IPublicKey)" />
      <MemberSignature Language="F#" Value="abstract member SetReaderEphemeralPublicKey : Java.Security.IPublicKey -&gt; unit" Usage="presentationSession.SetReaderEphemeralPublicKey readerEphemeralPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setReaderEphemeralPublicKey", "(Ljava/security/PublicKey;)V", "GetSetReaderEphemeralPublicKey_Ljava_security_PublicKey_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setReaderEphemeralPublicKey", "(Ljava/security/PublicKey;)V", "GetSetReaderEphemeralPublicKey_Ljava_security_PublicKey_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerEphemeralPublicKey" Type="Java.Security.IPublicKey" />
      </Parameters>
      <Docs>
        <param name="readerEphemeralPublicKey">The ephemeral public key provided by the reader to
                                            establish a secure session.</param>
        <summary>Set the ephemeral public key provided by the verifier.</summary>
        <remarks>
          <para>Set the ephemeral public key provided by the verifier.</para>
          <para>If called, this must be called before any calls to
            <c>#getCredentialData(String, CredentialDataRequest)</c>.</para>
          <para>This method can only be called once per <c>PresentationSession</c> instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/PresentationSession#setReaderEphemeralPublicKey(java.security.PublicKey)" title="Reference documentation">Java documentation for <code>android.security.identity.PresentationSession.setReaderEphemeralPublicKey(java.security.PublicKey)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSessionTranscript">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetSessionTranscript (sessionTranscript As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetSessionTranscript(cli::array &lt;System::Byte&gt; ^ sessionTranscript);" />
      <MemberSignature Language="C#" Value="public abstract void SetSessionTranscript (byte[] sessionTranscript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionTranscript(unsigned int8[] sessionTranscript) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Security.Identity.PresentationSession.SetSessionTranscript(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member SetSessionTranscript : byte[] -&gt; unit" Usage="presentationSession.SetSessionTranscript sessionTranscript" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSessionTranscript", "([B)V", "GetSetSessionTranscript_arrayBHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSessionTranscript", "([B)V", "GetSetSessionTranscript_arrayBHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionTranscript" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionTranscript">the session transcript.</param>
        <summary>Set the session transcript.</summary>
        <remarks>
          <para>Set the session transcript.</para>
          <para>If called, this must be called before any calls to
            <c>#getCredentialData(String, CredentialDataRequest)</c>.</para>
          <para>If mdoc session encryption is used (e.g. if <c>#getEphemeralKeyPair()</c> has been
            called) then the X and Y coordinates of the public part of the key-pair returned by <c>#getEphemeralKeyPair()</c> must appear somewhere in the bytes of the passed in CBOR.  Each of
            these coordinates must appear encoded with the most significant bits first and use the exact
            amount of bits indicated by the key size of the ephemeral keys. For example, if the
            ephemeral key is using the P-256 curve then the 32 bytes for the X coordinate encoded with
            the most significant bits first must appear somewhere and ditto for the 32 bytes for the Y
            coordinate.</para>
          <para>This method can only be called once per <c>PresentationSession</c> instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/security/identity/PresentationSession#setSessionTranscript(byte[])" title="Reference documentation">Java documentation for <code>android.security.identity.PresentationSession.setSessionTranscript(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.PresentationSession.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Security.Identity.PresentationSession.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Security.Identity.PresentationSession.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Security.Identity.PresentationSession.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
