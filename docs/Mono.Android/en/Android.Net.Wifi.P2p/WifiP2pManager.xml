<Type Name="WifiP2pManager" FullName="Android.Net.Wifi.P2p.WifiP2pManager">
  <TypeSignature Language="C#" Value="public class WifiP2pManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WifiP2pManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/wifi/p2p/WifiP2pManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>This class provides the API for managing Wi-Fi peer-to-peer connectivity.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides the API for managing Wi-Fi peer-to-peer connectivity. This lets an
 application discover available peers, setup connection to peers and query for the list of peers.
 When a p2p connection is formed over wifi, the device continues to maintain the uplink
 connection over mobile or any other available network for internet connectivity on the device.

 </para>
      <para tool="javadoc-to-mdoc"> The API is asynchronous and responses to requests from an application are on listener
 callbacks provided by the application. The application needs to do an initialization with
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c> before doing any p2p operation.

 </para>
      <para tool="javadoc-to-mdoc"> Most application calls need a <c><see cref="!:NoType:android/net/wifi/p2p/WifiP2pManager$ActionListener;Href=../../../../../reference/android/net/wifi/p2p/WifiP2pManager.ActionListener.html" /></c> instance for receiving callbacks
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>. Action callbacks
 indicate whether the initiation of the action was a success or a failure.
 Upon failure, the reason of failure can be one of <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.Error" /></c>, <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.P2pUnsupported" /></c>
 or <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.Busy" /></c>.

 </para>
      <para tool="javadoc-to-mdoc"> An application can initiate discovery of peers with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverPeers(.Channel,.IActionListener)" /></c>. An initiated
 discovery request from an application stays active until the device starts connecting to a peer
 ,forms a p2p group or there is an explicit <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.StopPeerDiscovery(.Channel,.IActionListener)" /></c>.
 Applications can listen to <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pDiscoveryChangedAction" /></c> to know if a peer-to-peer
 discovery is running or stopped. Additionally, <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pPeersChangedAction" /></c> indicates
 if the peer list has changed.

 </para>
      <para tool="javadoc-to-mdoc"> When an application needs to fetch the current list of peers, it can request the list
 of peers with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RequestPeers(.Channel,.IPeerListListener)" /></c>. When the peer list is available
 <c><see cref="!:NoType:android/net/wifi/p2p/WifiP2pManager$PeerListListener;Href=../../../../../reference/android/net/wifi/p2p/WifiP2pManager.PeerListListener.html#onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList)" /></c> is called with the device list.

 </para>
      <para tool="javadoc-to-mdoc"> An application can initiate a connection request to a peer through <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Connect(.Channel,Android.Net.Wifi.P2p.WifiP2pConfig,Android.Net.Wifi.P2p.WifiP2pConfig)" /></c>. See
 <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pConfig" /></c> for details on setting up the configuration. For communication with legacy
 Wi-Fi devices that do not support p2p, an app can create a group using <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.CreateGroup(.Channel,.IActionListener)" /></c>
 which creates an access point whose details can be fetched with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RequestGroupInfo(.Channel,.IGroupInfoListener)" /></c>.

 </para>
      <para tool="javadoc-to-mdoc"> After a successful group formation through <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.CreateGroup(.Channel,.IActionListener)" /></c> or through <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Connect(.Channel,Android.Net.Wifi.P2p.WifiP2pConfig,Android.Net.Wifi.P2p.WifiP2pConfig)" /></c>,
 use <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RequestConnectionInfo(.Channel,.IConnectionInfoListener)" /></c> to fetch the connection details. The connection info
 <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pInfo" /></c> contains the address of the group owner
 <c><see cref="P:Android.Net.Wifi.P2p.WifiP2pInfo.GroupOwnerAddress" /></c> and a flag <c><see cref="P:Android.Net.Wifi.P2p.WifiP2pInfo.IsGroupOwner" /></c> to indicate
 if the current device is a p2p group owner. A p2p client can thus communicate with
 the p2p group owner through a socket connection.

 </para>
      <para tool="javadoc-to-mdoc"> With peer discovery using <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverPeers(.Channel,.IActionListener)" /></c>, an application discovers the neighboring
 peers, but has no good way to figure out which peer to establish a connection with. For example,
 if a game application is interested in finding all the neighboring peers that are also running
 the same game, it has no way to find out until after the connection is setup. Pre-association
 service discovery is meant to address this issue of filtering the peers based on the running
 services.

 </para>
      <para tool="javadoc-to-mdoc">With pre-association service discovery, an application can advertise a service for a
 application on a peer device prior to a connection setup between the devices.
 Currently, DNS based service discovery (Bonjour) and Upnp are the higher layer protocols
 supported. Get Bonjour resources at dns-sd.org and Upnp resources at upnp.org
 As an example, a video application can discover a Upnp capable media renderer
 prior to setting up a Wi-fi p2p connection with the device.

 </para>
      <para tool="javadoc-to-mdoc"> An application can advertise a Upnp or a Bonjour service with a call to
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddLocalService(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo)" /></c>. After a local service is added,
 the framework automatically responds to a peer application discovering the service prior
 to establishing a p2p connection. A call to <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RemoveLocalService(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo)" /></c> removes a local
 service and <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.ClearLocalServices(.Channel,.IActionListener)" /></c> can be used to clear all local services.

 </para>
      <para tool="javadoc-to-mdoc"> An application that is looking for peer devices that support certain services
 can do so with a call to  <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverServices(.Channel,.IActionListener)" /></c>. Prior to initiating the discovery,
 application can add service discovery request with a call to <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c>,
 remove a service discovery request with a call to <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RemoveServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c> or clear
 all requests with a call to <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.ClearServiceRequests(.Channel,.IActionListener)" /></c>. When no service requests remain,
 a previously running service discovery will stop.

 The application is notified of a result of service discovery request through listener callbacks
 set through <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.SetDnsSdResponseListeners(.Channel,.IDnsSdServiceResponseListener,.IDnsSdServiceResponseListener)" /></c> for Bonjour or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.SetUpnpServiceResponseListener(.Channel,.IUpnpServiceResponseListener)" /></c> for Upnp.

 </para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i>
 Registering an application handler with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c> requires the permissions
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../../reference/android/Manifest.permission.html#ACCESS_WIFI_STATE" /></c> and
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../../reference/android/Manifest.permission.html#CHANGE_WIFI_STATE" /></c> to perform any further peer-to-peer
 operations.

 Get an instance of this class by calling <c><see cref="M:Android.Content.Context.GetSystemService(System.String)" /></c>.

 
 
 
 
 
 
</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.WifiP2pConfig" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.WifiP2pInfo" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.WifiP2pGroup" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.WifiP2pDevice" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.WifiP2pDeviceList" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.WpsInfo" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WifiP2pManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalService">
      <MemberSignature Language="C#" Value="public virtual void AddLocalService (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo servInfo, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLocalService(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo servInfo, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLocalService", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetAddLocalService_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_nsd_WifiP2pServiceInfo_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="servInfo" Type="Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="servInfo">is a local service information.</param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Register a local service for service discovery.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register a local service for service discovery. If a local service is registered,
 the framework automatically responds to a service discovery request from a peer.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to add a local
 service to the framework. The application is notified of a success or failure to
 add service through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">The service information is set through <c><see cref="T:Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo" /></c>.<format type="text/html"><br /></format>
 or its subclass calls  <c><see cref="!:Android.Net.Wifi.P2p.Nsd.WifiP2pUpnpServiceInfo.newInstance(java.lang.String,java.lang.String,java.util.List&lt;java.lang.String&gt;)" /></c> or
  <c><see cref="!:Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceInfo.newInstance(java.lang.String,java.lang.String,java.util.Map&lt;java.lang.String,java.lang.String&gt;)" /></c> for a Upnp or Bonjour service
 respectively

 </para>
          <para tool="javadoc-to-mdoc">The service information can be cleared with calls to
  <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RemoveLocalService(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo)" /></c> or <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.ClearLocalServices(.Channel,.IActionListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.nsd.WifiP2pServiceInfo, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddServiceRequest">
      <MemberSignature Language="C#" Value="public virtual void AddServiceRequest (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest req, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddServiceRequest(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest req, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addServiceRequest", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceRequest;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetAddServiceRequest_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_nsd_WifiP2pServiceRequest_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="req" Type="Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="req">is the service discovery request.</param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Add a service discovery request.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a service discovery request.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to add service
 discovery request to the framework. The application is notified of a success or failure to
 add service through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">After service discovery request is added, you can initiate service discovery by
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverServices(.Channel,.IActionListener)" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">The added service requests can be cleared with calls to
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RemoveServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.ClearServiceRequests(.Channel,.IActionListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#addServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.nsd.WifiP2pServiceRequest, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Busy">
      <MemberSignature Language="C#" Value="public const Android.Net.Wifi.P2p.WifiP2pFailureReason Busy = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Wifi.P2p.WifiP2pFailureReason Busy = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BUSY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Net.Wifi.P2p.WifiP2pFailureReason enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pFailureReason</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.
 Indicates that the operation failed because the framework is busy and
 unable to service the request
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#BUSY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CancelConnect">
      <MemberSignature Language="C#" Value="public virtual void CancelConnect (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelConnect(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelConnect", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetCancelConnect_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Cancel any ongoing p2p group negotiation

 </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel any ongoing p2p group negotiation

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a connection cancellation request
 to the framework. The application is notified of a success or failure to initiate
 cancellation through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#cancelConnect(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ClearLocalServices">
      <MemberSignature Language="C#" Value="public virtual void ClearLocalServices (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearLocalServices(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearLocalServices", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetClearLocalServices_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Clear all registered local services of service discovery.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clear all registered local services of service discovery.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to clear all
 local services to the framework. The application is notified of a success or failure to
 add service through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#clearLocalServices(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ClearServiceRequests">
      <MemberSignature Language="C#" Value="public virtual void ClearServiceRequests (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearServiceRequests(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearServiceRequests", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetClearServiceRequests_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Clear all registered service discovery requests.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clear all registered service discovery requests.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to clear all
 service discovery requests to the framework. The application is notified of a success
 or failure to add service through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#clearServiceRequests(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pConfig config, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pConfig config, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pConfig;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetConnect_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pConfig_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="config" Type="Android.Net.Wifi.P2p.WifiP2pConfig" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="config">options as described in <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pConfig" /></c> class</param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Start a p2p connection to a device with the specified configuration.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start a p2p connection to a device with the specified configuration.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a connection request
 to the framework. The application is notified of a success or failure to initiate
 connect through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc"> Register for <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pConnectionChangedAction" /></c> intent to
 determine when the framework notifies of a change in connectivity.

 </para>
          <para tool="javadoc-to-mdoc"> If the current device is not part of a p2p group, a connect request initiates
 a group negotiation with the peer.

 </para>
          <para tool="javadoc-to-mdoc"> If the current device is part of an existing p2p group or has created
 a p2p group with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.CreateGroup(.Channel,.IActionListener)" /></c>, an invitation to join the group is sent to
 the peer device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#connect(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pConfig, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CreateGroup">
      <MemberSignature Language="C#" Value="public virtual void CreateGroup (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateGroup(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createGroup", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetCreateGroup_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Create a p2p group with the current device as the group owner.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a p2p group with the current device as the group owner. This essentially creates
 an access point that can accept connections from legacy clients as well as other p2p
 devices.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i>
 This function would normally not be used unless the current device needs
 to form a p2p connection with a legacy client

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a group creation request
 to the framework. The application is notified of a success or failure to initiate
 group creation through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc"> Application can request for the group details with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RequestGroupInfo(.Channel,.IGroupInfoListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#createGroup(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DiscoverPeers">
      <MemberSignature Language="C#" Value="public virtual void DiscoverPeers (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverPeers(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("discoverPeers", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetDiscoverPeers_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Initiate peer discovery.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initiate peer discovery. A discovery process involves scanning for available Wi-Fi peers
 for the purpose of establishing a connection.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a discovery request
 to the framework. The application is notified of a success or failure to initiate
 discovery through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc"> The discovery remains active until a connection is initiated or
 a p2p group is formed. Register for <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pPeersChangedAction" /></c> intent to
 determine when the framework notifies of a change as peers are discovered.

 </para>
          <para tool="javadoc-to-mdoc"> Upon receiving a <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pPeersChangedAction" /></c> intent, an application
 can request for the list of peers using <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RequestPeers(.Channel,.IPeerListListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DiscoverServices">
      <MemberSignature Language="C#" Value="public virtual void DiscoverServices (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverServices(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("discoverServices", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetDiscoverServices_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Initiate service discovery.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initiate service discovery. A discovery process involves scanning for
 requested services for the purpose of establishing a connection to a peer
 that supports an available service.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to start service
 discovery to the framework. The application is notified of a success or failure to initiate
 discovery through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc"> The services to be discovered are specified with calls to <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">The application is notified of the response against the service discovery request
 through listener callbacks registered by <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.SetServiceResponseListener(.Channel,.IServiceResponseListener)" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.SetDnsSdResponseListeners(.Channel,.IDnsSdServiceResponseListener,.IDnsSdServiceResponseListener)" /></c>, or <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.SetUpnpServiceResponseListener(.Channel,.IUpnpServiceResponseListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public const Android.Net.Wifi.P2p.WifiP2pFailureReason Error = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Wifi.P2p.WifiP2pFailureReason Error = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Net.Wifi.P2p.WifiP2pFailureReason enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pFailureReason</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.
 Indicates that the operation failed due to an internal error.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#ERROR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDiscoveryState">
      <MemberSignature Language="C#" Value="public const string ExtraDiscoveryState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDiscoveryState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_DISCOVERY_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for an int that indicates whether p2p discovery has started or stopped.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for an int that indicates whether p2p discovery has started or stopped.
 Retrieve it with <c><see cref="M:Android.Content.Intent.GetIntExtra(System.String,System.Int32)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_DISCOVERY_STATE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pDiscoveryStarted" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pDiscoveryStopped" />
      </Docs>
    </Member>
    <Member MemberName="ExtraNetworkInfo">
      <MemberSignature Language="C#" Value="public const string ExtraNetworkInfo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraNetworkInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_NETWORK_INFO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for a <c><see cref="T:Android.Net.NetworkInfo" /></c> object associated with the
 p2p network.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for a <c><see cref="T:Android.Net.NetworkInfo" /></c> object associated with the
 p2p network. Retrieve with
 <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_NETWORK_INFO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraP2pDeviceList">
      <MemberSignature Language="C#" Value="public const string ExtraP2pDeviceList;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraP2pDeviceList" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_P2P_DEVICE_LIST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pDeviceList" /></c> object representing
 the new peer list when <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pPeersChangedAction" /></c> broadcast is sent.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pDeviceList" /></c> object representing
 the new peer list when <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pPeersChangedAction" /></c> broadcast is sent.

 </para>
          <para tool="javadoc-to-mdoc">Retrieve with <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_P2P_DEVICE_LIST" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ExtraWifiP2pDevice">
      <MemberSignature Language="C#" Value="public const string ExtraWifiP2pDevice;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraWifiP2pDevice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_WIFI_P2P_DEVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pDevice" /></c> object
 Retrieve with <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pDevice" /></c> object
 Retrieve with <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_WIFI_P2P_DEVICE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraWifiP2pGroup">
      <MemberSignature Language="C#" Value="public const string ExtraWifiP2pGroup;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraWifiP2pGroup" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_WIFI_P2P_GROUP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pGroup" /></c> object
 associated with the p2p network.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pGroup" /></c> object
 associated with the p2p network. Retrieve with
 <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_WIFI_P2P_GROUP" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ExtraWifiP2pInfo">
      <MemberSignature Language="C#" Value="public const string ExtraWifiP2pInfo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraWifiP2pInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_WIFI_P2P_INFO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pInfo" /></c> object
 Retrieve with <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pInfo" /></c> object
 Retrieve with <c><see cref="M:Android.Content.Intent.GetParcelableExtra(System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_WIFI_P2P_INFO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraWifiState">
      <MemberSignature Language="C#" Value="public const string ExtraWifiState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraWifiState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_WIFI_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The lookup key for an int that indicates whether Wi-Fi p2p is enabled or disabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The lookup key for an int that indicates whether Wi-Fi p2p is enabled or disabled.
 Retrieve it with <c><see cref="M:Android.Content.Intent.GetIntExtra(System.String,System.Int32)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#EXTRA_WIFI_STATE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pStateDisabled" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Wifi.P2p.WifiP2pManager.Channel Initialize (Android.Content.Context srcContext, Android.OS.Looper srcLooper, Android.Net.Wifi.P2p.WifiP2pManager.IChannelListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Wifi.P2p.WifiP2pManager/Channel Initialize(class Android.Content.Context srcContext, class Android.OS.Looper srcLooper, class Android.Net.Wifi.P2p.WifiP2pManager/IChannelListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initialize", "(Landroid/content/Context;Landroid/os/Looper;Landroid/net/wifi/p2p/WifiP2pManager$ChannelListener;)Landroid/net/wifi/p2p/WifiP2pManager$Channel;", "GetInitialize_Landroid_content_Context_Landroid_os_Looper_Landroid_net_wifi_p2p_WifiP2pManager_ChannelListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pManager+Channel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcContext" Type="Android.Content.Context" />
        <Parameter Name="srcLooper" Type="Android.OS.Looper" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IChannelListener" />
      </Parameters>
      <Docs>
        <param name="srcContext">is the context of the source</param>
        <param name="srcLooper">is the Looper on which the callbacks are receivied</param>
        <param name="listener">for callback at loss of framework communication. Can be null.</param>
        <summary>Registers the application with the Wi-Fi framework.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers the application with the Wi-Fi framework. This function
 must be the first to be called before any p2p operations are performed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#initialize(android.content.Context, android.os.Looper, android.net.wifi.p2p.WifiP2pManager.ChannelListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="NoServiceRequests">
      <MemberSignature Language="C#" Value="public const Android.Net.Wifi.P2p.WifiP2pFailureReason NoServiceRequests = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Wifi.P2p.WifiP2pFailureReason NoServiceRequests = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NO_SERVICE_REQUESTS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Net.Wifi.P2p.WifiP2pFailureReason enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pFailureReason</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.
 Indicates that the <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverServices(.Channel,.IActionListener)" /></c> failed because no service
 requests are added. Use <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c> to add a service
 request.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#NO_SERVICE_REQUESTS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="P2pUnsupported">
      <MemberSignature Language="C#" Value="public const Android.Net.Wifi.P2p.WifiP2pFailureReason P2pUnsupported = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Wifi.P2p.WifiP2pFailureReason P2pUnsupported = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("P2P_UNSUPPORTED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Net.Wifi.P2p.WifiP2pFailureReason enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pFailureReason</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Passed with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.
 Indicates that the operation failed because p2p is unsupported on the device.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#P2P_UNSUPPORTED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGroup">
      <MemberSignature Language="C#" Value="public virtual void RemoveGroup (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveGroup(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeGroup", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetRemoveGroup_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Remove the current p2p group.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove the current p2p group.

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a group removal request
 to the framework. The application is notified of a success or failure to initiate
 group removal through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#removeGroup(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLocalService">
      <MemberSignature Language="C#" Value="public virtual void RemoveLocalService (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo servInfo, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLocalService(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo servInfo, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeLocalService", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetRemoveLocalService_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_nsd_WifiP2pServiceInfo_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="servInfo" Type="Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="servInfo">is the local service information.</param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Remove a registered local service added with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddLocalService(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo)" /></c></summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a registered local service added with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddLocalService(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo)" /></c></para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to remove a
 local service to the framework. The application is notified of a success or failure to
 add service through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#removeLocalService(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.nsd.WifiP2pServiceInfo, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RemoveServiceRequest">
      <MemberSignature Language="C#" Value="public virtual void RemoveServiceRequest (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest req, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveServiceRequest(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest req, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeServiceRequest", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/nsd/WifiP2pServiceRequest;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetRemoveServiceRequest_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_nsd_WifiP2pServiceRequest_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="req" Type="Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="req">is the service discovery request.</param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Remove a specified service discovery request added with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c></summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a specified service discovery request added with <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c></para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a request to remove service
 discovery request to the framework. The application is notified of a success or failure to
 add service through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#removeServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.nsd.WifiP2pServiceRequest, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RequestConnectionInfo">
      <MemberSignature Language="C#" Value="public virtual void RequestConnectionInfo (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IConnectionInfoListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestConnectionInfo(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IConnectionInfoListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestConnectionInfo", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ConnectionInfoListener;)V", "GetRequestConnectionInfo_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ConnectionInfoListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IConnectionInfoListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callback when connection info is available. Can be null.
</param>
        <summary>Request device connection info.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Request device connection info.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="RequestGroupInfo">
      <MemberSignature Language="C#" Value="public virtual void RequestGroupInfo (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IGroupInfoListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestGroupInfo(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IGroupInfoListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestGroupInfo", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$GroupInfoListener;)V", "GetRequestGroupInfo_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_GroupInfoListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IGroupInfoListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callback when group info is available. Can be null.
</param>
        <summary>Request p2p group info.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Request p2p group info.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="RequestPeers">
      <MemberSignature Language="C#" Value="public virtual void RequestPeers (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IPeerListListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestPeers(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IPeerListListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestPeers", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$PeerListListener;)V", "GetRequestPeers_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_PeerListListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IPeerListListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callback when peer list is available. Can be null.
</param>
        <summary>Request the current list of peers.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Request the current list of peers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.PeerListListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetDnsSdResponseListeners">
      <MemberSignature Language="C#" Value="public virtual void SetDnsSdResponseListeners (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IDnsSdServiceResponseListener servListener, Android.Net.Wifi.P2p.WifiP2pManager.IDnsSdTxtRecordListener txtListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDnsSdResponseListeners(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IDnsSdServiceResponseListener servListener, class Android.Net.Wifi.P2p.WifiP2pManager/IDnsSdTxtRecordListener txtListener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDnsSdResponseListeners", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$DnsSdServiceResponseListener;Landroid/net/wifi/p2p/WifiP2pManager$DnsSdTxtRecordListener;)V", "GetSetDnsSdResponseListeners_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_DnsSdServiceResponseListener_Landroid_net_wifi_p2p_WifiP2pManager_DnsSdTxtRecordListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="servListener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IDnsSdServiceResponseListener" />
        <Parameter Name="txtListener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IDnsSdTxtRecordListener" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <param name="servListener">is for listening to a Bonjour service response</param>
        <param name="txtListener">is for listening to a Bonjour TXT record response
</param>
        <summary>Register a callback to be invoked on receiving Bonjour service discovery
 response.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register a callback to be invoked on receiving Bonjour service discovery
 response.

 </para>
          <para tool="javadoc-to-mdoc"> see <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverServices(.Channel,.IActionListener)" /></c> for the detail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener, android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetUpnpServiceResponseListener">
      <MemberSignature Language="C#" Value="public virtual void SetUpnpServiceResponseListener (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IUpnpServiceResponseListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUpnpServiceResponseListener(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IUpnpServiceResponseListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUpnpServiceResponseListener", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$UpnpServiceResponseListener;)V", "GetSetUpnpServiceResponseListener_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_UpnpServiceResponseListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IUpnpServiceResponseListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on receiving service discovery response.
</param>
        <summary>Register a callback to be invoked on receiving upnp service discovery
 response.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register a callback to be invoked on receiving upnp service discovery
 response.

 </para>
          <para tool="javadoc-to-mdoc"> see <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.DiscoverServices(.Channel,.IActionListener)" /></c> for the detail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StopPeerDiscovery">
      <MemberSignature Language="C#" Value="public virtual void StopPeerDiscovery (Android.Net.Wifi.P2p.WifiP2pManager.Channel c, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopPeerDiscovery(class Android.Net.Wifi.P2p.WifiP2pManager/Channel c, class Android.Net.Wifi.P2p.WifiP2pManager/IActionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopPeerDiscovery", "(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V", "GetStopPeerDiscovery_Landroid_net_wifi_p2p_WifiP2pManager_Channel_Landroid_net_wifi_p2p_WifiP2pManager_ActionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Net.Wifi.P2p.WifiP2pManager+Channel" />
        <Parameter Name="listener" Type="Android.Net.Wifi.P2p.WifiP2pManager+IActionListener" />
      </Parameters>
      <Docs>
        <param name="c">is the channel created at <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.Initialize(Android.Content.Context,Android.OS.Looper,Android.OS.Looper)" /></c></param>
        <param name="listener">for callbacks on success or failure. Can be null.
</param>
        <summary>Stop an ongoing peer discovery

 </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop an ongoing peer discovery

 </para>
          <para tool="javadoc-to-mdoc"> The function call immediately returns after sending a stop request
 to the framework. The application is notified of a success or failure to initiate
 stop through listener callbacks <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnSuccess" tool="ReplaceLinkValue" /></c> or
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2Manager.IActionListener.OnFailure" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager.Channel, android.net.wifi.p2p.WifiP2pManager.ActionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiP2pConnectionChangedAction">
      <MemberSignature Language="C#" Value="public const string WifiP2pConnectionChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiP2pConnectionChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_CONNECTION_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that the state of Wi-Fi p2p connectivity
 has changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Broadcast intent action indicating that the state of Wi-Fi p2p connectivity
 has changed. One extra <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraWifiP2pInfo" /></c> provides the p2p connection info in
 the form of a <c><see cref="T:Android.Net.Wifi.P2p.WifiP2pInfo" /></c> object. Another extra <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraNetworkInfo" /></c> provides
 the network info in the form of a <c><see cref="T:Android.Net.NetworkInfo" /></c>. A third extra provides
 the details of the group.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_CONNECTION_CHANGED_ACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraWifiP2pInfo" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraNetworkInfo" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraWifiP2pGroup" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pDiscoveryChangedAction">
      <MemberSignature Language="C#" Value="public const string WifiP2pDiscoveryChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiP2pDiscoveryChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_DISCOVERY_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that peer discovery has either started or stopped.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Broadcast intent action indicating that peer discovery has either started or stopped.
 One extra <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraDiscoveryState" /></c> indicates whether discovery has started
 or stopped.

 </para>
          <para tool="javadoc-to-mdoc">Note that discovery will be stopped during a connection setup. If the application tries
 to re-initiate discovery during this time, it can fail.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_DISCOVERY_CHANGED_ACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pDiscoveryStarted">
      <MemberSignature Language="C#" Value="public const int WifiP2pDiscoveryStarted = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WifiP2pDiscoveryStarted = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_DISCOVERY_STARTED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>p2p discovery has started</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">p2p discovery has started</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_DISCOVERY_STARTED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pDiscoveryChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pDiscoveryStopped">
      <MemberSignature Language="C#" Value="public const int WifiP2pDiscoveryStopped = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WifiP2pDiscoveryStopped = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_DISCOVERY_STOPPED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>p2p discovery has stopped</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">p2p discovery has stopped</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_DISCOVERY_STOPPED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pDiscoveryChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pPeersChangedAction">
      <MemberSignature Language="C#" Value="public const string WifiP2pPeersChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiP2pPeersChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_PEERS_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that the available peer list has changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Broadcast intent action indicating that the available peer list has changed. This
 can be sent as a result of peers being found, lost or updated.

 </para>
          <para tool="javadoc-to-mdoc"> An extra <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraP2pDeviceList" /></c> provides the full list of
 current peers. The full list of peers can also be obtained any time with
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RequestPeers(.Channel,.IPeerListListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_PEERS_CHANGED_ACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraP2pDeviceList" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pStateChangedAction">
      <MemberSignature Language="C#" Value="public const string WifiP2pStateChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiP2pStateChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_STATE_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action to indicate whether Wi-Fi p2p is enabled or disabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Broadcast intent action to indicate whether Wi-Fi p2p is enabled or disabled. An
 extra <c><see cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraWifiState" /></c> provides the state information as int.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_STATE_CHANGED_ACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.ExtraWifiState" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pStateDisabled">
      <MemberSignature Language="C#" Value="public const Android.Net.Wifi.P2p.WifiP2pState WifiP2pStateDisabled = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Wifi.P2p.WifiP2pState WifiP2pStateDisabled = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_STATE_DISABLED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Net.Wifi.P2p.WifiP2pState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Wi-Fi p2p is disabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Wi-Fi p2p is disabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_STATE_DISABLED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pStateChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pStateEnabled">
      <MemberSignature Language="C#" Value="public const Android.Net.Wifi.P2p.WifiP2pState WifiP2pStateEnabled = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Net.Wifi.P2p.WifiP2pState WifiP2pStateEnabled = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_STATE_ENABLED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Net.Wifi.P2p.WifiP2pState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.WifiP2pState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Wi-Fi p2p is enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Wi-Fi p2p is enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_STATE_ENABLED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pStateChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="WifiP2pThisDeviceChangedAction">
      <MemberSignature Language="C#" Value="public const string WifiP2pThisDeviceChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiP2pThisDeviceChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_THIS_DEVICE_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that this device details have changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Broadcast intent action indicating that this device details have changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html#WIFI_P2P_THIS_DEVICE_CHANGED_ACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>
