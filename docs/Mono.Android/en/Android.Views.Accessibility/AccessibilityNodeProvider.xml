<Type Name="AccessibilityNodeProvider" FullName="Android.Views.Accessibility.AccessibilityNodeProvider">
  <TypeSignature Language="C#" Value="public abstract class AccessibilityNodeProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AccessibilityNodeProvider extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.Accessibility.AccessibilityNodeProvider" />
  <TypeSignature Language="F#" Value="type AccessibilityNodeProvider = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/accessibility/AccessibilityNodeProvider", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/accessibility/AccessibilityNodeProvider", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>This class is the contract a client should implement to enable support of a
            virtual view hierarchy rooted at a given view for accessibility purposes.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibilityNodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AccessibilityNodeProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.Accessibility.AccessibilityNodeProvider : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.Accessibility.AccessibilityNodeProvider" Usage="new Android.Views.Accessibility.AccessibilityNodeProvider (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtraDataToAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual void AddExtraDataToAccessibilityNodeInfo (int virtualViewId, Android.Views.Accessibility.AccessibilityNodeInfo? info, string? extraDataKey, Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddExtraDataToAccessibilityNodeInfo(int32 virtualViewId, class Android.Views.Accessibility.AccessibilityNodeInfo info, string extraDataKey, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.AddExtraDataToAccessibilityNodeInfo(System.Int32,Android.Views.Accessibility.AccessibilityNodeInfo,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member AddExtraDataToAccessibilityNodeInfo : int * Android.Views.Accessibility.AccessibilityNodeInfo * string * Android.OS.Bundle -&gt; unit&#xA;override this.AddExtraDataToAccessibilityNodeInfo : int * Android.Views.Accessibility.AccessibilityNodeInfo * string * Android.OS.Bundle -&gt; unit" Usage="accessibilityNodeProvider.AddExtraDataToAccessibilityNodeInfo (virtualViewId, info, extraDataKey, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addExtraDataToAccessibilityNodeInfo", "(ILandroid/view/accessibility/AccessibilityNodeInfo;Ljava/lang/String;Landroid/os/Bundle;)V", "GetAddExtraDataToAccessibilityNodeInfo_ILandroid_view_accessibility_AccessibilityNodeInfo_Ljava_lang_String_Landroid_os_Bundle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addExtraDataToAccessibilityNodeInfo", "(ILandroid/view/accessibility/AccessibilityNodeInfo;Ljava/lang/String;Landroid/os/Bundle;)V", "GetAddExtraDataToAccessibilityNodeInfo_ILandroid_view_accessibility_AccessibilityNodeInfo_Ljava_lang_String_Landroid_os_Bundle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualViewId" Type="System.Int32" />
        <Parameter Name="info" Type="Android.Views.Accessibility.AccessibilityNodeInfo" />
        <Parameter Name="extraDataKey" Type="System.String" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">The virtual view id used to create the node</param>
        <param name="info">The info to which to add the extra data</param>
        <param name="extraDataKey">A key specifying the type of extra data to add to the info. The
                                extra data should be added to the <c>Bundle</c> returned by
                                the info's <c>AccessibilityNodeInfo#getExtras</c> method.</param>
        <param name="arguments">A <c>Bundle</c> holding any arguments relevant for this request.</param>
        <summary>Adds extra data to an <c>AccessibilityNodeInfo</c> based on an explicit request for the
            additional data.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider#addExtraDataToAccessibilityNodeInfo(int,%20android.view.accessibility.AccessibilityNodeInfo,%20java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider.addExtraDataToAccessibilityNodeInfo(int, android.view.accessibility.AccessibilityNodeInfo, java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeInfo? CreateAccessibilityNodeInfo (int virtualViewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Accessibility.AccessibilityNodeInfo CreateAccessibilityNodeInfo(int32 virtualViewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.CreateAccessibilityNodeInfo(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityNodeInfo : int -&gt; Android.Views.Accessibility.AccessibilityNodeInfo&#xA;override this.CreateAccessibilityNodeInfo : int -&gt; Android.Views.Accessibility.AccessibilityNodeInfo" Usage="accessibilityNodeProvider.CreateAccessibilityNodeInfo virtualViewId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAccessibilityNodeInfo", "(I)Landroid/view/accessibility/AccessibilityNodeInfo;", "GetCreateAccessibilityNodeInfo_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAccessibilityNodeInfo", "(I)Landroid/view/accessibility/AccessibilityNodeInfo;", "GetCreateAccessibilityNodeInfo_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualViewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">A client defined virtual view id.</param>
        <summary>Returns an <c>AccessibilityNodeInfo</c> representing a virtual view,
            such as a descendant of the host View, with the given <c>virtualViewId</c>
            or the host View itself if <c>virtualViewId</c> equals to <c>#HOST_VIEW_ID</c>.</summary>
        <returns>A populated <c>AccessibilityNodeInfo</c> for a virtual descendant or the
                host View.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider#createAccessibilityNodeInfo(int)" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider.createAccessibilityNodeInfo(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.CreateAccessibilityNodeInfo" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="FindAccessibilityNodeInfosByText">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Views.Accessibility.AccessibilityNodeInfo&gt;? FindAccessibilityNodeInfosByText (string? text, int virtualViewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Views.Accessibility.AccessibilityNodeInfo&gt; FindAccessibilityNodeInfosByText(string text, int32 virtualViewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.FindAccessibilityNodeInfosByText(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FindAccessibilityNodeInfosByText : string * int -&gt; System.Collections.Generic.IList&lt;Android.Views.Accessibility.AccessibilityNodeInfo&gt;&#xA;override this.FindAccessibilityNodeInfosByText : string * int -&gt; System.Collections.Generic.IList&lt;Android.Views.Accessibility.AccessibilityNodeInfo&gt;" Usage="accessibilityNodeProvider.FindAccessibilityNodeInfosByText (text, virtualViewId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findAccessibilityNodeInfosByText", "(Ljava/lang/String;I)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findAccessibilityNodeInfosByText", "(Ljava/lang/String;I)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.Accessibility.AccessibilityNodeInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="virtualViewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">A client defined virtual view id which defined
                the root of the tree in which to perform the search.</param>
        <param name="text">The searched text.</param>
        <summary>Finds <c>AccessibilityNodeInfo</c>s by text.</summary>
        <returns>A list of node info.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider#findAccessibilityNodeInfosByText(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider.findAccessibilityNodeInfosByText(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.Accessibility.AccessibilityNodeProvider.CreateAccessibilityNodeInfo(System.Int32)" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="FindFocus">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeInfo? FindFocus (Android.Views.Accessibility.NodeFocus focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Accessibility.AccessibilityNodeInfo FindFocus(valuetype Android.Views.Accessibility.NodeFocus focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.FindFocus(Android.Views.Accessibility.NodeFocus)" />
      <MemberSignature Language="F#" Value="abstract member FindFocus : Android.Views.Accessibility.NodeFocus -&gt; Android.Views.Accessibility.AccessibilityNodeInfo&#xA;override this.FindFocus : Android.Views.Accessibility.NodeFocus -&gt; Android.Views.Accessibility.AccessibilityNodeInfo" Usage="accessibilityNodeProvider.FindFocus focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findFocus", "(I)Landroid/view/accessibility/AccessibilityNodeInfo;", "GetFindFocus_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findFocus", "(I)Landroid/view/accessibility/AccessibilityNodeInfo;", "GetFindFocus_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="Android.Views.Accessibility.NodeFocus">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="focus">The focus to find. One of
                       <c>AccessibilityNodeInfo#FOCUS_INPUT</c> or
                       <c>AccessibilityNodeInfo#FOCUS_ACCESSIBILITY</c>.</param>
        <summary>Find the virtual view, such as a descendant of the host View, that has the
            specified focus type.</summary>
        <returns>The node info of the focused view or null.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider#findFocus(int)" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider.findFocus(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.Views.Accessibility.AccessibilityNodeInfo.FocusInput" />
        <altmember cref="F:Android.Views.Accessibility.AccessibilityNodeInfo.FocusAccessibility" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="HostViewId">
      <MemberSignature Language="C#" Value="public const int HostViewId = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HostViewId = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Accessibility.AccessibilityNodeProvider.HostViewId" />
      <MemberSignature Language="F#" Value="val mutable HostViewId : int" Usage="Android.Views.Accessibility.AccessibilityNodeProvider.HostViewId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HOST_VIEW_ID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HOST_VIEW_ID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>The virtual id for the hosting View.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider#HOST_VIEW_ID" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider.HOST_VIEW_ID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Accessibility.AccessibilityNodeProvider.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.Accessibility.AccessibilityNodeProvider.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="public bool PerformAction (int virtualViewId, Android.AccessibilityServices.GlobalAction action, Android.OS.Bundle arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PerformAction(int32 virtualViewId, valuetype Android.AccessibilityServices.GlobalAction action, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.PerformAction(System.Int32,Android.AccessibilityServices.GlobalAction,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="member this.PerformAction : int * Android.AccessibilityServices.GlobalAction * Android.OS.Bundle -&gt; bool" Usage="accessibilityNodeProvider.PerformAction (virtualViewId, action, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualViewId" Type="System.Int32" />
        <Parameter Name="action" Type="Android.AccessibilityServices.GlobalAction" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">A client defined virtual view id.</param>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional action arguments.</param>
        <summary tool="true">Performs an accessibility action on a virtual view, i.e. a descendant of the
 host View, with the given <c>virtualViewId</c> or the host View itself
 if <c>virtualViewId</c> equals to <see cref="F:Android.Views.Accessibility.AccessibilityNodeProvider.HostViewId" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction, Android.OS.Bundle)" />
        <altmember cref="M:Android.Views.Accessibility.AccessibilityNodeProvider.CreateAccessibilityNodeInfo(System.Int32)" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformAction (int virtualViewId, Android.Views.Accessibility.Action action, Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAction(int32 virtualViewId, valuetype Android.Views.Accessibility.Action action, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Accessibility.AccessibilityNodeProvider.PerformAction(System.Int32,Android.Views.Accessibility.Action,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member PerformAction : int * Android.Views.Accessibility.Action * Android.OS.Bundle -&gt; bool&#xA;override this.PerformAction : int * Android.Views.Accessibility.Action * Android.OS.Bundle -&gt; bool" Usage="accessibilityNodeProvider.PerformAction (virtualViewId, action, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performAction", "(IILandroid/os/Bundle;)Z", "GetPerformAction_IILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performAction", "(IILandroid/os/Bundle;)Z", "GetPerformAction_IILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualViewId" Type="System.Int32" />
        <Parameter Name="action" Type="Android.Views.Accessibility.Action">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">A client defined virtual view id.</param>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional action arguments.</param>
        <summary>Performs an accessibility action on a virtual view, such as a descendant of the
            host View, with the given <c>virtualViewId</c> or the host View itself
            if <c>virtualViewId</c> equals to <c>#HOST_VIEW_ID</c>.</summary>
        <returns>True if the action was performed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider#performAction(int,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.accessibility.AccessibilityNodeProvider.performAction(int, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Accessibility.AccessibilityNodeProvider.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.Accessibility.AccessibilityNodeProvider.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Accessibility.AccessibilityNodeProvider.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.Accessibility.AccessibilityNodeProvider.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
