<Type Name="CompletableFuture" FullName="Java.Util.Concurrent.CompletableFuture">
  <TypeSignature Language="F#" Value="type CompletableFuture = class&#xA;    inherit Object&#xA;    interface ICompletionStage&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IFuture" />
  <TypeSignature Language="C#" Value="public class CompletableFuture : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Util.Concurrent.ICompletionStage, Java.Util.Concurrent.IFuture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompletableFuture extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Util.Concurrent.ICompletionStage, class Java.Util.Concurrent.IFuture, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.CompletableFuture" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.ICompletionStage</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IFuture</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/CompletableFuture", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="&lt;T&gt;&lt;T&gt;">The result type returned by this future's <c>join</c>
            and <c>get</c> methods</param>
    <summary>A <c>Future</c> that may be explicitly completed (setting its
            value and status), and may be used as a <c>CompletionStage</c>,
            supporting dependent functions and actions that trigger upon its
            completion.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompletableFuture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new incomplete CompletableFuture.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#CompletableFuture()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.CompletableFuture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.CompletableFuture : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.CompletableFuture" Usage="new Java.Util.Concurrent.CompletableFuture (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected CompletableFuture (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptEither">
      <MemberSignature Language="F#" Value="abstract member AcceptEither : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.AcceptEither : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.AcceptEither (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? AcceptEither (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage AcceptEither(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.AcceptEither(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.AcceptEither(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptEither", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;", "GetAcceptEither_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptEitherAsync">
      <MemberSignature Language="F#" Value="abstract member AcceptEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.AcceptEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.AcceptEitherAsync (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? AcceptEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage AcceptEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.AcceptEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.AcceptEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;", "GetAcceptEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptEitherAsync">
      <MemberSignature Language="F#" Value="abstract member AcceptEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.AcceptEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.AcceptEitherAsync (other, action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? AcceptEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage AcceptEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.AcceptEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.AcceptEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetAcceptEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllOf">
      <MemberSignature Language="F#" Value="static member AllOf : Java.Util.Concurrent.CompletableFuture[] -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.AllOf cfs" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? AllOf (params Java.Util.Concurrent.CompletableFuture[]? cfs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture AllOf(class Java.Util.Concurrent.CompletableFuture[] cfs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.AllOf(Java.Util.Concurrent.CompletableFuture[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allOf", "([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfs" Type="Java.Util.Concurrent.CompletableFuture[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cfs">the CompletableFutures</param>
        <summary>Returns a new CompletableFuture that is completed when all of
            the given CompletableFutures complete.</summary>
        <returns>a new CompletableFuture that is completed when all of the
            given CompletableFutures complete</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#allOf(java.util.concurrent.CompletableFuture)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.allOf(java.util.concurrent.CompletableFuture)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyOf">
      <MemberSignature Language="F#" Value="static member AnyOf : Java.Util.Concurrent.CompletableFuture[] -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.AnyOf cfs" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? AnyOf (params Java.Util.Concurrent.CompletableFuture[]? cfs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture AnyOf(class Java.Util.Concurrent.CompletableFuture[] cfs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.AnyOf(Java.Util.Concurrent.CompletableFuture[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("anyOf", "([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfs" Type="Java.Util.Concurrent.CompletableFuture[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cfs">the CompletableFutures</param>
        <summary>Returns a new CompletableFuture that is completed when any of
            the given CompletableFutures complete, with the same result.</summary>
        <returns>a new CompletableFuture that is completed with the
            result or exception of any of the given CompletableFutures when
            one completes</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#anyOf(java.util.concurrent.CompletableFuture)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.anyOf(java.util.concurrent.CompletableFuture)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToEither">
      <MemberSignature Language="F#" Value="abstract member ApplyToEither : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ApplyToEither : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ApplyToEither (other, fn)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ApplyToEither (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ApplyToEither(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ApplyToEither(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ApplyToEither(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyToEither", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetApplyToEither_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToEitherAsync">
      <MemberSignature Language="F#" Value="abstract member ApplyToEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ApplyToEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ApplyToEitherAsync (other, fn)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ApplyToEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ApplyToEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ApplyToEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ApplyToEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyToEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetApplyToEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToEitherAsync">
      <MemberSignature Language="F#" Value="abstract member ApplyToEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ApplyToEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ApplyToEitherAsync (other, fn, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ApplyToEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ApplyToEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ApplyToEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ApplyToEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyToEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetApplyToEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="fn">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="F#" Value="abstract member Cancel : bool -&gt; bool&#xA;override this.Cancel : bool -&gt; bool" Usage="completableFuture.Cancel mayInterruptIfRunning" />
      <MemberSignature Language="C#" Value="public virtual bool Cancel (bool mayInterruptIfRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cancel(bool mayInterruptIfRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Cancel(System.Boolean)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IFuture.Cancel(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "(Z)Z", "GetCancel_ZHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mayInterruptIfRunning" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mayInterruptIfRunning">this value has no effect in this
            implementation because interrupts are not used to control
            processing.</param>
        <summary>If not already completed, completes this CompletableFuture with
            a <c>CancellationException</c>.</summary>
        <returns>
          <c>true</c> if this task is now cancelled</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#cancel(boolean)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.cancel(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="F#" Value="abstract member Complete : Java.Lang.Object -&gt; bool&#xA;override this.Complete : Java.Lang.Object -&gt; bool" Usage="completableFuture.Complete value" />
      <MemberSignature Language="C#" Value="public virtual bool Complete (Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Complete(class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Complete(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("complete", "(Ljava/lang/Object;)Z", "GetComplete_Ljava_lang_Object_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">the result value</param>
        <summary>If not already completed, sets the value returned by <c>#get()</c> and related methods to the given value.</summary>
        <returns>
          <c>true</c> if this invocation caused this CompletableFuture
            to transition to a completed state, else <c>false</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#complete(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.complete(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? CompleteAsync (Java.Util.Functions.ISupplier? supplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage CompleteAsync(class Java.Util.Functions.ISupplier supplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.CompleteAsync(Java.Util.Functions.ISupplier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("completeAsync", "(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;", "GetCompleteAsync_Ljava_util_function_Supplier_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="supplier">a function returning the value to be used
            to complete this CompletableFuture</param>
        <summary>Completes this CompletableFuture with the result of the given
            Supplier function invoked from an asynchronous task using the
            default executor.</summary>
        <returns>this CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#completeAsync(java.util.function.Supplier)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.completeAsync(java.util.function.Supplier)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? CompleteAsync (Java.Util.Functions.ISupplier? supplier, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage CompleteAsync(class Java.Util.Functions.ISupplier supplier, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.CompleteAsync(Java.Util.Functions.ISupplier,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("completeAsync", "(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetCompleteAsync_Ljava_util_function_Supplier_Ljava_util_concurrent_Executor_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supplier" Type="Java.Util.Functions.ISupplier" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="supplier">a function returning the value to be used
            to complete this CompletableFuture</param>
        <summary>Completes this CompletableFuture with the result of the given
            Supplier function invoked from an asynchronous task using the
            default executor.</summary>
        <returns>this CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#completeAsync(java.util.function.Supplier)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.completeAsync(java.util.function.Supplier)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedFuture">
      <MemberSignature Language="F#" Value="static member CompletedFuture : Java.Lang.Object -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.CompletedFuture value" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? CompletedFuture (Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture CompletedFuture(class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.CompletedFuture(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("completedFuture", "(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">the value</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the value</param>
        <summary>Returns a new CompletableFuture that is already completed with
            the given value.</summary>
        <returns>the completed CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#completedFuture(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.completedFuture(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedStage">
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.ICompletionStage? CompletedStage (Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.ICompletionStage CompletedStage(class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.CompletedStage(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("completedStage", "(Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;", "", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">the value</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the value</param>
        <summary>Returns a new CompletionStage that is already completed with
            the given value and supports only those methods in
            interface <c>CompletionStage</c>.</summary>
        <returns>the completed CompletionStage</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#completedStage(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.completedStage(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteExceptionally">
      <MemberSignature Language="F#" Value="abstract member CompleteExceptionally : Java.Lang.Throwable -&gt; bool&#xA;override this.CompleteExceptionally : Java.Lang.Throwable -&gt; bool" Usage="completableFuture.CompleteExceptionally ex" />
      <MemberSignature Language="C#" Value="public virtual bool CompleteExceptionally (Java.Lang.Throwable? ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompleteExceptionally(class Java.Lang.Throwable ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.CompleteExceptionally(Java.Lang.Throwable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("completeExceptionally", "(Ljava/lang/Throwable;)Z", "GetCompleteExceptionally_Ljava_lang_Throwable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="ex">the exception</param>
        <summary>If not already completed, causes invocations of <c>#get()</c>
            and related methods to throw the given exception.</summary>
        <returns>
          <c>true</c> if this invocation caused this CompletableFuture
            to transition to a completed state, else <c>false</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#completeExceptionally(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.completeExceptionally(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteOnTimeout">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? CompleteOnTimeout (Java.Lang.Object? value, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage CompleteOnTimeout(class Java.Lang.Object value, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.CompleteOnTimeout(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("completeOnTimeout", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;", "GetCompleteOnTimeout_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="value">the value to use upon timeout</param>
        <param name="timeout">how long to wait before completing normally
                   with the given value, in units of <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>timeout</c> parameter</param>
        <summary>Completes this CompletableFuture with the given value if not
            otherwise completed before the given timeout.</summary>
        <returns>this CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#completeOnTimeout(java.lang.Object,%20long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.completeOnTimeout(java.lang.Object, long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy", "()Ljava/util/concurrent/CompletableFuture;", "GetCopyHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new CompletableFuture that is completed normally with
            the same value as this CompletableFuture when it completes
            normally.</summary>
        <returns>the new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#copy()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.copy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultExecutor">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.IExecutor? DefaultExecutor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IExecutor DefaultExecutor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.DefaultExecutor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defaultExecutor", "()Ljava/util/concurrent/Executor;", "GetDefaultExecutorHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IExecutor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the default Executor used for async methods that do not
            specify an Executor.</summary>
        <returns>the executor</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#defaultExecutor()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.defaultExecutor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayedExecutor">
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.IExecutor? DelayedExecutor (long delay, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.IExecutor DelayedExecutor(int64 delay, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.DelayedExecutor(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delayedExecutor", "(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Executor;", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IExecutor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="delay">how long to delay, in units of <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>delay</c> parameter</param>
        <summary>Returns a new Executor that submits a task to the default
            executor after the given delay (or no delay if non-positive).</summary>
        <returns>the new delayed executor</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#delayedExecutor(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.delayedExecutor(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayedExecutor">
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.IExecutor? DelayedExecutor (long delay, Java.Util.Concurrent.TimeUnit? unit, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.IExecutor DelayedExecutor(int64 delay, class Java.Util.Concurrent.TimeUnit unit, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.DelayedExecutor(System.Int64,Java.Util.Concurrent.TimeUnit,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delayedExecutor", "(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor;", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IExecutor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="delay">how long to delay, in units of <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>delay</c> parameter</param>
        <summary>Returns a new Executor that submits a task to the default
            executor after the given delay (or no delay if non-positive).</summary>
        <returns>the new delayed executor</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#delayedExecutor(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.delayedExecutor(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exceptionally">
      <MemberSignature Language="F#" Value="abstract member Exceptionally : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.Exceptionally : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.Exceptionally fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? Exceptionally (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage Exceptionally(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Exceptionally(Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.Exceptionally(Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionally", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetExceptionally_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletableFuture if this CompletableFuture completed
            exceptionally</param>
        <summary>Returns a new CompletableFuture that is completed when this
            CompletableFuture completes, with the result of the given
            function of the exception triggering this CompletableFuture's
            completion when it completes exceptionally; otherwise, if this
            CompletableFuture completes normally, then the returned
            CompletableFuture also completes normally with the same value.</summary>
        <returns>the new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#exceptionally(java.util.function.Function)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.exceptionally(java.util.function.Function)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedFuture">
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? FailedFuture (Java.Lang.Throwable? ex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture FailedFuture(class Java.Lang.Throwable ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.FailedFuture(Java.Lang.Throwable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("failedFuture", "(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="ex">the exception</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the value</param>
        <summary>Returns a new CompletableFuture that is already completed
            exceptionally with the given exception.</summary>
        <returns>the exceptionally completed CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#failedFuture(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.failedFuture(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FailedStage">
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.ICompletionStage? FailedStage (Java.Lang.Throwable? ex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.ICompletionStage FailedStage(class Java.Lang.Throwable ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.FailedStage(Java.Lang.Throwable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("failedStage", "(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage;", "", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="ex">the exception</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the value</param>
        <summary>Returns a new CompletionStage that is already completed
            exceptionally with the given exception and supports only those
            methods in interface <c>CompletionStage</c>.</summary>
        <returns>the exceptionally completed CompletionStage</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#failedStage(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.failedStage(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="F#" Value="abstract member Get : unit -&gt; Java.Lang.Object&#xA;override this.Get : unit -&gt; Java.Lang.Object" Usage="completableFuture.Get " />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Get" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IFuture.Get</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "()Ljava/lang/Object;", "GetGetHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Waits if necessary for this future to complete, and then
            returns its result.</summary>
        <returns>the result value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#get()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="F#" Value="abstract member Get : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object&#xA;override this.Get : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="completableFuture.Get (timeout, unit)" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Get (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Get(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Get(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IFuture.Get(System.Int64,Java.Util.Concurrent.TimeUnit)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetGet_JLjava_util_concurrent_TimeUnit_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <summary>Waits if necessary for this future to complete, and then
            returns its result.</summary>
        <returns>the result value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#get()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNow">
      <MemberSignature Language="F#" Value="abstract member GetNow : Java.Lang.Object -&gt; Java.Lang.Object&#xA;override this.GetNow : Java.Lang.Object -&gt; Java.Lang.Object" Usage="completableFuture.GetNow valueIfAbsent" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetNow (Java.Lang.Object? valueIfAbsent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetNow(class Java.Lang.Object valueIfAbsent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.GetNow(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNow", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetGetNow_Ljava_lang_Object_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueIfAbsent" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="valueIfAbsent">the value to return if not completed</param>
        <summary>Returns the result value (or throws any encountered exception)
            if completed, else returns the given valueIfAbsent.</summary>
        <returns>the result value, if completed, else the given valueIfAbsent</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#getNow(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.getNow(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="F#" Value="abstract member Handle : Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.Handle : Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.Handle fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? Handle (Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage Handle(class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Handle(Java.Util.Functions.IBiFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.Handle(Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handle", "(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;", "GetHandle_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAsync">
      <MemberSignature Language="F#" Value="abstract member HandleAsync : Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.HandleAsync : Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.HandleAsync fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? HandleAsync (Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage HandleAsync(class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.HandleAsync(Java.Util.Functions.IBiFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.HandleAsync(Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleAsync", "(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;", "GetHandleAsync_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAsync">
      <MemberSignature Language="F#" Value="abstract member HandleAsync : Java.Util.Functions.IBiFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.HandleAsync : Java.Util.Functions.IBiFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.HandleAsync (fn, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? HandleAsync (Java.Util.Functions.IBiFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage HandleAsync(class Java.Util.Functions.IBiFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.HandleAsync(Java.Util.Functions.IBiFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.HandleAsync(Java.Util.Functions.IBiFunction,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleAsync", "(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetHandleAsync_Ljava_util_function_BiFunction_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancelled">
      <MemberSignature Language="F#" Value="member this.IsCancelled : bool" Usage="Java.Util.Concurrent.CompletableFuture.IsCancelled" />
      <MemberSignature Language="C#" Value="public virtual bool IsCancelled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancelled" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.IsCancelled" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Util.Concurrent.IFuture.IsCancelled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCancelled", "()Z", "GetIsCancelledHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this CompletableFuture was cancelled
            before it completed normally.</summary>
        <value>
          <c>true</c> if this CompletableFuture was cancelled
            before it completed normally</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#isCancelled()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.isCancelled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedExceptionally">
      <MemberSignature Language="F#" Value="member this.IsCompletedExceptionally : bool" Usage="Java.Util.Concurrent.CompletableFuture.IsCompletedExceptionally" />
      <MemberSignature Language="C#" Value="public virtual bool IsCompletedExceptionally { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedExceptionally" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.IsCompletedExceptionally" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCompletedExceptionally", "()Z", "GetIsCompletedExceptionallyHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this CompletableFuture completed
            exceptionally, in any way.</summary>
        <value>
          <c>true</c> if this CompletableFuture completed
            exceptionally</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#isCompletedExceptionally()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.isCompletedExceptionally()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDone">
      <MemberSignature Language="F#" Value="member this.IsDone : bool" Usage="Java.Util.Concurrent.CompletableFuture.IsDone" />
      <MemberSignature Language="C#" Value="public virtual bool IsDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDone" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.IsDone" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Util.Concurrent.IFuture.IsDone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDone", "()Z", "GetIsDoneHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if completed in any fashion: normally,
            exceptionally, or via cancellation.</summary>
        <value>
          <c>true</c> if completed</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#isDone()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.isDone()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.CompletableFuture.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="F#" Value="abstract member Join : unit -&gt; Java.Lang.Object&#xA;override this.Join : unit -&gt; Java.Lang.Object" Usage="completableFuture.Join " />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.Join" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("join", "()Ljava/lang/Object;", "GetJoinHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the result value when complete, or throws an
            (unchecked) exception if completed exceptionally.</summary>
        <returns>the result value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#join()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.join()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalCompletionStage">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? MinimalCompletionStage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage MinimalCompletionStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.MinimalCompletionStage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("minimalCompletionStage", "()Ljava/util/concurrent/CompletionStage;", "GetMinimalCompletionStageHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new CompletionStage that is completed normally with
            the same value as this CompletableFuture when it completes
            normally, and cannot be independently completed or otherwise
            used in ways not defined by the methods of interface <c>CompletionStage</c>.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#minimalCompletionStage()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.minimalCompletionStage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewIncompleteFuture">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? NewIncompleteFuture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage NewIncompleteFuture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.NewIncompleteFuture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newIncompleteFuture", "()Ljava/util/concurrent/CompletableFuture;", "GetNewIncompleteFutureHandler", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the value</param>
        <summary>Returns a new incomplete CompletableFuture of the type to be
            returned by a CompletionStage method.</summary>
        <returns>a new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#newIncompleteFuture()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.newIncompleteFuture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfDependents">
      <MemberSignature Language="F#" Value="member this.NumberOfDependents : int" Usage="Java.Util.Concurrent.CompletableFuture.NumberOfDependents" />
      <MemberSignature Language="C#" Value="public virtual int NumberOfDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfDependents" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.NumberOfDependents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNumberOfDependents", "()I", "GetGetNumberOfDependentsHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the estimated number of CompletableFutures whose
            completions are awaiting completion of this CompletableFuture.</summary>
        <value>the number of dependent CompletableFutures</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#getNumberOfDependents()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.getNumberOfDependents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObtrudeException">
      <MemberSignature Language="F#" Value="abstract member ObtrudeException : Java.Lang.Throwable -&gt; unit&#xA;override this.ObtrudeException : Java.Lang.Throwable -&gt; unit" Usage="completableFuture.ObtrudeException ex" />
      <MemberSignature Language="C#" Value="public virtual void ObtrudeException (Java.Lang.Throwable? ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ObtrudeException(class Java.Lang.Throwable ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ObtrudeException(Java.Lang.Throwable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("obtrudeException", "(Ljava/lang/Throwable;)V", "GetObtrudeException_Ljava_lang_Throwable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="ex">the exception</param>
        <summary>Forcibly causes subsequent invocations of method <c>#get()</c>
            and related methods to throw the given exception, whether or
            not already completed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#obtrudeException(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.obtrudeException(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObtrudeValue">
      <MemberSignature Language="F#" Value="abstract member ObtrudeValue : Java.Lang.Object -&gt; unit&#xA;override this.ObtrudeValue : Java.Lang.Object -&gt; unit" Usage="completableFuture.ObtrudeValue value" />
      <MemberSignature Language="C#" Value="public virtual void ObtrudeValue (Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ObtrudeValue(class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ObtrudeValue(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("obtrudeValue", "(Ljava/lang/Object;)V", "GetObtrudeValue_Ljava_lang_Object_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">the completion value</param>
        <summary>Forcibly sets or resets the value subsequently returned by
            method <c>#get()</c> and related methods, whether or not
            already completed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#obtrudeValue(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.obtrudeValue(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrTimeout">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? OrTimeout (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage OrTimeout(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.OrTimeout(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("orTimeout", "(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;", "GetOrTimeout_JLjava_util_concurrent_TimeUnit_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">how long to wait before completing exceptionally
                   with a TimeoutException, in units of <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>timeout</c> parameter</param>
        <summary>Exceptionally completes this CompletableFuture with
            a <c>TimeoutException</c> if not otherwise completed
            before the given timeout.</summary>
        <returns>this CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#orTimeout(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.orTimeout(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterBoth">
      <MemberSignature Language="F#" Value="abstract member RunAfterBoth : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.RunAfterBoth : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.RunAfterBoth (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? RunAfterBoth (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterBoth(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAfterBoth(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.RunAfterBoth(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterBoth", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "GetRunAfterBoth_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterBothAsync">
      <MemberSignature Language="F#" Value="abstract member RunAfterBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.RunAfterBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.RunAfterBothAsync (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? RunAfterBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAfterBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.RunAfterBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "GetRunAfterBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterBothAsync">
      <MemberSignature Language="F#" Value="abstract member RunAfterBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.RunAfterBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.RunAfterBothAsync (other, action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? RunAfterBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAfterBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.RunAfterBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetRunAfterBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterEither">
      <MemberSignature Language="F#" Value="abstract member RunAfterEither : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.RunAfterEither : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.RunAfterEither (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? RunAfterEither (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterEither(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAfterEither(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.RunAfterEither(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterEither", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "GetRunAfterEither_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterEitherAsync">
      <MemberSignature Language="F#" Value="abstract member RunAfterEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.RunAfterEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.RunAfterEitherAsync (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? RunAfterEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAfterEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.RunAfterEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "GetRunAfterEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterEitherAsync">
      <MemberSignature Language="F#" Value="abstract member RunAfterEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.RunAfterEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.RunAfterEitherAsync (other, action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? RunAfterEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAfterEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.RunAfterEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetRunAfterEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAsync">
      <MemberSignature Language="F#" Value="static member RunAsync : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.RunAsync runnable" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? RunAsync (Java.Lang.IRunnable? runnable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture RunAsync(class Java.Lang.IRunnable runnable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAsync(Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAsync", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runnable">the action to run before completing the
            returned CompletableFuture</param>
        <summary>Returns a new CompletableFuture that is asynchronously completed
            by a task running in the <c>ForkJoinPool#commonPool()</c> after
            it runs the given action.</summary>
        <returns>the new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#runAsync(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.runAsync(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAsync">
      <MemberSignature Language="F#" Value="static member RunAsync : Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.RunAsync (runnable, executor)" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? RunAsync (Java.Lang.IRunnable? runnable, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture RunAsync(class Java.Lang.IRunnable runnable, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.RunAsync(Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAsync", "(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="runnable">the action to run before completing the
            returned CompletableFuture</param>
        <summary>Returns a new CompletableFuture that is asynchronously completed
            by a task running in the <c>ForkJoinPool#commonPool()</c> after
            it runs the given action.</summary>
        <returns>the new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#runAsync(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.runAsync(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplyAsync">
      <MemberSignature Language="F#" Value="static member SupplyAsync : Java.Util.Functions.ISupplier -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.SupplyAsync supplier" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? SupplyAsync (Java.Util.Functions.ISupplier? supplier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture SupplyAsync(class Java.Util.Functions.ISupplier supplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.SupplyAsync(Java.Util.Functions.ISupplier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supplyAsync", "(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="supplier">a function returning the value to be used
            to complete the returned CompletableFuture</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletableFuture that is asynchronously completed
            by a task running in the <c>ForkJoinPool#commonPool()</c> with
            the value obtained by calling the given Supplier.</summary>
        <returns>the new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#supplyAsync(java.util.function.Supplier)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplyAsync">
      <MemberSignature Language="F#" Value="static member SupplyAsync : Java.Util.Functions.ISupplier * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.CompletableFuture" Usage="Java.Util.Concurrent.CompletableFuture.SupplyAsync (supplier, executor)" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.CompletableFuture? SupplyAsync (Java.Util.Functions.ISupplier? supplier, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.CompletableFuture SupplyAsync(class Java.Util.Functions.ISupplier supplier, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.SupplyAsync(Java.Util.Functions.ISupplier,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supplyAsync", "(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supplier" Type="Java.Util.Functions.ISupplier" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="supplier">a function returning the value to be used
            to complete the returned CompletableFuture</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletableFuture that is asynchronously completed
            by a task running in the <c>ForkJoinPool#commonPool()</c> with
            the value obtained by calling the given Supplier.</summary>
        <returns>the new CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#supplyAsync(java.util.function.Supplier)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAccept">
      <MemberSignature Language="F#" Value="abstract member ThenAccept : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenAccept : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenAccept action" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenAccept (Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAccept(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenAccept(Java.Util.Functions.IConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenAccept(Java.Util.Functions.IConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAccept", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;", "GetThenAccept_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptAsync">
      <MemberSignature Language="F#" Value="abstract member ThenAcceptAsync : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenAcceptAsync : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenAcceptAsync action" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenAcceptAsync (Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptAsync(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenAcceptAsync(Java.Util.Functions.IConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenAcceptAsync(Java.Util.Functions.IConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptAsync", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;", "GetThenAcceptAsync_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptAsync">
      <MemberSignature Language="F#" Value="abstract member ThenAcceptAsync : Java.Util.Functions.IConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenAcceptAsync : Java.Util.Functions.IConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenAcceptAsync (action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenAcceptAsync (Java.Util.Functions.IConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptAsync(class Java.Util.Functions.IConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenAcceptAsync(Java.Util.Functions.IConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenAcceptAsync(Java.Util.Functions.IConsumer,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptAsync", "(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetThenAcceptAsync_Ljava_util_function_Consumer_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptBoth">
      <MemberSignature Language="F#" Value="abstract member ThenAcceptBoth : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenAcceptBoth : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenAcceptBoth (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenAcceptBoth (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptBoth(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenAcceptBoth(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenAcceptBoth(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptBoth", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;", "GetThenAcceptBoth_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptBothAsync">
      <MemberSignature Language="F#" Value="abstract member ThenAcceptBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenAcceptBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenAcceptBothAsync (other, action)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenAcceptBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenAcceptBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenAcceptBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;", "GetThenAcceptBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptBothAsync">
      <MemberSignature Language="F#" Value="abstract member ThenAcceptBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenAcceptBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenAcceptBothAsync (other, action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenAcceptBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenAcceptBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenAcceptBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetThenAcceptBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenApply">
      <MemberSignature Language="F#" Value="abstract member ThenApply : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenApply : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenApply fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenApply (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenApply(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenApply(Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenApply(Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenApply", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetThenApply_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenApplyAsync">
      <MemberSignature Language="F#" Value="abstract member ThenApplyAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenApplyAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenApplyAsync fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenApplyAsync (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenApplyAsync(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenApplyAsync(Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenApplyAsync(Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenApplyAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetThenApplyAsync_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenApplyAsync">
      <MemberSignature Language="F#" Value="abstract member ThenApplyAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenApplyAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenApplyAsync (fn, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenApplyAsync (Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenApplyAsync(class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenApplyAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenApplyAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenApplyAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetThenApplyAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCombine">
      <MemberSignature Language="F#" Value="abstract member ThenCombine : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenCombine : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenCombine (other, fn)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenCombine (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCombine(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenCombine(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenCombine(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCombine", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;", "GetThenCombine_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCombineAsync">
      <MemberSignature Language="F#" Value="abstract member ThenCombineAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenCombineAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenCombineAsync (other, fn)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenCombineAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCombineAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenCombineAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenCombineAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCombineAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;", "GetThenCombineAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCombineAsync">
      <MemberSignature Language="F#" Value="abstract member ThenCombineAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenCombineAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenCombineAsync (other, fn, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenCombineAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCombineAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenCombineAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenCombineAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCombineAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetThenCombineAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <param name="fn">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCompose">
      <MemberSignature Language="F#" Value="abstract member ThenCompose : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenCompose : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenCompose fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenCompose (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCompose(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenCompose(Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenCompose(Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCompose", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetThenCompose_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenComposeAsync">
      <MemberSignature Language="F#" Value="abstract member ThenComposeAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenComposeAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenComposeAsync fn" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenComposeAsync (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenComposeAsync(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenComposeAsync(Java.Util.Functions.IFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenComposeAsync(Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenComposeAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;", "GetThenComposeAsync_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenComposeAsync">
      <MemberSignature Language="F#" Value="abstract member ThenComposeAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenComposeAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenComposeAsync (fn, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenComposeAsync (Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenComposeAsync(class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenComposeAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenComposeAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenComposeAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetThenComposeAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenRun">
      <MemberSignature Language="F#" Value="abstract member ThenRun : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenRun : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenRun action" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenRun (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenRun(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenRun(Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenRun(Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenRun", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "GetThenRun_Ljava_lang_Runnable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenRunAsync">
      <MemberSignature Language="F#" Value="abstract member ThenRunAsync : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenRunAsync : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenRunAsync action" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenRunAsync (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenRunAsync(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenRunAsync(Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenRunAsync(Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenRunAsync", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;", "GetThenRunAsync_Ljava_lang_Runnable_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenRunAsync">
      <MemberSignature Language="F#" Value="abstract member ThenRunAsync : Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ThenRunAsync : Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.ThenRunAsync (action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ThenRunAsync (Java.Lang.IRunnable? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenRunAsync(class Java.Lang.IRunnable action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ThenRunAsync(Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ThenRunAsync(Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenRunAsync", "(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetThenRunAsync_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.CompletableFuture.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.CompletableFuture.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.CompletableFuture.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCompletableFuture">
      <MemberSignature Language="F#" Value="abstract member ToCompletableFuture : unit -&gt; Java.Util.Concurrent.CompletableFuture&#xA;override this.ToCompletableFuture : unit -&gt; Java.Util.Concurrent.CompletableFuture" Usage="completableFuture.ToCompletableFuture " />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.CompletableFuture? ToCompletableFuture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.CompletableFuture ToCompletableFuture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.ToCompletableFuture" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.ToCompletableFuture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toCompletableFuture", "()Ljava/util/concurrent/CompletableFuture;", "GetToCompletableFutureHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this CompletableFuture.</summary>
        <returns>this CompletableFuture</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletableFuture#toCompletableFuture()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletableFuture.toCompletableFuture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenComplete">
      <MemberSignature Language="F#" Value="abstract member WhenComplete : Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.WhenComplete : Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.WhenComplete action" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? WhenComplete (Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage WhenComplete(class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.WhenComplete(Java.Util.Functions.IBiConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.WhenComplete(Java.Util.Functions.IBiConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whenComplete", "(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;", "GetWhenComplete_Ljava_util_function_BiConsumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenCompleteAsync">
      <MemberSignature Language="F#" Value="abstract member WhenCompleteAsync : Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.WhenCompleteAsync : Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.WhenCompleteAsync action" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? WhenCompleteAsync (Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage WhenCompleteAsync(class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.WhenCompleteAsync(Java.Util.Functions.IBiConsumer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.WhenCompleteAsync(Java.Util.Functions.IBiConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whenCompleteAsync", "(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;", "GetWhenCompleteAsync_Ljava_util_function_BiConsumer_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenCompleteAsync">
      <MemberSignature Language="F#" Value="abstract member WhenCompleteAsync : Java.Util.Functions.IBiConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.WhenCompleteAsync : Java.Util.Functions.IBiConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="completableFuture.WhenCompleteAsync (action, executor)" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? WhenCompleteAsync (Java.Util.Functions.IBiConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage WhenCompleteAsync(class Java.Util.Functions.IBiConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.CompletableFuture.WhenCompleteAsync(Java.Util.Functions.IBiConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.ICompletionStage.WhenCompleteAsync(Java.Util.Functions.IBiConsumer,Java.Util.Concurrent.IExecutor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whenCompleteAsync", "(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;", "GetWhenCompleteAsync_Ljava_util_function_BiConsumer_Ljava_util_concurrent_Executor_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="executor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
