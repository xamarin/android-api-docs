<Type Name="IBlockingDeque" FullName="Java.Util.Concurrent.IBlockingDeque">
  <TypeSignature Language="C#" Value="public interface IBlockingDeque : IDisposable, Java.Interop.IJavaPeerable, Java.Util.Concurrent.IBlockingQueue, Java.Util.IDeque" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IBlockingDeque implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IIterable, class Java.Util.Concurrent.IBlockingQueue, class Java.Util.ICollection, class Java.Util.IDeque, class Java.Util.IQueue, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.IBlockingDeque" />
  <TypeSignature Language="F#" Value="type IBlockingDeque = interface&#xA;    interface IBlockingQueue&#xA;    interface IQueue&#xA;    interface ICollection&#xA;    interface IIterable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IDeque" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IIterable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IBlockingQueue</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IDeque</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IQueue</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/BlockingDeque", "", "Java.Util.Concurrent.IBlockingDequeInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/BlockingDeque", "", "Java.Util.Concurrent.IBlockingDequeInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "E" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "E" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <param name="&lt;E&gt;&lt;E&gt;">the type of elements held in this deque</param>
    <summary>A <c>Deque</c> that additionally supports blocking operations that wait
            for the deque to become non-empty when retrieving an element, and wait for
            space to become available in the deque when storing an element.</summary>
    <remarks>
      <para>A <c>Deque</c> that additionally supports blocking operations that wait
            for the deque to become non-empty when retrieving an element, and wait for
            space to become available in the deque when storing an element.</para>
      <para>
        <c>BlockingDeque</c> methods come in four forms, with different ways
            of handling operations that cannot be satisfied immediately, but may be
            satisfied at some point in the future:
            one throws an exception, the second returns a special value (either
            <c>null</c> or <c>false</c>, depending on the operation), the third
            blocks the current thread indefinitely until the operation can succeed,
            and the fourth blocks for only a given maximum time limit before giving
            up.  These methods are summarized in the following table:
            
            &lt;table class="plain"&gt;
            &lt;caption&gt;Summary of BlockingDeque methods&lt;/caption&gt;
             &lt;tr&gt;
               &lt;th id="First" colspan="5"&gt; First Element (Head)&lt;/th&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;td&gt;&lt;/td&gt;
               &lt;th id="FThrow" style="font-weight:normal; font-style: italic"&gt;Throws exception&lt;/th&gt;
               &lt;th id="FValue" style="font-weight:normal; font-style: italic"&gt;Special value&lt;/th&gt;
               &lt;th id="FBlock" style="font-weight:normal; font-style: italic"&gt;Blocks&lt;/th&gt;
               &lt;th id="FTimes" style="font-weight:normal; font-style: italic"&gt;Times out&lt;/th&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="FInsert" style="text-align:left"&gt;Insert&lt;/th&gt;
               &lt;td headers="First FInsert FThrow"&gt;<c>#addFirst(Object) addFirst(e)</c>&lt;/td&gt;
               &lt;td headers="First FInsert FValue"&gt;<c>#offerFirst(Object) offerFirst(e)</c>&lt;/td&gt;
               &lt;td headers="First FInsert FBlock"&gt;<c>#putFirst(Object) putFirst(e)</c>&lt;/td&gt;
               &lt;td headers="First FInsert FTimes"&gt;<c>#offerFirst(Object, long, TimeUnit) offerFirst(e, time, unit)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="FRemove" style="text-align:left"&gt;Remove&lt;/th&gt;
               &lt;td headers="First FRemove FThrow"&gt;<c>#removeFirst() removeFirst()</c>&lt;/td&gt;
               &lt;td headers="First FRemove FValue"&gt;<c>#pollFirst() pollFirst()</c>&lt;/td&gt;
               &lt;td headers="First FRemove FBlock"&gt;<c>#takeFirst() takeFirst()</c>&lt;/td&gt;
               &lt;td headers="First FRemove FTimes"&gt;<c>#pollFirst(long, TimeUnit) pollFirst(time, unit)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="FExamine" style="text-align:left"&gt;Examine&lt;/th&gt;
               &lt;td headers="First FExamine FThrow"&gt;<c>#getFirst() getFirst()</c>&lt;/td&gt;
               &lt;td headers="First FExamine FValue"&gt;<c>#peekFirst() peekFirst()</c>&lt;/td&gt;
               &lt;td headers="First FExamine FBlock" style="font-style:italic"&gt;not applicable&lt;/td&gt;
               &lt;td headers="First FExamine FTimes" style="font-style:italic"&gt;not applicable&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="Last" colspan="5"&gt; Last Element (Tail)&lt;/th&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;td&gt;&lt;/td&gt;
               &lt;th id="LThrow" style="font-weight:normal; font-style: italic"&gt;Throws exception&lt;/th&gt;
               &lt;th id="LValue" style="font-weight:normal; font-style: italic"&gt;Special value&lt;/th&gt;
               &lt;th id="LBlock" style="font-weight:normal; font-style: italic"&gt;Blocks&lt;/th&gt;
               &lt;th id="LTimes" style="font-weight:normal; font-style: italic"&gt;Times out&lt;/th&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="LInsert" style="text-align:left"&gt;Insert&lt;/th&gt;
               &lt;td headers="Last LInsert LThrow"&gt;<c>#addLast(Object) addLast(e)</c>&lt;/td&gt;
               &lt;td headers="Last LInsert LValue"&gt;<c>#offerLast(Object) offerLast(e)</c>&lt;/td&gt;
               &lt;td headers="Last LInsert LBlock"&gt;<c>#putLast(Object) putLast(e)</c>&lt;/td&gt;
               &lt;td headers="Last LInsert LTimes"&gt;<c>#offerLast(Object, long, TimeUnit) offerLast(e, time, unit)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="LRemove" style="text-align:left"&gt;Remove&lt;/th&gt;
               &lt;td headers="Last LRemove LThrow"&gt;<c>#removeLast() removeLast()</c>&lt;/td&gt;
               &lt;td headers="Last LRemove LValue"&gt;<c>#pollLast() pollLast()</c>&lt;/td&gt;
               &lt;td headers="Last LRemove LBlock"&gt;<c>#takeLast() takeLast()</c>&lt;/td&gt;
               &lt;td headers="Last LRemove LTimes"&gt;<c>#pollLast(long, TimeUnit) pollLast(time, unit)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="LExamine" style="text-align:left"&gt;Examine&lt;/th&gt;
               &lt;td headers="Last LExamine LThrow"&gt;<c>#getLast() getLast()</c>&lt;/td&gt;
               &lt;td headers="Last LExamine LValue"&gt;<c>#peekLast() peekLast()</c>&lt;/td&gt;
               &lt;td headers="Last LExamine LBlock" style="font-style:italic"&gt;not applicable&lt;/td&gt;
               &lt;td headers="Last LExamine LTimes" style="font-style:italic"&gt;not applicable&lt;/td&gt;
             &lt;/tr&gt;
            &lt;/table&gt;</para>
      <para>Like any <c>BlockingQueue</c>, a <c>BlockingDeque</c> is thread safe,
            does not permit null elements, and may (or may not) be
            capacity-constrained.</para>
      <para>A <c>BlockingDeque</c> implementation may be used directly as a FIFO
            <c>BlockingQueue</c>. The methods inherited from the
            <c>BlockingQueue</c> interface are precisely equivalent to
            <c>BlockingDeque</c> methods as indicated in the following table:
            
            &lt;table class="plain"&gt;
            &lt;caption&gt;Comparison of BlockingQueue and BlockingDeque methods&lt;/caption&gt;
             &lt;tr&gt;
               &lt;td&gt;&lt;/td&gt;
               &lt;th id="BQueue"&gt; <c>BlockingQueue</c> Method&lt;/th&gt;
               &lt;th id="BDeque"&gt; Equivalent <c>BlockingDeque</c> Method&lt;/th&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="Insert" rowspan="4" style="text-align:left; vertical-align:top"&gt;Insert&lt;/th&gt;
               &lt;th id="add" style="font-weight:normal; text-align:left"&gt;<c>#add(Object) add(e)</c>&lt;/th&gt;
               &lt;td headers="Insert BDeque add"&gt;<c>#addLast(Object) addLast(e)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="offer1" style="font-weight:normal; text-align:left"&gt;<c>#offer(Object) offer(e)</c>&lt;/th&gt;
               &lt;td headers="Insert BDeque offer1"&gt;<c>#offerLast(Object) offerLast(e)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="put" style="font-weight:normal; text-align:left"&gt;<c>#put(Object) put(e)</c>&lt;/th&gt;
               &lt;td headers="Insert BDeque put"&gt;<c>#putLast(Object) putLast(e)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="offer2" style="font-weight:normal; text-align:left"&gt;<c>#offer(Object, long, TimeUnit) offer(e, time, unit)</c>&lt;/th&gt;
               &lt;td headers="Insert BDeque offer2"&gt;<c>#offerLast(Object, long, TimeUnit) offerLast(e, time, unit)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="Remove" rowspan="4" style="text-align:left; vertical-align:top"&gt;Remove&lt;/th&gt;
               &lt;th id="remove" style="font-weight:normal; text-align:left"&gt;<c>#remove() remove()</c>&lt;/th&gt;
               &lt;td headers="Remove BDeque remove"&gt;<c>#removeFirst() removeFirst()</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="poll1" style="font-weight:normal; text-align:left"&gt;<c>#poll() poll()</c>&lt;/th&gt;
               &lt;td headers="Remove BDeque poll1"&gt;<c>#pollFirst() pollFirst()</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="take" style="font-weight:normal; text-align:left"&gt;<c>#take() take()</c>&lt;/th&gt;
               &lt;td headers="Remove BDeque take"&gt;<c>#takeFirst() takeFirst()</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="poll2" style="font-weight:normal; text-align:left"&gt;<c>#poll(long, TimeUnit) poll(time, unit)</c>&lt;/th&gt;
               &lt;td headers="Remove BDeque poll2"&gt;<c>#pollFirst(long, TimeUnit) pollFirst(time, unit)</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="Examine" rowspan="2" style="text-align:left; vertical-align:top"&gt;Examine&lt;/th&gt;
               &lt;th id="element" style="font-weight:normal; text-align:left"&gt;<c>#element() element()</c>&lt;/th&gt;
               &lt;td headers="Examine BDeque element"&gt;<c>#getFirst() getFirst()</c>&lt;/td&gt;
             &lt;/tr&gt;
             &lt;tr&gt;
               &lt;th id="peek" style="font-weight:normal; text-align:left"&gt;<c>#peek() peek()</c>&lt;/th&gt;
               &lt;td headers="Examine BDeque peek"&gt;<c>#peekFirst() peekFirst()</c>&lt;/td&gt;
             &lt;/tr&gt;
            &lt;/table&gt;</para>
      <para>Memory consistency effects: As with other concurrent
            collections, actions in a thread prior to placing an object into a
            <c>BlockingDeque</c>&lt;i&gt;happen-before&lt;/i&gt;
            actions subsequent to the access or removal of that element from
            the <c>BlockingDeque</c> in another thread.</para>
      <para>This interface is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.6.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Add(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.Add e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Add(Java.Lang.Object)</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Add(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("add", "(Ljava/lang/Object;)Z", "GetAdd_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("add", "(Ljava/lang/Object;)Z", "GetAdd_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque) if it is possible to do so
            immediately without violating capacity restrictions, returning
            <c>true</c> upon success and throwing an
            <c>IllegalStateException</c> if no space is currently available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque) if it is possible to do so
            immediately without violating capacity restrictions, returning
            <c>true</c> upon success and throwing an
            <c>IllegalStateException</c> if no space is currently available.
            When using a capacity-restricted deque, it is generally preferable to
            use <c>#offer(Object) offer</c>.</para>
          <para>This method is equivalent to <c>#addLast(Object) addLast</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#add(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.add(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFirst">
      <MemberSignature Language="C#" Value="public void AddFirst (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFirst(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.AddFirst(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member AddFirst : Java.Lang.Object -&gt; unit" Usage="iBlockingDeque.AddFirst e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.AddFirst(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addFirst", "(Ljava/lang/Object;)V", "GetAddFirst_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addFirst", "(Ljava/lang/Object;)V", "GetAddFirst_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element at the front of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            throwing an <c>IllegalStateException</c> if no space is currently
            available.</summary>
        <remarks>
          <para>Inserts the specified element at the front of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            throwing an <c>IllegalStateException</c> if no space is currently
            available.  When using a capacity-restricted deque, it is generally
            preferable to use <c>#offerFirst(Object) offerFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#addFirst(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.addFirst(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLast">
      <MemberSignature Language="C#" Value="public void AddLast (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLast(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.AddLast(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member AddLast : Java.Lang.Object -&gt; unit" Usage="iBlockingDeque.AddLast e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.AddLast(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addLast", "(Ljava/lang/Object;)V", "GetAddLast_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addLast", "(Ljava/lang/Object;)V", "GetAddLast_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element at the end of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            throwing an <c>IllegalStateException</c> if no space is currently
            available.</summary>
        <remarks>
          <para>Inserts the specified element at the end of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            throwing an <c>IllegalStateException</c> if no space is currently
            available.  When using a capacity-restricted deque, it is generally
            preferable to use <c>#offerLast(Object) offerLast</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#addLast(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.addLast(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Contains(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Contains : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.Contains o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Contains(Java.Lang.Object)</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Contains(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">object to be checked for containment in this deque</param>
        <summary>Returns <c>true</c> if this deque contains the specified element.</summary>
        <returns>
          <c>true</c> if this deque contains the specified element</returns>
        <remarks>
          <para>Returns <c>true</c> if this deque contains the specified element.
            More formally, returns <c>true</c> if and only if this deque contains
            at least one element <c>e</c> such that <c>o.equals(e)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#contains(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.contains(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ClassCastException">if the class of the specified element
         is incompatible with this deque
         ("../Collection.html#optional-restrictions"&gt;optional)</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified element is null
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)
</exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Element ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Element() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Element" />
      <MemberSignature Language="F#" Value="abstract member Element : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.Element " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IQueue.Element</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Element</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("element", "()Ljava/lang/Object;", "GetElementHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("element", "()Ljava/lang/Object;", "GetElementHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves, but does not remove, the head of the queue represented by
            this deque (in other words, the first element of this deque).</summary>
        <returns>the head of this deque</returns>
        <remarks>
          <para>Retrieves, but does not remove, the head of the queue represented by
            this deque (in other words, the first element of this deque).
            This method differs from <c>#peek() peek</c> only in that it throws an
            exception if this deque is empty.</para>
          <para>This method is equivalent to <c>#getFirst() getFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#element()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.element()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Util.NoSuchElementException">if this deque is empty
</exception>
      </Docs>
    </Member>
    <Member MemberName="Iterator">
      <MemberSignature Language="C#" Value="public Java.Util.IIterator? Iterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IIterator Iterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Iterator" />
      <MemberSignature Language="F#" Value="abstract member Iterator : unit -&gt; Java.Util.IIterator" Usage="iBlockingDeque.Iterator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.ICollection.Iterator</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Iterator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an iterator over the elements in this deque in proper sequence.</summary>
        <returns>an iterator over the elements in this deque in proper sequence</returns>
        <remarks>
          <para>Returns an iterator over the elements in this deque in proper sequence.
            The elements will be returned in order from first (head) to last (tail).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#iterator()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.iterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public bool Offer (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Offer(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Offer(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Offer : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.Offer e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Offer(Java.Lang.Object)</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Offer(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offer", "(Ljava/lang/Object;)Z", "GetOffer_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offer", "(Ljava/lang/Object;)Z", "GetOffer_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque) if it is possible to do so
            immediately without violating capacity restrictions, returning
            <c>true</c> upon success and <c>false</c> if no space is currently
            available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque) if it is possible to do so
            immediately without violating capacity restrictions, returning
            <c>true</c> upon success and <c>false</c> if no space is currently
            available.  When using a capacity-restricted deque, this method is
            generally preferable to the <c>#add</c> method, which can fail to
            insert an element only by throwing an exception.</para>
          <para>This method is equivalent to <c>#offerLast(Object) offerLast</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#offer(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.offer(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public bool Offer (Java.Lang.Object? e, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Offer(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Offer(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member Offer : Java.Lang.Object * int64 * Java.Util.Concurrent.TimeUnit -&gt; bool" Usage="iBlockingDeque.Offer (e, timeout, unit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Offer(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque), waiting up to the
            specified wait time if necessary for space to become available.</summary>
        <returns>
          <c>true</c> if the element was added to this deque, else
                    <c>false</c></returns>
        <remarks>
          <para>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque), waiting up to the
            specified wait time if necessary for space to become available.</para>
          <para>This method is equivalent to
            <c>#offerLast(Object,long,TimeUnit) offerLast</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#offer(E,%20long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.offer(E, long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfferFirst">
      <MemberSignature Language="C#" Value="public bool OfferFirst (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OfferFirst(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.OfferFirst(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member OfferFirst : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.OfferFirst e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.OfferFirst(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offerFirst", "(Ljava/lang/Object;)Z", "GetOfferFirst_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offerFirst", "(Ljava/lang/Object;)Z", "GetOfferFirst_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element at the front of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            returning <c>true</c> upon success and <c>false</c> if no space is
            currently available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Inserts the specified element at the front of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            returning <c>true</c> upon success and <c>false</c> if no space is
            currently available.
            When using a capacity-restricted deque, this method is generally
            preferable to the <c>#addFirst(Object) addFirst</c> method, which can
            fail to insert an element only by throwing an exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#offerFirst(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.offerFirst(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfferFirst">
      <MemberSignature Language="C#" Value="public bool OfferFirst (Java.Lang.Object? e, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OfferFirst(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.OfferFirst(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member OfferFirst : Java.Lang.Object * int64 * Java.Util.Concurrent.TimeUnit -&gt; bool" Usage="iBlockingDeque.OfferFirst (e, timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offerFirst", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOfferFirst_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offerFirst", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOfferFirst_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <param name="timeout">how long to wait before giving up, in units of
                   <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>timeout</c> parameter</param>
        <summary>Inserts the specified element at the front of this deque,
            waiting up to the specified wait time if necessary for space to
            become available.</summary>
        <returns>
          <c>true</c> if successful, or <c>false</c> if
                    the specified waiting time elapses before space is available</returns>
        <remarks>
          <para>Inserts the specified element at the front of this deque,
            waiting up to the specified wait time if necessary for space to
            become available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#offerFirst(E,%20long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.offerFirst(E, long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfferLast">
      <MemberSignature Language="C#" Value="public bool OfferLast (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OfferLast(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.OfferLast(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member OfferLast : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.OfferLast e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.OfferLast(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offerLast", "(Ljava/lang/Object;)Z", "GetOfferLast_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offerLast", "(Ljava/lang/Object;)Z", "GetOfferLast_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element at the end of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            returning <c>true</c> upon success and <c>false</c> if no space is
            currently available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Inserts the specified element at the end of this deque if it is
            possible to do so immediately without violating capacity restrictions,
            returning <c>true</c> upon success and <c>false</c> if no space is
            currently available.
            When using a capacity-restricted deque, this method is generally
            preferable to the <c>#addLast(Object) addLast</c> method, which can
            fail to insert an element only by throwing an exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#offerLast(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.offerLast(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfferLast">
      <MemberSignature Language="C#" Value="public bool OfferLast (Java.Lang.Object? e, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OfferLast(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.OfferLast(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member OfferLast : Java.Lang.Object * int64 * Java.Util.Concurrent.TimeUnit -&gt; bool" Usage="iBlockingDeque.OfferLast (e, timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offerLast", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOfferLast_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offerLast", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOfferLast_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <param name="timeout">how long to wait before giving up, in units of
                   <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>timeout</c> parameter</param>
        <summary>Inserts the specified element at the end of this deque,
            waiting up to the specified wait time if necessary for space to
            become available.</summary>
        <returns>
          <c>true</c> if successful, or <c>false</c> if
                    the specified waiting time elapses before space is available</returns>
        <remarks>
          <para>Inserts the specified element at the end of this deque,
            waiting up to the specified wait time if necessary for space to
            become available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#offerLast(E,%20long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.offerLast(E, long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Peek" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.Peek " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IQueue.Peek</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Peek</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("peek", "()Ljava/lang/Object;", "GetPeekHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("peek", "()Ljava/lang/Object;", "GetPeekHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves, but does not remove, the head of the queue represented by
            this deque (in other words, the first element of this deque), or
            returns <c>null</c> if this deque is empty.</summary>
        <returns>the head of this deque, or <c>null</c> if this deque is empty</returns>
        <remarks>
          <para>Retrieves, but does not remove, the head of the queue represented by
            this deque (in other words, the first element of this deque), or
            returns <c>null</c> if this deque is empty.</para>
          <para>This method is equivalent to <c>#peekFirst() peekFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#peek()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.peek()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Poll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Poll() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Poll" />
      <MemberSignature Language="F#" Value="abstract member Poll : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.Poll " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IQueue.Poll</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Poll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("poll", "()Ljava/lang/Object;", "GetPollHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("poll", "()Ljava/lang/Object;", "GetPollHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque), or returns
            <c>null</c> if this deque is empty.</summary>
        <returns>the head of this deque, or <c>null</c> if this deque is empty</returns>
        <remarks>
          <para>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque), or returns
            <c>null</c> if this deque is empty.</para>
          <para>This method is equivalent to <c>#pollFirst()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#poll()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.poll()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Poll (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Poll(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member Poll : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="iBlockingDeque.Poll (timeout, unit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("poll", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPoll_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("poll", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPoll_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">how long to wait before giving up, in units of
        <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
        <c>timeout</c> parameter</param>
        <summary>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque), waiting up to the
            specified wait time if necessary for an element to become available.</summary>
        <returns>the head of this deque, or <c>null</c> if the
                    specified waiting time elapses before an element is available</returns>
        <remarks>
          <para>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque), waiting up to the
            specified wait time if necessary for an element to become available.</para>
          <para>This method is equivalent to
            <c>#pollFirst(long,TimeUnit) pollFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#poll(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.poll(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
    <Member MemberName="PollFirst">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? PollFirst (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object PollFirst(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.PollFirst(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member PollFirst : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="iBlockingDeque.PollFirst (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pollFirst", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPollFirst_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pollFirst", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPollFirst_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">how long to wait before giving up, in units of
                   <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>timeout</c> parameter</param>
        <summary>Retrieves and removes the first element of this deque, waiting
            up to the specified wait time if necessary for an element to
            become available.</summary>
        <returns>the head of this deque, or <c>null</c> if the specified
                    waiting time elapses before an element is available</returns>
        <remarks>
          <para>Retrieves and removes the first element of this deque, waiting
            up to the specified wait time if necessary for an element to
            become available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#pollFirst(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.pollFirst(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
    <Member MemberName="PollLast">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? PollLast (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object PollLast(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.PollLast(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member PollLast : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="iBlockingDeque.PollLast (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pollLast", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPollLast_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pollLast", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPollLast_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">how long to wait before giving up, in units of
                   <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
                   <c>timeout</c> parameter</param>
        <summary>Retrieves and removes the last element of this deque, waiting
            up to the specified wait time if necessary for an element to
            become available.</summary>
        <returns>the tail of this deque, or <c>null</c> if the specified
                    waiting time elapses before an element is available</returns>
        <remarks>
          <para>Retrieves and removes the last element of this deque, waiting
            up to the specified wait time if necessary for an element to
            become available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#pollLast(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.pollLast(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Push(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Push(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Push : Java.Lang.Object -&gt; unit" Usage="iBlockingDeque.Push e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.Push(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("push", "(Ljava/lang/Object;)V", "GetPush_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("push", "(Ljava/lang/Object;)V", "GetPush_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Pushes an element onto the stack represented by this deque (in other
            words, at the head of this deque) if it is possible to do so
            immediately without violating capacity restrictions, throwing an
            <c>IllegalStateException</c> if no space is currently available.</summary>
        <remarks>
          <para>Pushes an element onto the stack represented by this deque (in other
            words, at the head of this deque) if it is possible to do so
            immediately without violating capacity restrictions, throwing an
            <c>IllegalStateException</c> if no space is currently available.</para>
          <para>This method is equivalent to <c>#addFirst(Object) addFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#push(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.push(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Put(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Put(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Put : Java.Lang.Object -&gt; unit" Usage="iBlockingDeque.Put e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Put(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/lang/Object;)V", "GetPut_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/lang/Object;)V", "GetPut_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque), waiting if necessary for
            space to become available.</summary>
        <remarks>
          <para>Inserts the specified element into the queue represented by this deque
            (in other words, at the tail of this deque), waiting if necessary for
            space to become available.</para>
          <para>This method is equivalent to <c>#putLast(Object) putLast</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#put(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.put(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutFirst">
      <MemberSignature Language="C#" Value="public void PutFirst (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutFirst(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.PutFirst(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member PutFirst : Java.Lang.Object -&gt; unit" Usage="iBlockingDeque.PutFirst e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putFirst", "(Ljava/lang/Object;)V", "GetPutFirst_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putFirst", "(Ljava/lang/Object;)V", "GetPutFirst_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element at the front of this deque,
            waiting if necessary for space to become available.</summary>
        <remarks>
          <para>Inserts the specified element at the front of this deque,
            waiting if necessary for space to become available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#putFirst(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.putFirst(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutLast">
      <MemberSignature Language="C#" Value="public void PutLast (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutLast(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.PutLast(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member PutLast : Java.Lang.Object -&gt; unit" Usage="iBlockingDeque.PutLast e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putLast", "(Ljava/lang/Object;)V", "GetPutLast_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putLast", "(Ljava/lang/Object;)V", "GetPutLast_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to add</param>
        <summary>Inserts the specified element at the end of this deque,
            waiting if necessary for space to become available.</summary>
        <remarks>
          <para>Inserts the specified element at the end of this deque,
            waiting if necessary for space to become available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#putLast(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.putLast(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Remove" />
      <MemberSignature Language="F#" Value="abstract member Remove : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.Remove " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IQueue.Remove</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Remove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "()Ljava/lang/Object;", "GetRemoveHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "()Ljava/lang/Object;", "GetRemoveHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque).</summary>
        <returns>the head of the queue represented by this deque</returns>
        <remarks>
          <para>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque).
            This method differs from <c>#poll() poll()</c> only in that it
            throws an exception if this deque is empty.</para>
          <para>This method is equivalent to <c>#removeFirst() removeFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#remove()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.remove()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Util.NoSuchElementException">if this deque is empty
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Remove(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Remove : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.Remove o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Remove(Java.Lang.Object)</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Remove(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">element to be removed from this deque, if present</param>
        <summary>Removes the first occurrence of the specified element from this deque.</summary>
        <returns>
          <c>true</c> if this deque changed as a result of the call</returns>
        <remarks>
          <para>Removes the first occurrence of the specified element from this deque.
            If the deque does not contain the element, it is unchanged.
            More formally, removes the first element <c>e</c> such that
            <c>o.equals(e)</c> (if such an element exists).
            Returns <c>true</c> if this deque contained the specified element
            (or equivalently, if this deque changed as a result of the call).</para>
          <para>This method is equivalent to
            <c>#removeFirstOccurrence(Object) removeFirstOccurrence</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#remove(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.remove(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ClassCastException">if the class of the specified element
         is incompatible with this deque
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified element is null
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFirstOccurrence">
      <MemberSignature Language="C#" Value="public bool RemoveFirstOccurrence (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveFirstOccurrence(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.RemoveFirstOccurrence(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member RemoveFirstOccurrence : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.RemoveFirstOccurrence o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.RemoveFirstOccurrence(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeFirstOccurrence", "(Ljava/lang/Object;)Z", "GetRemoveFirstOccurrence_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeFirstOccurrence", "(Ljava/lang/Object;)Z", "GetRemoveFirstOccurrence_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">element to be removed from this deque, if present</param>
        <summary>Removes the first occurrence of the specified element from this deque.</summary>
        <returns>
          <c>true</c> if an element was removed as a result of this call</returns>
        <remarks>
          <para>Removes the first occurrence of the specified element from this deque.
            If the deque does not contain the element, it is unchanged.
            More formally, removes the first element <c>e</c> such that
            <c>o.equals(e)</c> (if such an element exists).
            Returns <c>true</c> if this deque contained the specified element
            (or equivalently, if this deque changed as a result of the call).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#removeFirstOccurrence(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.removeFirstOccurrence(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ClassCastException">if the class of the specified element
         is incompatible with this deque
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified element is null
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLastOccurrence">
      <MemberSignature Language="C#" Value="public bool RemoveLastOccurrence (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveLastOccurrence(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.RemoveLastOccurrence(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member RemoveLastOccurrence : Java.Lang.Object -&gt; bool" Usage="iBlockingDeque.RemoveLastOccurrence o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IDeque.RemoveLastOccurrence(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeLastOccurrence", "(Ljava/lang/Object;)Z", "GetRemoveLastOccurrence_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeLastOccurrence", "(Ljava/lang/Object;)Z", "GetRemoveLastOccurrence_Ljava_lang_Object_Handler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">element to be removed from this deque, if present</param>
        <summary>Removes the last occurrence of the specified element from this deque.</summary>
        <returns>
          <c>true</c> if an element was removed as a result of this call</returns>
        <remarks>
          <para>Removes the last occurrence of the specified element from this deque.
            If the deque does not contain the element, it is unchanged.
            More formally, removes the last element <c>e</c> such that
            <c>o.equals(e)</c> (if such an element exists).
            Returns <c>true</c> if this deque contained the specified element
            (or equivalently, if this deque changed as a result of the call).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#removeLastOccurrence(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.removeLastOccurrence(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ClassCastException">if the class of the specified element
         is incompatible with this deque
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified element is null
         (<format type="text/html"><a href="http://developer.android.com/reference/../Collection.html#optional-restrictions">optional</a></format>)
</exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Size" />
      <MemberSignature Language="F#" Value="abstract member Size : unit -&gt; int" Usage="iBlockingDeque.Size " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.ICollection.Size</InterfaceMember>
        <InterfaceMember>M:Java.Util.IDeque.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("size", "()I", "GetSizeHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("size", "()I", "GetSizeHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of elements in this deque.</summary>
        <returns>the number of elements in this deque</returns>
        <remarks>
          <para>Returns the number of elements in this deque.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#size()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.size()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.Take" />
      <MemberSignature Language="F#" Value="abstract member Take : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.Take " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Take</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("take", "()Ljava/lang/Object;", "GetTakeHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("take", "()Ljava/lang/Object;", "GetTakeHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque), waiting if
            necessary until an element becomes available.</summary>
        <returns>the head of this deque</returns>
        <remarks>
          <para>Retrieves and removes the head of the queue represented by this deque
            (in other words, the first element of this deque), waiting if
            necessary until an element becomes available.</para>
          <para>This method is equivalent to <c>#takeFirst() takeFirst</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#take()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.take()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
    <Member MemberName="TakeFirst">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? TakeFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object TakeFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.TakeFirst" />
      <MemberSignature Language="F#" Value="abstract member TakeFirst : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.TakeFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeFirst", "()Ljava/lang/Object;", "GetTakeFirstHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeFirst", "()Ljava/lang/Object;", "GetTakeFirstHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the first element of this deque, waiting
            if necessary until an element becomes available.</summary>
        <returns>the head of this deque</returns>
        <remarks>
          <para>Retrieves and removes the first element of this deque, waiting
            if necessary until an element becomes available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#takeFirst()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.takeFirst()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
    <Member MemberName="TakeLast">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? TakeLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object TakeLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IBlockingDeque.TakeLast" />
      <MemberSignature Language="F#" Value="abstract member TakeLast : unit -&gt; Java.Lang.Object" Usage="iBlockingDeque.TakeLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeLast", "()Ljava/lang/Object;", "GetTakeLastHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeLast", "()Ljava/lang/Object;", "GetTakeLastHandler:Java.Util.Concurrent.IBlockingDequeInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the last element of this deque, waiting
            if necessary until an element becomes available.</summary>
        <returns>the tail of this deque</returns>
        <remarks>
          <para>Retrieves and removes the last element of this deque, waiting
            if necessary until an element becomes available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/BlockingDeque#takeLast()" title="Reference documentation">Java documentation for <code>java.util.concurrent.BlockingDeque.takeLast()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
