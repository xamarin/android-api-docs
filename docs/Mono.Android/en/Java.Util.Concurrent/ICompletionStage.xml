<Type Name="ICompletionStage" FullName="Java.Util.Concurrent.ICompletionStage">
  <TypeSignature Language="C#" Value="public interface ICompletionStage : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICompletionStage implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.ICompletionStage" />
  <TypeSignature Language="F#" Value="type ICompletionStage = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/CompletionStage", "", "Java.Util.Concurrent.ICompletionStageInvoker", ApiSince=24)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/CompletionStage", "", "Java.Util.Concurrent.ICompletionStageInvoker", ApiSince=24)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A stage of a possibly asynchronous computation, that performs an
            action or computes a value when another CompletionStage completes.</summary>
    <remarks>
      <para>A stage of a possibly asynchronous computation, that performs an
            action or computes a value when another CompletionStage completes.
            A stage completes upon termination of its computation, but this may
            in turn trigger other dependent stages.  The functionality defined
            in this interface takes only a few basic forms, which expand out to
            a larger set of methods to capture a range of usage styles:
            
            &lt;ul&gt;
            
            &lt;li&gt;The computation performed by a stage may be expressed as a
            Function, Consumer, or Runnable (using methods with names including
            &lt;em&gt;apply&lt;/em&gt;, &lt;em&gt;accept&lt;/em&gt;, or &lt;em&gt;run&lt;/em&gt;, respectively)
            depending on whether it requires arguments and/or produces results.
            For example:</para>
      <code lang="text/java">{@code
            stage.thenApply(x -&gt; square(x))
                 .thenAccept(x -&gt; System.out.print(x))
                 .thenRun(() -&gt; System.out.println());}</code>
      <para>An additional form (&lt;em&gt;compose&lt;/em&gt;) allows the construction of
            computation pipelines from functions returning completion stages.</para>
      <para>Any argument to a stage's computation is the outcome of a
            triggering stage's computation.
            
            &lt;li&gt;One stage's execution may be triggered by completion of a
            single stage, or both of two stages, or either of two stages.
            Dependencies on a single stage are arranged using methods with
            prefix &lt;em&gt;then&lt;/em&gt;. Those triggered by completion of
            &lt;em&gt;both&lt;/em&gt; of two stages may &lt;em&gt;combine&lt;/em&gt; their results or
            effects, using correspondingly named methods. Those triggered by
            &lt;em&gt;either&lt;/em&gt; of two stages make no guarantees about which of the
            results or effects are used for the dependent stage's computation.
            
            &lt;li&gt;Dependencies among stages control the triggering of
            computations, but do not otherwise guarantee any particular
            ordering. Additionally, execution of a new stage's computations may
            be arranged in any of three ways: default execution, default
            asynchronous execution (using methods with suffix &lt;em&gt;async&lt;/em&gt;
            that employ the stage's default asynchronous execution facility),
            or custom (via a supplied <c>Executor</c>).  The execution
            properties of default and async modes are specified by
            CompletionStage implementations, not this interface. Methods with
            explicit Executor arguments may have arbitrary execution
            properties, and might not even support concurrent execution, but
            are arranged for processing in a way that accommodates asynchrony.
            
            &lt;li&gt;Two method forms (<c>#handle handle</c> and <c>#whenComplete whenComplete</c>) support unconditional computation
            whether the triggering stage completed normally or exceptionally.
            Method <c>#exceptionally exceptionally</c> supports computation
            only when the triggering stage completes exceptionally, computing a
            replacement result, similarly to the java <c>catch</c> keyword.
            In all other cases, if a stage's computation terminates abruptly
            with an (unchecked) exception or error, then all dependent stages
            requiring its completion complete exceptionally as well, with a
            <c>CompletionException</c> holding the exception as its cause.  If
            a stage is dependent on &lt;em&gt;both&lt;/em&gt; of two stages, and both
            complete exceptionally, then the CompletionException may correspond
            to either one of these exceptions.  If a stage is dependent on
            &lt;em&gt;either&lt;/em&gt; of two others, and only one of them completes
            exceptionally, no guarantees are made about whether the dependent
            stage completes normally or exceptionally. In the case of method
            <c>whenComplete</c>, when the supplied action itself encounters an
            exception, then the stage completes exceptionally with this
            exception unless the source stage also completed exceptionally, in
            which case the exceptional completion from the source stage is
            given preference and propagated to the dependent stage.
            
            &lt;/ul&gt;</para>
      <para>All methods adhere to the above triggering, execution, and
            exceptional completion specifications (which are not repeated in
            individual method specifications). Additionally, while arguments
            used to pass a completion result (that is, for parameters of type
            <c>T</c>) for methods accepting them may be null, passing a null
            value for any other parameter will result in a <c>NullPointerException</c> being thrown.</para>
      <para>Method form <c>#handle handle</c> is the most general way of
            creating a continuation stage, unconditionally performing a
            computation that is given both the result and exception (if any) of
            the triggering CompletionStage, and computing an arbitrary result.
            Method <c>#whenComplete whenComplete</c> is similar, but preserves
            the result of the triggering stage instead of computing a new one.
            Because a stage's normal result may be <c>null</c>, both methods
            should have a computation structured thus:</para>
      <code lang="text/java">{@code (result, exception) -&gt; {
              if (exception == null) {
                // triggering stage completed normally
              } else {
                // triggering stage completed exceptionally
              }
            }}</code>
      <para>This interface does not define methods for initially creating,
            forcibly completing normally or exceptionally, probing completion
            status or results, or awaiting completion of a stage.
            Implementations of CompletionStage may provide means of achieving
            such effects, as appropriate.  Method <c>#toCompletableFuture</c>
            enables interoperability among different implementations of this
            interface by providing a common conversion type.</para>
      <para>Added in 1.8.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptEither">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? AcceptEither (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage AcceptEither(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.AcceptEither(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member AcceptEither : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.AcceptEither (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptEither", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetAcceptEither_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptEither", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetAcceptEither_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed with the
            corresponding result as argument to the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed with the
            corresponding result as argument to the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#acceptEither(java.util.concurrent.CompletionStage%3C?%20extends%20T%3E,%20java.util.function.Consumer%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.acceptEither(java.util.concurrent.CompletionStage&lt;? extends T&gt;, java.util.function.Consumer&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptEitherAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? AcceptEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage AcceptEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.AcceptEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member AcceptEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.AcceptEitherAsync (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetAcceptEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetAcceptEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using this
            stage's default asynchronous execution facility, with the
            corresponding result as argument to the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using this
            stage's default asynchronous execution facility, with the
            corresponding result as argument to the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#acceptEitherAsync(java.util.concurrent.CompletionStage%3C?%20extends%20T%3E,%20java.util.function.Consumer%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.acceptEitherAsync(java.util.concurrent.CompletionStage&lt;? extends T&gt;, java.util.function.Consumer&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptEitherAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? AcceptEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage AcceptEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.AcceptEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member AcceptEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.AcceptEitherAsync (other, action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetAcceptEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetAcceptEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Consumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using the
            supplied executor, with the corresponding result as argument to
            the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using the
            supplied executor, with the corresponding result as argument to
            the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#acceptEitherAsync(java.util.concurrent.CompletionStage%3C?%20extends%20T%3E,%20java.util.function.Consumer%3C?%20super%20T%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.acceptEitherAsync(java.util.concurrent.CompletionStage&lt;? extends T&gt;, java.util.function.Consumer&lt;? super T&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToEither">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ApplyToEither (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ApplyToEither(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ApplyToEither(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ApplyToEither : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ApplyToEither (other, fn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyToEither", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetApplyToEither_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyToEither", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetApplyToEither_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed with the
            corresponding result as argument to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed with the
            corresponding result as argument to the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#applyToEither(java.util.concurrent.CompletionStage%3C?%20extends%20T%3E,%20java.util.function.Function%3C?%20super%20T,%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.applyToEither(java.util.concurrent.CompletionStage&lt;? extends T&gt;, java.util.function.Function&lt;? super T, U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToEitherAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ApplyToEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ApplyToEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ApplyToEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ApplyToEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ApplyToEitherAsync (other, fn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyToEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetApplyToEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyToEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetApplyToEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using this
            stage's default asynchronous execution facility, with the
            corresponding result as argument to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using this
            stage's default asynchronous execution facility, with the
            corresponding result as argument to the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#applyToEitherAsync(java.util.concurrent.CompletionStage%3C?%20extends%20T%3E,%20java.util.function.Function%3C?%20super%20T,%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.applyToEitherAsync(java.util.concurrent.CompletionStage&lt;? extends T&gt;, java.util.function.Function&lt;? super T, U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToEitherAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ApplyToEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ApplyToEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ApplyToEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ApplyToEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ApplyToEitherAsync (other, fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyToEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetApplyToEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyToEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetApplyToEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using the
            supplied executor, with the corresponding result as argument to
            the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, is executed using the
            supplied executor, with the corresponding result as argument to
            the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#applyToEitherAsync(java.util.concurrent.CompletionStage%3C?%20extends%20T%3E,%20java.util.function.Function%3C?%20super%20T,%20U%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.applyToEitherAsync(java.util.concurrent.CompletionStage&lt;? extends T&gt;, java.util.function.Function&lt;? super T, U&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exceptionally">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? Exceptionally (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage Exceptionally(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.Exceptionally(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member Exceptionally : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.Exceptionally fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionally", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionally_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exceptionally", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionally_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage if this CompletionStage completed
            exceptionally</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            exceptionally, is executed with this stage's exception as the
            argument to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            exceptionally, is executed with this stage's exception as the
            argument to the supplied function.  Otherwise, if this stage
            completes normally, then the returned stage also completes
            normally with the same value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#exceptionally(java.util.function.Function%3Cjava.lang.Throwable,%20?%20extends%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.exceptionally(java.util.function.Function&lt;java.lang.Throwable, ? extends T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionallyAsync">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ExceptionallyAsync (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ExceptionallyAsync(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ExceptionallyAsync(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ExceptionallyAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ExceptionallyAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ExceptionallyAsync fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionallyAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exceptionallyAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage if this CompletionStage completed
            exceptionally</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            exceptionally, is executed with this stage's exception as the
            argument to the supplied function, using this stage's default
            asynchronous execution facility.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            exceptionally, is executed with this stage's exception as the
            argument to the supplied function, using this stage's default
            asynchronous execution facility.  Otherwise, if this stage
            completes normally, then the returned stage also completes
            normally with the same value.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#exceptionallyAsync(java.util.function.Function%3Cjava.lang.Throwable,%20?%20extends%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.exceptionallyAsync(java.util.function.Function&lt;java.lang.Throwable, ? extends T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionallyAsync">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ExceptionallyAsync (Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ExceptionallyAsync(class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ExceptionallyAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ExceptionallyAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ExceptionallyAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ExceptionallyAsync (fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionallyAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exceptionallyAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage if this CompletionStage completed
            exceptionally</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            exceptionally, is executed with this stage's exception as the
            argument to the supplied function, using the supplied Executor.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            exceptionally, is executed with this stage's exception as the
            argument to the supplied function, using the supplied Executor.
            Otherwise, if this stage completes normally, then the returned
            stage also completes normally with the same value.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#exceptionallyAsync(java.util.function.Function%3Cjava.lang.Throwable,%20?%20extends%20T%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.exceptionallyAsync(java.util.function.Function&lt;java.lang.Throwable, ? extends T&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionallyCompose">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ExceptionallyCompose (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ExceptionallyCompose(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ExceptionallyCompose(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ExceptionallyCompose : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ExceptionallyCompose : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ExceptionallyCompose fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionallyCompose", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyCompose_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exceptionallyCompose", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyCompose_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the returned
            CompletionStage if this CompletionStage completed exceptionally</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            exceptionally, is composed using the results of the supplied
            function applied to this stage's exception.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            exceptionally, is composed using the results of the supplied
            function applied to this stage's exception.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#exceptionallyCompose(java.util.function.Function%3Cjava.lang.Throwable,%20?%20extends%20java.util.concurrent.CompletionStage%3CT%3E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.exceptionallyCompose(java.util.function.Function&lt;java.lang.Throwable, ? extends java.util.concurrent.CompletionStage&lt;T&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionallyComposeAsync">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ExceptionallyComposeAsync (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ExceptionallyComposeAsync(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ExceptionallyComposeAsync(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ExceptionallyComposeAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ExceptionallyComposeAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ExceptionallyComposeAsync fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionallyComposeAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyComposeAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exceptionallyComposeAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyComposeAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the returned
            CompletionStage if this CompletionStage completed exceptionally</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            exceptionally, is composed using the results of the supplied
            function applied to this stage's exception, using this stage's
            default asynchronous execution facility.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            exceptionally, is composed using the results of the supplied
            function applied to this stage's exception, using this stage's
            default asynchronous execution facility.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#exceptionallyComposeAsync(java.util.function.Function%3Cjava.lang.Throwable,%20?%20extends%20java.util.concurrent.CompletionStage%3CT%3E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.exceptionallyComposeAsync(java.util.function.Function&lt;java.lang.Throwable, ? extends java.util.concurrent.CompletionStage&lt;T&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionallyComposeAsync">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.ICompletionStage? ExceptionallyComposeAsync (Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ExceptionallyComposeAsync(class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ExceptionallyComposeAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ExceptionallyComposeAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage&#xA;override this.ExceptionallyComposeAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ExceptionallyComposeAsync (fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exceptionallyComposeAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyComposeAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exceptionallyComposeAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetExceptionallyComposeAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStage, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the returned
            CompletionStage if this CompletionStage completed exceptionally</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            exceptionally, is composed using the results of the supplied
            function applied to this stage's exception, using the
            supplied Executor.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            exceptionally, is composed using the results of the supplied
            function applied to this stage's exception, using the
            supplied Executor.</para>
          <para>Added in 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#exceptionallyComposeAsync(java.util.function.Function%3Cjava.lang.Throwable,%20?%20extends%20java.util.concurrent.CompletionStage%3CT%3E%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.exceptionallyComposeAsync(java.util.function.Function&lt;java.lang.Throwable, ? extends java.util.concurrent.CompletionStage&lt;T&gt;&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? Handle (Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage Handle(class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.Handle(Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member Handle : Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.Handle fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handle", "(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetHandle_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handle", "(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetHandle_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            either normally or exceptionally, is executed with this stage's
            result and exception as arguments to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            either normally or exceptionally, is executed with this stage's
            result and exception as arguments to the supplied function.</para>
          <para>When this stage is complete, the given function is invoked
            with the result (or <c>null</c> if none) and the exception (or
            <c>null</c> if none) of this stage as arguments, and the
            function's result is used to complete the returned stage.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#handle(java.util.function.BiFunction%3C?%20super%20T,%20java.lang.Throwable,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.handle(java.util.function.BiFunction&lt;? super T, java.lang.Throwable, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? HandleAsync (Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage HandleAsync(class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.HandleAsync(Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member HandleAsync : Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.HandleAsync fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleAsync", "(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetHandleAsync_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handleAsync", "(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetHandleAsync_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            either normally or exceptionally, is executed using this stage's
            default asynchronous execution facility, with this stage's
            result and exception as arguments to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            either normally or exceptionally, is executed using this stage's
            default asynchronous execution facility, with this stage's
            result and exception as arguments to the supplied function.</para>
          <para>When this stage is complete, the given function is invoked
            with the result (or <c>null</c> if none) and the exception (or
            <c>null</c> if none) of this stage as arguments, and the
            function's result is used to complete the returned stage.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#handleAsync(java.util.function.BiFunction%3C?%20super%20T,%20java.lang.Throwable,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.handleAsync(java.util.function.BiFunction&lt;? super T, java.lang.Throwable, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? HandleAsync (Java.Util.Functions.IBiFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage HandleAsync(class Java.Util.Functions.IBiFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.HandleAsync(Java.Util.Functions.IBiFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member HandleAsync : Java.Util.Functions.IBiFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.HandleAsync (fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleAsync", "(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetHandleAsync_Ljava_util_function_BiFunction_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handleAsync", "(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetHandleAsync_Ljava_util_function_BiFunction_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            either normally or exceptionally, is executed using the
            supplied executor, with this stage's result and exception as
            arguments to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            either normally or exceptionally, is executed using the
            supplied executor, with this stage's result and exception as
            arguments to the supplied function.</para>
          <para>When this stage is complete, the given function is invoked
            with the result (or <c>null</c> if none) and the exception (or
            <c>null</c> if none) of this stage as arguments, and the
            function's result is used to complete the returned stage.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#handleAsync(java.util.function.BiFunction%3C?%20super%20T,%20java.lang.Throwable,%20?%20extends%20U%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.handleAsync(java.util.function.BiFunction&lt;? super T, java.lang.Throwable, ? extends U&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterBoth">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? RunAfterBoth (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterBoth(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.RunAfterBoth(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member RunAfterBoth : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.RunAfterBoth (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterBoth", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterBoth_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runAfterBoth", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterBoth_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, executes the given action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, executes the given action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#runAfterBoth(java.util.concurrent.CompletionStage%3C?%3E,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.runAfterBoth(java.util.concurrent.CompletionStage&lt;?&gt;, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterBothAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? RunAfterBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.RunAfterBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member RunAfterBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.RunAfterBothAsync (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runAfterBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, executes the given action
            using this stage's default asynchronous execution facility.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, executes the given action
            using this stage's default asynchronous execution facility.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#runAfterBothAsync(java.util.concurrent.CompletionStage%3C?%3E,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.runAfterBothAsync(java.util.concurrent.CompletionStage&lt;?&gt;, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterBothAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? RunAfterBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.RunAfterBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member RunAfterBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.RunAfterBothAsync (other, action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runAfterBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, executes the given action
            using the supplied executor.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, executes the given action
            using the supplied executor.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#runAfterBothAsync(java.util.concurrent.CompletionStage%3C?%3E,%20java.lang.Runnable,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.runAfterBothAsync(java.util.concurrent.CompletionStage&lt;?&gt;, java.lang.Runnable, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterEither">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? RunAfterEither (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterEither(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.RunAfterEither(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member RunAfterEither : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.RunAfterEither (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterEither", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterEither_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runAfterEither", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterEither_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, executes the given action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, executes the given action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#runAfterEither(java.util.concurrent.CompletionStage%3C?%3E,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.runAfterEither(java.util.concurrent.CompletionStage&lt;?&gt;, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterEitherAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? RunAfterEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.RunAfterEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member RunAfterEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.RunAfterEitherAsync (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runAfterEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, executes the given action
            using this stage's default asynchronous execution facility.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, executes the given action
            using this stage's default asynchronous execution facility.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#runAfterEitherAsync(java.util.concurrent.CompletionStage%3C?%3E,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.runAfterEitherAsync(java.util.concurrent.CompletionStage&lt;?&gt;, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAfterEitherAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? RunAfterEitherAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Lang.IRunnable? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage RunAfterEitherAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Lang.IRunnable action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.RunAfterEitherAsync(Java.Util.Concurrent.ICompletionStage,Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member RunAfterEitherAsync : Java.Util.Concurrent.ICompletionStage * Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.RunAfterEitherAsync (other, action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runAfterEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runAfterEitherAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetRunAfterEitherAsync_Ljava_util_concurrent_CompletionStage_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, executes the given action
            using the supplied executor.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when either this or the
            other given stage complete normally, executes the given action
            using the supplied executor.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#runAfterEitherAsync(java.util.concurrent.CompletionStage%3C?%3E,%20java.lang.Runnable,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.runAfterEitherAsync(java.util.concurrent.CompletionStage&lt;?&gt;, java.lang.Runnable, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAccept">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenAccept (Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAccept(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenAccept(Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ThenAccept : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenAccept action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAccept", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAccept_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenAccept", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAccept_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, is executed with this stage's result as the argument
            to the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, is executed with this stage's result as the argument
            to the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenAccept(java.util.function.Consumer%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenAccept(java.util.function.Consumer&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenAcceptAsync (Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptAsync(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenAcceptAsync(Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ThenAcceptAsync : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenAcceptAsync action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptAsync", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptAsync_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenAcceptAsync", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptAsync_Ljava_util_function_Consumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, is executed using this stage's default asynchronous
            execution facility, with this stage's result as the argument to
            the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, is executed using this stage's default asynchronous
            execution facility, with this stage's result as the argument to
            the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenAcceptAsync(java.util.function.Consumer%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenAcceptAsync(java.util.function.Consumer&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenAcceptAsync (Java.Util.Functions.IConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptAsync(class Java.Util.Functions.IConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenAcceptAsync(Java.Util.Functions.IConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ThenAcceptAsync : Java.Util.Functions.IConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenAcceptAsync (action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptAsync", "(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptAsync_Ljava_util_function_Consumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenAcceptAsync", "(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptAsync_Ljava_util_function_Consumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, is executed using the supplied Executor, with this
            stage's result as the argument to the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, is executed using the supplied Executor, with this
            stage's result as the argument to the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenAcceptAsync(java.util.function.Consumer%3C?%20super%20T%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenAcceptAsync(java.util.function.Consumer&lt;? super T&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptBoth">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenAcceptBoth (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptBoth(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenAcceptBoth(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ThenAcceptBoth : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenAcceptBoth (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptBoth", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptBoth_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenAcceptBoth", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptBoth_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the other CompletionStage's result</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed with the two
            results as arguments to the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed with the two
            results as arguments to the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenAcceptBoth(java.util.concurrent.CompletionStage%3C?%20extends%20U%3E,%20java.util.function.BiConsumer%3C?%20super%20T,%20?%20super%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenAcceptBoth(java.util.concurrent.CompletionStage&lt;? extends U&gt;, java.util.function.BiConsumer&lt;? super T, ? super U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptBothAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenAcceptBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenAcceptBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ThenAcceptBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenAcceptBothAsync (other, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenAcceptBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the other CompletionStage's result</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using this
            stage's default asynchronous execution facility, with the two
            results as arguments to the supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using this
            stage's default asynchronous execution facility, with the two
            results as arguments to the supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenAcceptBothAsync(java.util.concurrent.CompletionStage%3C?%20extends%20U%3E,%20java.util.function.BiConsumer%3C?%20super%20T,%20?%20super%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenAcceptBothAsync(java.util.concurrent.CompletionStage&lt;? extends U&gt;, java.util.function.BiConsumer&lt;? super T, ? super U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenAcceptBothAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenAcceptBothAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenAcceptBothAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenAcceptBothAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ThenAcceptBothAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenAcceptBothAsync (other, action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenAcceptBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenAcceptBothAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenAcceptBothAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiConsumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the other CompletionStage's result</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using the
            supplied executor, with the two results as arguments to the
            supplied action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using the
            supplied executor, with the two results as arguments to the
            supplied action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenAcceptBothAsync(java.util.concurrent.CompletionStage%3C?%20extends%20U%3E,%20java.util.function.BiConsumer%3C?%20super%20T,%20?%20super%20U%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenAcceptBothAsync(java.util.concurrent.CompletionStage&lt;? extends U&gt;, java.util.function.BiConsumer&lt;? super T, ? super U&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenApply">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenApply (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenApply(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenApply(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ThenApply : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenApply fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenApply", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenApply_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenApply", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenApply_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, is executed with this stage's result as the argument
            to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, is executed with this stage's result as the argument
            to the supplied function.</para>
          <para>This method is analogous to
            <c>java.util.Optional#map Optional.map</c> and
            <c>java.util.stream.Stream#map Stream.map</c>.</para>
          <para>See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenApply(java.util.function.Function%3C?%20super%20T,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenApply(java.util.function.Function&lt;? super T, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenApplyAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenApplyAsync (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenApplyAsync(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenApplyAsync(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ThenApplyAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenApplyAsync fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenApplyAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenApplyAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenApplyAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenApplyAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, is executed using this stage's default asynchronous
            execution facility, with this stage's result as the argument to
            the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, is executed using this stage's default asynchronous
            execution facility, with this stage's result as the argument to
            the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenApplyAsync(java.util.function.Function%3C?%20super%20T,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenApplyAsync(java.util.function.Function&lt;? super T, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenApplyAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenApplyAsync (Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenApplyAsync(class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenApplyAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ThenApplyAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenApplyAsync (fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenApplyAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenApplyAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenApplyAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenApplyAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <param name="&lt;U&gt;&lt;U&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, is executed using the supplied Executor, with this
            stage's result as the argument to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, is executed using the supplied Executor, with this
            stage's result as the argument to the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenApplyAsync(java.util.function.Function%3C?%20super%20T,%20?%20extends%20U%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenApplyAsync(java.util.function.Function&lt;? super T, ? extends U&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCombine">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenCombine (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCombine(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenCombine(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ThenCombine : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenCombine (other, fn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCombine", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetThenCombine_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenCombine", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetThenCombine_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the other CompletionStage's result</param>
        <param name="&lt;V&gt;&lt;V&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed with the two
            results as arguments to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed with the two
            results as arguments to the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenCombine(java.util.concurrent.CompletionStage%3C?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20T,%20?%20super%20U,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenCombine(java.util.concurrent.CompletionStage&lt;? extends U&gt;, java.util.function.BiFunction&lt;? super T, ? super U, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCombineAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenCombineAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCombineAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenCombineAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ThenCombineAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenCombineAsync (other, fn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCombineAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetThenCombineAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenCombineAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;", "GetThenCombineAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the other CompletionStage's result</param>
        <param name="&lt;V&gt;&lt;V&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using this
            stage's default asynchronous execution facility, with the two
            results as arguments to the supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using this
            stage's default asynchronous execution facility, with the two
            results as arguments to the supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenCombineAsync(java.util.concurrent.CompletionStage%3C?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20T,%20?%20super%20U,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenCombineAsync(java.util.concurrent.CompletionStage&lt;? extends U&gt;, java.util.function.BiFunction&lt;? super T, ? super U, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCombineAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenCombineAsync (Java.Util.Concurrent.ICompletionStage? other, Java.Util.Functions.IBiFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCombineAsync(class Java.Util.Concurrent.ICompletionStage other, class Java.Util.Functions.IBiFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenCombineAsync(Java.Util.Concurrent.ICompletionStage,Java.Util.Functions.IBiFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ThenCombineAsync : Java.Util.Concurrent.ICompletionStage * Java.Util.Functions.IBiFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenCombineAsync (other, fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCombineAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenCombineAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenCombineAsync", "(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenCombineAsync_Ljava_util_concurrent_CompletionStage_Ljava_util_function_BiFunction_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U", "V" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Concurrent.ICompletionStage" />
        <Parameter Name="fn" Type="Java.Util.Functions.IBiFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="other">the other CompletionStage</param>
        <param name="fn">the function to use to compute the value of the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the other CompletionStage's result</param>
        <param name="&lt;V&gt;&lt;V&gt;">the function's return type</param>
        <summary>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using the
            supplied executor, with the two results as arguments to the
            supplied function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this and the other
            given stage both complete normally, is executed using the
            supplied executor, with the two results as arguments to the
            supplied function.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenCombineAsync(java.util.concurrent.CompletionStage%3C?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20T,%20?%20super%20U,%20?%20extends%20V%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenCombineAsync(java.util.concurrent.CompletionStage&lt;? extends U&gt;, java.util.function.BiFunction&lt;? super T, ? super U, ? extends V&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenCompose">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenCompose (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenCompose(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenCompose(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ThenCompose : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenCompose fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenCompose", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenCompose_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenCompose", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenCompose_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute another CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the returned CompletionStage's result</param>
        <summary>Returns a new CompletionStage that is completed with the same
            value as the CompletionStage returned by the given function.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that is completed with the same
            value as the CompletionStage returned by the given function.</para>
          <para>When this stage completes normally, the given function is
            invoked with this stage's result as the argument, returning
            another CompletionStage.  When that stage completes normally,
            the CompletionStage returned by this method is completed with
            the same value.</para>
          <para>To ensure progress, the supplied function must arrange
            eventual completion of its result.</para>
          <para>This method is analogous to
            <c>java.util.Optional#flatMap Optional.flatMap</c> and
            <c>java.util.stream.Stream#flatMap Stream.flatMap</c>.</para>
          <para>See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenCompose(java.util.function.Function%3C?%20super%20T,%20?%20extends%20java.util.concurrent.CompletionStage%3CU%3E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenCompose(java.util.function.Function&lt;? super T, ? extends java.util.concurrent.CompletionStage&lt;U&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenComposeAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenComposeAsync (Java.Util.Functions.IFunction? fn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenComposeAsync(class Java.Util.Functions.IFunction fn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenComposeAsync(Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ThenComposeAsync : Java.Util.Functions.IFunction -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenComposeAsync fn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenComposeAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenComposeAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenComposeAsync", "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;", "GetThenComposeAsync_Ljava_util_function_Function_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute another CompletionStage</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the returned CompletionStage's result</param>
        <summary>Returns a new CompletionStage that is completed with the same
            value as the CompletionStage returned by the given function,
            executed using this stage's default asynchronous execution
            facility.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that is completed with the same
            value as the CompletionStage returned by the given function,
            executed using this stage's default asynchronous execution
            facility.</para>
          <para>When this stage completes normally, the given function is
            invoked with this stage's result as the argument, returning
            another CompletionStage.  When that stage completes normally,
            the CompletionStage returned by this method is completed with
            the same value.</para>
          <para>To ensure progress, the supplied function must arrange
            eventual completion of its result.</para>
          <para>See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenComposeAsync(java.util.function.Function%3C?%20super%20T,%20?%20extends%20java.util.concurrent.CompletionStage%3CU%3E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenComposeAsync(java.util.function.Function&lt;? super T, ? extends java.util.concurrent.CompletionStage&lt;U&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenComposeAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenComposeAsync (Java.Util.Functions.IFunction? fn, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenComposeAsync(class Java.Util.Functions.IFunction fn, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenComposeAsync(Java.Util.Functions.IFunction,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ThenComposeAsync : Java.Util.Functions.IFunction * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenComposeAsync (fn, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenComposeAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenComposeAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenComposeAsync", "(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenComposeAsync_Ljava_util_function_Function_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fn" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="fn">the function to use to compute another CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of the returned CompletionStage's result</param>
        <summary>Returns a new CompletionStage that is completed with the same
            value as the CompletionStage returned by the given function,
            executed using the supplied Executor.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that is completed with the same
            value as the CompletionStage returned by the given function,
            executed using the supplied Executor.</para>
          <para>When this stage completes normally, the given function is
            invoked with this stage's result as the argument, returning
            another CompletionStage.  When that stage completes normally,
            the CompletionStage returned by this method is completed with
            the same value.</para>
          <para>To ensure progress, the supplied function must arrange
            eventual completion of its result.</para>
          <para>See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenComposeAsync(java.util.function.Function%3C?%20super%20T,%20?%20extends%20java.util.concurrent.CompletionStage%3CU%3E%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenComposeAsync(java.util.function.Function&lt;? super T, ? extends java.util.concurrent.CompletionStage&lt;U&gt;&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenRun">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenRun (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenRun(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenRun(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member ThenRun : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenRun action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenRun", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetThenRun_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenRun", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetThenRun_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, executes the given action.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, executes the given action.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenRun(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenRun(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenRunAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenRunAsync (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenRunAsync(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenRunAsync(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member ThenRunAsync : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenRunAsync action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenRunAsync", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetThenRunAsync_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenRunAsync", "(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;", "GetThenRunAsync_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, executes the given action using this stage's default
            asynchronous execution facility.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, executes the given action using this stage's default
            asynchronous execution facility.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenRunAsync(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenRunAsync(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenRunAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? ThenRunAsync (Java.Lang.IRunnable? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage ThenRunAsync(class Java.Lang.IRunnable action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ThenRunAsync(Java.Lang.IRunnable,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member ThenRunAsync : Java.Lang.IRunnable * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.ThenRunAsync (action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("thenRunAsync", "(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenRunAsync_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("thenRunAsync", "(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetThenRunAsync_Ljava_lang_Runnable_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform before completing the
            returned CompletionStage</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage that, when this stage completes
            normally, executes the given action using the supplied Executor.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage that, when this stage completes
            normally, executes the given action using the supplied Executor.
            
            See the <c>CompletionStage</c> documentation for rules
            covering exceptional completion.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#thenRunAsync(java.lang.Runnable,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.thenRunAsync(java.lang.Runnable, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToCompletableFuture">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.CompletableFuture? ToCompletableFuture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.CompletableFuture ToCompletableFuture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.ToCompletableFuture" />
      <MemberSignature Language="F#" Value="abstract member ToCompletableFuture : unit -&gt; Java.Util.Concurrent.CompletableFuture" Usage="iCompletionStage.ToCompletableFuture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toCompletableFuture", "()Ljava/util/concurrent/CompletableFuture;", "GetToCompletableFutureHandler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toCompletableFuture", "()Ljava/util/concurrent/CompletableFuture;", "GetToCompletableFutureHandler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>CompletableFuture</c> maintaining the same
            completion properties as this stage.</summary>
        <returns>the CompletableFuture</returns>
        <remarks>
          <para>Returns a <c>CompletableFuture</c> maintaining the same
            completion properties as this stage. If this stage is already a
            CompletableFuture, this method may return this stage itself.
            Otherwise, invocation of this method may be equivalent in
            effect to <c>thenApply(x -&gt; x)</c>, but returning an instance
            of type <c>CompletableFuture</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#toCompletableFuture()" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.toCompletableFuture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenComplete">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? WhenComplete (Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage WhenComplete(class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.WhenComplete(Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="abstract member WhenComplete : Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.WhenComplete action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whenComplete", "(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetWhenComplete_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("whenComplete", "(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetWhenComplete_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform</param>
        <summary>Returns a new CompletionStage with the same result or exception as
            this stage, that executes the given action when this stage completes.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage with the same result or exception as
            this stage, that executes the given action when this stage completes.</para>
          <para>When this stage is complete, the given action is invoked
            with the result (or <c>null</c> if none) and the exception (or
            <c>null</c> if none) of this stage as arguments.  The returned
            stage is completed when the action returns.</para>
          <para>Unlike method <c>#handle handle</c>,
            this method is not designed to translate completion outcomes,
            so the supplied action should not throw an exception. However,
            if it does, the following rules apply: if this stage completed
            normally but the supplied action throws an exception, then the
            returned stage completes exceptionally with the supplied
            action's exception. Or, if this stage completed exceptionally
            and the supplied action throws an exception, then the returned
            stage completes exceptionally with this stage's exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#whenComplete(java.util.function.BiConsumer%3C?%20super%20T,%20?%20super%20java.lang.Throwable%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.whenComplete(java.util.function.BiConsumer&lt;? super T, ? super java.lang.Throwable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenCompleteAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? WhenCompleteAsync (Java.Util.Functions.IBiConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage WhenCompleteAsync(class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.WhenCompleteAsync(Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="abstract member WhenCompleteAsync : Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.WhenCompleteAsync action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whenCompleteAsync", "(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetWhenCompleteAsync_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("whenCompleteAsync", "(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;", "GetWhenCompleteAsync_Ljava_util_function_BiConsumer_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform</param>
        <summary>Returns a new CompletionStage with the same result or exception as
            this stage, that executes the given action using this stage's
            default asynchronous execution facility when this stage completes.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage with the same result or exception as
            this stage, that executes the given action using this stage's
            default asynchronous execution facility when this stage completes.</para>
          <para>When this stage is complete, the given action is invoked with the
            result (or <c>null</c> if none) and the exception (or <c>null</c>
            if none) of this stage as arguments.  The returned stage is completed
            when the action returns.</para>
          <para>Unlike method <c>#handleAsync(BiFunction) handleAsync</c>,
            this method is not designed to translate completion outcomes,
            so the supplied action should not throw an exception. However,
            if it does, the following rules apply: If this stage completed
            normally but the supplied action throws an exception, then the
            returned stage completes exceptionally with the supplied
            action's exception. Or, if this stage completed exceptionally
            and the supplied action throws an exception, then the returned
            stage completes exceptionally with this stage's exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#whenCompleteAsync(java.util.function.BiConsumer%3C?%20super%20T,%20?%20super%20java.lang.Throwable%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.whenCompleteAsync(java.util.function.BiConsumer&lt;? super T, ? super java.lang.Throwable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhenCompleteAsync">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ICompletionStage? WhenCompleteAsync (Java.Util.Functions.IBiConsumer? action, Java.Util.Concurrent.IExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ICompletionStage WhenCompleteAsync(class Java.Util.Functions.IBiConsumer action, class Java.Util.Concurrent.IExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ICompletionStage.WhenCompleteAsync(Java.Util.Functions.IBiConsumer,Java.Util.Concurrent.IExecutor)" />
      <MemberSignature Language="F#" Value="abstract member WhenCompleteAsync : Java.Util.Functions.IBiConsumer * Java.Util.Concurrent.IExecutor -&gt; Java.Util.Concurrent.ICompletionStage" Usage="iCompletionStage.WhenCompleteAsync (action, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whenCompleteAsync", "(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetWhenCompleteAsync_Ljava_util_function_BiConsumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("whenCompleteAsync", "(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;", "GetWhenCompleteAsync_Ljava_util_function_BiConsumer_Ljava_util_concurrent_Executor_Handler:Java.Util.Concurrent.ICompletionStageInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ICompletionStage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="action">the action to perform</param>
        <param name="executor">the executor to use for asynchronous execution</param>
        <summary>Returns a new CompletionStage with the same result or exception as
            this stage, that executes the given action using the supplied
            Executor when this stage completes.</summary>
        <returns>the new CompletionStage</returns>
        <remarks>
          <para>Returns a new CompletionStage with the same result or exception as
            this stage, that executes the given action using the supplied
            Executor when this stage completes.</para>
          <para>When this stage is complete, the given action is invoked with the
            result (or <c>null</c> if none) and the exception (or <c>null</c>
            if none) of this stage as arguments.  The returned stage is completed
            when the action returns.</para>
          <para>Unlike method <c>#handleAsync(BiFunction,Executor) handleAsync</c>,
            this method is not designed to translate completion outcomes,
            so the supplied action should not throw an exception. However,
            if it does, the following rules apply: If this stage completed
            normally but the supplied action throws an exception, then the
            returned stage completes exceptionally with the supplied
            action's exception. Or, if this stage completed exceptionally
            and the supplied action throws an exception, then the returned
            stage completes exceptionally with this stage's exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/CompletionStage#whenCompleteAsync(java.util.function.BiConsumer%3C?%20super%20T,%20?%20super%20java.lang.Throwable%3E,%20java.util.concurrent.Executor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.CompletionStage.whenCompleteAsync(java.util.function.BiConsumer&lt;? super T, ? super java.lang.Throwable&gt;, java.util.concurrent.Executor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
