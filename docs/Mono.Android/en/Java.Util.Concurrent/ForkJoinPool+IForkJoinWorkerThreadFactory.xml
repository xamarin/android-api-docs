<Type Name="ForkJoinPool+IForkJoinWorkerThreadFactory" FullName="Java.Util.Concurrent.ForkJoinPool+IForkJoinWorkerThreadFactory">
  <TypeSignature Language="C#" Value="public interface ForkJoinPool.IForkJoinWorkerThreadFactory : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit ForkJoinPool/IForkJoinWorkerThreadFactory implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.ForkJoinPool.IForkJoinWorkerThreadFactory" />
  <TypeSignature Language="F#" Value="type ForkJoinPool.IForkJoinWorkerThreadFactory = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory", "", "Java.Util.Concurrent.ForkJoinPool/IForkJoinWorkerThreadFactoryInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory", "", "Java.Util.Concurrent.ForkJoinPool/IForkJoinWorkerThreadFactoryInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Factory for creating new <c>ForkJoinWorkerThread</c>s.</summary>
    <remarks>
      <para>Factory for creating new <c>ForkJoinWorkerThread</c>s.
            A <c>ForkJoinWorkerThreadFactory</c> must be defined and used
            for <c>ForkJoinWorkerThread</c> subclasses that extend base
            functionality or initialize threads with different contexts.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.ForkJoinWorkerThreadFactory" title="Reference documentation">Java documentation for <code>java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NewThread">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.ForkJoinWorkerThread? NewThread (Java.Util.Concurrent.ForkJoinPool? pool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.ForkJoinWorkerThread NewThread(class Java.Util.Concurrent.ForkJoinPool pool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ForkJoinPool.IForkJoinWorkerThreadFactory.NewThread(Java.Util.Concurrent.ForkJoinPool)" />
      <MemberSignature Language="F#" Value="abstract member NewThread : Java.Util.Concurrent.ForkJoinPool -&gt; Java.Util.Concurrent.ForkJoinWorkerThread" Usage="iForkJoinWorkerThreadFactory.NewThread pool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newThread", "(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;", "GetNewThread_Ljava_util_concurrent_ForkJoinPool_Handler:Java.Util.Concurrent.ForkJoinPool/IForkJoinWorkerThreadFactoryInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newThread", "(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;", "GetNewThread_Ljava_util_concurrent_ForkJoinPool_Handler:Java.Util.Concurrent.ForkJoinPool/IForkJoinWorkerThreadFactoryInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.ForkJoinWorkerThread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pool" Type="Java.Util.Concurrent.ForkJoinPool" />
      </Parameters>
      <Docs>
        <param name="pool">the pool this thread works in</param>
        <summary>Returns a new worker thread operating in the given pool.</summary>
        <returns>the new worker thread, or <c>null</c> if the request
                    to create a thread is rejected</returns>
        <remarks>
          <para>Returns a new worker thread operating in the given pool.
            Returning null or throwing an exception may result in tasks
            never being executed.  If this method throws an exception,
            it is relayed to the caller of the method (for example
            <c>execute</c>) causing attempted thread creation. If this
            method returns null or throws an exception, it is not
            retried until the next attempted creation (for example
            another call to <c>execute</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.ForkJoinWorkerThreadFactory#newThread(java.util.concurrent.ForkJoinPool)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory.newThread(java.util.concurrent.ForkJoinPool)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
