<Type Name="ForkJoinPool+IManagedBlocker" FullName="Java.Util.Concurrent.ForkJoinPool+IManagedBlocker">
  <TypeSignature Language="C#" Value="public interface ForkJoinPool.IManagedBlocker : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit ForkJoinPool/IManagedBlocker implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.ForkJoinPool.IManagedBlocker" />
  <TypeSignature Language="VB.NET" Value="Public Interface ForkJoinPool.IManagedBlocker&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public: interface class ForkJoinPool::IManagedBlocker : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="F#" Value="type ForkJoinPool.IManagedBlocker = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/ForkJoinPool$ManagedBlocker", "", "Java.Util.Concurrent.ForkJoinPool/IManagedBlockerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/ForkJoinPool$ManagedBlocker", "", "Java.Util.Concurrent.ForkJoinPool/IManagedBlockerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface for extending managed parallelism for tasks running
            in <c>ForkJoinPool</c>s.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.ManagedBlocker" title="Reference documentation">Java documentation for <code>java.util.concurrent.ForkJoinPool.ManagedBlocker</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public bool Block ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Block() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ForkJoinPool.IManagedBlocker.Block" />
      <MemberSignature Language="VB.NET" Value="Public Function Block () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Block();" />
      <MemberSignature Language="F#" Value="abstract member Block : unit -&gt; bool" Usage="iManagedBlocker.Block " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("block", "()Z", "GetBlockHandler:Java.Util.Concurrent.ForkJoinPool/IManagedBlockerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("block", "()Z", "GetBlockHandler:Java.Util.Concurrent.ForkJoinPool/IManagedBlockerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Possibly blocks the current thread, for example waiting for
            a lock or condition.</summary>
        <returns>
          <c>true</c> if no additional blocking is necessary
            (i.e., if isReleasable would return true)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.ManagedBlocker#block()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ForkJoinPool.ManagedBlocker.block()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReleasable">
      <MemberSignature Language="C#" Value="public bool IsReleasable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReleasable" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.ForkJoinPool.IManagedBlocker.IsReleasable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReleasable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReleasable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReleasable : bool" Usage="Java.Util.Concurrent.ForkJoinPool.IManagedBlocker.IsReleasable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isReleasable", "()Z", "GetIsReleasableHandler:Java.Util.Concurrent.ForkJoinPool/IManagedBlockerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isReleasable", "()Z", "GetIsReleasableHandler:Java.Util.Concurrent.ForkJoinPool/IManagedBlockerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
