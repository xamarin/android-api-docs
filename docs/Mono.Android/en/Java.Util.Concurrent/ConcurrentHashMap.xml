<Type Name="ConcurrentHashMap" FullName="Java.Util.Concurrent.ConcurrentHashMap">
  <TypeSignature Language="C#" Value="public class ConcurrentHashMap : Java.Util.AbstractMap, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Util.Concurrent.IConcurrentMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrentHashMap extends Java.Util.AbstractMap implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Util.Concurrent.IConcurrentMap, class Java.Util.IMap, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.ConcurrentHashMap" />
  <TypeSignature Language="F#" Value="type ConcurrentHashMap = class&#xA;    inherit AbstractMap&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IConcurrentMap&#xA;    interface IMap" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.AbstractMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IConcurrentMap</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IMap</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/ConcurrentHashMap", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/ConcurrentHashMap", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "K", "V" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "K", "V" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;K&gt;&lt;K&gt;">the type of keys maintained by this map</param>
    <param name="&lt;V&gt;&lt;V&gt;">the type of mapped values</param>
    <summary>A hash table supporting full concurrency of retrievals and
            high expected concurrency for updates.</summary>
    <remarks>
      <para>A hash table supporting full concurrency of retrievals and
            high expected concurrency for updates. This class obeys the
            same functional specification as <c>java.util.Hashtable</c>, and
            includes versions of methods corresponding to each method of
            <c>Hashtable</c>. However, even though all operations are
            thread-safe, retrieval operations do &lt;em&gt;not&lt;/em&gt; entail locking,
            and there is &lt;em&gt;not&lt;/em&gt; any support for locking the entire table
            in a way that prevents all access.  This class is fully
            interoperable with <c>Hashtable</c> in programs that rely on its
            thread safety but not on its synchronization details.</para>
      <para>Retrieval operations (including <c>get</c>) generally do not
            block, so may overlap with update operations (including <c>put</c>
            and <c>remove</c>). Retrievals reflect the results of the most
            recently &lt;em&gt;completed&lt;/em&gt; update operations holding upon their
            onset. (More formally, an update operation for a given key bears a
            &lt;em&gt;happens-before&lt;/em&gt; relation with any (non-null) retrieval for
            that key reporting the updated value.)  For aggregate operations
            such as <c>putAll</c> and <c>clear</c>, concurrent retrievals may
            reflect insertion or removal of only some entries.  Similarly,
            Iterators, Spliterators and Enumerations return elements reflecting the
            state of the hash table at some point at or since the creation of the
            iterator/enumeration.  They do &lt;em&gt;not&lt;/em&gt; throw <c>java.util.ConcurrentModificationException ConcurrentModificationException</c>.
            However, iterators are designed to be used by only one thread at a time.
            Bear in mind that the results of aggregate status methods including
            <c>size</c>, <c>isEmpty</c>, and <c>containsValue</c> are typically
            useful only when a map is not undergoing concurrent updates in other threads.
            Otherwise the results of these methods reflect transient states
            that may be adequate for monitoring or estimation purposes, but not
            for program control.</para>
      <para>The table is dynamically expanded when there are too many
            collisions (i.e., keys that have distinct hash codes but fall into
            the same slot modulo the table size), with the expected average
            effect of maintaining roughly two bins per mapping (corresponding
            to a 0.75 load factor threshold for resizing). There may be much
            variance around this average as mappings are added and removed, but
            overall, this maintains a commonly accepted time/space tradeoff for
            hash tables.  However, resizing this or any other kind of hash
            table may be a relatively slow operation. When possible, it is a
            good idea to provide a size estimate as an optional <c>initialCapacity</c> constructor argument. An additional optional
            <c>loadFactor</c> constructor argument provides a further means of
            customizing initial table capacity by specifying the table density
            to be used in calculating the amount of space to allocate for the
            given number of elements.  Also, for compatibility with previous
            versions of this class, constructors may optionally specify an
            expected <c>concurrencyLevel</c> as an additional hint for
            internal sizing.  Note that using many keys with exactly the same
            <c>hashCode()</c> is a sure way to slow down performance of any
            hash table. To ameliorate impact, when keys are <c>Comparable</c>,
            this class may use comparison order among keys to help break ties.</para>
      <para>A <c>Set</c> projection of a ConcurrentHashMap may be created
            (using <c>#newKeySet()</c> or <c>#newKeySet(int)</c>), or viewed
            (using <c>#keySet(Object)</c> when only keys are of interest, and the
            mapped values are (perhaps transiently) not used or all take the
            same mapping value.</para>
      <para>A ConcurrentHashMap can be used as a scalable frequency map (a
            form of histogram or multiset) by using <c>java.util.concurrent.atomic.LongAdder</c> values and initializing via
            <c>#computeIfAbsent computeIfAbsent</c>. For example, to add a count
            to a <c>ConcurrentHashMap&lt;String,LongAdder&gt; freqs</c>, you can use
            <c>freqs.computeIfAbsent(key, k -&gt; new LongAdder()).increment();</c></para>
      <para>This class and its views and iterators implement all of the
            &lt;em&gt;optional&lt;/em&gt; methods of the <c>Map</c> and <c>Iterator</c>
            interfaces.</para>
      <para>Like <c>Hashtable</c> but unlike <c>HashMap</c>, this class
            does &lt;em&gt;not&lt;/em&gt; allow <c>null</c> to be used as a key or value.</para>
      <para>ConcurrentHashMaps support a set of sequential and parallel bulk
            operations that, unlike most <c>Stream</c> methods, are designed
            to be safely, and often sensibly, applied even with maps that are
            being concurrently updated by other threads; for example, when
            computing a snapshot summary of the values in a shared registry.
            There are three kinds of operation, each with four forms, accepting
            functions with keys, values, entries, and (key, value) pairs as
            arguments and/or return values. Because the elements of a
            ConcurrentHashMap are not ordered in any particular way, and may be
            processed in different orders in different parallel executions, the
            correctness of supplied functions should not depend on any
            ordering, or on any other objects or values that may transiently
            change while computation is in progress; and except for forEach
            actions, should ideally be side-effect-free. Bulk operations on
            <c>Map.Entry</c> objects do not support method <c>setValue</c>.
            
            &lt;ul&gt;
            &lt;li&gt;forEach: Performs a given action on each element.
            A variant form applies a given transformation on each element
            before performing the action.
            
            &lt;li&gt;search: Returns the first available non-null result of
            applying a given function on each element; skipping further
            search when a result is found.
            
            &lt;li&gt;reduce: Accumulates each element.  The supplied reduction
            function cannot rely on ordering (more formally, it should be
            both associative and commutative).  There are five variants:
            
            &lt;ul&gt;
            
            &lt;li&gt;Plain reductions. (There is not a form of this method for
            (key, value) function arguments since there is no corresponding
            return type.)
            
            &lt;li&gt;Mapped reductions that accumulate the results of a given
            function applied to each element.
            
            &lt;li&gt;Reductions to scalar doubles, longs, and ints, using a
            given basis value.
            
            &lt;/ul&gt;
            &lt;/ul&gt;</para>
      <para>These bulk operations accept a <c>parallelismThreshold</c>
            argument. Methods proceed sequentially if the current map size is
            estimated to be less than the given threshold. Using a value of
            <c>Long.MAX_VALUE</c> suppresses all parallelism.  Using a value
            of <c>1</c> results in maximal parallelism by partitioning into
            enough subtasks to fully utilize the <c>ForkJoinPool#commonPool()</c> that is used for all parallel
            computations. Normally, you would initially choose one of these
            extreme values, and then measure performance of using in-between
            values that trade off overhead versus throughput.</para>
      <para>The concurrency properties of bulk operations follow
            from those of ConcurrentHashMap: Any non-null result returned
            from <c>get(key)</c> and related access methods bears a
            happens-before relation with the associated insertion or
            update.  The result of any bulk operation reflects the
            composition of these per-element relations (but is not
            necessarily atomic with respect to the map as a whole unless it
            is somehow known to be quiescent).  Conversely, because keys
            and values in the map are never null, null serves as a reliable
            atomic indicator of the current lack of any result.  To
            maintain this property, null serves as an implicit basis for
            all non-scalar reduction operations. For the double, long, and
            int versions, the basis should be one that, when combined with
            any other value, returns that other value (more formally, it
            should be the identity element for the reduction). Most common
            reductions have these properties; for example, computing a sum
            with basis 0 or a minimum with basis MAX_VALUE.</para>
      <para>Search and transformation functions provided as arguments
            should similarly return null to indicate the lack of any result
            (in which case it is not used). In the case of mapped
            reductions, this also enables transformations to serve as
            filters, returning null (or, in the case of primitive
            specializations, the identity basis) if the element should not
            be combined. You can create compound transformations and
            filterings by composing them yourself under this "null means
            there is nothing there now" rule before using them in search or
            reduce operations.</para>
      <para>Methods accepting and/or returning Entry arguments maintain
            key-value associations. They may be useful for example when
            finding the key for the greatest value. Note that "plain" Entry
            arguments can be supplied using <c>new
            AbstractMap.SimpleEntry(k,v)</c>.</para>
      <para>Bulk operations may complete abruptly, throwing an
            exception encountered in the application of a supplied
            function. Bear in mind when handling such exceptions that other
            concurrently executing functions could also have thrown
            exceptions, or would have done so if the first exception had
            not occurred.</para>
      <para>Speedups for parallel compared to sequential forms are common
            but not guaranteed.  Parallel operations involving brief functions
            on small maps may execute more slowly than sequential forms if the
            underlying work to parallelize the computation is more expensive
            than the computation itself.  Similarly, parallelization may not
            lead to much actual parallelism if all processors are busy
            performing unrelated tasks.</para>
      <para>All arguments to all task methods must be non-null.</para>
      <para>This class is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new, empty map with the default initial table size (16).</summary>
        <remarks>
          <para>Creates a new, empty map with the default initial table size (16).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#ConcurrentHashMap()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (System.Collections.IDictionary m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.ConcurrentHashMap : System.Collections.IDictionary -&gt; Java.Util.Concurrent.ConcurrentHashMap" Usage="new Java.Util.Concurrent.ConcurrentHashMap m" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/Map;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/Map;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="m" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="m">the map</param>
        <summary>Creates a new map with the same mappings as the given map.</summary>
        <remarks>
          <para>Creates a new map with the same mappings as the given map.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#ConcurrentHashMap(java.util.Map%3C?%20extends%20K,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(java.util.Map&lt;? extends K, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.ConcurrentHashMap : int -&gt; Java.Util.Concurrent.ConcurrentHashMap" Usage="new Java.Util.Concurrent.ConcurrentHashMap initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">The implementation performs internal
            sizing to accommodate this many elements.</param>
        <summary>Creates a new, empty map with an initial table size
            accommodating the specified number of elements without the need
            to dynamically resize.</summary>
        <remarks>
          <para>Creates a new, empty map with an initial table size
            accommodating the specified number of elements without the need
            to dynamically resize.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#ConcurrentHashMap(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the initial capacity of
 elements is negative
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (int initialCapacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.ConcurrentHashMap : int * single -&gt; Java.Util.Concurrent.ConcurrentHashMap" Usage="new Java.Util.Concurrent.ConcurrentHashMap (initialCapacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity. The implementation
            performs internal sizing to accommodate this many elements,
            given the specified load factor.</param>
        <param name="loadFactor">the load factor (table density) for
            establishing the initial table size</param>
        <summary>Creates a new, empty map with an initial table size based on
            the given number of elements (<c>initialCapacity</c>) and
            initial table density (<c>loadFactor</c>).</summary>
        <remarks>
          <para>Creates a new, empty map with an initial table size based on
            the given number of elements (<c>initialCapacity</c>) and
            initial table density (<c>loadFactor</c>).</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#ConcurrentHashMap(int,%20float)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the initial capacity of
 elements is negative or the load factor is nonpositive</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConcurrentHashMap (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.ConcurrentHashMap : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.ConcurrentHashMap" Usage="new Java.Util.Concurrent.ConcurrentHashMap (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (int initialCapacity, float loadFactor, int concurrencyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor, int32 concurrencyLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.#ctor(System.Int32,System.Single,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.ConcurrentHashMap : int * single * int -&gt; Java.Util.Concurrent.ConcurrentHashMap" Usage="new Java.Util.Concurrent.ConcurrentHashMap (initialCapacity, loadFactor, concurrencyLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IFI)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IFI)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity. The implementation
            performs internal sizing to accommodate this many elements,
            given the specified load factor.</param>
        <param name="loadFactor">the load factor (table density) for
            establishing the initial table size</param>
        <param name="concurrencyLevel">the estimated number of concurrently
            updating threads. The implementation may use this value as
            a sizing hint.</param>
        <summary>Creates a new, empty map with an initial table size based on
            the given number of elements (<c>initialCapacity</c>), initial
            table density (<c>loadFactor</c>), and number of concurrently
            updating threads (<c>concurrencyLevel</c>).</summary>
        <remarks>
          <para>Creates a new, empty map with an initial table size based on
            the given number of elements (<c>initialCapacity</c>), initial
            table density (<c>loadFactor</c>), and number of concurrently
            updating threads (<c>concurrencyLevel</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#ConcurrentHashMap(int,%20float,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int, float, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the initial capacity is
 negative or the load factor or concurrencyLevel are
 nonpositive
</exception>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Compute (Java.Lang.Object key, Java.Util.Functions.IBiFunction remappingFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Compute(class Java.Lang.Object key, class Java.Util.Functions.IBiFunction remappingFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Compute(Java.Lang.Object,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member Compute : Java.Lang.Object * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.Compute : Java.Lang.Object * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.Compute (key, remappingFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#Compute(Java.Lang.Object,Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compute", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetCompute_Ljava_lang_Object_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compute", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetCompute_Ljava_lang_Object_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="remappingFunction" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="key">key with which the specified value is to be associated</param>
        <param name="remappingFunction">the function to compute a value</param>
        <summary>Attempts to compute a mapping for the specified key and its
            current mapped value (or <c>null</c> if there is no current
            mapping).</summary>
        <returns>the new value associated with the specified key, or null if none</returns>
        <remarks>
          <para>Attempts to compute a mapping for the specified key and its
            current mapped value (or <c>null</c> if there is no current
            mapping). The entire method invocation is performed atomically.
            The supplied function is invoked exactly once per invocation of
            this method.  Some attempted update operations on this map by
            other threads may be blocked while computation is in progress,
            so the computation should be short and simple.</para>
          <para>The remapping function must not modify this map during computation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#compute(K,%20java.util.function.BiFunction%3C?%20super%20K,%20?%20super%20V,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.compute(K, java.util.function.BiFunction&lt;? super K, ? super V, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeIfAbsent">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ComputeIfAbsent (Java.Lang.Object key, Java.Util.Functions.IFunction mappingFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ComputeIfAbsent(class Java.Lang.Object key, class Java.Util.Functions.IFunction mappingFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ComputeIfAbsent(Java.Lang.Object,Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member ComputeIfAbsent : Java.Lang.Object * Java.Util.Functions.IFunction -&gt; Java.Lang.Object&#xA;override this.ComputeIfAbsent : Java.Lang.Object * Java.Util.Functions.IFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ComputeIfAbsent (key, mappingFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#ComputeIfAbsent(Java.Lang.Object,Java.Util.Functions.IFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeIfAbsent", "(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;", "GetComputeIfAbsent_Ljava_lang_Object_Ljava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeIfAbsent", "(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;", "GetComputeIfAbsent_Ljava_lang_Object_Ljava_util_function_Function_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="mappingFunction" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="key">key with which the specified value is to be associated</param>
        <param name="mappingFunction">the function to compute a value</param>
        <summary>If the specified key is not already associated with a value,
            attempts to compute its value using the given mapping function
            and enters it into this map unless <c>null</c>.</summary>
        <returns>the current (existing or computed) value associated with
                    the specified key, or null if the computed value is null</returns>
        <remarks>
          <para>If the specified key is not already associated with a value,
            attempts to compute its value using the given mapping function
            and enters it into this map unless <c>null</c>.  The entire
            method invocation is performed atomically.  The supplied
            function is invoked exactly once per invocation of this method
            if the key is absent, else not at all.  Some attempted update
            operations on this map by other threads may be blocked while
            computation is in progress, so the computation should be short
            and simple.</para>
          <para>The mapping function must not modify this map during computation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#computeIfAbsent(K,%20java.util.function.Function%3C?%20super%20K,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.computeIfAbsent(K, java.util.function.Function&lt;? super K, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeIfPresent">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ComputeIfPresent (Java.Lang.Object key, Java.Util.Functions.IBiFunction remappingFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ComputeIfPresent(class Java.Lang.Object key, class Java.Util.Functions.IBiFunction remappingFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ComputeIfPresent(Java.Lang.Object,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ComputeIfPresent : Java.Lang.Object * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.ComputeIfPresent : Java.Lang.Object * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ComputeIfPresent (key, remappingFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#ComputeIfPresent(Java.Lang.Object,Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeIfPresent", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetComputeIfPresent_Ljava_lang_Object_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeIfPresent", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetComputeIfPresent_Ljava_lang_Object_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="remappingFunction" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="key">key with which a value may be associated</param>
        <param name="remappingFunction">the function to compute a value</param>
        <summary>If the value for the specified key is present, attempts to
            compute a new mapping given the key and its current mapped
            value.</summary>
        <returns>the new value associated with the specified key, or null if none</returns>
        <remarks>
          <para>If the value for the specified key is present, attempts to
            compute a new mapping given the key and its current mapped
            value.  The entire method invocation is performed atomically.
            The supplied function is invoked exactly once per invocation of
            this method if the key is present, else not at all.  Some
            attempted update operations on this map by other threads may be
            blocked while computation is in progress, so the computation
            should be short and simple.</para>
          <para>The remapping function must not modify this map during computation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#computeIfPresent(K,%20java.util.function.BiFunction%3C?%20super%20K,%20?%20super%20V,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.computeIfPresent(K, java.util.function.BiFunction&lt;? super K, ? super V, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Contains(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Contains : Java.Lang.Object -&gt; bool&#xA;override this.Contains : Java.Lang.Object -&gt; bool" Usage="concurrentHashMap.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">a value to search for</param>
        <summary>Tests if some key maps into the specified value in this table.</summary>
        <returns>
          <c>true</c> if and only if some key maps to the
                    <c>value</c> argument in this table as
                    determined by the <c>equals</c> method;
                    <c>false</c> otherwise</returns>
        <remarks>
          <para>Tests if some key maps into the specified value in this table.</para>
          <para>Note that this method is identical in functionality to
            <c>#containsValue(Object)</c>, and exists solely to ensure
            full compatibility with class <c>java.util.Hashtable</c>,
            which supported this method prior to introduction of the
            Java Collections Framework.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#contains(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.contains(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the specified value is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public virtual Java.Util.IEnumeration Elements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IEnumeration Elements() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Elements" />
      <MemberSignature Language="F#" Value="abstract member Elements : unit -&gt; Java.Util.IEnumeration&#xA;override this.Elements : unit -&gt; Java.Util.IEnumeration" Usage="concurrentHashMap.Elements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("elements", "()Ljava/util/Enumeration;", "GetElementsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("elements", "()Ljava/util/Enumeration;", "GetElementsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumeration of the values in this table.</summary>
        <returns>an enumeration of the values in this table</returns>
        <remarks>
          <para>Returns an enumeration of the values in this table.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#elements()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.elements()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EntrySet">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection EntrySet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ICollection EntrySet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.EntrySet" />
      <MemberSignature Language="F#" Value="override this.EntrySet : unit -&gt; System.Collections.ICollection" Usage="concurrentHashMap.EntrySet " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IMap.EntrySet</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("entrySet", "()Ljava/util/Set;", "GetEntrySetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("entrySet", "()Ljava/util/Set;", "GetEntrySetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Set</c> view of the mappings contained in this map.</summary>
        <returns>the set view</returns>
        <remarks>
          <para>Returns a <c>Set</c> view of the mappings contained in this map.
            The set is backed by the map, so changes to the map are
            reflected in the set, and vice-versa.  The set supports element
            removal, which removes the corresponding mapping from the map,
            via the <c>Iterator.remove</c>, <c>Set.remove</c>,
            <c>removeAll</c>, <c>retainAll</c>, and <c>clear</c>
            operations.</para>
          <para>The view's iterators and spliterators are
            &lt;i&gt;weakly consistent&lt;/i&gt;.</para>
          <para>The view's <c>spliterator</c> reports <c>Spliterator#CONCURRENT</c>,
            <c>Spliterator#DISTINCT</c>, and <c>Spliterator#NONNULL</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#entrySet()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.entrySet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public virtual void ForEach (Java.Util.Functions.IBiConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEach(class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEach(Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEach : Java.Util.Functions.IBiConsumer -&gt; unit&#xA;override this.ForEach : Java.Util.Functions.IBiConsumer -&gt; unit" Usage="concurrentHashMap.ForEach action" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#ForEach(Java.Util.Functions.IBiConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach", "(Ljava/util/function/BiConsumer;)V", "GetForEach_Ljava_util_function_BiConsumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach", "(Ljava/util/function/BiConsumer;)V", "GetForEach_Ljava_util_function_BiConsumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="action">the action</param>
        <summary>Performs the given action for each (key, value).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEach(long,%20java.util.function.BiConsumer)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEach(long, java.util.function.BiConsumer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public virtual void ForEach (long parallelismThreshold, Java.Util.Functions.IBiConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEach(int64 parallelismThreshold, class Java.Util.Functions.IBiConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEach(System.Int64,Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEach : int64 * Java.Util.Functions.IBiConsumer -&gt; unit&#xA;override this.ForEach : int64 * Java.Util.Functions.IBiConsumer -&gt; unit" Usage="concurrentHashMap.ForEach (parallelismThreshold, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach", "(JLjava/util/function/BiConsumer;)V", "GetForEach_JLjava_util_function_BiConsumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach", "(JLjava/util/function/BiConsumer;)V", "GetForEach_JLjava_util_function_BiConsumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="action" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="action">the action</param>
        <summary>Performs the given action for each (key, value).</summary>
        <remarks>
          <para>Performs the given action for each (key, value).</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEach(long,%20java.util.function.BiConsumer%3C?%20super%20K,%20?%20super%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEach(long, java.util.function.BiConsumer&lt;? super K, ? super V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public virtual void ForEach (long parallelismThreshold, Java.Util.Functions.IBiFunction transformer, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEach(int64 parallelismThreshold, class Java.Util.Functions.IBiFunction transformer, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEach(System.Int64,Java.Util.Functions.IBiFunction,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEach : int64 * Java.Util.Functions.IBiFunction * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEach : int64 * Java.Util.Functions.IBiFunction * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEach (parallelismThreshold, transformer, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach", "(JLjava/util/function/BiFunction;Ljava/util/function/Consumer;)V", "GetForEach_JLjava_util_function_BiFunction_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach", "(JLjava/util/function/BiFunction;Ljava/util/function/Consumer;)V", "GetForEach_JLjava_util_function_BiFunction_Ljava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IBiFunction" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case the action is not applied)</param>
        <param name="action">the action</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Performs the given action for each non-null transformation
            of each (key, value).</summary>
        <remarks>
          <para>Performs the given action for each non-null transformation
            of each (key, value).</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEach(long,%20java.util.function.BiFunction%3C?%20super%20K,%20?%20super%20V,%20?%20extends%20U%3E,%20java.util.function.Consumer%3C?%20super%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEach(long, java.util.function.BiFunction&lt;? super K, ? super V, ? extends U&gt;, java.util.function.Consumer&lt;? super U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachEntry">
      <MemberSignature Language="C#" Value="public virtual void ForEachEntry (long parallelismThreshold, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachEntry(int64 parallelismThreshold, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEachEntry(System.Int64,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEachEntry : int64 * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEachEntry : int64 * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEachEntry (parallelismThreshold, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEachEntry", "(JLjava/util/function/Consumer;)V", "GetForEachEntry_JLjava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEachEntry", "(JLjava/util/function/Consumer;)V", "GetForEachEntry_JLjava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="action">the action</param>
        <summary>Performs the given action for each entry.</summary>
        <remarks>
          <para>Performs the given action for each entry.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEachEntry(long,%20java.util.function.Consumer%3C?%20super%20java.util.Map.Entry%3CK,%20V%3E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEachEntry(long, java.util.function.Consumer&lt;? super java.util.Map.Entry&lt;K, V&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachEntry">
      <MemberSignature Language="C#" Value="public virtual void ForEachEntry (long parallelismThreshold, Java.Util.Functions.IFunction transformer, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachEntry(int64 parallelismThreshold, class Java.Util.Functions.IFunction transformer, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEachEntry(System.Int64,Java.Util.Functions.IFunction,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEachEntry : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEachEntry : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEachEntry (parallelismThreshold, transformer, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEachEntry", "(JLjava/util/function/Function;Ljava/util/function/Consumer;)V", "GetForEachEntry_JLjava_util_function_Function_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEachEntry", "(JLjava/util/function/Function;Ljava/util/function/Consumer;)V", "GetForEachEntry_JLjava_util_function_Function_Ljava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case the action is not applied)</param>
        <param name="action">the action</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Performs the given action for each non-null transformation
            of each entry.</summary>
        <remarks>
          <para>Performs the given action for each non-null transformation
            of each entry.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEachEntry(long,%20java.util.function.Function%3Cjava.util.Map.Entry%3CK,%20V%3E,%20?%20extends%20U%3E,%20java.util.function.Consumer%3C?%20super%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEachEntry(long, java.util.function.Function&lt;java.util.Map.Entry&lt;K, V&gt;, ? extends U&gt;, java.util.function.Consumer&lt;? super U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachKey">
      <MemberSignature Language="C#" Value="public virtual void ForEachKey (long parallelismThreshold, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachKey(int64 parallelismThreshold, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEachKey(System.Int64,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEachKey : int64 * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEachKey : int64 * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEachKey (parallelismThreshold, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEachKey", "(JLjava/util/function/Consumer;)V", "GetForEachKey_JLjava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEachKey", "(JLjava/util/function/Consumer;)V", "GetForEachKey_JLjava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="action">the action</param>
        <summary>Performs the given action for each key.</summary>
        <remarks>
          <para>Performs the given action for each key.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEachKey(long,%20java.util.function.Consumer%3C?%20super%20K%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEachKey(long, java.util.function.Consumer&lt;? super K&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachKey">
      <MemberSignature Language="C#" Value="public virtual void ForEachKey (long parallelismThreshold, Java.Util.Functions.IFunction transformer, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachKey(int64 parallelismThreshold, class Java.Util.Functions.IFunction transformer, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEachKey(System.Int64,Java.Util.Functions.IFunction,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEachKey : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEachKey : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEachKey (parallelismThreshold, transformer, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEachKey", "(JLjava/util/function/Function;Ljava/util/function/Consumer;)V", "GetForEachKey_JLjava_util_function_Function_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEachKey", "(JLjava/util/function/Function;Ljava/util/function/Consumer;)V", "GetForEachKey_JLjava_util_function_Function_Ljava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case the action is not applied)</param>
        <param name="action">the action</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Performs the given action for each non-null transformation
            of each key.</summary>
        <remarks>
          <para>Performs the given action for each non-null transformation
            of each key.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEachKey(long,%20java.util.function.Function%3C?%20super%20K,%20?%20extends%20U%3E,%20java.util.function.Consumer%3C?%20super%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEachKey(long, java.util.function.Function&lt;? super K, ? extends U&gt;, java.util.function.Consumer&lt;? super U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachValue">
      <MemberSignature Language="C#" Value="public virtual void ForEachValue (long parallelismThreshold, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachValue(int64 parallelismThreshold, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEachValue(System.Int64,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEachValue : int64 * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEachValue : int64 * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEachValue (parallelismThreshold, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEachValue", "(JLjava/util/function/Consumer;)V", "GetForEachValue_JLjava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEachValue", "(JLjava/util/function/Consumer;)V", "GetForEachValue_JLjava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="action">the action</param>
        <summary>Performs the given action for each value.</summary>
        <remarks>
          <para>Performs the given action for each value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEachValue(long,%20java.util.function.Consumer%3C?%20super%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEachValue(long, java.util.function.Consumer&lt;? super V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachValue">
      <MemberSignature Language="C#" Value="public virtual void ForEachValue (long parallelismThreshold, Java.Util.Functions.IFunction transformer, Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachValue(int64 parallelismThreshold, class Java.Util.Functions.IFunction transformer, class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ForEachValue(System.Int64,Java.Util.Functions.IFunction,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEachValue : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEachValue : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IConsumer -&gt; unit" Usage="concurrentHashMap.ForEachValue (parallelismThreshold, transformer, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEachValue", "(JLjava/util/function/Function;Ljava/util/function/Consumer;)V", "GetForEachValue_JLjava_util_function_Function_Ljava_util_function_Consumer_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEachValue", "(JLjava/util/function/Function;Ljava/util/function/Consumer;)V", "GetForEachValue_JLjava_util_function_Function_Ljava_util_function_Consumer_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case the action is not applied)</param>
        <param name="action">the action</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Performs the given action for each non-null transformation
            of each value.</summary>
        <remarks>
          <para>Performs the given action for each non-null transformation
            of each value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#forEachValue(long,%20java.util.function.Function%3C?%20super%20V,%20?%20extends%20U%3E,%20java.util.function.Consumer%3C?%20super%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.forEachValue(long, java.util.function.Function&lt;? super V, ? extends U&gt;, java.util.function.Consumer&lt;? super U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrDefault">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetOrDefault (Java.Lang.Object key, Java.Lang.Object? defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetOrDefault(class Java.Lang.Object key, class Java.Lang.Object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.GetOrDefault(Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetOrDefault : Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object&#xA;override this.GetOrDefault : Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object" Usage="concurrentHashMap.GetOrDefault (key, defaultValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#GetOrDefault(Java.Lang.Object,Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOrDefault", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetGetOrDefault_Ljava_lang_Object_Ljava_lang_Object_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOrDefault", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetGetOrDefault_Ljava_lang_Object_Ljava_lang_Object_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="defaultValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">the key whose associated value is to be returned</param>
        <param name="defaultValue">the value to return if this map contains
            no mapping for the given key</param>
        <summary>Returns the value to which the specified key is mapped, or the
            given default value if this map contains no mapping for the
            key.</summary>
        <returns>the mapping for the key, if present; else the default value</returns>
        <remarks>
          <para>Returns the value to which the specified key is mapped, or the
            given default value if this map contains no mapping for the
            key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#getOrDefault(java.lang.Object,%20V)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.getOrDefault(java.lang.Object, V)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.ConcurrentHashMap.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.ConcurrentHashMap.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual Java.Util.IEnumeration Keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IEnumeration Keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Keys" />
      <MemberSignature Language="F#" Value="abstract member Keys : unit -&gt; Java.Util.IEnumeration&#xA;override this.Keys : unit -&gt; Java.Util.IEnumeration" Usage="concurrentHashMap.Keys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keys", "()Ljava/util/Enumeration;", "GetKeysHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keys", "()Ljava/util/Enumeration;", "GetKeysHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumeration of the keys in this table.</summary>
        <returns>an enumeration of the keys in this table</returns>
        <remarks>
          <para>Returns an enumeration of the keys in this table.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#keys()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.keys()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MappingCount">
      <MemberSignature Language="C#" Value="public virtual long MappingCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 MappingCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.MappingCount" />
      <MemberSignature Language="F#" Value="abstract member MappingCount : unit -&gt; int64&#xA;override this.MappingCount : unit -&gt; int64" Usage="concurrentHashMap.MappingCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mappingCount", "()J", "GetMappingCountHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mappingCount", "()J", "GetMappingCountHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of mappings.</summary>
        <returns>the number of mappings</returns>
        <remarks>
          <para>Returns the number of mappings. This method should be used
            instead of <c>#size</c> because a ConcurrentHashMap may
            contain more mappings than can be represented as an int. The
            value returned is an estimate; the actual count may differ if
            there are concurrent insertions or removals.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#mappingCount()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.mappingCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Merge (Java.Lang.Object key, Java.Lang.Object value, Java.Util.Functions.IBiFunction remappingFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Merge(class Java.Lang.Object key, class Java.Lang.Object value, class Java.Util.Functions.IBiFunction remappingFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Merge(Java.Lang.Object,Java.Lang.Object,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member Merge : Java.Lang.Object * Java.Lang.Object * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.Merge : Java.Lang.Object * Java.Lang.Object * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.Merge (key, value, remappingFunction)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#Merge(Java.Lang.Object,Java.Lang.Object,Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("merge", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetMerge_Ljava_lang_Object_Ljava_lang_Object_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("merge", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetMerge_Ljava_lang_Object_Ljava_lang_Object_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
        <Parameter Name="remappingFunction" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="key">key with which the specified value is to be associated</param>
        <param name="value">the value to use if absent</param>
        <param name="remappingFunction">the function to recompute a value if present</param>
        <summary>If the specified key is not already associated with a
            (non-null) value, associates it with the given value.</summary>
        <returns>the new value associated with the specified key, or null if none</returns>
        <remarks>
          <para>If the specified key is not already associated with a
            (non-null) value, associates it with the given value.
            Otherwise, replaces the value with the results of the given
            remapping function, or removes if <c>null</c>. The entire
            method invocation is performed atomically.  Some attempted
            update operations on this map by other threads may be blocked
            while computation is in progress, so the computation should be
            short and simple, and must not attempt to update any other
            mappings of this Map.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#merge(K,%20V,%20java.util.function.BiFunction%3C?%20super%20V,%20?%20super%20V,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.merge(K, V, java.util.function.BiFunction&lt;? super V, ? super V, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutIfAbsent">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? PutIfAbsent (Java.Lang.Object key, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object PutIfAbsent(class Java.Lang.Object key, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.PutIfAbsent(Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member PutIfAbsent : Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object&#xA;override this.PutIfAbsent : Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object" Usage="concurrentHashMap.PutIfAbsent (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.PutIfAbsent(Java.Lang.Object,Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putIfAbsent", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetPutIfAbsent_Ljava_lang_Object_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putIfAbsent", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetPutIfAbsent_Ljava_lang_Object_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added</summary>
        <returns>the previous value associated with the specified key,
                    or <c>null</c> if there was no mapping for the key</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#putIfAbsent(K,%20V)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.putIfAbsent(K, V)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Reduce (long parallelismThreshold, Java.Util.Functions.IBiFunction transformer, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Reduce(int64 parallelismThreshold, class Java.Util.Functions.IBiFunction transformer, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Reduce(System.Int64,Java.Util.Functions.IBiFunction,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member Reduce : int64 * Java.Util.Functions.IBiFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.Reduce : int64 * Java.Util.Functions.IBiFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.Reduce (parallelismThreshold, transformer, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduce", "(JLjava/util/function/BiFunction;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduce_JLjava_util_function_BiFunction_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduce", "(JLjava/util/function/BiFunction;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduce_JLjava_util_function_BiFunction_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IBiFunction" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case it is not combined)</param>
        <param name="reducer">a commutative associative combining function</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, or null if none.</summary>
        <returns>the result of accumulating the given transformation
            of all (key, value) pairs</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, or null if none.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduce(long,%20java.util.function.BiFunction%3C?%20super%20K,%20?%20super%20V,%20?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20U,%20?%20super%20U,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduce(long, java.util.function.BiFunction&lt;? super K, ? super V, ? extends U&gt;, java.util.function.BiFunction&lt;? super U, ? super U, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceEntries">
      <MemberSignature Language="C#" Value="public virtual Java.Util.IMapEntry? ReduceEntries (long parallelismThreshold, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IMapEntry ReduceEntries(int64 parallelismThreshold, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceEntries(System.Int64,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReduceEntries : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Util.IMapEntry&#xA;override this.ReduceEntries : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Util.IMapEntry" Usage="concurrentHashMap.ReduceEntries (parallelismThreshold, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceEntries", "(JLjava/util/function/BiFunction;)Ljava/util/Map$Entry;", "GetReduceEntries_JLjava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceEntries", "(JLjava/util/function/BiFunction;)Ljava/util/Map$Entry;", "GetReduceEntries_JLjava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IMapEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating all entries using the
            given reducer to combine values, or null if none.</summary>
        <returns>the result of accumulating all entries</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceEntries(long,%20java.util.function.BiFunction)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceEntries(long, java.util.function.BiFunction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceEntries">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ReduceEntries (long parallelismThreshold, Java.Util.Functions.IFunction transformer, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReduceEntries(int64 parallelismThreshold, class Java.Util.Functions.IFunction transformer, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceEntries(System.Int64,Java.Util.Functions.IFunction,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReduceEntries : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.ReduceEntries : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ReduceEntries (parallelismThreshold, transformer, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceEntries", "(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceEntries_JLjava_util_function_Function_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceEntries", "(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceEntries_JLjava_util_function_Function_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case it is not combined)</param>
        <param name="reducer">a commutative associative combining function</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            or null if none.</summary>
        <returns>the result of accumulating the given transformation
            of all entries</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            or null if none.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceEntries(long,%20java.util.function.Function%3Cjava.util.Map.Entry%3CK,%20V%3E,%20?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20U,%20?%20super%20U,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceEntries(long, java.util.function.Function&lt;java.util.Map.Entry&lt;K, V&gt;, ? extends U&gt;, java.util.function.BiFunction&lt;? super U, ? super U, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceEntriesToDouble">
      <MemberSignature Language="C#" Value="public virtual double ReduceEntriesToDouble (long parallelismThreshold, Java.Util.Functions.IToDoubleFunction transformer, double basis, Java.Util.Functions.IDoubleBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReduceEntriesToDouble(int64 parallelismThreshold, class Java.Util.Functions.IToDoubleFunction transformer, float64 basis, class Java.Util.Functions.IDoubleBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceEntriesToDouble(System.Int64,Java.Util.Functions.IToDoubleFunction,System.Double,Java.Util.Functions.IDoubleBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceEntriesToDouble : int64 * Java.Util.Functions.IToDoubleFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double&#xA;override this.ReduceEntriesToDouble : int64 * Java.Util.Functions.IToDoubleFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double" Usage="concurrentHashMap.ReduceEntriesToDouble (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceEntriesToDouble", "(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceEntriesToDouble_JLjava_util_function_ToDoubleFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceEntriesToDouble", "(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceEntriesToDouble_JLjava_util_function_ToDoubleFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToDoubleFunction" />
        <Parameter Name="basis" Type="System.Double" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IDoubleBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all entries</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceEntriesToDouble(long,%20java.util.function.ToDoubleFunction%3Cjava.util.Map.Entry%3CK,%20V%3E%3E,%20double,%20java.util.function.DoubleBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceEntriesToDouble(long, java.util.function.ToDoubleFunction&lt;java.util.Map.Entry&lt;K, V&gt;&gt;, double, java.util.function.DoubleBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceEntriesToInt">
      <MemberSignature Language="C#" Value="public virtual int ReduceEntriesToInt (long parallelismThreshold, Java.Util.Functions.IToIntFunction transformer, int basis, Java.Util.Functions.IIntBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReduceEntriesToInt(int64 parallelismThreshold, class Java.Util.Functions.IToIntFunction transformer, int32 basis, class Java.Util.Functions.IIntBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceEntriesToInt(System.Int64,Java.Util.Functions.IToIntFunction,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceEntriesToInt : int64 * Java.Util.Functions.IToIntFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int&#xA;override this.ReduceEntriesToInt : int64 * Java.Util.Functions.IToIntFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="concurrentHashMap.ReduceEntriesToInt (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceEntriesToInt", "(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceEntriesToInt_JLjava_util_function_ToIntFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceEntriesToInt", "(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceEntriesToInt_JLjava_util_function_ToIntFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToIntFunction" />
        <Parameter Name="basis" Type="System.Int32" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all entries</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceEntriesToInt(long,%20java.util.function.ToIntFunction%3Cjava.util.Map.Entry%3CK,%20V%3E%3E,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceEntriesToInt(long, java.util.function.ToIntFunction&lt;java.util.Map.Entry&lt;K, V&gt;&gt;, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceEntriesToLong">
      <MemberSignature Language="C#" Value="public virtual long ReduceEntriesToLong (long parallelismThreshold, Java.Util.Functions.IToLongFunction transformer, long basis, Java.Util.Functions.ILongBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReduceEntriesToLong(int64 parallelismThreshold, class Java.Util.Functions.IToLongFunction transformer, int64 basis, class Java.Util.Functions.ILongBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceEntriesToLong(System.Int64,Java.Util.Functions.IToLongFunction,System.Int64,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceEntriesToLong : int64 * Java.Util.Functions.IToLongFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64&#xA;override this.ReduceEntriesToLong : int64 * Java.Util.Functions.IToLongFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64" Usage="concurrentHashMap.ReduceEntriesToLong (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceEntriesToLong", "(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceEntriesToLong_JLjava_util_function_ToLongFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceEntriesToLong", "(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceEntriesToLong_JLjava_util_function_ToLongFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToLongFunction" />
        <Parameter Name="basis" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all entries</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all entries using the given reducer to combine values,
            and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceEntriesToLong(long,%20java.util.function.ToLongFunction%3Cjava.util.Map.Entry%3CK,%20V%3E%3E,%20long,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceEntriesToLong(long, java.util.function.ToLongFunction&lt;java.util.Map.Entry&lt;K, V&gt;&gt;, long, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceKeys">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ReduceKeys (long parallelismThreshold, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReduceKeys(int64 parallelismThreshold, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceKeys(System.Int64,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReduceKeys : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.ReduceKeys : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ReduceKeys (parallelismThreshold, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceKeys", "(JLjava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceKeys_JLjava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceKeys", "(JLjava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceKeys_JLjava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating all keys using the given
            reducer to combine values, or null if none.</summary>
        <returns>the result of accumulating all keys using the given
            reducer to combine values, or null if none</returns>
        <remarks>
          <para>Returns the result of accumulating all keys using the given
            reducer to combine values, or null if none.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceKeys(long,%20java.util.function.BiFunction%3C?%20super%20K,%20?%20super%20K,%20?%20extends%20K%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceKeys(long, java.util.function.BiFunction&lt;? super K, ? super K, ? extends K&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceKeys">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ReduceKeys (long parallelismThreshold, Java.Util.Functions.IFunction transformer, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReduceKeys(int64 parallelismThreshold, class Java.Util.Functions.IFunction transformer, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceKeys(System.Int64,Java.Util.Functions.IFunction,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReduceKeys : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.ReduceKeys : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ReduceKeys (parallelismThreshold, transformer, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceKeys", "(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceKeys_JLjava_util_function_Function_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceKeys", "(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceKeys_JLjava_util_function_Function_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case it is not combined)</param>
        <param name="reducer">a commutative associative combining function</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, or
            null if none.</summary>
        <returns>the result of accumulating the given transformation
            of all keys</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, or
            null if none.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceKeys(long,%20java.util.function.Function%3C?%20super%20K,%20?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20U,%20?%20super%20U,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceKeys(long, java.util.function.Function&lt;? super K, ? extends U&gt;, java.util.function.BiFunction&lt;? super U, ? super U, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceKeysToDouble">
      <MemberSignature Language="C#" Value="public virtual double ReduceKeysToDouble (long parallelismThreshold, Java.Util.Functions.IToDoubleFunction transformer, double basis, Java.Util.Functions.IDoubleBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReduceKeysToDouble(int64 parallelismThreshold, class Java.Util.Functions.IToDoubleFunction transformer, float64 basis, class Java.Util.Functions.IDoubleBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceKeysToDouble(System.Int64,Java.Util.Functions.IToDoubleFunction,System.Double,Java.Util.Functions.IDoubleBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceKeysToDouble : int64 * Java.Util.Functions.IToDoubleFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double&#xA;override this.ReduceKeysToDouble : int64 * Java.Util.Functions.IToDoubleFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double" Usage="concurrentHashMap.ReduceKeysToDouble (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceKeysToDouble", "(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceKeysToDouble_JLjava_util_function_ToDoubleFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceKeysToDouble", "(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceKeysToDouble_JLjava_util_function_ToDoubleFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToDoubleFunction" />
        <Parameter Name="basis" Type="System.Double" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IDoubleBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, and
            the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all keys</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, and
            the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceKeysToDouble(long,%20java.util.function.ToDoubleFunction%3C?%20super%20K%3E,%20double,%20java.util.function.DoubleBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceKeysToDouble(long, java.util.function.ToDoubleFunction&lt;? super K&gt;, double, java.util.function.DoubleBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceKeysToInt">
      <MemberSignature Language="C#" Value="public virtual int ReduceKeysToInt (long parallelismThreshold, Java.Util.Functions.IToIntFunction transformer, int basis, Java.Util.Functions.IIntBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReduceKeysToInt(int64 parallelismThreshold, class Java.Util.Functions.IToIntFunction transformer, int32 basis, class Java.Util.Functions.IIntBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceKeysToInt(System.Int64,Java.Util.Functions.IToIntFunction,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceKeysToInt : int64 * Java.Util.Functions.IToIntFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int&#xA;override this.ReduceKeysToInt : int64 * Java.Util.Functions.IToIntFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="concurrentHashMap.ReduceKeysToInt (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceKeysToInt", "(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceKeysToInt_JLjava_util_function_ToIntFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceKeysToInt", "(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceKeysToInt_JLjava_util_function_ToIntFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToIntFunction" />
        <Parameter Name="basis" Type="System.Int32" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, and
            the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all keys</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, and
            the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceKeysToInt(long,%20java.util.function.ToIntFunction%3C?%20super%20K%3E,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceKeysToInt(long, java.util.function.ToIntFunction&lt;? super K&gt;, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceKeysToLong">
      <MemberSignature Language="C#" Value="public virtual long ReduceKeysToLong (long parallelismThreshold, Java.Util.Functions.IToLongFunction transformer, long basis, Java.Util.Functions.ILongBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReduceKeysToLong(int64 parallelismThreshold, class Java.Util.Functions.IToLongFunction transformer, int64 basis, class Java.Util.Functions.ILongBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceKeysToLong(System.Int64,Java.Util.Functions.IToLongFunction,System.Int64,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceKeysToLong : int64 * Java.Util.Functions.IToLongFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64&#xA;override this.ReduceKeysToLong : int64 * Java.Util.Functions.IToLongFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64" Usage="concurrentHashMap.ReduceKeysToLong (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceKeysToLong", "(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceKeysToLong_JLjava_util_function_ToLongFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceKeysToLong", "(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceKeysToLong_JLjava_util_function_ToLongFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToLongFunction" />
        <Parameter Name="basis" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, and
            the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all keys</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all keys using the given reducer to combine values, and
            the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceKeysToLong(long,%20java.util.function.ToLongFunction%3C?%20super%20K%3E,%20long,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceKeysToLong(long, java.util.function.ToLongFunction&lt;? super K&gt;, long, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceToDouble">
      <MemberSignature Language="C#" Value="public virtual double ReduceToDouble (long parallelismThreshold, Java.Util.Functions.IToDoubleBiFunction transformer, double basis, Java.Util.Functions.IDoubleBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReduceToDouble(int64 parallelismThreshold, class Java.Util.Functions.IToDoubleBiFunction transformer, float64 basis, class Java.Util.Functions.IDoubleBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceToDouble(System.Int64,Java.Util.Functions.IToDoubleBiFunction,System.Double,Java.Util.Functions.IDoubleBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceToDouble : int64 * Java.Util.Functions.IToDoubleBiFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double&#xA;override this.ReduceToDouble : int64 * Java.Util.Functions.IToDoubleBiFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double" Usage="concurrentHashMap.ReduceToDouble (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceToDouble", "(JLjava/util/function/ToDoubleBiFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceToDouble_JLjava_util_function_ToDoubleBiFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceToDouble", "(JLjava/util/function/ToDoubleBiFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceToDouble_JLjava_util_function_ToDoubleBiFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToDoubleBiFunction" />
        <Parameter Name="basis" Type="System.Double" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IDoubleBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all (key, value) pairs</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceToDouble(long,%20java.util.function.ToDoubleBiFunction%3C?%20super%20K,%20?%20super%20V%3E,%20double,%20java.util.function.DoubleBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceToDouble(long, java.util.function.ToDoubleBiFunction&lt;? super K, ? super V&gt;, double, java.util.function.DoubleBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceToInt">
      <MemberSignature Language="C#" Value="public virtual int ReduceToInt (long parallelismThreshold, Java.Util.Functions.IToIntBiFunction transformer, int basis, Java.Util.Functions.IIntBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReduceToInt(int64 parallelismThreshold, class Java.Util.Functions.IToIntBiFunction transformer, int32 basis, class Java.Util.Functions.IIntBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceToInt(System.Int64,Java.Util.Functions.IToIntBiFunction,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceToInt : int64 * Java.Util.Functions.IToIntBiFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int&#xA;override this.ReduceToInt : int64 * Java.Util.Functions.IToIntBiFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="concurrentHashMap.ReduceToInt (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceToInt", "(JLjava/util/function/ToIntBiFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceToInt_JLjava_util_function_ToIntBiFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceToInt", "(JLjava/util/function/ToIntBiFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceToInt_JLjava_util_function_ToIntBiFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToIntBiFunction" />
        <Parameter Name="basis" Type="System.Int32" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all (key, value) pairs</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceToInt(long,%20java.util.function.ToIntBiFunction%3C?%20super%20K,%20?%20super%20V%3E,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceToInt(long, java.util.function.ToIntBiFunction&lt;? super K, ? super V&gt;, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceToLong">
      <MemberSignature Language="C#" Value="public virtual long ReduceToLong (long parallelismThreshold, Java.Util.Functions.IToLongBiFunction transformer, long basis, Java.Util.Functions.ILongBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReduceToLong(int64 parallelismThreshold, class Java.Util.Functions.IToLongBiFunction transformer, int64 basis, class Java.Util.Functions.ILongBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceToLong(System.Int64,Java.Util.Functions.IToLongBiFunction,System.Int64,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceToLong : int64 * Java.Util.Functions.IToLongBiFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64&#xA;override this.ReduceToLong : int64 * Java.Util.Functions.IToLongBiFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64" Usage="concurrentHashMap.ReduceToLong (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceToLong", "(JLjava/util/function/ToLongBiFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceToLong_JLjava_util_function_ToLongBiFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceToLong", "(JLjava/util/function/ToLongBiFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceToLong_JLjava_util_function_ToLongBiFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToLongBiFunction" />
        <Parameter Name="basis" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all (key, value) pairs</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all (key, value) pairs using the given reducer to
            combine values, and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceToLong(long,%20java.util.function.ToLongBiFunction%3C?%20super%20K,%20?%20super%20V%3E,%20long,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceToLong(long, java.util.function.ToLongBiFunction&lt;? super K, ? super V&gt;, long, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceValues">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ReduceValues (long parallelismThreshold, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReduceValues(int64 parallelismThreshold, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceValues(System.Int64,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReduceValues : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.ReduceValues : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ReduceValues (parallelismThreshold, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceValues", "(JLjava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceValues_JLjava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceValues", "(JLjava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceValues_JLjava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating all values using the
            given reducer to combine values, or null if none.</summary>
        <returns>the result of accumulating all values</returns>
        <remarks>
          <para>Returns the result of accumulating all values using the
            given reducer to combine values, or null if none.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceValues(long,%20java.util.function.BiFunction%3C?%20super%20V,%20?%20super%20V,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceValues(long, java.util.function.BiFunction&lt;? super V, ? super V, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceValues">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ReduceValues (long parallelismThreshold, Java.Util.Functions.IFunction transformer, Java.Util.Functions.IBiFunction reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReduceValues(int64 parallelismThreshold, class Java.Util.Functions.IFunction transformer, class Java.Util.Functions.IBiFunction reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceValues(System.Int64,Java.Util.Functions.IFunction,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReduceValues : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.ReduceValues : int64 * Java.Util.Functions.IFunction * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.ReduceValues (parallelismThreshold, transformer, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceValues", "(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceValues_JLjava_util_function_Function_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceValues", "(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "GetReduceValues_JLjava_util_function_Function_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IFunction" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element, or null if there is no transformation (in
            which case it is not combined)</param>
        <param name="reducer">a commutative associative combining function</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the transformer</param>
        <summary>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values, or
            null if none.</summary>
        <returns>the result of accumulating the given transformation
            of all values</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values, or
            null if none.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceValues(long,%20java.util.function.Function%3C?%20super%20V,%20?%20extends%20U%3E,%20java.util.function.BiFunction%3C?%20super%20U,%20?%20super%20U,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceValues(long, java.util.function.Function&lt;? super V, ? extends U&gt;, java.util.function.BiFunction&lt;? super U, ? super U, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceValuesToDouble">
      <MemberSignature Language="C#" Value="public virtual double ReduceValuesToDouble (long parallelismThreshold, Java.Util.Functions.IToDoubleFunction transformer, double basis, Java.Util.Functions.IDoubleBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReduceValuesToDouble(int64 parallelismThreshold, class Java.Util.Functions.IToDoubleFunction transformer, float64 basis, class Java.Util.Functions.IDoubleBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceValuesToDouble(System.Int64,Java.Util.Functions.IToDoubleFunction,System.Double,Java.Util.Functions.IDoubleBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceValuesToDouble : int64 * Java.Util.Functions.IToDoubleFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double&#xA;override this.ReduceValuesToDouble : int64 * Java.Util.Functions.IToDoubleFunction * double * Java.Util.Functions.IDoubleBinaryOperator -&gt; double" Usage="concurrentHashMap.ReduceValuesToDouble (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceValuesToDouble", "(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceValuesToDouble_JLjava_util_function_ToDoubleFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceValuesToDouble", "(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D", "GetReduceValuesToDouble_JLjava_util_function_ToDoubleFunction_DLjava_util_function_DoubleBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToDoubleFunction" />
        <Parameter Name="basis" Type="System.Double" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IDoubleBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values,
            and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all values</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values,
            and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceValuesToDouble(long,%20java.util.function.ToDoubleFunction%3C?%20super%20V%3E,%20double,%20java.util.function.DoubleBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceValuesToDouble(long, java.util.function.ToDoubleFunction&lt;? super V&gt;, double, java.util.function.DoubleBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceValuesToInt">
      <MemberSignature Language="C#" Value="public virtual int ReduceValuesToInt (long parallelismThreshold, Java.Util.Functions.IToIntFunction transformer, int basis, Java.Util.Functions.IIntBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReduceValuesToInt(int64 parallelismThreshold, class Java.Util.Functions.IToIntFunction transformer, int32 basis, class Java.Util.Functions.IIntBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceValuesToInt(System.Int64,Java.Util.Functions.IToIntFunction,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceValuesToInt : int64 * Java.Util.Functions.IToIntFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int&#xA;override this.ReduceValuesToInt : int64 * Java.Util.Functions.IToIntFunction * int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="concurrentHashMap.ReduceValuesToInt (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceValuesToInt", "(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceValuesToInt_JLjava_util_function_ToIntFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceValuesToInt", "(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I", "GetReduceValuesToInt_JLjava_util_function_ToIntFunction_ILjava_util_function_IntBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToIntFunction" />
        <Parameter Name="basis" Type="System.Int32" />
        <Parameter Name="reducer" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values,
            and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all values</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values,
            and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceValuesToInt(long,%20java.util.function.ToIntFunction%3C?%20super%20V%3E,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceValuesToInt(long, java.util.function.ToIntFunction&lt;? super V&gt;, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceValuesToLong">
      <MemberSignature Language="C#" Value="public virtual long ReduceValuesToLong (long parallelismThreshold, Java.Util.Functions.IToLongFunction transformer, long basis, Java.Util.Functions.ILongBinaryOperator reducer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReduceValuesToLong(int64 parallelismThreshold, class Java.Util.Functions.IToLongFunction transformer, int64 basis, class Java.Util.Functions.ILongBinaryOperator reducer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReduceValuesToLong(System.Int64,Java.Util.Functions.IToLongFunction,System.Int64,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="abstract member ReduceValuesToLong : int64 * Java.Util.Functions.IToLongFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64&#xA;override this.ReduceValuesToLong : int64 * Java.Util.Functions.IToLongFunction * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64" Usage="concurrentHashMap.ReduceValuesToLong (parallelismThreshold, transformer, basis, reducer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reduceValuesToLong", "(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceValuesToLong_JLjava_util_function_ToLongFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reduceValuesToLong", "(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J", "GetReduceValuesToLong_JLjava_util_function_ToLongFunction_JLjava_util_function_LongBinaryOperator_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="transformer" Type="Java.Util.Functions.IToLongFunction" />
        <Parameter Name="basis" Type="System.Int64" />
        <Parameter Name="reducer" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="transformer">a function returning the transformation
            for an element</param>
        <param name="basis">the identity (initial default value) for the reduction</param>
        <param name="reducer">a commutative associative combining function</param>
        <summary>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values,
            and the given basis as an identity value.</summary>
        <returns>the result of accumulating the given transformation
            of all values</returns>
        <remarks>
          <para>Returns the result of accumulating the given transformation
            of all values using the given reducer to combine values,
            and the given basis as an identity value.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#reduceValuesToLong(long,%20java.util.function.ToLongFunction%3C?%20super%20V%3E,%20long,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.reduceValuesToLong(long, java.util.function.ToLongFunction&lt;? super V&gt;, long, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual bool Remove (Java.Lang.Object key, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Java.Lang.Object key, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Remove(Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="override this.Remove : Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="concurrentHashMap.Remove (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Remove(Java.Lang.Object,Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">the key that needs to be removed</param>
        <param name="value">value expected to be associated with the specified key</param>
        <summary>To be added</summary>
        <returns>the previous value associated with <c>key</c>, or
                    <c>null</c> if there was no mapping for <c>key</c></returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#remove(java.lang.Object,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the specified key is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Replace (Java.Lang.Object key, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Replace(class Java.Lang.Object key, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Replace(Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Replace : Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object&#xA;override this.Replace : Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object" Usage="concurrentHashMap.Replace (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Replace(Java.Lang.Object,Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetReplace_Ljava_lang_Object_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetReplace_Ljava_lang_Object_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added</summary>
        <returns>the previous value associated with the specified key,
                    or <c>null</c> if there was no mapping for the key</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#replace(K,%20V)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.replace(K, V)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual bool Replace (Java.Lang.Object key, Java.Lang.Object oldValue, Java.Lang.Object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace(class Java.Lang.Object key, class Java.Lang.Object oldValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Replace(Java.Lang.Object,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Replace : Java.Lang.Object * Java.Lang.Object * Java.Lang.Object -&gt; bool&#xA;override this.Replace : Java.Lang.Object * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="concurrentHashMap.Replace (key, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Replace(Java.Lang.Object,Java.Lang.Object,Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z", "GetReplace_Ljava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z", "GetReplace_Ljava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="oldValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added</summary>
        <returns>the previous value associated with the specified key,
                    or <c>null</c> if there was no mapping for the key</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#replace(K,%20V,%20V)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.replace(K, V, V)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAll">
      <MemberSignature Language="C#" Value="public virtual void ReplaceAll (Java.Util.Functions.IBiFunction function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceAll(class Java.Util.Functions.IBiFunction function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.ReplaceAll(Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAll : Java.Util.Functions.IBiFunction -&gt; unit&#xA;override this.ReplaceAll : Java.Util.Functions.IBiFunction -&gt; unit" Usage="concurrentHashMap.ReplaceAll function" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IConcurrentMap.Java#Util#IMap#ReplaceAll(Java.Util.Functions.IBiFunction)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceAll", "(Ljava/util/function/BiFunction;)V", "GetReplaceAll_Ljava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceAll", "(Ljava/util/function/BiFunction;)V", "GetReplaceAll_Ljava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Search (long parallelismThreshold, Java.Util.Functions.IBiFunction searchFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Search(int64 parallelismThreshold, class Java.Util.Functions.IBiFunction searchFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.Search(System.Int64,Java.Util.Functions.IBiFunction)" />
      <MemberSignature Language="F#" Value="abstract member Search : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object&#xA;override this.Search : int64 * Java.Util.Functions.IBiFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.Search (parallelismThreshold, searchFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("search", "(JLjava/util/function/BiFunction;)Ljava/lang/Object;", "GetSearch_JLjava_util_function_BiFunction_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("search", "(JLjava/util/function/BiFunction;)Ljava/lang/Object;", "GetSearch_JLjava_util_function_BiFunction_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="searchFunction" Type="Java.Util.Functions.IBiFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="searchFunction">a function returning a non-null
            result on success, else null</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the search function</param>
        <summary>Returns a non-null result from applying the given search
            function on each (key, value), or null if none.</summary>
        <returns>a non-null result from applying the given search
            function on each (key, value), or null if none</returns>
        <remarks>
          <para>Returns a non-null result from applying the given search
            function on each (key, value), or null if none.  Upon
            success, further element processing is suppressed and the
            results of any other parallel invocations of the search
            function are ignored.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#search(long,%20java.util.function.BiFunction%3C?%20super%20K,%20?%20super%20V,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.search(long, java.util.function.BiFunction&lt;? super K, ? super V, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchEntries">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? SearchEntries (long parallelismThreshold, Java.Util.Functions.IFunction searchFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object SearchEntries(int64 parallelismThreshold, class Java.Util.Functions.IFunction searchFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.SearchEntries(System.Int64,Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member SearchEntries : int64 * Java.Util.Functions.IFunction -&gt; Java.Lang.Object&#xA;override this.SearchEntries : int64 * Java.Util.Functions.IFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.SearchEntries (parallelismThreshold, searchFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("searchEntries", "(JLjava/util/function/Function;)Ljava/lang/Object;", "GetSearchEntries_JLjava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("searchEntries", "(JLjava/util/function/Function;)Ljava/lang/Object;", "GetSearchEntries_JLjava_util_function_Function_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="searchFunction" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="searchFunction">a function returning a non-null
            result on success, else null</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the search function</param>
        <summary>Returns a non-null result from applying the given search
            function on each entry, or null if none.</summary>
        <returns>a non-null result from applying the given search
            function on each entry, or null if none</returns>
        <remarks>
          <para>Returns a non-null result from applying the given search
            function on each entry, or null if none.  Upon success,
            further element processing is suppressed and the results of
            any other parallel invocations of the search function are
            ignored.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#searchEntries(long,%20java.util.function.Function%3Cjava.util.Map.Entry%3CK,%20V%3E,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.searchEntries(long, java.util.function.Function&lt;java.util.Map.Entry&lt;K, V&gt;, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchKeys">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? SearchKeys (long parallelismThreshold, Java.Util.Functions.IFunction searchFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object SearchKeys(int64 parallelismThreshold, class Java.Util.Functions.IFunction searchFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.SearchKeys(System.Int64,Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member SearchKeys : int64 * Java.Util.Functions.IFunction -&gt; Java.Lang.Object&#xA;override this.SearchKeys : int64 * Java.Util.Functions.IFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.SearchKeys (parallelismThreshold, searchFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("searchKeys", "(JLjava/util/function/Function;)Ljava/lang/Object;", "GetSearchKeys_JLjava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("searchKeys", "(JLjava/util/function/Function;)Ljava/lang/Object;", "GetSearchKeys_JLjava_util_function_Function_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="searchFunction" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="searchFunction">a function returning a non-null
            result on success, else null</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the search function</param>
        <summary>Returns a non-null result from applying the given search
            function on each key, or null if none.</summary>
        <returns>a non-null result from applying the given search
            function on each key, or null if none</returns>
        <remarks>
          <para>Returns a non-null result from applying the given search
            function on each key, or null if none. Upon success,
            further element processing is suppressed and the results of
            any other parallel invocations of the search function are
            ignored.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#searchKeys(long,%20java.util.function.Function%3C?%20super%20K,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.searchKeys(long, java.util.function.Function&lt;? super K, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchValues">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? SearchValues (long parallelismThreshold, Java.Util.Functions.IFunction searchFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object SearchValues(int64 parallelismThreshold, class Java.Util.Functions.IFunction searchFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.ConcurrentHashMap.SearchValues(System.Int64,Java.Util.Functions.IFunction)" />
      <MemberSignature Language="F#" Value="abstract member SearchValues : int64 * Java.Util.Functions.IFunction -&gt; Java.Lang.Object&#xA;override this.SearchValues : int64 * Java.Util.Functions.IFunction -&gt; Java.Lang.Object" Usage="concurrentHashMap.SearchValues (parallelismThreshold, searchFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("searchValues", "(JLjava/util/function/Function;)Ljava/lang/Object;", "GetSearchValues_JLjava_util_function_Function_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("searchValues", "(JLjava/util/function/Function;)Ljava/lang/Object;", "GetSearchValues_JLjava_util_function_Function_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parallelismThreshold" Type="System.Int64" />
        <Parameter Name="searchFunction" Type="Java.Util.Functions.IFunction" />
      </Parameters>
      <Docs>
        <param name="parallelismThreshold">the (estimated) number of elements
            needed for this operation to be executed in parallel</param>
        <param name="searchFunction">a function returning a non-null
            result on success, else null</param>
        <param name="&lt;U&gt;&lt;U&gt;">the return type of the search function</param>
        <summary>Returns a non-null result from applying the given search
            function on each value, or null if none.</summary>
        <returns>a non-null result from applying the given search
            function on each value, or null if none</returns>
        <remarks>
          <para>Returns a non-null result from applying the given search
            function on each value, or null if none.  Upon success,
            further element processing is suppressed and the results of
            any other parallel invocations of the search function are
            ignored.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap#searchValues(long,%20java.util.function.Function%3C?%20super%20V,%20?%20extends%20U%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ConcurrentHashMap.searchValues(long, java.util.function.Function&lt;? super V, ? extends U&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.ConcurrentHashMap.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.ConcurrentHashMap.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.ConcurrentHashMap.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.ConcurrentHashMap.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
