<Type Name="LinkedTransferQueue" FullName="Java.Util.Concurrent.LinkedTransferQueue">
  <TypeSignature Language="C#" Value="public class LinkedTransferQueue : Java.Util.AbstractQueue, IDisposable, Java.IO.ISerializable, Java.Util.Concurrent.ITransferQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkedTransferQueue extends Java.Util.AbstractQueue implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class Java.Lang.IIterable, class Java.Util.Concurrent.IBlockingQueue, class Java.Util.Concurrent.ITransferQueue, class Java.Util.ICollection, class Java.Util.IQueue, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.AbstractQueue</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.ITransferQueue</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/concurrent/LinkedTransferQueue", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>An unbounded <c><see cref="T:Java.Util.Concurrent.ITransferQueue" /></c> based on linked nodes.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An unbounded <c><see cref="T:Java.Util.Concurrent.ITransferQueue" /></c> based on linked nodes.
 This queue orders elements FIFO (first-in-first-out) with respect
 to any given producer.  The <i>head</i> of the queue is that
 element that has been on the queue the longest time for some
 producer.  The <i>tail</i> of the queue is that element that has
 been on the queue the shortest time for some producer.

 </para>
      <para tool="javadoc-to-mdoc">Beware that, unlike in most collections, the <c>size</c> method
 is <i>NOT</i> a constant-time operation. Because of the
 asynchronous nature of these queues, determining the current number
 of elements requires a traversal of the elements, and so may report
 inaccurate results if this collection is modified during traversal.
 Additionally, the bulk operations <c>addAll</c>,
 <c>removeAll</c>, <c>retainAll</c>, <c>containsAll</c>,
 <c>equals</c>, and <c>toArray</c> are <i>not</i> guaranteed
 to be performed atomically. For example, an iterator operating
 concurrently with an <c>addAll</c> operation might view only some
 of the added elements.

 </para>
      <para tool="javadoc-to-mdoc">This class and its iterator implement all of the
 <i>optional</i> methods of the <c><see cref="T:Android.Runtime.JavaCollection" /></c> and <c><see cref="T:Java.Util.IIterator" /></c> interfaces.

 </para>
      <para tool="javadoc-to-mdoc">Memory consistency effects: As with other concurrent
 collections, actions in a thread prior to placing an object into a
 <c>LinkedTransferQueue</c>
 actions subsequent to the access or removal of that element from
 the <c>LinkedTransferQueue</c> in another thread.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedTransferQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates an initially empty <c>LinkedTransferQueue</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an initially empty <c>LinkedTransferQueue</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#LinkedTransferQueue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedTransferQueue (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/Collection;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedTransferQueue (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainTo">
      <MemberSignature Language="C#" Value="public virtual int DrainTo (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DrainTo(class System.Collections.ICollection c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("drainTo", "(Ljava/util/Collection;)I", "GetDrainTo_Ljava_util_Collection_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainTo">
      <MemberSignature Language="C#" Value="public virtual int DrainTo (System.Collections.ICollection c, int maxElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DrainTo(class System.Collections.ICollection c, int32 maxElements) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("drainTo", "(Ljava/util/Collection;I)I", "GetDrainTo_Ljava_util_Collection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
        <Parameter Name="maxElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <param name="maxElements">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasWaitingConsumer">
      <MemberSignature Language="C#" Value="public virtual bool HasWaitingConsumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWaitingConsumer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasWaitingConsumer", "()Z", "GetHasWaitingConsumerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if there is at least one consumer waiting
 to receive an element via <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Take" /></c> or
 timed <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns <c>true</c> if there is at least one consumer waiting
 to receive an element via <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Take" /></c> or
 timed <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)" /></c>.
 The return value represents a momentary state of affairs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#hasWaitingConsumer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iterator">
      <MemberSignature Language="C#" Value="public override Java.Util.IIterator Iterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Util.IIterator Iterator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an iterator over the elements in this queue in proper sequence.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an iterator over the elements in this queue in proper sequence.
 The elements will be returned in order from first (head) to last (tail).

 </para>
          <para tool="javadoc-to-mdoc">The returned iterator is a "weakly consistent" iterator that
 will never throw <c><see cref="T:Java.Util.ConcurrentModificationException" /></c>, and guarantees to traverse
 elements as they existed upon construction of the iterator, and
 may (but is not guaranteed to) reflect any modifications
 subsequent to construction.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#iterator()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public override bool Offer (Java.Lang.Object e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Offer(class Java.Lang.Object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offer", "(Ljava/lang/Object;)Z", "GetOffer_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public virtual bool Offer (Java.Lang.Object e, long timeout, Java.Util.Concurrent.TimeUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Offer(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object Peek() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peek", "()Ljava/lang/Object;", "GetPeekHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves, but does not remove, the head of this queue,
 or returns <c>null</c> if this queue is empty.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves, but does not remove, the head of this queue,
 or returns <c>null</c> if this queue is empty.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#peek()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object Poll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object Poll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("poll", "()Ljava/lang/Object;", "GetPollHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Retrieves and removes the head of this queue,
 or returns <c>null</c> if this queue is empty.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves and removes the head of this queue,
 or returns <c>null</c> if this queue is empty.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#poll()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Poll (long timeout, Java.Util.Concurrent.TimeUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Poll(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("poll", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPoll_JLjava_util_concurrent_TimeUnit_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">how long to wait before giving up, in units of
        <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
        <c>timeout</c> parameter</param>
        <summary>Retrieves and removes the head of this queue, waiting up to the
 specified wait time if necessary for an element to become available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves and removes the head of this queue, waiting up to the
 specified wait time if necessary for an element to become available.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#poll(long, java.util.concurrent.TimeUnit)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.InterruptedException" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual void Put (Java.Lang.Object e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Put(class Java.Lang.Object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "(Ljava/lang/Object;)V", "GetPut_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemainingCapacity">
      <MemberSignature Language="C#" Value="public virtual int RemainingCapacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RemainingCapacity() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remainingCapacity", "()I", "GetRemainingCapacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Always returns <c>Integer.MAX_VALUE</c> because a
 <c>LinkedTransferQueue</c> is not capacity constrained.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Always returns <c>Integer.MAX_VALUE</c> because a
 <c>LinkedTransferQueue</c> is not capacity constrained.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#remainingCapacity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Size() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("size", "()I", "GetSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of elements in this queue.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of elements in this queue.  If this queue
 contains more than <c>Integer.MAX_VALUE</c> elements, returns
 <c>Integer.MAX_VALUE</c>.

 </para>
          <para tool="javadoc-to-mdoc">Beware that, unlike in most collections, this method is
 <i>NOT</i> a constant-time operation. Because of the
 asynchronous nature of these queues, determining the current
 number of elements requires an O(n) traversal.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#size()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Take() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("take", "()Ljava/lang/Object;", "GetTakeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the head of this queue, waiting if necessary
 until an element becomes available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves and removes the head of this queue, waiting if necessary
 until an element becomes available.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#take()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.InterruptedException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (Java.Lang.Object e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(class Java.Lang.Object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transfer", "(Ljava/lang/Object;)V", "GetTransfer_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTransfer">
      <MemberSignature Language="C#" Value="public virtual bool TryTransfer (Java.Lang.Object e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTransfer(class Java.Lang.Object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tryTransfer", "(Ljava/lang/Object;)Z", "GetTryTransfer_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTransfer">
      <MemberSignature Language="C#" Value="public virtual bool TryTransfer (Java.Lang.Object e, long timeout, Java.Util.Concurrent.TimeUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTransfer(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tryTransfer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetTryTransfer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitingConsumerCount">
      <MemberSignature Language="C#" Value="public virtual int WaitingConsumerCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WaitingConsumerCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWaitingConsumerCount", "()I", "GetGetWaitingConsumerCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an estimate of the number of consumers waiting to
 receive elements via <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Take" /></c> or timed
 <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an estimate of the number of consumers waiting to
 receive elements via <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Take" /></c> or timed
 <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)" /></c>.  The return value is an
 approximation of a momentary state of affairs, that may be
 inaccurate if consumers have completed or given up waiting.
 The value may be useful for monitoring and heuristics, but
 not for synchronization control.  Implementations of this
 method are likely to be noticeably slower than those for
 <c><see cref="P:Java.Util.Concurrent.ITransferQueue.HasWaitingConsumer" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html#getWaitingConsumerCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
