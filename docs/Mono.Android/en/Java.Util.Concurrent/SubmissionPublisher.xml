<Type Name="SubmissionPublisher" FullName="Java.Util.Concurrent.SubmissionPublisher">
  <TypeSignature Language="C#" Value="public class SubmissionPublisher : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable, Java.Util.Concurrent.Flow.IPublisher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SubmissionPublisher extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class Java.Util.Concurrent.Flow/IPublisher, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.SubmissionPublisher" />
  <TypeSignature Language="F#" Value="type SubmissionPublisher = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface Flow.IPublisher" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.Flow+IPublisher</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/SubmissionPublisher", ApiSince=33, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/SubmissionPublisher", ApiSince=33, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="&lt;T&gt;&lt;T&gt;">the published item type</param>
    <summary>A <c>Flow.Publisher</c> that asynchronously issues submitted
            (non-null) items to current subscribers until it is closed.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubmissionPublisher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new SubmissionPublisher using the <c>ForkJoinPool#commonPool()</c> for async delivery to subscribers
            (unless it does not support a parallelism level of at least two,
            in which case, a new Thread is created to run each task), with
            maximum buffer capacity of <c>Flow#defaultBufferSize</c>, and no
            handler for Subscriber exceptions in method <c>Flow.Subscriber#onNext(Object) onNext</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#SubmissionPublisher()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.SubmissionPublisher()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubmissionPublisher (Java.Util.Concurrent.IExecutor? executor, int maxBufferCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.Concurrent.IExecutor executor, int32 maxBufferCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.#ctor(Java.Util.Concurrent.IExecutor,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.SubmissionPublisher : Java.Util.Concurrent.IExecutor * int -&gt; Java.Util.Concurrent.SubmissionPublisher" Usage="new Java.Util.Concurrent.SubmissionPublisher (executor, maxBufferCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/concurrent/Executor;I)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/concurrent/Executor;I)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="maxBufferCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="executor">the executor to use for async delivery,
            supporting creation of at least one independent thread</param>
        <param name="maxBufferCapacity">the maximum capacity for each
            subscriber's buffer (the enforced capacity may be rounded up to
            the nearest power of two and/or bounded by the largest value
            supported by this implementation; method <c>#getMaxBufferCapacity</c>
            returns the actual value)</param>
        <summary>Creates a new SubmissionPublisher using the given Executor for
            async delivery to subscribers, with the given maximum buffer size
            for each subscriber, and no handler for Subscriber exceptions in
            method <c>Flow.Subscriber#onNext(Object) onNext</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#SubmissionPublisher(java.util.concurrent.Executor,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.SubmissionPublisher(java.util.concurrent.Executor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SubmissionPublisher (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.SubmissionPublisher : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.SubmissionPublisher" Usage="new Java.Util.Concurrent.SubmissionPublisher (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubmissionPublisher (Java.Util.Concurrent.IExecutor? executor, int maxBufferCapacity, Java.Util.Functions.IBiConsumer? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.Concurrent.IExecutor executor, int32 maxBufferCapacity, class Java.Util.Functions.IBiConsumer handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.#ctor(Java.Util.Concurrent.IExecutor,System.Int32,Java.Util.Functions.IBiConsumer)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.SubmissionPublisher : Java.Util.Concurrent.IExecutor * int * Java.Util.Functions.IBiConsumer -&gt; Java.Util.Concurrent.SubmissionPublisher" Usage="new Java.Util.Concurrent.SubmissionPublisher (executor, maxBufferCapacity, handler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/concurrent/Executor;ILjava/util/function/BiConsumer;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/concurrent/Executor;ILjava/util/function/BiConsumer;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="maxBufferCapacity" Type="System.Int32" />
        <Parameter Name="handler" Type="Java.Util.Functions.IBiConsumer" />
      </Parameters>
      <Docs>
        <param name="executor">the executor to use for async delivery,
            supporting creation of at least one independent thread</param>
        <param name="maxBufferCapacity">the maximum capacity for each
            subscriber's buffer (the enforced capacity may be rounded up to
            the nearest power of two and/or bounded by the largest value
            supported by this implementation; method <c>#getMaxBufferCapacity</c>
            returns the actual value)</param>
        <param name="handler">if non-null, procedure to invoke upon exception
            thrown in method <c>onNext</c></param>
        <summary>Creates a new SubmissionPublisher using the given Executor for
            async delivery to subscribers, with the given maximum buffer size
            for each subscriber, and, if non-null, the given handler invoked
            when any Subscriber throws an exception in method <c>Flow.Subscriber#onNext(Object) onNext</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#SubmissionPublisher(java.util.concurrent.Executor,%20int,%20java.util.function.BiConsumer%3C?%20super%20java.util.concurrent.Flow.Subscriber%3C?%20super%20T%3E,%20?%20super%20java.lang.Throwable%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.SubmissionPublisher(java.util.concurrent.Executor, int, java.util.function.BiConsumer&lt;? super java.util.concurrent.Flow.Subscriber&lt;? super T&gt;, ? super java.lang.Throwable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="submissionPublisher.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unless already closed, issues <c>Flow.Subscriber#onComplete() onComplete</c> signals to current
            subscribers, and disallows subsequent attempts to publish.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#close()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClosedException">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable? ClosedException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Throwable ClosedException" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.ClosedException" />
      <MemberSignature Language="F#" Value="member this.ClosedException : Java.Lang.Throwable" Usage="Java.Util.Concurrent.SubmissionPublisher.ClosedException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getClosedException", "()Ljava/lang/Throwable;", "GetGetClosedExceptionHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getClosedException", "()Ljava/lang/Throwable;", "GetGetClosedExceptionHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the exception associated with <c>#closeExceptionally(Throwable) closeExceptionally</c>, or null if
            not closed or if closed normally.</summary>
        <value>the exception, or null if none</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#getClosedException()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.getClosedException()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseExceptionally">
      <MemberSignature Language="C#" Value="public virtual void CloseExceptionally (Java.Lang.Throwable? error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseExceptionally(class Java.Lang.Throwable error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.CloseExceptionally(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member CloseExceptionally : Java.Lang.Throwable -&gt; unit&#xA;override this.CloseExceptionally : Java.Lang.Throwable -&gt; unit" Usage="submissionPublisher.CloseExceptionally error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closeExceptionally", "(Ljava/lang/Throwable;)V", "GetCloseExceptionally_Ljava_lang_Throwable_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closeExceptionally", "(Ljava/lang/Throwable;)V", "GetCloseExceptionally_Ljava_lang_Throwable_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="error">the <c>onError</c> argument sent to subscribers</param>
        <summary>Unless already closed, issues <c>Flow.Subscriber#onError(Throwable) onError</c> signals to current
            subscribers with the given error, and disallows subsequent
            attempts to publish.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#closeExceptionally(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.closeExceptionally(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Consume">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.CompletableFuture? Consume (Java.Util.Functions.IConsumer? consumer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.CompletableFuture Consume(class Java.Util.Functions.IConsumer consumer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.Consume(Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member Consume : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.CompletableFuture&#xA;override this.Consume : Java.Util.Functions.IConsumer -&gt; Java.Util.Concurrent.CompletableFuture" Usage="submissionPublisher.Consume consumer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("consume", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;", "GetConsume_Ljava_util_function_Consumer_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("consume", "(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;", "GetConsume_Ljava_util_function_Consumer_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.CompletableFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumer" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="consumer">the function applied to each onNext item</param>
        <summary>Processes all published items using the given Consumer function.</summary>
        <returns>a CompletableFuture that is completed normally
            when the publisher signals onComplete, and exceptionally
            upon any error or cancellation</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#consume(java.util.function.Consumer%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.consume(java.util.function.Consumer&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EstimateMaximumLag">
      <MemberSignature Language="C#" Value="public virtual int EstimateMaximumLag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EstimateMaximumLag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.EstimateMaximumLag" />
      <MemberSignature Language="F#" Value="abstract member EstimateMaximumLag : unit -&gt; int&#xA;override this.EstimateMaximumLag : unit -&gt; int" Usage="submissionPublisher.EstimateMaximumLag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("estimateMaximumLag", "()I", "GetEstimateMaximumLagHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("estimateMaximumLag", "()I", "GetEstimateMaximumLagHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an estimate of the maximum number of items produced but
            not yet consumed among all current subscribers.</summary>
        <returns>the estimate</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#estimateMaximumLag()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.estimateMaximumLag()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EstimateMinimumDemand">
      <MemberSignature Language="C#" Value="public virtual long EstimateMinimumDemand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 EstimateMinimumDemand() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.EstimateMinimumDemand" />
      <MemberSignature Language="F#" Value="abstract member EstimateMinimumDemand : unit -&gt; int64&#xA;override this.EstimateMinimumDemand : unit -&gt; int64" Usage="submissionPublisher.EstimateMinimumDemand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("estimateMinimumDemand", "()J", "GetEstimateMinimumDemandHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("estimateMinimumDemand", "()J", "GetEstimateMinimumDemandHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an estimate of the minimum number of items requested
            (via <c>Flow.Subscription#request(long) request</c>) but not
            yet produced, among all current subscribers.</summary>
        <returns>the estimate, or zero if no subscribers</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#estimateMinimumDemand()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.estimateMinimumDemand()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Executor">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Concurrent.IExecutor? Executor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Concurrent.IExecutor Executor" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.Executor" />
      <MemberSignature Language="F#" Value="member this.Executor : Java.Util.Concurrent.IExecutor" Usage="Java.Util.Concurrent.SubmissionPublisher.Executor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExecutor", "()Ljava/util/concurrent/Executor;", "GetGetExecutorHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getExecutor", "()Ljava/util/concurrent/Executor;", "GetGetExecutorHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IExecutor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Executor used for asynchronous delivery.</summary>
        <value>the Executor used for asynchronous delivery</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#getExecutor()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.getExecutor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSubscribers">
      <MemberSignature Language="C#" Value="public virtual bool HasSubscribers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSubscribers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.HasSubscribers" />
      <MemberSignature Language="F#" Value="member this.HasSubscribers : bool" Usage="Java.Util.Concurrent.SubmissionPublisher.HasSubscribers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasSubscribers", "()Z", "GetHasSubscribersHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasSubscribers", "()Z", "GetHasSubscribersHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this publisher has any subscribers.</summary>
        <value>true if this publisher has any subscribers</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#hasSubscribers()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.hasSubscribers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.IsClosed" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="Java.Util.Concurrent.SubmissionPublisher.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this publisher is not accepting submissions.</summary>
        <value>true if closed</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#isClosed()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.isClosed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public virtual bool IsSubscribed (Java.Util.Concurrent.Flow.ISubscriber? subscriber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubscribed(class Java.Util.Concurrent.Flow/ISubscriber subscriber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.IsSubscribed(Java.Util.Concurrent.Flow.ISubscriber)" />
      <MemberSignature Language="F#" Value="abstract member IsSubscribed : Java.Util.Concurrent.Flow.ISubscriber -&gt; bool&#xA;override this.IsSubscribed : Java.Util.Concurrent.Flow.ISubscriber -&gt; bool" Usage="submissionPublisher.IsSubscribed subscriber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSubscribed", "(Ljava/util/concurrent/Flow$Subscriber;)Z", "GetIsSubscribed_Ljava_util_concurrent_Flow_Subscriber_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSubscribed", "(Ljava/util/concurrent/Flow$Subscriber;)Z", "GetIsSubscribed_Ljava_util_concurrent_Flow_Subscriber_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriber" Type="Java.Util.Concurrent.Flow+ISubscriber" />
      </Parameters>
      <Docs>
        <param name="subscriber">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.SubmissionPublisher.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferCapacity">
      <MemberSignature Language="C#" Value="public virtual int MaxBufferCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferCapacity" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.MaxBufferCapacity" />
      <MemberSignature Language="F#" Value="member this.MaxBufferCapacity : int" Usage="Java.Util.Concurrent.SubmissionPublisher.MaxBufferCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxBufferCapacity", "()I", "GetGetMaxBufferCapacityHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxBufferCapacity", "()I", "GetGetMaxBufferCapacityHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum per-subscriber buffer capacity.</summary>
        <value>the maximum per-subscriber buffer capacity</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#getMaxBufferCapacity()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.getMaxBufferCapacity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSubscribers">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSubscribers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSubscribers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.NumberOfSubscribers" />
      <MemberSignature Language="F#" Value="member this.NumberOfSubscribers : int" Usage="Java.Util.Concurrent.SubmissionPublisher.NumberOfSubscribers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNumberOfSubscribers", "()I", "GetGetNumberOfSubscribersHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNumberOfSubscribers", "()I", "GetGetNumberOfSubscribersHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of current subscribers.</summary>
        <value>the number of current subscribers</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#getNumberOfSubscribers()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.getNumberOfSubscribers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public virtual int Offer (Java.Lang.Object? item, Java.Util.Functions.IBiPredicate? onDrop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Offer(class Java.Lang.Object item, class Java.Util.Functions.IBiPredicate onDrop) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.Offer(Java.Lang.Object,Java.Util.Functions.IBiPredicate)" />
      <MemberSignature Language="F#" Value="abstract member Offer : Java.Lang.Object * Java.Util.Functions.IBiPredicate -&gt; int&#xA;override this.Offer : Java.Lang.Object * Java.Util.Functions.IBiPredicate -&gt; int" Usage="submissionPublisher.Offer (item, onDrop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offer", "(Ljava/lang/Object;Ljava/util/function/BiPredicate;)I", "GetOffer_Ljava_lang_Object_Ljava_util_function_BiPredicate_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offer", "(Ljava/lang/Object;Ljava/util/function/BiPredicate;)I", "GetOffer_Ljava_lang_Object_Ljava_util_function_BiPredicate_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Java.Lang.Object" />
        <Parameter Name="onDrop" Type="Java.Util.Functions.IBiPredicate" />
      </Parameters>
      <Docs>
        <param name="item">the (non-null) item to publish</param>
        <param name="onDrop">if non-null, the handler invoked upon a drop to a
            subscriber, with arguments of the subscriber and item; if it
            returns true, an offer is re-attempted (once)</param>
        <summary>Publishes the given item, if possible, to each current subscriber
            by asynchronously invoking its <c>Flow.Subscriber#onNext(Object) onNext</c> method.</summary>
        <returns>if negative, the (negative) number of drops; otherwise
            an estimate of maximum lag</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#offer(T,%20java.util.function.BiPredicate%3Cjava.util.concurrent.Flow.Subscriber%3C?%20super%20T%3E,%20?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.offer(T, java.util.function.BiPredicate&lt;java.util.concurrent.Flow.Subscriber&lt;? super T&gt;, ? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public virtual int Offer (Java.Lang.Object? item, long timeout, Java.Util.Concurrent.TimeUnit? unit, Java.Util.Functions.IBiPredicate? onDrop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Offer(class Java.Lang.Object item, int64 timeout, class Java.Util.Concurrent.TimeUnit unit, class Java.Util.Functions.IBiPredicate onDrop) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.Offer(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit,Java.Util.Functions.IBiPredicate)" />
      <MemberSignature Language="F#" Value="abstract member Offer : Java.Lang.Object * int64 * Java.Util.Concurrent.TimeUnit * Java.Util.Functions.IBiPredicate -&gt; int&#xA;override this.Offer : Java.Lang.Object * int64 * Java.Util.Concurrent.TimeUnit * Java.Util.Functions.IBiPredicate -&gt; int" Usage="submissionPublisher.Offer (item, timeout, unit, onDrop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/BiPredicate;)I", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Ljava_util_function_BiPredicate_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/BiPredicate;)I", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Ljava_util_function_BiPredicate_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
        <Parameter Name="onDrop" Type="Java.Util.Functions.IBiPredicate" />
      </Parameters>
      <Docs>
        <param name="item">the (non-null) item to publish</param>
        <param name="timeout">how long to wait for resources for any subscriber
            before giving up, in units of <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
            <c>timeout</c> parameter</param>
        <param name="onDrop">if non-null, the handler invoked upon a drop to a
            subscriber, with arguments of the subscriber and item; if it
            returns true, an offer is re-attempted (once)</param>
        <summary>Publishes the given item, if possible, to each current subscriber
            by asynchronously invoking its <c>Flow.Subscriber#onNext(Object) onNext</c> method, blocking while
            resources for any subscription are unavailable, up to the
            specified timeout or until the caller thread is interrupted, at
            which point the given handler (if non-null) is invoked, and if it
            returns true, retried once.</summary>
        <returns>if negative, the (negative) number of drops; otherwise
            an estimate of maximum lag</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#offer(T,%20long,%20java.util.concurrent.TimeUnit,%20java.util.function.BiPredicate%3Cjava.util.concurrent.Flow.Subscriber%3C?%20super%20T%3E,%20?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.offer(T, long, java.util.concurrent.TimeUnit, java.util.function.BiPredicate&lt;java.util.concurrent.Flow.Subscriber&lt;? super T&gt;, ? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Submit">
      <MemberSignature Language="C#" Value="public virtual int Submit (Java.Lang.Object? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Submit(class Java.Lang.Object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.Submit(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Submit : Java.Lang.Object -&gt; int&#xA;override this.Submit : Java.Lang.Object -&gt; int" Usage="submissionPublisher.Submit item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("submit", "(Ljava/lang/Object;)I", "GetSubmit_Ljava_lang_Object_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("submit", "(Ljava/lang/Object;)I", "GetSubmit_Ljava_lang_Object_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="item">the (non-null) item to publish</param>
        <summary>Publishes the given item to each current subscriber by
            asynchronously invoking its <c>Flow.Subscriber#onNext(Object)
            onNext</c> method, blocking uninterruptibly while resources for any
            subscriber are unavailable.</summary>
        <returns>the estimated maximum lag among subscribers</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#submit(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.submit(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe (Java.Util.Concurrent.Flow.ISubscriber? subscriber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class Java.Util.Concurrent.Flow/ISubscriber subscriber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.SubmissionPublisher.Subscribe(Java.Util.Concurrent.Flow.ISubscriber)" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : Java.Util.Concurrent.Flow.ISubscriber -&gt; unit&#xA;override this.Subscribe : Java.Util.Concurrent.Flow.ISubscriber -&gt; unit" Usage="submissionPublisher.Subscribe subscriber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.Flow.IPublisher.Subscribe(Java.Util.Concurrent.Flow.ISubscriber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subscribe", "(Ljava/util/concurrent/Flow$Subscriber;)V", "GetSubscribe_Ljava_util_concurrent_Flow_Subscriber_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subscribe", "(Ljava/util/concurrent/Flow$Subscriber;)V", "GetSubscribe_Ljava_util_concurrent_Flow_Subscriber_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriber" Type="Java.Util.Concurrent.Flow+ISubscriber" />
      </Parameters>
      <Docs>
        <param name="subscriber">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList? Subscribers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Subscribers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.Subscribers" />
      <MemberSignature Language="F#" Value="member this.Subscribers : System.Collections.IList" Usage="Java.Util.Concurrent.SubmissionPublisher.Subscribers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSubscribers", "()Ljava/util/List;", "GetGetSubscribersHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSubscribers", "()Ljava/util/List;", "GetGetSubscribersHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of current subscribers for monitoring and
            tracking purposes, not for invoking <c>Flow.Subscriber</c>
            methods on the subscribers.</summary>
        <value>list of current subscribers</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/SubmissionPublisher#getSubscribers()" title="Reference documentation">Java documentation for <code>java.util.concurrent.SubmissionPublisher.getSubscribers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.SubmissionPublisher.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.SubmissionPublisher.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.SubmissionPublisher.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
