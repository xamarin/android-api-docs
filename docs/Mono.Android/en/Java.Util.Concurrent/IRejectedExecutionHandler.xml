<Type Name="IRejectedExecutionHandler" FullName="Java.Util.Concurrent.IRejectedExecutionHandler">
  <TypeSignature Language="VB.NET" Value="Public Interface IRejectedExecutionHandler&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRejectedExecutionHandler : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface IRejectedExecutionHandler : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRejectedExecutionHandler implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.IRejectedExecutionHandler" />
  <TypeSignature Language="F#" Value="type IRejectedExecutionHandler = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/RejectedExecutionHandler", "", "Java.Util.Concurrent.IRejectedExecutionHandlerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/RejectedExecutionHandler", "", "Java.Util.Concurrent.IRejectedExecutionHandlerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A handler for tasks that cannot be executed by a <c>ThreadPoolExecutor</c>.</summary>
    <remarks>
      <para>A handler for tasks that cannot be executed by a <c>ThreadPoolExecutor</c>.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/RejectedExecutionHandler" title="Reference documentation">Java documentation for <code>java.util.concurrent.RejectedExecutionHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="RejectedExecution">
      <MemberSignature Language="VB.NET" Value="Public Sub RejectedExecution (r As IRunnable, executor As ThreadPoolExecutor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectedExecution(Java::Lang::IRunnable ^ r, Java::Util::Concurrent::ThreadPoolExecutor ^ executor);" />
      <MemberSignature Language="C#" Value="public void RejectedExecution (Java.Lang.IRunnable? r, Java.Util.Concurrent.ThreadPoolExecutor? executor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectedExecution(class Java.Lang.IRunnable r, class Java.Util.Concurrent.ThreadPoolExecutor executor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IRejectedExecutionHandler.RejectedExecution(Java.Lang.IRunnable,Java.Util.Concurrent.ThreadPoolExecutor)" />
      <MemberSignature Language="F#" Value="abstract member RejectedExecution : Java.Lang.IRunnable * Java.Util.Concurrent.ThreadPoolExecutor -&gt; unit" Usage="iRejectedExecutionHandler.RejectedExecution (r, executor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rejectedExecution", "(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V", "GetRejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_Handler:Java.Util.Concurrent.IRejectedExecutionHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rejectedExecution", "(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V", "GetRejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_Handler:Java.Util.Concurrent.IRejectedExecutionHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Java.Lang.IRunnable" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.ThreadPoolExecutor" />
      </Parameters>
      <Docs>
        <param name="r">the runnable task requested to be executed</param>
        <param name="executor">the executor attempting to execute this task</param>
        <summary>Method that may be invoked by a <c>ThreadPoolExecutor</c> when
            <c>ThreadPoolExecutor#execute execute</c> cannot accept a
            task.</summary>
        <remarks>
          <para>Method that may be invoked by a <c>ThreadPoolExecutor</c> when
            <c>ThreadPoolExecutor#execute execute</c> cannot accept a
            task.  This may occur when no more threads or queue slots are
            available because their bounds would be exceeded, or upon
            shutdown of the Executor.</para>
          <para>In the absence of other alternatives, the method may throw
            an unchecked <c>RejectedExecutionException</c>, which will be
            propagated to the caller of <c>execute</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/RejectedExecutionHandler#rejectedExecution(java.lang.Runnable,%20java.util.concurrent.ThreadPoolExecutor)" title="Reference documentation">Java documentation for <code>java.util.concurrent.RejectedExecutionHandler.rejectedExecution(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Concurrent.RejectedExecutionException">if there is no remedy
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
