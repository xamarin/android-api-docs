<Type Name="IExecutorService" FullName="Java.Util.Concurrent.IExecutorService">
  <TypeSignature Language="C#" Value="public interface IExecutorService : IDisposable, Java.Interop.IJavaPeerable, Java.Util.Concurrent.IExecutor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExecutorService implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Util.Concurrent.IExecutor, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.IExecutorService" />
  <TypeSignature Language="F#" Value="type IExecutorService = interface&#xA;    interface IExecutor&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IExecutor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/ExecutorService", "", "Java.Util.Concurrent.IExecutorServiceInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/ExecutorService", "", "Java.Util.Concurrent.IExecutorServiceInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An <c>Executor</c> that provides methods to manage termination and
            methods that can produce a <c>Future</c> for tracking progress of
            one or more asynchronous tasks.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AwaitTermination">
      <MemberSignature Language="C#" Value="public bool AwaitTermination (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AwaitTermination(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.AwaitTermination(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member AwaitTermination : int64 * Java.Util.Concurrent.TimeUnit -&gt; bool" Usage="iExecutorService.AwaitTermination (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("awaitTermination", "(JLjava/util/concurrent/TimeUnit;)Z", "GetAwaitTermination_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("awaitTermination", "(JLjava/util/concurrent/TimeUnit;)Z", "GetAwaitTermination_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">the maximum time to wait</param>
        <param name="unit">the time unit of the timeout argument</param>
        <summary>Blocks until all tasks have completed execution after a shutdown
            request, or the timeout occurs, or the current thread is
            interrupted, whichever happens first.</summary>
        <returns>
          <c>true</c> if this executor terminated and
                    <c>false</c> if the timeout elapsed before termination</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#awaitTermination(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException">if interrupted while waiting
</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeAll">
      <MemberSignature Language="C#" Value="public System.Collections.IList? InvokeAll (System.Collections.ICollection? tasks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList InvokeAll(class System.Collections.ICollection tasks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.InvokeAll(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member InvokeAll : System.Collections.ICollection -&gt; System.Collections.IList" Usage="iExecutorService.InvokeAll tasks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeAll", "(Ljava/util/Collection;)Ljava/util/List;", "GetInvokeAll_Ljava_util_Collection_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invokeAll", "(Ljava/util/Collection;)Ljava/util/List;", "GetInvokeAll_Ljava_util_Collection_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="tasks">the collection of tasks</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of the values returned from the tasks</param>
        <summary>Executes the given tasks, returning a list of Futures holding
            their status and results when all complete.</summary>
        <returns>a list of Futures representing the tasks, in the same
                    sequential order as produced by the iterator for the
                    given task list, each of which has completed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#invokeAll(java.util.Collection)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAll">
      <MemberSignature Language="C#" Value="public System.Collections.IList? InvokeAll (System.Collections.ICollection? tasks, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList InvokeAll(class System.Collections.ICollection tasks, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.InvokeAll(System.Collections.ICollection,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member InvokeAll : System.Collections.ICollection * int64 * Java.Util.Concurrent.TimeUnit -&gt; System.Collections.IList" Usage="iExecutorService.InvokeAll (tasks, timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeAll", "(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;", "GetInvokeAll_Ljava_util_Collection_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invokeAll", "(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;", "GetInvokeAll_Ljava_util_Collection_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Collections.ICollection" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <param name="tasks">the collection of tasks</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of the values returned from the tasks</param>
        <summary>Executes the given tasks, returning a list of Futures holding
            their status and results when all complete.</summary>
        <returns>a list of Futures representing the tasks, in the same
                    sequential order as produced by the iterator for the
                    given task list, each of which has completed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#invokeAll(java.util.Collection)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAny">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? InvokeAny (System.Collections.ICollection? tasks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object InvokeAny(class System.Collections.ICollection tasks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.InvokeAny(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member InvokeAny : System.Collections.ICollection -&gt; Java.Lang.Object" Usage="iExecutorService.InvokeAny tasks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeAny", "(Ljava/util/Collection;)Ljava/lang/Object;", "GetInvokeAny_Ljava_util_Collection_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invokeAny", "(Ljava/util/Collection;)Ljava/lang/Object;", "GetInvokeAny_Ljava_util_Collection_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="tasks">the collection of tasks</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of the values returned from the tasks</param>
        <summary>Executes the given tasks, returning the result
            of one that has completed successfully (i.</summary>
        <returns>the result returned by one of the tasks</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#invokeAny(java.util.Collection)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.invokeAny(java.util.Collection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAny">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? InvokeAny (System.Collections.ICollection? tasks, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object InvokeAny(class System.Collections.ICollection tasks, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.InvokeAny(System.Collections.ICollection,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member InvokeAny : System.Collections.ICollection * int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="iExecutorService.InvokeAny (tasks, timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeAny", "(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetInvokeAny_Ljava_util_Collection_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invokeAny", "(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetInvokeAny_Ljava_util_Collection_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Collections.ICollection" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <param name="tasks">the collection of tasks</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of the values returned from the tasks</param>
        <summary>Executes the given tasks, returning the result
            of one that has completed successfully (i.</summary>
        <returns>the result returned by one of the tasks</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#invokeAny(java.util.Collection)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.invokeAny(java.util.Collection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShutdown">
      <MemberSignature Language="C#" Value="public bool IsShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShutdown" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.IExecutorService.IsShutdown" />
      <MemberSignature Language="F#" Value="member this.IsShutdown : bool" Usage="Java.Util.Concurrent.IExecutorService.IsShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShutdown", "()Z", "GetIsShutdownHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShutdown", "()Z", "GetIsShutdownHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this executor has been shut down.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsTerminated">
      <MemberSignature Language="C#" Value="public bool IsTerminated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminated" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.IExecutorService.IsTerminated" />
      <MemberSignature Language="F#" Value="member this.IsTerminated : bool" Usage="Java.Util.Concurrent.IExecutorService.IsTerminated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTerminated", "()Z", "GetIsTerminatedHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTerminated", "()Z", "GetIsTerminatedHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if all tasks have completed following shut down.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.Shutdown" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iExecutorService.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdown", "()V", "GetShutdownHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdown", "()V", "GetShutdownHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiates an orderly shutdown in which previously submitted
            tasks are executed, but no new tasks will be accepted.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#shutdown()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.shutdown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownNow">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Java.Lang.IRunnable&gt;? ShutdownNow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Java.Lang.IRunnable&gt; ShutdownNow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.ShutdownNow" />
      <MemberSignature Language="F#" Value="abstract member ShutdownNow : unit -&gt; System.Collections.Generic.IList&lt;Java.Lang.IRunnable&gt;" Usage="iExecutorService.ShutdownNow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shutdownNow", "()Ljava/util/List;", "GetShutdownNowHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shutdownNow", "()Ljava/util/List;", "GetShutdownNowHandler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Lang.IRunnable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attempts to stop all actively executing tasks, halts the
            processing of waiting tasks, and returns a list of the tasks
            that were awaiting execution.</summary>
        <returns>list of tasks that never commenced execution</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#shutdownNow()" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.shutdownNow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Submit">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.IFuture? Submit (Java.Lang.IRunnable? task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IFuture Submit(class Java.Lang.IRunnable task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.Submit(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member Submit : Java.Lang.IRunnable -&gt; Java.Util.Concurrent.IFuture" Usage="iExecutorService.Submit task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("submit", "(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;", "GetSubmit_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("submit", "(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;", "GetSubmit_Ljava_lang_Runnable_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="task">the task to submit</param>
        <summary>Submits a Runnable task for execution and returns a Future
            representing that task.</summary>
        <returns>a Future representing pending completion of the task</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#submit(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.submit(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Concurrent.RejectedExecutionException">if the task cannot be
         scheduled for execution</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the task is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Submit">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.IFuture? Submit (Java.Util.Concurrent.ICallable? task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IFuture Submit(class Java.Util.Concurrent.ICallable task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.Submit(Java.Util.Concurrent.ICallable)" />
      <MemberSignature Language="F#" Value="abstract member Submit : Java.Util.Concurrent.ICallable -&gt; Java.Util.Concurrent.IFuture" Usage="iExecutorService.Submit task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("submit", "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;", "GetSubmit_Ljava_util_concurrent_Callable_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("submit", "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;", "GetSubmit_Ljava_util_concurrent_Callable_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Java.Util.Concurrent.ICallable" />
      </Parameters>
      <Docs>
        <param name="task">the task to submit</param>
        <summary>Submits a Runnable task for execution and returns a Future
            representing that task.</summary>
        <returns>a Future representing pending completion of the task</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#submit(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.submit(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Submit">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.IFuture? Submit (Java.Lang.IRunnable? task, Java.Lang.Object? result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.IFuture Submit(class Java.Lang.IRunnable task, class Java.Lang.Object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.IExecutorService.Submit(Java.Lang.IRunnable,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Submit : Java.Lang.IRunnable * Java.Lang.Object -&gt; Java.Util.Concurrent.IFuture" Usage="iExecutorService.Submit (task, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("submit", "(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;", "GetSubmit_Ljava_lang_Runnable_Ljava_lang_Object_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("submit", "(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;", "GetSubmit_Ljava_lang_Runnable_Ljava_lang_Object_Handler:Java.Util.Concurrent.IExecutorServiceInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IFuture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Java.Lang.IRunnable" />
        <Parameter Name="result" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="task">the task to submit</param>
        <summary>Submits a Runnable task for execution and returns a Future
            representing that task.</summary>
        <returns>a Future representing pending completion of the task</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/ExecutorService#submit(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.ExecutorService.submit(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
