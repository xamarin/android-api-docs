<Type Name="Flow+ISubscriber" FullName="Java.Util.Concurrent.Flow+ISubscriber">
  <TypeSignature Language="C#" Value="public interface Flow.ISubscriber : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract Flow/ISubscriber implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.Flow.ISubscriber" />
  <TypeSignature Language="F#" Value="type Flow.ISubscriber = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/Flow$Subscriber", "", "Java.Util.Concurrent.Flow/ISubscriberInvoker", ApiSince=30)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/Flow$Subscriber", "", "Java.Util.Concurrent.Flow/ISubscriberInvoker", ApiSince=30)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="&lt;T&gt;&lt;T&gt;">the subscribed item type</param>
    <summary>A receiver of messages.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/Flow.Subscriber" title="Reference documentation">Java documentation for <code>java.util.concurrent.Flow.Subscriber</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnComplete">
      <MemberSignature Language="C#" Value="public void OnComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Flow.ISubscriber.OnComplete" />
      <MemberSignature Language="F#" Value="abstract member OnComplete : unit -&gt; unit" Usage="iSubscriber.OnComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onComplete", "()V", "GetOnCompleteHandler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onComplete", "()V", "GetOnCompleteHandler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method invoked when it is known that no additional
            Subscriber method invocations will occur for a Subscription
            that is not already terminated by error, after which no
            other Subscriber methods are invoked by the Subscription.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/Flow.Subscriber#onComplete()" title="Reference documentation">Java documentation for <code>java.util.concurrent.Flow.Subscriber.onComplete()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Java.Lang.Throwable? throwable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class Java.Lang.Throwable throwable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Flow.ISubscriber.OnError(Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member OnError : Java.Lang.Throwable -&gt; unit" Usage="iSubscriber.OnError throwable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onError", "(Ljava/lang/Throwable;)V", "GetOnError_Ljava_lang_Throwable_Handler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onError", "(Ljava/lang/Throwable;)V", "GetOnError_Ljava_lang_Throwable_Handler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throwable" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="throwable">the exception</param>
        <summary>Method invoked upon an unrecoverable error encountered by a
            Publisher or Subscription, after which no other Subscriber
            methods are invoked by the Subscription.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/Flow.Subscriber#onError(java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.concurrent.Flow.Subscriber.onError(java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (Java.Lang.Object? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(class Java.Lang.Object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Flow.ISubscriber.OnNext(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : Java.Lang.Object -&gt; unit" Usage="iSubscriber.OnNext item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNext", "(Ljava/lang/Object;)V", "GetOnNext_Ljava_lang_Object_Handler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNext", "(Ljava/lang/Object;)V", "GetOnNext_Ljava_lang_Object_Handler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="item">the item</param>
        <summary>Method invoked with a Subscription's next item.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/Flow.Subscriber#onNext(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.Flow.Subscriber.onNext(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubscribe">
      <MemberSignature Language="C#" Value="public void OnSubscribe (Java.Util.Concurrent.Flow.ISubscription? subscription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSubscribe(class Java.Util.Concurrent.Flow/ISubscription subscription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Flow.ISubscriber.OnSubscribe(Java.Util.Concurrent.Flow.ISubscription)" />
      <MemberSignature Language="F#" Value="abstract member OnSubscribe : Java.Util.Concurrent.Flow.ISubscription -&gt; unit" Usage="iSubscriber.OnSubscribe subscription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSubscribe", "(Ljava/util/concurrent/Flow$Subscription;)V", "GetOnSubscribe_Ljava_util_concurrent_Flow_Subscription_Handler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSubscribe", "(Ljava/util/concurrent/Flow$Subscription;)V", "GetOnSubscribe_Ljava_util_concurrent_Flow_Subscription_Handler:Java.Util.Concurrent.Flow/ISubscriberInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Java.Util.Concurrent.Flow+ISubscription" />
      </Parameters>
      <Docs>
        <param name="subscription">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
