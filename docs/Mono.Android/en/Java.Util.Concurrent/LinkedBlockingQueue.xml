<Type Name="LinkedBlockingQueue" FullName="Java.Util.Concurrent.LinkedBlockingQueue">
  <TypeSignature Language="C#" Value="public class LinkedBlockingQueue : Java.Util.AbstractQueue, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Util.Concurrent.IBlockingQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkedBlockingQueue extends Java.Util.AbstractQueue implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.IIterable, class Java.Util.Concurrent.IBlockingQueue, class Java.Util.ICollection, class Java.Util.IQueue, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.LinkedBlockingQueue" />
  <TypeSignature Language="F#" Value="type LinkedBlockingQueue = class&#xA;    inherit AbstractQueue&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IBlockingQueue&#xA;    interface IQueue&#xA;    interface ICollection&#xA;    interface IIterable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.AbstractQueue</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IIterable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IBlockingQueue</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IQueue</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/LinkedBlockingQueue", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/LinkedBlockingQueue", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "E" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "E" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;E&gt;&lt;E&gt;">the type of elements held in this queue</param>
    <summary>An optionally-bounded BlockingQueue blocking queue based on
            linked nodes.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedBlockingQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a <c>LinkedBlockingQueue</c> with a capacity of
            <c>Integer#MAX_VALUE</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#LinkedBlockingQueue()" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedBlockingQueue (System.Collections.ICollection? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.LinkedBlockingQueue : System.Collections.ICollection -&gt; Java.Util.Concurrent.LinkedBlockingQueue" Usage="new Java.Util.Concurrent.LinkedBlockingQueue c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/Collection;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/Collection;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">the collection of elements to initially contain</param>
        <summary>Creates a <c>LinkedBlockingQueue</c> with a capacity of
            <c>Integer#MAX_VALUE</c>, initially containing the elements of the
            given collection,
            added in traversal order of the collection's iterator.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#LinkedBlockingQueue(java.util.Collection%3C?%20extends%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue(java.util.Collection&lt;? extends E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedBlockingQueue (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.LinkedBlockingQueue : int -&gt; Java.Util.Concurrent.LinkedBlockingQueue" Usage="new Java.Util.Concurrent.LinkedBlockingQueue capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">the capacity of this queue</param>
        <summary>Creates a <c>LinkedBlockingQueue</c> with the given (fixed) capacity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#LinkedBlockingQueue(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>capacity</c> is not greater
         than zero
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedBlockingQueue (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.LinkedBlockingQueue : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.LinkedBlockingQueue" Usage="new Java.Util.Concurrent.LinkedBlockingQueue (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainTo">
      <MemberSignature Language="C#" Value="public virtual int DrainTo (System.Collections.ICollection? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DrainTo(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.DrainTo(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member DrainTo : System.Collections.ICollection -&gt; int&#xA;override this.DrainTo : System.Collections.ICollection -&gt; int" Usage="linkedBlockingQueue.DrainTo c" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.DrainTo(System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drainTo", "(Ljava/util/Collection;)I", "GetDrainTo_Ljava_util_Collection_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("drainTo", "(Ljava/util/Collection;)I", "GetDrainTo_Ljava_util_Collection_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#drainTo(java.util.Collection%3C?%20super%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.drainTo(java.util.Collection&lt;? super E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainTo">
      <MemberSignature Language="C#" Value="public virtual int DrainTo (System.Collections.ICollection? c, int maxElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DrainTo(class System.Collections.ICollection c, int32 maxElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.DrainTo(System.Collections.ICollection,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member DrainTo : System.Collections.ICollection * int -&gt; int&#xA;override this.DrainTo : System.Collections.ICollection * int -&gt; int" Usage="linkedBlockingQueue.DrainTo (c, maxElements)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.DrainTo(System.Collections.ICollection,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drainTo", "(Ljava/util/Collection;I)I", "GetDrainTo_Ljava_util_Collection_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("drainTo", "(Ljava/util/Collection;I)I", "GetDrainTo_Ljava_util_Collection_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
        <Parameter Name="maxElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <param name="maxElements">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#drainTo(java.util.Collection%3C?%20super%20E%3E,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.drainTo(java.util.Collection&lt;? super E&gt;, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public virtual void ForEach (Java.Util.Functions.IConsumer? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEach(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.ForEach(Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member ForEach : Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.ForEach : Java.Util.Functions.IConsumer -&gt; unit" Usage="linkedBlockingQueue.ForEach action" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IIterable.ForEach(Java.Util.Functions.IConsumer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach", "(Ljava/util/function/Consumer;)V", "GetForEach_Ljava_util_function_Consumer_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach", "(Ljava/util/function/Consumer;)V", "GetForEach_Ljava_util_function_Consumer_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#forEach(java.util.function.Consumer%3C?%20super%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.forEach(java.util.function.Consumer&lt;? super E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iterator">
      <MemberSignature Language="C#" Value="public override Java.Util.IIterator? Iterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Util.IIterator Iterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Iterator" />
      <MemberSignature Language="F#" Value="override this.Iterator : unit -&gt; Java.Util.IIterator" Usage="linkedBlockingQueue.Iterator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.ICollection.Iterator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an iterator over the elements in this queue in proper sequence.</summary>
        <returns>an iterator over the elements in this queue in proper sequence</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#iterator()" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.iterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.LinkedBlockingQueue.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.LinkedBlockingQueue.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public override bool Offer (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Offer(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Offer(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="override this.Offer : Java.Lang.Object -&gt; bool" Usage="linkedBlockingQueue.Offer e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Offer(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offer", "(Ljava/lang/Object;)Z", "GetOffer_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offer", "(Ljava/lang/Object;)Z", "GetOffer_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Inserts the specified element at the tail of this queue if it is
            possible to do so immediately without exceeding the queue's capacity,
            returning <c>true</c> upon success and <c>false</c> if this queue
            is full.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#offer(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.offer(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offer">
      <MemberSignature Language="C#" Value="public virtual bool Offer (Java.Lang.Object? e, long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Offer(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Offer(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="override this.Offer : Java.Lang.Object * int64 * Java.Util.Concurrent.TimeUnit -&gt; bool" Usage="linkedBlockingQueue.Offer (e, timeout, unit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Offer(Java.Lang.Object,System.Int64,Java.Util.Concurrent.TimeUnit)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetOffer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <summary>Inserts the specified element at the tail of this queue, waiting if
            necessary up to the specified wait time for space to become available.</summary>
        <returns>
          <c>true</c> if successful, or <c>false</c> if
                    the specified waiting time elapses before space is available</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#offer(E,%20long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.offer(E, long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object? Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Peek" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; Java.Lang.Object" Usage="linkedBlockingQueue.Peek " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IQueue.Peek</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("peek", "()Ljava/lang/Object;", "GetPeekHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("peek", "()Ljava/lang/Object;", "GetPeekHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves, but does not remove, the head of this queue,
 or returns <c>null</c> if this queue is empty.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object? Poll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object Poll() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Poll" />
      <MemberSignature Language="F#" Value="override this.Poll : unit -&gt; Java.Lang.Object" Usage="linkedBlockingQueue.Poll " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IQueue.Poll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("poll", "()Ljava/lang/Object;", "GetPollHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("poll", "()Ljava/lang/Object;", "GetPollHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Retrieves and removes the head of this queue,
 or returns <c>null</c> if this queue is empty.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Poll (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Poll(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="override this.Poll : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="linkedBlockingQueue.Poll (timeout, unit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64,Java.Util.Concurrent.TimeUnit)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("poll", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPoll_JLjava_util_concurrent_TimeUnit_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("poll", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetPoll_JLjava_util_concurrent_TimeUnit_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">how long to wait before giving up, in units of
        <c>unit</c></param>
        <param name="unit">a <c>TimeUnit</c> determining how to interpret the
        <c>timeout</c> parameter</param>
        <summary>Retrieves and removes the head of this queue, waiting up to the
 specified wait time if necessary for an element to become available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual void Put (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Put(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Put(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Put : Java.Lang.Object -&gt; unit&#xA;override this.Put : Java.Lang.Object -&gt; unit" Usage="linkedBlockingQueue.Put e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Put(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/lang/Object;)V", "GetPut_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/lang/Object;)V", "GetPut_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Inserts the specified element at the tail of this queue, waiting if
            necessary for space to become available.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#put(E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.put(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemainingCapacity">
      <MemberSignature Language="C#" Value="public virtual int RemainingCapacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RemainingCapacity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.RemainingCapacity" />
      <MemberSignature Language="F#" Value="abstract member RemainingCapacity : unit -&gt; int&#xA;override this.RemainingCapacity : unit -&gt; int" Usage="linkedBlockingQueue.RemainingCapacity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.RemainingCapacity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remainingCapacity", "()I", "GetRemainingCapacityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remainingCapacity", "()I", "GetRemainingCapacityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of additional elements that this queue can ideally
            (in the absence of memory or resource constraints) accept without
            blocking.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#remainingCapacity()" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.remainingCapacity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveIf">
      <MemberSignature Language="C#" Value="public virtual bool RemoveIf (Java.Util.Functions.IPredicate? filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveIf(class Java.Util.Functions.IPredicate filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.RemoveIf(Java.Util.Functions.IPredicate)" />
      <MemberSignature Language="F#" Value="abstract member RemoveIf : Java.Util.Functions.IPredicate -&gt; bool&#xA;override this.RemoveIf : Java.Util.Functions.IPredicate -&gt; bool" Usage="linkedBlockingQueue.RemoveIf filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.ICollection.RemoveIf(Java.Util.Functions.IPredicate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeIf", "(Ljava/util/function/Predicate;)Z", "GetRemoveIf_Ljava_util_function_Predicate_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeIf", "(Ljava/util/function/Predicate;)Z", "GetRemoveIf_Ljava_util_function_Predicate_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.Util.Functions.IPredicate" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#removeIf(java.util.function.Predicate%3C?%20super%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.removeIf(java.util.function.Predicate&lt;? super E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Size" />
      <MemberSignature Language="F#" Value="override this.Size : unit -&gt; int" Usage="linkedBlockingQueue.Size " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.ICollection.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("size", "()I", "GetSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("size", "()I", "GetSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of elements in this queue.</summary>
        <returns>the number of elements in this queue</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#size()" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.size()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Spliterator">
      <MemberSignature Language="C#" Value="public virtual Java.Util.ISpliterator? Spliterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.ISpliterator Spliterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Spliterator" />
      <MemberSignature Language="F#" Value="abstract member Spliterator : unit -&gt; Java.Util.ISpliterator&#xA;override this.Spliterator : unit -&gt; Java.Util.ISpliterator" Usage="linkedBlockingQueue.Spliterator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.ICollection.Java#Lang#IIterable#Spliterator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spliterator", "()Ljava/util/Spliterator;", "GetSpliteratorHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spliterator", "()Ljava/util/Spliterator;", "GetSpliteratorHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ISpliterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Spliterator</c> over the elements in this queue.</summary>
        <returns>a <c>Spliterator</c> over the elements in this queue</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue#spliterator()" title="Reference documentation">Java documentation for <code>java.util.concurrent.LinkedBlockingQueue.spliterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.LinkedBlockingQueue.Take" />
      <MemberSignature Language="F#" Value="abstract member Take : unit -&gt; Java.Lang.Object&#xA;override this.Take : unit -&gt; Java.Lang.Object" Usage="linkedBlockingQueue.Take " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.Concurrent.IBlockingQueue.Take</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("take", "()Ljava/lang/Object;", "GetTakeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("take", "()Ljava/lang/Object;", "GetTakeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves and removes the head of this queue, waiting if necessary
 until an element becomes available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InterruptedException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.LinkedBlockingQueue.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.LinkedBlockingQueue.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.LinkedBlockingQueue.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.LinkedBlockingQueue.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
