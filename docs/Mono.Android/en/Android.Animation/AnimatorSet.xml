<Type Name="AnimatorSet" FullName="Android.Animation.AnimatorSet">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnimatorSet&#xA;Inherits Animator" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnimatorSet sealed : Android::Animation::Animator" />
  <TypeSignature Language="C#" Value="public sealed class AnimatorSet : Android.Animation.Animator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnimatorSet extends Android.Animation.Animator" />
  <TypeSignature Language="DocId" Value="T:Android.Animation.AnimatorSet" />
  <TypeSignature Language="F#" Value="type AnimatorSet = class&#xA;    inherit Animator" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Animation.Animator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/animation/AnimatorSet", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/animation/AnimatorSet", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>This class plays a set of <c>Animator</c> objects in the specified order.</summary>
    <remarks>
      <para>This class plays a set of <c>Animator</c> objects in the specified order. Animations
            can be set up to play together, in sequence, or after a specified delay.</para>
      <para>There are two different approaches to adding animations to a <c>AnimatorSet</c>:
            either the <c>AnimatorSet#playTogether(Animator[]) playTogether()</c> or
            <c>AnimatorSet#playSequentially(Animator[]) playSequentially()</c> methods can be called to add
            a set of animations all at once, or the <c>AnimatorSet#play(Animator)</c> can be
            used in conjunction with methods in the <c>AnimatorSet.Builder Builder</c>
            class to add animations
            one by one.</para>
      <para>It is possible to set up a <c>AnimatorSet</c> with circular dependencies between
            its animations. For example, an animation a1 could be set up to start before animation a2, a2
            before a3, and a3 before a1. The results of this configuration are undefined, but will typically
            result in none of the affected animations being played. Because of this (and because
            circular dependencies do not make logical sense anyway), circular dependencies
            should be avoided, and the dependency flow of animations should only be in one direction.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about animating with <c>AnimatorSet</c>, read the
            <see href="https://developer.android.com/guide/topics/graphics/prop-animation.html#choreography">Property
            Animation</see> developer guide.</para>
      <para>&lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/animation/AnimatorSet" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnimatorSet();" />
      <MemberSignature Language="C#" Value="public AnimatorSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ChildAnimations">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildAnimations As IList(Of Animator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Android::Animation::Animator ^&gt; ^ ChildAnimations { System::Collections::Generic::IList&lt;Android::Animation::Animator ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Animation.Animator&gt;? ChildAnimations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Animation.Animator&gt; ChildAnimations" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.ChildAnimations" />
      <MemberSignature Language="F#" Value="member this.ChildAnimations : System.Collections.Generic.IList&lt;Android.Animation.Animator&gt;" Usage="Android.Animation.AnimatorSet.ChildAnimations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChildAnimations", "()Ljava/util/ArrayList;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChildAnimations", "()Ljava/util/ArrayList;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Animation.Animator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current list of child Animator objects controlled by this
            AnimatorSet.</summary>
        <value>ArrayList&lt;Animator&gt; The list of child animations of this AnimatorSet.</value>
        <remarks>
          <para>Returns the current list of child Animator objects controlled by this
            AnimatorSet. This is a copy of the internal list; modifications to the returned list
            will not affect the AnimatorSet, although changes to the underlying Animator objects
            will affect those objects being managed by the AnimatorSet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#getChildAnimations()" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.getChildAnimations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPlayTime">
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPlayTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CurrentPlayTime { long get(); void set(long value); };" />
      <MemberSignature Language="C#" Value="public long CurrentPlayTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPlayTime" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.CurrentPlayTime" />
      <MemberSignature Language="F#" Value="member this.CurrentPlayTime : int64 with get, set" Usage="Android.Animation.AnimatorSet.CurrentPlayTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentPlayTime", "()J", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentPlayTime", "()J", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setCurrentPlayTime", "(J)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setCurrentPlayTime", "(J)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="playTime">The time, in milliseconds, to which the animation is advanced or rewound.
                            Unless the animation is reversing, the playtime is considered the time since
                            the end of the start delay of the AnimatorSet in a forward playing direction.</param>
        <summary>Returns the milliseconds elapsed since the start of the animation. -or- Sets the position of the animation to the specified point in time.</summary>
        <value>the current position in time of the animation in milliseconds</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the milliseconds elapsed since the start of the animation.</para>
          <para>For ongoing animations, this method returns the current progress of the animation in
            terms of play time. For an animation that has not yet been started: if the animation has been
            seeked to a certain time via <c>#setCurrentPlayTime(long)</c>, the seeked play time will
            be returned; otherwise, this method will return 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#getCurrentPlayTime()" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.getCurrentPlayTime()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the position of the animation to the specified point in time. This time should
            be between 0 and the total duration of the animation, including any repetition. If
            the animation has not yet been started, then it will not advance forward after it is
            set to this time; it will simply set the time to this value and perform any appropriate
            actions based on that time. If the animation is already running, then setCurrentPlayTime()
            will set the current playing time to this value and continue playing from that point.
            On <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> and above, an AnimatorSet
            that hasn't been <c>#start()</c>ed, will issue
            <c>android.animation.Animator.AnimatorListener#onAnimationStart(Animator, boolean)</c>
            and <c>android.animation.Animator.AnimatorListener#onAnimationEnd(Animator, boolean)</c>
            events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#setCurrentPlayTime(long)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.setCurrentPlayTime(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Duration As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Duration { long get(); };" />
      <MemberSignature Language="C#" Value="public override long Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : int64" Usage="Android.Animation.AnimatorSet.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDuration", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDuration", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of each of the child animations of this AnimatorSet.</summary>
        <value>The length of the animation, in milliseconds, of each of the child
            animations of this AnimatorSet.</value>
        <remarks>
          <para>Gets the length of each of the child animations of this AnimatorSet. This value may
            be less than 0, which indicates that no duration has been set on this AnimatorSet
            and each of the child animations will use their own duration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#getDuration()" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.getDuration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsRunning { bool get(); };" />
      <MemberSignature Language="C#" Value="public override bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.IsRunning" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Android.Animation.AnimatorSet.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRunning", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRunning", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if any of the child animations of this AnimatorSet have been started and have
            not yet ended.</summary>
        <value>Whether this AnimatorSet has gone past the initial delay, and at least one child
                    animation has been started and not yet ended.</value>
        <remarks>
          <para>Returns true if any of the child animations of this AnimatorSet have been started and have
            not yet ended. Child animations will not be started until the AnimatorSet has gone past
            its initial delay set through <c>#setStartDelay(long)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#isRunning()" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.isRunning()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Animation.AnimatorSet.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="VB.NET" Value="Public Function Play (anim As Animator) As AnimatorSet.Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Animation::AnimatorSet::Builder ^ Play(Android::Animation::Animator ^ anim);" />
      <MemberSignature Language="C#" Value="public Android.Animation.AnimatorSet.Builder? Play (Android.Animation.Animator? anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Animation.AnimatorSet/Builder Play(class Android.Animation.Animator anim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" />
      <MemberSignature Language="F#" Value="member this.Play : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder" Usage="animatorSet.Play anim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("play", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("play", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation that is the dependency used in later calls to the
 methods in the returned <c>Builder</c> object. A null parameter will result
 in a null <c>Builder</c> return value.</param>
        <summary>This method creates a <c>Builder</c> object, which is used to
 set up playing constraints.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PlaySequentially">
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySequentially (ParamArray items As Animator())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySequentially(... cli::array &lt;Android::Animation::Animator ^&gt; ^ items);" />
      <MemberSignature Language="C#" Value="public void PlaySequentially (params Android.Animation.Animator[]? items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySequentially(class Android.Animation.Animator[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.PlaySequentially(Android.Animation.Animator[])" />
      <MemberSignature Language="F#" Value="member this.PlaySequentially : Android.Animation.Animator[] -&gt; unit" Usage="animatorSet.PlaySequentially items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSequentially", "([Landroid/animation/Animator;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playSequentially", "([Landroid/animation/Animator;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Android.Animation.Animator[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">The animations that will be started one after another.</param>
        <summary>Sets up this AnimatorSet to play each of the supplied animations when the
            previous animation ends.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#playSequentially(android.animation.Animator)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.playSequentially(android.animation.Animator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySequentially">
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySequentially (items As IList(Of Animator))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySequentially(System::Collections::Generic::IList&lt;Android::Animation::Animator ^&gt; ^ items);" />
      <MemberSignature Language="C#" Value="public void PlaySequentially (System.Collections.Generic.IList&lt;Android.Animation.Animator&gt;? items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySequentially(class System.Collections.Generic.IList`1&lt;class Android.Animation.Animator&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.PlaySequentially(System.Collections.Generic.IList{Android.Animation.Animator})" />
      <MemberSignature Language="F#" Value="member this.PlaySequentially : System.Collections.Generic.IList&lt;Android.Animation.Animator&gt; -&gt; unit" Usage="animatorSet.PlaySequentially items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSequentially", "(Ljava/util/List;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playSequentially", "(Ljava/util/List;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;Android.Animation.Animator&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">The animations that will be started one after another.</param>
        <summary>Sets up this AnimatorSet to play each of the supplied animations when the
            previous animation ends.</summary>
        <remarks>
          <para>Sets up this AnimatorSet to play each of the supplied animations when the
            previous animation ends.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#playSequentially(java.util.List%3Candroid.animation.Animator%3E)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.playSequentially(java.util.List&lt;android.animation.Animator&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayTogether">
      <MemberSignature Language="VB.NET" Value="Public Sub PlayTogether (ParamArray items As Animator())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayTogether(... cli::array &lt;Android::Animation::Animator ^&gt; ^ items);" />
      <MemberSignature Language="C#" Value="public void PlayTogether (params Android.Animation.Animator[]? items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayTogether(class Android.Animation.Animator[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.PlayTogether(Android.Animation.Animator[])" />
      <MemberSignature Language="F#" Value="member this.PlayTogether : Android.Animation.Animator[] -&gt; unit" Usage="animatorSet.PlayTogether items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playTogether", "([Landroid/animation/Animator;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playTogether", "([Landroid/animation/Animator;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Android.Animation.Animator[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">The animations that will be started simultaneously.</param>
        <summary>Sets up this AnimatorSet to play all of the supplied animations at the same time.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#playTogether(android.animation.Animator)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.playTogether(android.animation.Animator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayTogether">
      <MemberSignature Language="VB.NET" Value="Public Sub PlayTogether (items As ICollection(Of Animator))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayTogether(System::Collections::Generic::ICollection&lt;Android::Animation::Animator ^&gt; ^ items);" />
      <MemberSignature Language="C#" Value="public void PlayTogether (System.Collections.Generic.ICollection&lt;Android.Animation.Animator&gt;? items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayTogether(class System.Collections.Generic.ICollection`1&lt;class Android.Animation.Animator&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.PlayTogether(System.Collections.Generic.ICollection{Android.Animation.Animator})" />
      <MemberSignature Language="F#" Value="member this.PlayTogether : System.Collections.Generic.ICollection&lt;Android.Animation.Animator&gt; -&gt; unit" Usage="animatorSet.PlayTogether items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playTogether", "(Ljava/util/Collection;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playTogether", "(Ljava/util/Collection;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.ICollection&lt;Android.Animation.Animator&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">The animations that will be started simultaneously.</param>
        <summary>Sets up this AnimatorSet to play all of the supplied animations at the same time.</summary>
        <remarks>
          <para>Sets up this AnimatorSet to play all of the supplied animations at the same time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#playTogether(java.util.Collection%3Candroid.animation.Animator%3E)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.playTogether(java.util.Collection&lt;android.animation.Animator&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Reverse" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="animatorSet.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reverse", "()V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reverse", "()V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plays the AnimatorSet in reverse.</summary>
        <remarks>
          <para>Plays the AnimatorSet in reverse. If the animation has been seeked to a specific play time
            using <c>#setCurrentPlayTime(long)</c>, it will play backwards from the point seeked when
            reverse was called. Otherwise, then it will start from the end and play backwards. This
            behavior is only set for the current animation; future playing of the animation will use the
            default behavior of playing forward.</para>
          <para>Note: reverse is not supported for infinite AnimatorSet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#reverse()" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.reverse()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetDuration (duration As Long) As Animator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Android::Animation::Animator ^ SetDuration(long duration);" />
      <MemberSignature Language="C#" Value="public override Android.Animation.Animator SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Animation.Animator SetDuration(int64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.SetDuration(System.Int64)" />
      <MemberSignature Language="F#" Value="override this.SetDuration : int64 -&gt; Android.Animation.Animator" Usage="animatorSet.SetDuration duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDuration", "(J)Landroid/animation/Animator;", "GetSetDuration_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDuration", "(J)Landroid/animation/Animator;", "GetSetDuration_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of the animation, in milliseconds, of each of the child
 animations of this AnimatorSet.
</param>
        <summary>Sets the length of each of the current child animations of this AnimatorSet.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetInterpolator (interpolator As ITimeInterpolator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetInterpolator(Android::Animation::ITimeInterpolator ^ interpolator);" />
      <MemberSignature Language="C#" Value="public override void SetInterpolator (Android.Animation.ITimeInterpolator? interpolator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetInterpolator(class Android.Animation.ITimeInterpolator interpolator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.SetInterpolator(Android.Animation.ITimeInterpolator)" />
      <MemberSignature Language="F#" Value="override this.SetInterpolator : Android.Animation.ITimeInterpolator -&gt; unit" Usage="animatorSet.SetInterpolator interpolator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interpolator" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="interpolator">the interpolator to be used by each child animation of this AnimatorSet</param>
        <summary>Sets the TimeInterpolator for all current <c>#getChildAnimations() child animations</c>
            of this AnimatorSet.</summary>
        <remarks>
          <para>Sets the TimeInterpolator for all current <c>#getChildAnimations() child animations</c>
            of this AnimatorSet. The default value is null, which means that no interpolator
            is set on this AnimatorSet. Setting the interpolator to any non-null value
            will cause that interpolator to be set on the child animations
            when the set is started.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#setInterpolator(android.animation.TimeInterpolator)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.setInterpolator(android.animation.TimeInterpolator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StartDelay">
      <MemberSignature Language="VB.NET" Value="Public Overrides Property StartDelay As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long StartDelay { long get(); void set(long value); };" />
      <MemberSignature Language="C#" Value="public override long StartDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartDelay" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.StartDelay" />
      <MemberSignature Language="F#" Value="member this.StartDelay : int64 with get, set" Usage="Android.Animation.AnimatorSet.StartDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStartDelay", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStartDelay", "()J", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStartDelay", "(J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStartDelay", "(J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="startDelay">The amount of the delay, in milliseconds</param>
        <summary>The amount of time, in milliseconds, to delay starting the animation after
            <c>#start()</c> is called. -or- The amount of time, in milliseconds, to delay starting the animation after
            <c>#start()</c> is called.</summary>
        <value>the number of milliseconds to delay running the animation</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The amount of time, in milliseconds, to delay starting the animation after
            <c>#start()</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#getStartDelay()" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.getStartDelay()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>The amount of time, in milliseconds, to delay starting the animation after
            <c>#start()</c> is called. Note that the start delay should always be non-negative. Any
            negative start delay will be clamped to 0 on N and above.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/AnimatorSet#setStartDelay(long)" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.setStartDelay(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Animation.AnimatorSet.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Animation.AnimatorSet.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
