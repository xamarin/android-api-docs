<Type Name="AnimatorSet+Builder" FullName="Android.Animation.AnimatorSet+Builder">
  <TypeSignature Language="VB.NET" Value="Public Class AnimatorSet.Builder&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public: ref class AnimatorSet::Builder : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class AnimatorSet.Builder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit AnimatorSet/Builder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Animation.AnimatorSet.Builder" />
  <TypeSignature Language="F#" Value="type AnimatorSet.Builder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/animation/AnimatorSet$Builder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/animation/AnimatorSet$Builder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The <c>Builder</c> object is a utility class to facilitate adding animations to a
            <c>AnimatorSet</c> along with the relationships between the various animations.</summary>
    <remarks>
      <para>The <c>Builder</c> object is a utility class to facilitate adding animations to a
            <c>AnimatorSet</c> along with the relationships between the various animations. The
            intention of the <c>Builder</c> methods, along with the <c>AnimatorSet#play(Animator) play()</c> method of <c>AnimatorSet</c> is to make it possible
            to express the dependency relationships of animations in a natural way. Developers can also
            use the <c>AnimatorSet#playTogether(Animator[]) playTogether()</c> and <c>AnimatorSet#playSequentially(Animator[]) playSequentially()</c> methods if these suit the need,
            but it might be easier in some situations to express the AnimatorSet of animations in pairs.
            &lt;p/&gt;</para>
      <para>The <c>Builder</c> object cannot be constructed directly, but is rather constructed
            internally via a call to <c>AnimatorSet#play(Animator)</c>.</para>
      <para>&lt;p/&gt;</para>
      <para>For example, this sets up a AnimatorSet to play anim1 and anim2 at the same time, anim3 to
            play when anim2 finishes, and anim4 to play when anim3 finishes:</para>
      <code lang="text/java">AnimatorSet s = new AnimatorSet();
                s.play(anim1).with(anim2);
                s.play(anim2).before(anim3);
                s.play(anim4).after(anim3);
            </code>
      <para>&lt;p/&gt;</para>
      <para>Note in the example that both <c>Builder#before(Animator)</c> and <c>Builder#after(Animator)</c> are used. These are just different ways of expressing the same
            relationship and are provided to make it easier to say things in a way that is more natural,
            depending on the situation.</para>
      <para>&lt;p/&gt;</para>
      <para>It is possible to make several calls into the same <c>Builder</c> object to express
            multiple relationships. However, note that it is only the animation passed into the initial
            <c>AnimatorSet#play(Animator)</c> method that is the dependency in any of the successive
            calls to the <c>Builder</c> object. For example, the following code starts both anim2
            and anim3 when anim1 ends; there is no direct dependency relationship between anim2 and
            anim3:</para>
      <code lang="text/java">AnimatorSet s = new AnimatorSet();
              s.play(anim1).before(anim2).before(anim3);
            </code>
      <para>If the desired result is to play anim1 then anim2 then anim3, this code expresses the
            relationship correctly:&lt;/p&gt;</para>
      <code lang="text/java">AnimatorSet s = new AnimatorSet();
              s.play(anim1).before(anim2);
              s.play(anim2).before(anim3);
            </code>
      <para>&lt;p/&gt;</para>
      <para>Note that it is possible to express relationships that cannot be resolved and will not
            result in sensible results. For example, <c>play(anim1).after(anim1)</c> makes no
            sense. In general, circular dependencies like this one (or more indirect ones where a depends
            on b, which depends on c, which depends on a) should be avoided. Only create AnimatorSets
            that can boil down to a simple, one-way relationship of animations starting with, before, and
            after other, different, animations.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/animation/AnimatorSet.Builder" title="Reference documentation">Java documentation for <code>android.animation.AnimatorSet.Builder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Builder(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Builder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Builder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Animation.AnimatorSet.Builder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Animation.AnimatorSet.Builder" Usage="new Android.Animation.AnimatorSet.Builder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="After">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function After (anim As Animator) As AnimatorSet.Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Animation::AnimatorSet::Builder ^ After(Android::Animation::Animator ^ anim);" />
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder? After (Android.Animation.Animator? anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder After(class Android.Animation.Animator anim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Builder.After(Android.Animation.Animator)" />
      <MemberSignature Language="F#" Value="abstract member After : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder&#xA;override this.After : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder" Usage="builder.After anim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("after", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetAfter_Landroid_animation_Animator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("after", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetAfter_Landroid_animation_Animator_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation whose end will cause the animation supplied to the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> method to play.
</param>
        <summary>Sets up the given animation to play when the animation supplied in the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> call that created this <c>Builder</c> object
 to start when the animation supplied in this method call ends.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="After">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function After (delay As Long) As AnimatorSet.Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Animation::AnimatorSet::Builder ^ After(long delay);" />
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder? After (long delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder After(int64 delay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Builder.After(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member After : int64 -&gt; Android.Animation.AnimatorSet.Builder&#xA;override this.After : int64 -&gt; Android.Animation.AnimatorSet.Builder" Usage="builder.After delay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("after", "(J)Landroid/animation/AnimatorSet$Builder;", "GetAfter_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("after", "(J)Landroid/animation/AnimatorSet$Builder;", "GetAfter_JHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="delay">The number of milliseconds that should elapse before the
 animation starts.
</param>
        <summary>Sets up the animation supplied in the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> call that created this <c>Builder</c> object
 to play when the given amount of time elapses.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Before">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Before (anim As Animator) As AnimatorSet.Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Animation::AnimatorSet::Builder ^ Before(Android::Animation::Animator ^ anim);" />
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder? Before (Android.Animation.Animator? anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder Before(class Android.Animation.Animator anim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Builder.Before(Android.Animation.Animator)" />
      <MemberSignature Language="F#" Value="abstract member Before : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder&#xA;override this.Before : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder" Usage="builder.Before anim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("before", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetBefore_Landroid_animation_Animator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("before", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetBefore_Landroid_animation_Animator_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation that will play when the animation supplied to the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> method ends.
</param>
        <summary>Sets up the given animation to play when the animation supplied in the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> call that created this <c>Builder</c> object
 ends.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.Builder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Animation.AnimatorSet.Builder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.Builder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Animation.AnimatorSet.Builder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.AnimatorSet.Builder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Animation.AnimatorSet.Builder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function With (anim As Animator) As AnimatorSet.Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Animation::AnimatorSet::Builder ^ With(Android::Animation::Animator ^ anim);" />
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder? With (Android.Animation.Animator? anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder With(class Android.Animation.Animator anim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.AnimatorSet.Builder.With(Android.Animation.Animator)" />
      <MemberSignature Language="F#" Value="abstract member With : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder&#xA;override this.With : Android.Animation.Animator -&gt; Android.Animation.AnimatorSet.Builder" Usage="builder.With anim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("with", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetWith_Landroid_animation_Animator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("with", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetWith_Landroid_animation_Animator_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation that will play when the animation supplied to the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> method starts.
</param>
        <summary>Sets up the given animation to play at the same time as the animation supplied in the
 <see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /> call that created this <c>Builder</c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
