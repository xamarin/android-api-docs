<Type Name="Animator" FullName="Android.Animation.Animator">
  <TypeSignature Language="C#" Value="public abstract class Animator : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Animator extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Animation.Animator" />
  <TypeSignature Language="F#" Value="type Animator = class&#xA;    inherit Object&#xA;    interface ICloneable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/animation/Animator", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/animation/Animator", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>This is the superclass for classes which provide basic support for animations which can be
            started, ended, and have <c>AnimatorListeners</c> added to them.</summary>
    <remarks>
      <para>This is the superclass for classes which provide basic support for animations which can be
            started, ended, and have <c>AnimatorListeners</c> added to them.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/animation/Animator" title="Reference documentation">Java documentation for <code>android.animation.Animator</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Animator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Animator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Animation.Animator : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Animation.Animator" Usage="new Android.Animation.Animator (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public virtual void AddListener (Android.Animation.Animator.IAnimatorListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddListener(class Android.Animation.Animator/IAnimatorListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.AddListener(Android.Animation.Animator.IAnimatorListener)" />
      <MemberSignature Language="F#" Value="abstract member AddListener : Android.Animation.Animator.IAnimatorListener -&gt; unit&#xA;override this.AddListener : Android.Animation.Animator.IAnimatorListener -&gt; unit" Usage="animator.AddListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetAddListener_Landroid_animation_Animator_AnimatorListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetAddListener_Landroid_animation_Animator_AnimatorListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.Animator+IAnimatorListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be added to the current set of listeners for this animation.</param>
        <summary>Adds a listener to the set of listeners that are sent events through the life of an
            animation, such as start, repeat, and end.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#addListener(android.animation.AnimatorListener)" title="Reference documentation">Java documentation for <code>android.animation.Animator.addListener(android.animation.AnimatorListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddPauseListener">
      <MemberSignature Language="C#" Value="public virtual void AddPauseListener (Android.Animation.Animator.IAnimatorPauseListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPauseListener(class Android.Animation.Animator/IAnimatorPauseListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.AddPauseListener(Android.Animation.Animator.IAnimatorPauseListener)" />
      <MemberSignature Language="F#" Value="abstract member AddPauseListener : Android.Animation.Animator.IAnimatorPauseListener -&gt; unit&#xA;override this.AddPauseListener : Android.Animation.Animator.IAnimatorPauseListener -&gt; unit" Usage="animator.AddPauseListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetAddPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetAddPauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.Animator+IAnimatorPauseListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be added to the current set of pause listeners
            for this animation.</param>
        <summary>Adds a pause listener to this animator.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#addPauseListener(android.animation.AnimatorPauseListener)" title="Reference documentation">Java documentation for <code>android.animation.Animator.addPauseListener(android.animation.AnimatorPauseListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationCancel">
      <MemberSignature Language="C#" Value="public event EventHandler AnimationCancel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnimationCancel" />
      <MemberSignature Language="DocId" Value="E:Android.Animation.Animator.AnimationCancel" />
      <MemberSignature Language="F#" Value="member this.AnimationCancel : EventHandler " Usage="member this.AnimationCancel : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationEnd">
      <MemberSignature Language="C#" Value="public event EventHandler AnimationEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnimationEnd" />
      <MemberSignature Language="DocId" Value="E:Android.Animation.Animator.AnimationEnd" />
      <MemberSignature Language="F#" Value="member this.AnimationEnd : EventHandler " Usage="member this.AnimationEnd : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationPause">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Animation.Animator.AnimationPauseEventArgs&gt; AnimationPause;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Animation.Animator/AnimationPauseEventArgs&gt; AnimationPause" />
      <MemberSignature Language="DocId" Value="E:Android.Animation.Animator.AnimationPause" />
      <MemberSignature Language="F#" Value="member this.AnimationPause : EventHandler&lt;Android.Animation.Animator.AnimationPauseEventArgs&gt; " Usage="member this.AnimationPause : System.EventHandler&lt;Android.Animation.Animator.AnimationPauseEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Animation.Animator+AnimationPauseEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationRepeat">
      <MemberSignature Language="C#" Value="public event EventHandler AnimationRepeat;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnimationRepeat" />
      <MemberSignature Language="DocId" Value="E:Android.Animation.Animator.AnimationRepeat" />
      <MemberSignature Language="F#" Value="member this.AnimationRepeat : EventHandler " Usage="member this.AnimationRepeat : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationResume">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Animation.Animator.AnimationResumeEventArgs&gt; AnimationResume;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Animation.Animator/AnimationResumeEventArgs&gt; AnimationResume" />
      <MemberSignature Language="DocId" Value="E:Android.Animation.Animator.AnimationResume" />
      <MemberSignature Language="F#" Value="member this.AnimationResume : EventHandler&lt;Android.Animation.Animator.AnimationResumeEventArgs&gt; " Usage="member this.AnimationResume : System.EventHandler&lt;Android.Animation.Animator.AnimationResumeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Animation.Animator+AnimationResumeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimationStart">
      <MemberSignature Language="C#" Value="public event EventHandler AnimationStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnimationStart" />
      <MemberSignature Language="DocId" Value="E:Android.Animation.Animator.AnimationStart" />
      <MemberSignature Language="F#" Value="member this.AnimationStart : EventHandler " Usage="member this.AnimationStart : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.Cancel" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="animator.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "()V", "GetCancelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancel", "()V", "GetCancelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the animation.</summary>
        <remarks>
          <para>Cancels the animation. Unlike <c>#end()</c>, <c>cancel()</c> causes the animation to
            stop in its tracks, sending an
            <c>android.animation.Animator.AnimatorListener#onAnimationCancel(Animator)</c> to
            its listeners, followed by an
            <c>android.animation.Animator.AnimatorListener#onAnimationEnd(Animator)</c> message.</para>
          <para>This method must be called on the thread that is running the animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#cancel()" title="Reference documentation">Java documentation for <code>android.animation.Animator.cancel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Android.Animation.Animator" Usage="animator.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Landroid/animation/Animator;", "GetCloneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Landroid/animation/Animator;", "GetCloneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public abstract long Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : int64" Usage="Android.Animation.Animator.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of the animation.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DurationInfinite">
      <MemberSignature Language="C#" Value="public const long DurationInfinite = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 DurationInfinite = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Animation.Animator.DurationInfinite" />
      <MemberSignature Language="F#" Value="val mutable DurationInfinite : int64" Usage="Android.Animation.Animator.DurationInfinite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DURATION_INFINITE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DURATION_INFINITE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>The value used to indicate infinite duration (e.</summary>
        <remarks>
          <para>The value used to indicate infinite duration (e.g. when Animators repeat infinitely).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#DURATION_INFINITE" title="Reference documentation">Java documentation for <code>android.animation.Animator.DURATION_INFINITE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public virtual void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.End" />
      <MemberSignature Language="F#" Value="abstract member End : unit -&gt; unit&#xA;override this.End : unit -&gt; unit" Usage="animator.End " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("end", "()V", "GetEndHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("end", "()V", "GetEndHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends the animation.</summary>
        <remarks>
          <para>Ends the animation. This causes the animation to assign the end value of the property being
            animated, then calling the
            <c>android.animation.Animator.AnimatorListener#onAnimationEnd(Animator)</c> method on
            its listeners.</para>
          <para>This method must be called on the thread that is running the animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#end()" title="Reference documentation">Java documentation for <code>android.animation.Animator.end()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.ITimeInterpolator? Interpolator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Animation.ITimeInterpolator Interpolator" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.Interpolator" />
      <MemberSignature Language="F#" Value="member this.Interpolator : Android.Animation.ITimeInterpolator" Usage="Android.Animation.Animator.Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ITimeInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the timing interpolator that this animation uses.</summary>
        <value>The timing interpolator for this animation.</value>
        <remarks>
          <para>Returns the timing interpolator that this animation uses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#getInterpolator()" title="Reference documentation">Java documentation for <code>android.animation.Animator.getInterpolator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public virtual bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.IsPaused" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="Android.Animation.Animator.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPaused", "()Z", "GetIsPausedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPaused", "()Z", "GetIsPausedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this animator is currently in a paused state.</summary>
        <value>True if the animator is currently paused, false otherwise.</value>
        <remarks>
          <para>Returns whether this animator is currently in a paused state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#isPaused()" title="Reference documentation">Java documentation for <code>android.animation.Animator.isPaused()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Animation.Animator.Pause" />
        <altmember cref="M:Android.Animation.Animator.Resume" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public abstract bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.IsRunning" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Android.Animation.Animator.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this Animator is currently running (having been started and gone past any
 initial startDelay period and not yet ended).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsStarted">
      <MemberSignature Language="C#" Value="public virtual bool IsStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStarted" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.IsStarted" />
      <MemberSignature Language="F#" Value="member this.IsStarted : bool" Usage="Android.Animation.Animator.IsStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStarted", "()Z", "GetIsStartedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStarted", "()Z", "GetIsStartedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this Animator has been started and not yet ended.</summary>
        <value>Whether the Animator has been started and not yet ended.</value>
        <remarks>
          <para>Returns whether this Animator has been started and not yet ended. For reusable
            Animators (which most Animators are, apart from the one-shot animator produced by
            <c>android.view.ViewAnimationUtils#createCircularReveal(
            android.view.View, int, int, float, float) createCircularReveal()</c>),
            this state is a superset of <c>#isRunning()</c>, because an Animator with a
            nonzero <c>#getStartDelay() startDelay</c> will return true for <c>#isStarted()</c> during
            the delay phase, whereas <c>#isRunning()</c> will return true only after the delay phase
            is complete. Non-reusable animators will always return true after they have been
            started, because they cannot return to a non-started state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#isStarted()" title="Reference documentation">Java documentation for <code>android.animation.Animator.isStarted()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Animation.Animator.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Animation.Animator.IAnimatorListener&gt;? Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Animation.Animator/IAnimatorListener&gt; Listeners" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.Listeners" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Collections.Generic.IList&lt;Android.Animation.Animator.IAnimatorListener&gt;" Usage="Android.Animation.Animator.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getListeners", "()Ljava/util/ArrayList;", "GetGetListenersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getListeners", "()Ljava/util/ArrayList;", "GetGetListenersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Animation.Animator+IAnimatorListener&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the set of <c>android.animation.Animator.AnimatorListener</c> objects that are currently
            listening for events on this <c>Animator</c> object.</summary>
        <value>ArrayList&lt;AnimatorListener&gt; The set of listeners.</value>
        <remarks>
          <para>Gets the set of <c>android.animation.Animator.AnimatorListener</c> objects that are currently
            listening for events on this <c>Animator</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#getListeners()" title="Reference documentation">Java documentation for <code>android.animation.Animator.getListeners()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="animator.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pause", "()V", "GetPauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pause", "()V", "GetPauseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses a running animation.</summary>
        <remarks>
          <para>Pauses a running animation. This method should only be called on the same thread on
            which the animation was started. If the animation has not yet been <c>#isStarted() started</c> or has since ended, then the call is ignored. Paused
            animations can be resumed by calling <c>#resume()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#pause()" title="Reference documentation">Java documentation for <code>android.animation.Animator.pause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Animation.Animator.Resume" />
        <altmember cref="P:Android.Animation.Animator.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAllListeners">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.RemoveAllListeners" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllListeners : unit -&gt; unit&#xA;override this.RemoveAllListeners : unit -&gt; unit" Usage="animator.RemoveAllListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeAllListeners", "()V", "GetRemoveAllListenersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeAllListeners", "()V", "GetRemoveAllListenersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all <c>#addListener(android.animation.Animator.AnimatorListener) listeners</c>
            and <c>#addPauseListener(android.animation.Animator.AnimatorPauseListener)
            pauseListeners</c> from this object.</summary>
        <remarks>
          <para>Removes all <c>#addListener(android.animation.Animator.AnimatorListener) listeners</c>
            and <c>#addPauseListener(android.animation.Animator.AnimatorPauseListener)
            pauseListeners</c> from this object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#removeAllListeners()" title="Reference documentation">Java documentation for <code>android.animation.Animator.removeAllListeners()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveListener (Android.Animation.Animator.IAnimatorListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveListener(class Android.Animation.Animator/IAnimatorListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.RemoveListener(Android.Animation.Animator.IAnimatorListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveListener : Android.Animation.Animator.IAnimatorListener -&gt; unit&#xA;override this.RemoveListener : Android.Animation.Animator.IAnimatorListener -&gt; unit" Usage="animator.RemoveListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetRemoveListener_Landroid_animation_Animator_AnimatorListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetRemoveListener_Landroid_animation_Animator_AnimatorListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.Animator+IAnimatorListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be removed from the current set of listeners for this
                            animation.</param>
        <summary>Removes a listener from the set listening to this animation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#removeListener(android.animation.AnimatorListener)" title="Reference documentation">Java documentation for <code>android.animation.Animator.removeListener(android.animation.AnimatorListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemovePauseListener">
      <MemberSignature Language="C#" Value="public virtual void RemovePauseListener (Android.Animation.Animator.IAnimatorPauseListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePauseListener(class Android.Animation.Animator/IAnimatorPauseListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.RemovePauseListener(Android.Animation.Animator.IAnimatorPauseListener)" />
      <MemberSignature Language="F#" Value="abstract member RemovePauseListener : Android.Animation.Animator.IAnimatorPauseListener -&gt; unit&#xA;override this.RemovePauseListener : Android.Animation.Animator.IAnimatorPauseListener -&gt; unit" Usage="animator.RemovePauseListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removePauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetRemovePauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePauseListener", "(Landroid/animation/Animator$AnimatorPauseListener;)V", "GetRemovePauseListener_Landroid_animation_Animator_AnimatorPauseListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.Animator+IAnimatorPauseListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be removed from the current set of pause
            listeners for this animation.</param>
        <summary>Removes a pause listener from the set listening to this animation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#removePauseListener(android.animation.AnimatorPauseListener)" title="Reference documentation">Java documentation for <code>android.animation.Animator.removePauseListener(android.animation.AnimatorPauseListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.Resume" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="animator.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resume", "()V", "GetResumeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resume", "()V", "GetResumeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes a paused animation, causing the animator to pick up where it left off
            when it was paused.</summary>
        <remarks>
          <para>Resumes a paused animation, causing the animator to pick up where it left off
            when it was paused. This method should only be called on the same thread on
            which the animation was started. Calls to resume() on an animator that is
            not currently paused will be ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#resume()" title="Reference documentation">Java documentation for <code>android.animation.Animator.resume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Animation.Animator.Pause" />
        <altmember cref="P:Android.Animation.Animator.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public abstract Android.Animation.Animator? SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator SetDuration(int64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.SetDuration(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetDuration : int64 -&gt; Android.Animation.Animator" Usage="animator.SetDuration duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDuration", "(J)Landroid/animation/Animator;", "GetSetDuration_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDuration", "(J)Landroid/animation/Animator;", "GetSetDuration_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of the animation, in milliseconds.</param>
        <summary>Sets the duration of the animation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Sets the duration of the animation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#setDuration(long)" title="Reference documentation">Java documentation for <code>android.animation.Animator.setDuration(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public abstract void SetInterpolator (Android.Animation.ITimeInterpolator? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInterpolator(class Android.Animation.ITimeInterpolator value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.SetInterpolator(Android.Animation.ITimeInterpolator)" />
      <MemberSignature Language="F#" Value="abstract member SetInterpolator : Android.Animation.ITimeInterpolator -&gt; unit" Usage="animator.SetInterpolator value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)V", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)V", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="value">the interpolator to be used by this animation</param>
        <summary>The time interpolator used in calculating the elapsed fraction of the
            animation.</summary>
        <remarks>
          <para>The time interpolator used in calculating the elapsed fraction of the
            animation. The interpolator determines whether the animation runs with
            linear or non-linear motion, such as acceleration and deceleration. The
            default value is <c>android.view.animation.AccelerateDecelerateInterpolator</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#setInterpolator(android.animation.TimeInterpolator)" title="Reference documentation">Java documentation for <code>android.animation.Animator.setInterpolator(android.animation.TimeInterpolator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public virtual void SetTarget (Java.Lang.Object? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTarget(class Java.Lang.Object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.SetTarget(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetTarget : Java.Lang.Object -&gt; unit&#xA;override this.SetTarget : Java.Lang.Object -&gt; unit" Usage="animator.SetTarget target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTarget", "(Ljava/lang/Object;)V", "GetSetTarget_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTarget", "(Ljava/lang/Object;)V", "GetSetTarget_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="target">The object being animated</param>
        <summary>Sets the target object whose property will be animated by this animation.</summary>
        <remarks>
          <para>Sets the target object whose property will be animated by this animation. Not all subclasses
            operate on target objects (for example, <c>ValueAnimator</c>, but this method
            is on the superclass for the convenience of dealing generically with those subclasses
            that do handle targets.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; The target is stored as a weak reference internally to avoid leaking
            resources by having animators directly reference old targets. Therefore, you should
            ensure that animator targets always have a hard reference elsewhere.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#setTarget(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.animation.Animator.setTarget(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetupEndValues">
      <MemberSignature Language="C#" Value="public virtual void SetupEndValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetupEndValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.SetupEndValues" />
      <MemberSignature Language="F#" Value="abstract member SetupEndValues : unit -&gt; unit&#xA;override this.SetupEndValues : unit -&gt; unit" Usage="animator.SetupEndValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setupEndValues", "()V", "GetSetupEndValuesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setupEndValues", "()V", "GetSetupEndValuesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method tells the object to use appropriate information to extract
            ending values for the animation.</summary>
        <remarks>
          <para>This method tells the object to use appropriate information to extract
            ending values for the animation. For example, a AnimatorSet object will pass
            this call to its child objects to tell them to set up the values. A
            ObjectAnimator object will use the information it has about its target object
            and PropertyValuesHolder objects to get the start values for its properties.
            A ValueAnimator object will ignore the request since it does not have enough
            information (such as a target object) to gather these values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#setupEndValues()" title="Reference documentation">Java documentation for <code>android.animation.Animator.setupEndValues()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetupStartValues">
      <MemberSignature Language="C#" Value="public virtual void SetupStartValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetupStartValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.SetupStartValues" />
      <MemberSignature Language="F#" Value="abstract member SetupStartValues : unit -&gt; unit&#xA;override this.SetupStartValues : unit -&gt; unit" Usage="animator.SetupStartValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setupStartValues", "()V", "GetSetupStartValuesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setupStartValues", "()V", "GetSetupStartValuesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method tells the object to use appropriate information to extract
            starting values for the animation.</summary>
        <remarks>
          <para>This method tells the object to use appropriate information to extract
            starting values for the animation. For example, a AnimatorSet object will pass
            this call to its child objects to tell them to set up the values. A
            ObjectAnimator object will use the information it has about its target object
            and PropertyValuesHolder objects to get the start values for its properties.
            A ValueAnimator object will ignore the request since it does not have enough
            information (such as a target object) to gather these values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#setupStartValues()" title="Reference documentation">Java documentation for <code>android.animation.Animator.setupStartValues()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.Animator.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="animator.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts this animation.</summary>
        <remarks>
          <para>Starts this animation. If the animation has a nonzero startDelay, the animation will start
            running after that delay elapses. A non-delayed animation will have its initial
            value(s) set immediately, followed by calls to
            <c>AnimatorListener#onAnimationStart(Animator)</c> for any listeners of this animator.</para>
          <para>The animation started by calling this method will be run on the thread that called
            this method. This thread should have a Looper on it (a runtime exception will be thrown if
            this is not the case). Also, if the animation will animate
            properties of objects in the view hierarchy, then the calling thread should be the UI
            thread for that view hierarchy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#start()" title="Reference documentation">Java documentation for <code>android.animation.Animator.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StartDelay">
      <MemberSignature Language="C#" Value="public abstract long StartDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartDelay" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.StartDelay" />
      <MemberSignature Language="F#" Value="member this.StartDelay : int64 with get, set" Usage="Android.Animation.Animator.StartDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStartDelay", "(J)V", "GetSetStartDelay_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStartDelay", "(J)V", "GetSetStartDelay_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The amount of time, in milliseconds, to delay processing the animation
 after <see cref="M:Android.Animation.Animator.Start" /> is called.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Animation.Animator.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Animation.Animator.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalDuration">
      <MemberSignature Language="C#" Value="public virtual long TotalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalDuration" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.Animator.TotalDuration" />
      <MemberSignature Language="F#" Value="member this.TotalDuration : int64" Usage="Android.Animation.Animator.TotalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTotalDuration", "()J", "GetGetTotalDurationHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTotalDuration", "()J", "GetGetTotalDurationHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total duration of the animation, accounting for animation sequences, start delay,
            and repeating.</summary>
        <value>Total time an animation takes to finish, starting from the time <c>#start()</c>
                     is called. <c>#DURATION_INFINITE</c> will be returned if the animation or any
                     child animation repeats infinite times.</value>
        <remarks>
          <para>Gets the total duration of the animation, accounting for animation sequences, start delay,
            and repeating. Return <c>#DURATION_INFINITE</c> if the duration is infinite.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/Animator#getTotalDuration()" title="Reference documentation">Java documentation for <code>android.animation.Animator.getTotalDuration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
