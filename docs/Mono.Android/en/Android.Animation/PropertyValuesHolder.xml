<Type Name="PropertyValuesHolder" FullName="Android.Animation.PropertyValuesHolder">
  <TypeSignature Language="C#" Value="public class PropertyValuesHolder : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyValuesHolder extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Animation.PropertyValuesHolder" />
  <TypeSignature Language="F#" Value="type PropertyValuesHolder = class&#xA;    inherit Object&#xA;    interface ICloneable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/animation/PropertyValuesHolder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/animation/PropertyValuesHolder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>This class holds information about a property and the values that that property
            should take on during an animation.</summary>
    <remarks>
      <para>This class holds information about a property and the values that that property
            should take on during an animation. PropertyValuesHolder objects can be used to create
            animations with ValueAnimator or ObjectAnimator that operate on several different properties
            in parallel.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyValuesHolder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Animation.PropertyValuesHolder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Animation.PropertyValuesHolder" Usage="new Android.Animation.PropertyValuesHolder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.PropertyValuesHolder? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.PropertyValuesHolder Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Android.Animation.PropertyValuesHolder" Usage="propertyValuesHolder.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Landroid/animation/PropertyValuesHolder;", "GetCloneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Landroid/animation/PropertyValuesHolder;", "GetCloneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.PropertyValuesHolder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Animation.PropertyValuesHolder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfFloat (Android.Util.Property? property, params float[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfFloat(class Android.Util.Property property, float32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfFloat(Android.Util.Property,System.Single[])" />
      <MemberSignature Language="F#" Value="static member OfFloat : Android.Util.Property * single[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfFloat (property, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofFloat", "(Landroid/util/Property;[F)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofFloat", "(Landroid/util/Property;[F)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
        <Parameter Name="values" Type="System.Single[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property being animated. Should not be null.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of float values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            set of float values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofFloat(android.util.Property%3C?,%20java.lang.Float%3E,%20float...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofFloat(android.util.Property&lt;?, java.lang.Float&gt;, float...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfFloat (string? propertyName, params float[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfFloat(string propertyName, float32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfFloat(System.String,System.Single[])" />
      <MemberSignature Language="F#" Value="static member OfFloat : string * single[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfFloat (propertyName, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofFloat", "(Ljava/lang/String;[F)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofFloat", "(Ljava/lang/String;[F)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="values" Type="System.Single[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated.</param>
        <param name="values">The values that the named property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name and
            set of float values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name and
            set of float values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofFloat(java.lang.String,%20float...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofFloat(java.lang.String, float...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfInt (Android.Util.Property? property, params int[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfInt(class Android.Util.Property property, int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfInt(Android.Util.Property,System.Int32[])" />
      <MemberSignature Language="F#" Value="static member OfInt : Android.Util.Property * int[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfInt (property, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofInt", "(Landroid/util/Property;[I)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofInt", "(Landroid/util/Property;[I)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
        <Parameter Name="values" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property being animated. Should not be null.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of int values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            set of int values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofInt(android.util.Property%3C?,%20java.lang.Integer%3E,%20int...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofInt(android.util.Property&lt;?, java.lang.Integer&gt;, int...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfInt (string? propertyName, params int[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfInt(string propertyName, int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfInt(System.String,System.Int32[])" />
      <MemberSignature Language="F#" Value="static member OfInt : string * int[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfInt (propertyName, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofInt", "(Ljava/lang/String;[I)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofInt", "(Ljava/lang/String;[I)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="values" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated.</param>
        <param name="values">The values that the named property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name and
            set of int values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name and
            set of int values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofInt(java.lang.String,%20int...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofInt(java.lang.String, int...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfKeyframe">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfKeyframe (Android.Util.Property? property, params Android.Animation.Keyframe[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfKeyframe(class Android.Util.Property property, class Android.Animation.Keyframe[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfKeyframe(Android.Util.Property,Android.Animation.Keyframe[])" />
      <MemberSignature Language="F#" Value="static member OfKeyframe : Android.Util.Property * Android.Animation.Keyframe[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfKeyframe (property, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofKeyframe", "(Landroid/util/Property;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofKeyframe", "(Landroid/util/Property;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
        <Parameter Name="values" Type="Android.Animation.Keyframe[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property associated with this set of values. Should not be null.</param>
        <param name="values">The set of values to animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder object with the specified property and set
            of values.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofKeyframe(android.util.Property,%20android.animation.Keyframe)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofKeyframe(android.util.Property, android.animation.Keyframe)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfKeyframe">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfKeyframe (string? propertyName, params Android.Animation.Keyframe[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfKeyframe(string propertyName, class Android.Animation.Keyframe[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfKeyframe(System.String,Android.Animation.Keyframe[])" />
      <MemberSignature Language="F#" Value="static member OfKeyframe : string * Android.Animation.Keyframe[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfKeyframe (propertyName, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofKeyframe", "(Ljava/lang/String;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofKeyframe", "(Ljava/lang/String;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="values" Type="Android.Animation.Keyframe[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="values">The set of values to animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder object with the specified property and set
            of values.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofKeyframe(android.util.Property,%20android.animation.Keyframe)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofKeyframe(android.util.Property, android.animation.Keyframe)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfMultiFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiFloat (string? propertyName, Android.Graphics.Path? path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiFloat(string propertyName, class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiFloat(System.String,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="static member OfMultiFloat : string * Android.Graphics.Path -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiFloat (propertyName, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated. Can also be the
                                case-sensitive name of the entire setter method. Should not be null.
                                The setter must take exactly two <c>float</c> parameters.</param>
        <param name="path">The Path along which the values should be animated.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name to use
            as a multi-float setter.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name to use
            as a multi-float setter. The values are animated along the path, with the first
            parameter of the setter set to the x coordinate and the second set to the y coordinate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiFloat(java.lang.String,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfMultiFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiFloat (string? propertyName, float[][]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiFloat(string propertyName, float32[][] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiFloat(System.String,System.Single[][])" />
      <MemberSignature Language="F#" Value="static member OfMultiFloat : string * single[][] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiFloat (propertyName, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;[[F)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;[[F)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="values" Type="System.Single[][]" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated. Can also be the
                                case-sensitive name of the entire setter method. Should not be null.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name and
            set of <c>float[]</c> values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name and
            set of <c>float[]</c> values. At least two <c>float[]</c> values must be supplied,
            a start and end value. If more values are supplied, the values will be animated from the
            start, through all intermediate values to the end value. When used with ObjectAnimator,
            the elements of the array represent the parameters of the setter function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiFloat(java.lang.String,%20float[][])" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, float[][])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="C:Android.Animation.FloatArrayEvaluator(System.Single[])" />
      </Docs>
    </Member>
    <Member MemberName="OfMultiFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiFloat (string? propertyName, Android.Animation.TypeConverter? converter, Android.Animation.ITypeEvaluator? evaluator, params Android.Animation.Keyframe[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiFloat(string propertyName, class Android.Animation.TypeConverter converter, class Android.Animation.ITypeEvaluator evaluator, class Android.Animation.Keyframe[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiFloat(System.String,Android.Animation.TypeConverter,Android.Animation.ITypeEvaluator,Android.Animation.Keyframe[])" />
      <MemberSignature Language="F#" Value="static member OfMultiFloat : string * Android.Animation.TypeConverter * Android.Animation.ITypeEvaluator * Android.Animation.Keyframe[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiFloat (propertyName, converter, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Android.Animation.Keyframe[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property to associate with the set of values. This
                                may also be the complete name of a setter function.</param>
        <param name="converter">Converts &lt;code&gt;values&lt;/code&gt; into float parameters for the setter.
                                Can be null if the Keyframes have float[] values.</param>
        <param name="evaluator">Used to interpolate between values.</param>
        <param name="values">The values at specific fractional times to evaluate between</param>
        <summary>Constructs and returns a PropertyValuesHolder object with the specified property name or
            setter name for use in a multi-float setter function using ObjectAnimator.</summary>
        <returns>A PropertyValuesHolder for a multi-float parameter setter.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiFloat(java.lang.String,%20android.animation.TypeConverter,%20android.animation.TypeEvaluator,%20android.animation.Keyframe)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframe)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfMultiFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiFloat (string? propertyName, Android.Animation.TypeConverter? converter, Android.Animation.ITypeEvaluator? evaluator, params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiFloat(string propertyName, class Android.Animation.TypeConverter converter, class Android.Animation.ITypeEvaluator evaluator, class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiFloat(System.String,Android.Animation.TypeConverter,Android.Animation.ITypeEvaluator,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member OfMultiFloat : string * Android.Animation.TypeConverter * Android.Animation.ITypeEvaluator * Java.Lang.Object[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiFloat (propertyName, converter, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiFloat", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "V" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The property being animated or complete name of the setter.
                                Should not be null.</param>
        <param name="converter">Used to convert the animated value to setter parameters.</param>
        <param name="evaluator">A TypeEvaluator that will be called on each animation frame to
            provide the necessary interpolation between the Object values to derive the animated
            value.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values for use with ObjectAnimator multi-value setters.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values for use with ObjectAnimator multi-value setters. The Object
            values are converted to <c>float[]</c> using the converter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiFloat(java.lang.String,%20android.animation.TypeConverter%3CV,%20float[]%3E,%20android.animation.TypeEvaluator%3CV%3E,%20V...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiFloat(java.lang.String, android.animation.TypeConverter&lt;V, float[]&gt;, android.animation.TypeEvaluator&lt;V&gt;, V...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfMultiInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiInt (string? propertyName, Android.Graphics.Path? path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiInt(string propertyName, class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiInt(System.String,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="static member OfMultiInt : string * Android.Graphics.Path -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiInt (propertyName, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated. Can also be the
                                case-sensitive name of the entire setter method. Should not be null.
                                The setter must take exactly two <c>int</c> parameters.</param>
        <param name="path">The Path along which the values should be animated.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name to use
            as a multi-int setter.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name to use
            as a multi-int setter. The values are animated along the path, with the first
            parameter of the setter set to the x coordinate and the second set to the y coordinate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiInt(java.lang.String,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfMultiInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiInt (string? propertyName, int[][]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiInt(string propertyName, int32[][] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiInt(System.String,System.Int32[][])" />
      <MemberSignature Language="F#" Value="static member OfMultiInt : string * int[][] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiInt (propertyName, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;[[I)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;[[I)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="values" Type="System.Int32[][]" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated. Can also be the
                                case-sensitive name of the entire setter method. Should not be null.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name and
            set of <c>int[]</c> values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name and
            set of <c>int[]</c> values. At least two <c>int[]</c> values must be supplied,
            a start and end value. If more values are supplied, the values will be animated from the
            start, through all intermediate values to the end value. When used with ObjectAnimator,
            the elements of the array represent the parameters of the setter function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiInt(java.lang.String,%20int[][])" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, int[][])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="C:Android.Animation.IntArrayEvaluator(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="OfMultiInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiInt (string? propertyName, Android.Animation.TypeConverter? converter, Android.Animation.ITypeEvaluator? evaluator, params Android.Animation.Keyframe[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiInt(string propertyName, class Android.Animation.TypeConverter converter, class Android.Animation.ITypeEvaluator evaluator, class Android.Animation.Keyframe[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiInt(System.String,Android.Animation.TypeConverter,Android.Animation.ITypeEvaluator,Android.Animation.Keyframe[])" />
      <MemberSignature Language="F#" Value="static member OfMultiInt : string * Android.Animation.TypeConverter * Android.Animation.ITypeEvaluator * Android.Animation.Keyframe[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiInt (propertyName, converter, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Landroid/animation/Keyframe;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Android.Animation.Keyframe[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property to associate with the set of values. This
                                may also be the complete name of a setter function.</param>
        <param name="converter">Converts &lt;code&gt;values&lt;/code&gt; into int parameters for the setter.
                                Can be null if the Keyframes have int[] values.</param>
        <param name="evaluator">Used to interpolate between values.</param>
        <param name="values">The values at specific fractional times to evaluate between</param>
        <summary>Constructs and returns a PropertyValuesHolder object with the specified property name or
            setter name for use in a multi-int setter function using ObjectAnimator.</summary>
        <returns>A PropertyValuesHolder for a multi-int parameter setter.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiInt(java.lang.String,%20android.animation.TypeConverter,%20android.animation.TypeEvaluator,%20android.animation.Keyframe)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframe)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfMultiInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfMultiInt (string? propertyName, Android.Animation.TypeConverter? converter, Android.Animation.ITypeEvaluator? evaluator, params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfMultiInt(string propertyName, class Android.Animation.TypeConverter converter, class Android.Animation.ITypeEvaluator evaluator, class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfMultiInt(System.String,Android.Animation.TypeConverter,Android.Animation.ITypeEvaluator,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member OfMultiInt : string * Android.Animation.TypeConverter * Android.Animation.ITypeEvaluator * Java.Lang.Object[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfMultiInt (propertyName, converter, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofMultiInt", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "V" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The property being animated or complete name of the setter.
                                Should not be null.</param>
        <param name="converter">Used to convert the animated value to setter parameters.</param>
        <param name="evaluator">A TypeEvaluator that will be called on each animation frame to
            provide the necessary interpolation between the Object values to derive the animated
            value.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values for use with ObjectAnimator multi-value setters.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values for use with ObjectAnimator multi-value setters. The Object
            values are converted to <c>int[]</c> using the converter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofMultiInt(java.lang.String,%20android.animation.TypeConverter%3CV,%20int[]%3E,%20android.animation.TypeEvaluator%3CV%3E,%20V...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofMultiInt(java.lang.String, android.animation.TypeConverter&lt;V, int[]&gt;, android.animation.TypeEvaluator&lt;V&gt;, V...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfObject">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfObject (Android.Util.Property? property, Android.Animation.ITypeEvaluator? evaluator, params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfObject(class Android.Util.Property property, class Android.Animation.ITypeEvaluator evaluator, class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfObject(Android.Util.Property,Android.Animation.ITypeEvaluator,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member OfObject : Android.Util.Property * Android.Animation.ITypeEvaluator * Java.Lang.Object[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfObject (property, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofObject", "(Landroid/util/Property;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofObject", "(Landroid/util/Property;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "V" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property being animated. Should not be null.</param>
        <param name="evaluator">A TypeEvaluator that will be called on each animation frame to
            provide the necessary interpolation between the Object values to derive the animated
            value.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values. This variant also takes a TypeEvaluator because the system
            cannot automatically interpolate between objects of unknown type.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; The Object values are stored as references to the original
            objects, which means that changes to those objects after this method is called will
            affect the values on the PropertyValuesHolder. If the objects will be mutated externally
            after this method is called, callers should pass a copy of those objects instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofObject(android.util.Property,%20android.animation.TypeEvaluator%3CV%3E,%20V...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofObject(android.util.Property, android.animation.TypeEvaluator&lt;V&gt;, V...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfObject">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfObject (Android.Util.Property? property, Android.Animation.TypeConverter? converter, Android.Graphics.Path? path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfObject(class Android.Util.Property property, class Android.Animation.TypeConverter converter, class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfObject(Android.Util.Property,Android.Animation.TypeConverter,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="static member OfObject : Android.Util.Property * Android.Animation.TypeConverter * Android.Graphics.Path -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfObject (property, converter, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofObject", "(Landroid/util/Property;Landroid/animation/TypeConverter;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofObject", "(Landroid/util/Property;Landroid/animation/TypeConverter;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "V" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="property">The property being animated. Should not be null.</param>
        <param name="converter">Converts a PointF to the type associated with the setter. May be
                             null if conversion is unnecessary.</param>
        <param name="path">The Path along which the values should be animated.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            a Path along which the values should be animated.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            a Path along which the values should be animated. This variant supports a
            <c>TypeConverter</c> to convert from <c>PointF</c> to the target
            type.</para>
          <para>The PointF passed to <c>converter</c> or <c>property</c>, if
            <c>converter</c> is <c>null</c>, is reused on each animation frame and should
            not be stored by the setter or TypeConverter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofObject(android.util.Property%3C?,%20V%3E,%20android.animation.TypeConverter%3Candroid.graphics.PointF,%20V%3E,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofObject(android.util.Property&lt;?, V&gt;, android.animation.TypeConverter&lt;android.graphics.PointF, V&gt;, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfObject">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfObject (string? propertyName, Android.Animation.ITypeEvaluator? evaluator, params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfObject(string propertyName, class Android.Animation.ITypeEvaluator evaluator, class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfObject(System.String,Android.Animation.ITypeEvaluator,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member OfObject : string * Android.Animation.ITypeEvaluator * Java.Lang.Object[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfObject (propertyName, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofObject", "(Ljava/lang/String;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofObject", "(Ljava/lang/String;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="evaluator">A TypeEvaluator that will be called on each animation frame to
            provide the necessary interpolation between the Object values to derive the animated
            value.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofObject(android.util.Property,%20android.animation.TypeConverter,%20android.animation.TypeEvaluator,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofObject(android.util.Property, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfObject">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfObject (string? propertyName, Android.Animation.TypeConverter? converter, Android.Graphics.Path? path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfObject(string propertyName, class Android.Animation.TypeConverter converter, class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfObject(System.String,Android.Animation.TypeConverter,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="static member OfObject : string * Android.Animation.TypeConverter * Android.Graphics.Path -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfObject (propertyName, converter, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofObject", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofObject", "(Ljava/lang/String;Landroid/animation/TypeConverter;Landroid/graphics/Path;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="propertyName">The name of the property being animated.</param>
        <param name="converter">Converts a PointF to the type associated with the setter. May be
                             null if conversion is unnecessary.</param>
        <param name="path">The Path along which the values should be animated.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property name and
            a Path along which the values should be animated.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property name and
            a Path along which the values should be animated. This variant supports a
            <c>TypeConverter</c> to convert from <c>PointF</c> to the target
            type.</para>
          <para>The PointF passed to <c>converter</c> or <c>property</c>, if
            <c>converter</c> is <c>null</c>, is reused on each animation frame and should
            not be stored by the setter or TypeConverter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofObject(java.lang.String,%20android.animation.TypeConverter%3Candroid.graphics.PointF,%20?%3E,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofObject(java.lang.String, android.animation.TypeConverter&lt;android.graphics.PointF, ?&gt;, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfObject">
      <MemberSignature Language="C#" Value="public static Android.Animation.PropertyValuesHolder? OfObject (Android.Util.Property? property, Android.Animation.TypeConverter? converter, Android.Animation.ITypeEvaluator? evaluator, params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.PropertyValuesHolder OfObject(class Android.Util.Property property, class Android.Animation.TypeConverter converter, class Android.Animation.ITypeEvaluator evaluator, class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.OfObject(Android.Util.Property,Android.Animation.TypeConverter,Android.Animation.ITypeEvaluator,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member OfObject : Android.Util.Property * Android.Animation.TypeConverter * Android.Animation.ITypeEvaluator * Java.Lang.Object[] -&gt; Android.Animation.PropertyValuesHolder" Usage="Android.Animation.PropertyValuesHolder.OfObject (property, converter, evaluator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ofObject", "(Landroid/util/Property;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ofObject", "(Landroid/util/Property;Landroid/animation/TypeConverter;Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/PropertyValuesHolder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T", "V" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T", "V" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property being animated. Should not be null.</param>
        <param name="converter">Converts the animated object to the Property type.</param>
        <param name="evaluator">A TypeEvaluator that will be called on each animation frame to
            provide the necessary interpolation between the Object values to derive the animated
            value.</param>
        <param name="values">The values that the property will animate between.</param>
        <summary>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values.</summary>
        <returns>PropertyValuesHolder The constructed PropertyValuesHolder object.</returns>
        <remarks>
          <para>Constructs and returns a PropertyValuesHolder with a given property and
            set of Object values. This variant also takes a TypeEvaluator because the system
            cannot automatically interpolate between objects of unknown type. This variant also
            takes a <c>TypeConverter</c> to convert from animated values to the type
            of the property. If only one value is supplied, the <c>TypeConverter</c>
            must be a <c>android.animation.BidirectionalTypeConverter</c> to retrieve the current
            value.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; The Object values are stored as references to the original
            objects, which means that changes to those objects after this method is called will
            affect the values on the PropertyValuesHolder. If the objects will be mutated externally
            after this method is called, callers should pass a copy of those objects instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#ofObject(android.util.Property%3C?,%20V%3E,%20android.animation.TypeConverter%3CT,%20V%3E,%20android.animation.TypeEvaluator%3CT%3E,%20T...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.ofObject(android.util.Property&lt;?, V&gt;, android.animation.TypeConverter&lt;T, V&gt;, android.animation.TypeEvaluator&lt;T&gt;, T...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public virtual string? PropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.PropertyValuesHolder.PropertyName" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string with get, set" Usage="Android.Animation.PropertyValuesHolder.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPropertyName", "()Ljava/lang/String;", "GetGetPropertyNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPropertyName", "()Ljava/lang/String;", "GetGetPropertyNameHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPropertyName", "(Ljava/lang/String;)V", "GetSetPropertyName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPropertyName", "(Ljava/lang/String;)V", "GetSetPropertyName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="propertyName">The name of the property being animated.</param>
        <summary>Gets the name of the property that will be animated. -or- Sets the name of the property that will be animated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the name of the property that will be animated. This name will be used to derive
            a setter function that will be called to set animated values.
            For example, a property name of <c>foo</c> will result
            in a call to the function <c>setFoo()</c> on the target object. If either
            <c>valueFrom</c> or <c>valueTo</c> is null, then a getter function will
            also be derived and called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#getPropertyName()" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.getPropertyName()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the name of the property that will be animated. This name is used to derive
            a setter function that will be called to set animated values.
            For example, a property name of <c>foo</c> will result
            in a call to the function <c>setFoo()</c> on the target object. If either
            <c>valueFrom</c> or <c>valueTo</c> is null, then a getter function will
            also be derived and called.</para>
          <para>Note that the setter function derived from this property name
            must take the same parameter type as the
            <c>valueFrom</c> and <c>valueTo</c> properties, otherwise the call to
            the setter function will fail.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setPropertyName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setPropertyName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetConverter">
      <MemberSignature Language="C#" Value="public virtual void SetConverter (Android.Animation.TypeConverter? converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetConverter(class Android.Animation.TypeConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetConverter(Android.Animation.TypeConverter)" />
      <MemberSignature Language="F#" Value="abstract member SetConverter : Android.Animation.TypeConverter -&gt; unit&#xA;override this.SetConverter : Android.Animation.TypeConverter -&gt; unit" Usage="propertyValuesHolder.SetConverter converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setConverter", "(Landroid/animation/TypeConverter;)V", "GetSetConverter_Landroid_animation_TypeConverter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setConverter", "(Landroid/animation/TypeConverter;)V", "GetSetConverter_Landroid_animation_TypeConverter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Android.Animation.TypeConverter" />
      </Parameters>
      <Docs>
        <param name="converter">The converter to use to convert values.</param>
        <summary>Sets the converter to convert from the values type to the setter's parameter type.</summary>
        <remarks>
          <para>Sets the converter to convert from the values type to the setter's parameter type.
            If only one value is supplied, &lt;var&gt;converter&lt;/var&gt; must be a
            <c>android.animation.BidirectionalTypeConverter</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setConverter(android.animation.TypeConverter)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setConverter(android.animation.TypeConverter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEvaluator">
      <MemberSignature Language="C#" Value="public virtual void SetEvaluator (Android.Animation.ITypeEvaluator? evaluator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEvaluator(class Android.Animation.ITypeEvaluator evaluator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetEvaluator(Android.Animation.ITypeEvaluator)" />
      <MemberSignature Language="F#" Value="abstract member SetEvaluator : Android.Animation.ITypeEvaluator -&gt; unit&#xA;override this.SetEvaluator : Android.Animation.ITypeEvaluator -&gt; unit" Usage="propertyValuesHolder.SetEvaluator evaluator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEvaluator", "(Landroid/animation/TypeEvaluator;)V", "GetSetEvaluator_Landroid_animation_TypeEvaluator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEvaluator", "(Landroid/animation/TypeEvaluator;)V", "GetSetEvaluator_Landroid_animation_TypeEvaluator_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
      </Parameters>
      <Docs>
        <param name="evaluator">evaluator</param>
        <summary>The TypeEvaluator will be automatically determined based on the type of values
            supplied to PropertyValuesHolder.</summary>
        <remarks>
          <para>The TypeEvaluator will be automatically determined based on the type of values
            supplied to PropertyValuesHolder. The evaluator can be manually set, however, if so
            desired. This may be important in cases where either the type of the values supplied
            do not match the way that they should be interpolated between, or if the values
            are of a custom type or one not currently understood by the animation system. Currently,
            only values of type float and int (and their Object equivalents: Float
            and Integer) are  correctly interpolated; all other types require setting a TypeEvaluator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setEvaluator(android.animation.TypeEvaluator)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setEvaluator(android.animation.TypeEvaluator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFloatValues">
      <MemberSignature Language="C#" Value="public virtual void SetFloatValues (params float[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFloatValues(float32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetFloatValues(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member SetFloatValues : single[] -&gt; unit&#xA;override this.SetFloatValues : single[] -&gt; unit" Usage="propertyValuesHolder.SetFloatValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFloatValues", "([F)V", "GetSetFloatValues_arrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFloatValues", "([F)V", "GetSetFloatValues_arrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Single[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">One or more values that the animation will animate between.</param>
        <summary>Set the animated values for this object to this set of floats.</summary>
        <remarks>
          <para>Set the animated values for this object to this set of floats.
            If there is only one value, it is assumed to be the end value of an animation,
            and an initial value will be derived, if possible, by calling a getter function
            on the object. Also, if any value is null, the value will be filled in when the animation
            starts in the same way. This mechanism of automatically getting null values only works
            if the PropertyValuesHolder object is used in conjunction
            <c>ObjectAnimator</c>, and with a getter function
            derived automatically from <c>propertyName</c>, since otherwise PropertyValuesHolder has
            no way of determining what the value should be.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setFloatValues(float...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setFloatValues(float...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIntValues">
      <MemberSignature Language="C#" Value="public virtual void SetIntValues (params int[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIntValues(int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetIntValues(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member SetIntValues : int[] -&gt; unit&#xA;override this.SetIntValues : int[] -&gt; unit" Usage="propertyValuesHolder.SetIntValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setIntValues", "([I)V", "GetSetIntValues_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setIntValues", "([I)V", "GetSetIntValues_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">One or more values that the animation will animate between.</param>
        <summary>Set the animated values for this object to this set of ints.</summary>
        <remarks>
          <para>Set the animated values for this object to this set of ints.
            If there is only one value, it is assumed to be the end value of an animation,
            and an initial value will be derived, if possible, by calling a getter function
            on the object. Also, if any value is null, the value will be filled in when the animation
            starts in the same way. This mechanism of automatically getting null values only works
            if the PropertyValuesHolder object is used in conjunction
            <c>ObjectAnimator</c>, and with a getter function
            derived automatically from <c>propertyName</c>, since otherwise PropertyValuesHolder has
            no way of determining what the value should be.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setIntValues(int...)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setIntValues(int...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyframes">
      <MemberSignature Language="C#" Value="public virtual void SetKeyframes (params Android.Animation.Keyframe[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyframes(class Android.Animation.Keyframe[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetKeyframes(Android.Animation.Keyframe[])" />
      <MemberSignature Language="F#" Value="abstract member SetKeyframes : Android.Animation.Keyframe[] -&gt; unit&#xA;override this.SetKeyframes : Android.Animation.Keyframe[] -&gt; unit" Usage="propertyValuesHolder.SetKeyframes values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeyframes", "([Landroid/animation/Keyframe;)V", "GetSetKeyframes_arrayLandroid_animation_Keyframe_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeyframes", "([Landroid/animation/Keyframe;)V", "GetSetKeyframes_arrayLandroid_animation_Keyframe_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Android.Animation.Keyframe[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">One or more values that the animation will animate between.</param>
        <summary>Set the animated values for this object to this set of Keyframes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setKeyframes(android.animation.Keyframe)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setKeyframes(android.animation.Keyframe)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObjectValues">
      <MemberSignature Language="C#" Value="public virtual void SetObjectValues (params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetObjectValues(class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetObjectValues(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member SetObjectValues : Java.Lang.Object[] -&gt; unit&#xA;override this.SetObjectValues : Java.Lang.Object[] -&gt; unit" Usage="propertyValuesHolder.SetObjectValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setObjectValues", "([Ljava/lang/Object;)V", "GetSetObjectValues_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setObjectValues", "([Ljava/lang/Object;)V", "GetSetObjectValues_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">One or more values that the animation will animate between.</param>
        <summary>Set the animated values for this object to this set of Objects.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setObjectValues(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setObjectValues(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public virtual void SetProperty (Android.Util.Property? property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class Android.Util.Property property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Animation.PropertyValuesHolder.SetProperty(Android.Util.Property)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : Android.Util.Property -&gt; unit&#xA;override this.SetProperty : Android.Util.Property -&gt; unit" Usage="propertyValuesHolder.SetProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProperty", "(Landroid/util/Property;)V", "GetSetProperty_Landroid_util_Property_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProperty", "(Landroid/util/Property;)V", "GetSetProperty_Landroid_util_Property_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Android.Util.Property" />
      </Parameters>
      <Docs>
        <param name="property">The property being animated.</param>
        <summary>Sets the property that will be animated.</summary>
        <remarks>
          <para>Sets the property that will be animated.</para>
          <para>Note that if this PropertyValuesHolder object is used with ObjectAnimator, the property
            must exist on the target object specified in that ObjectAnimator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/animation/PropertyValuesHolder#setProperty(android.util.Property)" title="Reference documentation">Java documentation for <code>android.animation.PropertyValuesHolder.setProperty(android.util.Property)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.PropertyValuesHolder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Animation.PropertyValuesHolder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Animation.PropertyValuesHolder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Animation.PropertyValuesHolder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
