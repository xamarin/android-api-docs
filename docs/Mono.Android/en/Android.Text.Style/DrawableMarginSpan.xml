<Type Name="DrawableMarginSpan" FullName="Android.Text.Style.DrawableMarginSpan">
  <TypeSignature Language="F#" Value="type DrawableMarginSpan = class&#xA;    inherit Object&#xA;    interface ILeadingMarginSpan&#xA;    interface IParagraphStyle&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface ILineHeightSpan&#xA;    interface IWrapTogetherSpan" />
  <TypeSignature Language="C#" Value="public class DrawableMarginSpan : Java.Lang.Object, Android.Text.Style.ILeadingMarginSpan, Android.Text.Style.ILineHeightSpan, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawableMarginSpan extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Text.Style.ILeadingMarginSpan, class Android.Text.Style.ILineHeightSpan, class Android.Text.Style.IParagraphStyle, class Android.Text.Style.IWrapTogetherSpan, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.Style.DrawableMarginSpan" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.Style.ILeadingMarginSpan</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.Style.ILineHeightSpan</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.Style.IParagraphStyle</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.Style.IWrapTogetherSpan</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/style/DrawableMarginSpan", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A span which adds a drawable and a padding to the paragraph it's attached to.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/style/DrawableMarginSpan" title="Reference documentation">Java documentation for <code>android.text.style.DrawableMarginSpan</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.Style.DrawableMarginSpan : Android.Graphics.Drawables.Drawable -&gt; Android.Text.Style.DrawableMarginSpan" Usage="new Android.Text.Style.DrawableMarginSpan b" />
      <MemberSignature Language="C#" Value="public DrawableMarginSpan (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.#ctor(Android.Graphics.Drawables.Drawable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/drawable/Drawable;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">the drawable to be added</param>
        <summary>Creates a <c>DrawableMarginSpan</c> from a <c>Drawable</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/style/DrawableMarginSpan#DrawableMarginSpan(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.text.style.DrawableMarginSpan.DrawableMarginSpan(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.Style.DrawableMarginSpan : Android.Graphics.Drawables.Drawable * int -&gt; Android.Text.Style.DrawableMarginSpan" Usage="new Android.Text.Style.DrawableMarginSpan (b, pad)" />
      <MemberSignature Language="C#" Value="public DrawableMarginSpan (Android.Graphics.Drawables.Drawable drawable, int pad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Drawables.Drawable drawable, int32 pad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.#ctor(Android.Graphics.Drawables.Drawable,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/drawable/Drawable;I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="pad" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pad">To be added.</param>
        <param name="drawable">the drawable to be added</param>
        <summary>Creates a <c>DrawableMarginSpan</c> from a <c>Drawable</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/style/DrawableMarginSpan#DrawableMarginSpan(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.text.style.DrawableMarginSpan.DrawableMarginSpan(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.Style.DrawableMarginSpan : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.Style.DrawableMarginSpan" Usage="new Android.Text.Style.DrawableMarginSpan (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected DrawableMarginSpan (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChooseHeight">
      <MemberSignature Language="F#" Value="abstract member ChooseHeight : Java.Lang.ICharSequence * int * int * int * int * Android.Graphics.Paint.FontMetricsInt -&gt; unit&#xA;override this.ChooseHeight : Java.Lang.ICharSequence * int * int * int * int * Android.Graphics.Paint.FontMetricsInt -&gt; unit" Usage="drawableMarginSpan.ChooseHeight (text, start, end, istartv, v, fm)" />
      <MemberSignature Language="C#" Value="public virtual void ChooseHeight (Java.Lang.ICharSequence text, int start, int end, int istartv, int v, Android.Graphics.Paint.FontMetricsInt fm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChooseHeight(class Java.Lang.ICharSequence text, int32 start, int32 end, int32 istartv, int32 v, class Android.Graphics.Paint/FontMetricsInt fm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.ChooseHeight(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Paint.FontMetricsInt)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.Style.ILineHeightSpan.ChooseHeight(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Paint.FontMetricsInt)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseHeight", "(Ljava/lang/CharSequence;IIIILandroid/graphics/Paint$FontMetricsInt;)V", "GetChooseHeight_Ljava_lang_CharSequence_IIIILandroid_graphics_Paint_FontMetricsInt_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="istartv" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32" />
        <Parameter Name="fm" Type="Android.Graphics.Paint+FontMetricsInt" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="istartv">To be added.</param>
        <param name="v">To be added.</param>
        <param name="fm">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChooseHeight">
      <MemberSignature Language="F#" Value="member this.ChooseHeight : string * int * int * int * int * Android.Graphics.Paint.FontMetricsInt -&gt; unit" Usage="drawableMarginSpan.ChooseHeight (text, start, end, istartv, v, fm)" />
      <MemberSignature Language="C#" Value="public void ChooseHeight (string text, int start, int end, int istartv, int v, Android.Graphics.Paint.FontMetricsInt fm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChooseHeight(string text, int32 start, int32 end, int32 istartv, int32 v, class Android.Graphics.Paint/FontMetricsInt fm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.ChooseHeight(System.String,System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Paint.FontMetricsInt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="istartv" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32" />
        <Parameter Name="fm" Type="Android.Graphics.Paint+FontMetricsInt" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="istartv">To be added.</param>
        <param name="v">To be added.</param>
        <param name="fm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawLeadingMargin">
      <MemberSignature Language="F#" Value="abstract member DrawLeadingMargin : Android.Graphics.Canvas * Android.Graphics.Paint * int * int * int * int * int * Java.Lang.ICharSequence * int * int * bool * Android.Text.Layout -&gt; unit&#xA;override this.DrawLeadingMargin : Android.Graphics.Canvas * Android.Graphics.Paint * int * int * int * int * int * Java.Lang.ICharSequence * int * int * bool * Android.Text.Layout -&gt; unit" Usage="drawableMarginSpan.DrawLeadingMargin (c, p, x, dir, top, baseline, bottom, text, start, end, first, layout)" />
      <MemberSignature Language="C#" Value="public virtual void DrawLeadingMargin (Android.Graphics.Canvas c, Android.Graphics.Paint p, int x, int dir, int top, int baseline, int bottom, Java.Lang.ICharSequence text, int start, int end, bool first, Android.Text.Layout layout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawLeadingMargin(class Android.Graphics.Canvas c, class Android.Graphics.Paint p, int32 x, int32 dir, int32 top, int32 baseline, int32 bottom, class Java.Lang.ICharSequence text, int32 start, int32 end, bool first, class Android.Text.Layout layout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.DrawLeadingMargin(Android.Graphics.Canvas,Android.Graphics.Paint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32,System.Boolean,Android.Text.Layout)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.Style.ILeadingMarginSpan.DrawLeadingMargin(Android.Graphics.Canvas,Android.Graphics.Paint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32,System.Boolean,Android.Text.Layout)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drawLeadingMargin", "(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V", "GetDrawLeadingMargin_Landroid_graphics_Canvas_Landroid_graphics_Paint_IIIIILjava_lang_CharSequence_IIZLandroid_text_Layout_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Graphics.Canvas" />
        <Parameter Name="p" Type="Android.Graphics.Paint" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="dir" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="baseline" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="first" Type="System.Boolean" />
        <Parameter Name="layout" Type="Android.Text.Layout" />
      </Parameters>
      <Docs>
        <param name="c">the canvas</param>
        <param name="p">the paint. The this should be left unchanged on exit.</param>
        <param name="x">the current position of the margin</param>
        <param name="dir">the base direction of the paragraph; if negative, the margin
 is to the right of the text, otherwise it is to the left.</param>
        <param name="top">the top of the line</param>
        <param name="baseline">the baseline of the line</param>
        <param name="bottom">the bottom of the line</param>
        <param name="text">the text</param>
        <param name="start">the start of the line</param>
        <param name="end">the end of the line</param>
        <param name="first">true if this is the first line of its paragraph</param>
        <param name="layout">the layout containing this line
</param>
        <summary>Renders the leading margin.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DrawLeadingMargin">
      <MemberSignature Language="F#" Value="member this.DrawLeadingMargin : Android.Graphics.Canvas * Android.Graphics.Paint * int * int * int * int * int * string * int * int * bool * Android.Text.Layout -&gt; unit" Usage="drawableMarginSpan.DrawLeadingMargin (c, p, x, dir, top, baseline, bottom, text, start, end, first, layout)" />
      <MemberSignature Language="C#" Value="public void DrawLeadingMargin (Android.Graphics.Canvas c, Android.Graphics.Paint p, int x, int dir, int top, int baseline, int bottom, string text, int start, int end, bool first, Android.Text.Layout layout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLeadingMargin(class Android.Graphics.Canvas c, class Android.Graphics.Paint p, int32 x, int32 dir, int32 top, int32 baseline, int32 bottom, string text, int32 start, int32 end, bool first, class Android.Text.Layout layout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.DrawLeadingMargin(Android.Graphics.Canvas,Android.Graphics.Paint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,Android.Text.Layout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Graphics.Canvas" />
        <Parameter Name="p" Type="Android.Graphics.Paint" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="dir" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="baseline" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="first" Type="System.Boolean" />
        <Parameter Name="layout" Type="Android.Text.Layout" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <param name="p">To be added.</param>
        <param name="x">To be added.</param>
        <param name="dir">To be added.</param>
        <param name="top">To be added.</param>
        <param name="baseline">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="first">To be added.</param>
        <param name="layout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeadingMargin">
      <MemberSignature Language="F#" Value="abstract member GetLeadingMargin : bool -&gt; int&#xA;override this.GetLeadingMargin : bool -&gt; int" Usage="drawableMarginSpan.GetLeadingMargin first" />
      <MemberSignature Language="C#" Value="public virtual int GetLeadingMargin (bool first);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeadingMargin(bool first) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Style.DrawableMarginSpan.GetLeadingMargin(System.Boolean)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.Style.ILeadingMarginSpan.GetLeadingMargin(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLeadingMargin", "(Z)I", "GetGetLeadingMargin_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="first">true if the request is for the first line of a paragraph,
 false for subsequent lines</param>
        <summary>Returns the amount by which to adjust the leading margin.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.Style.DrawableMarginSpan.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Style.DrawableMarginSpan.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.Style.DrawableMarginSpan.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Style.DrawableMarginSpan.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.Style.DrawableMarginSpan.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Style.DrawableMarginSpan.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
