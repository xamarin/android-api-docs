<Type Name="InsetDrawable" FullName="Android.Graphics.Drawables.InsetDrawable">
  <TypeSignature Language="C#" Value="public class InsetDrawable : Android.Graphics.Drawables.Drawable, Android.Graphics.Drawables.Drawable.ICallback, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InsetDrawable extends Android.Graphics.Drawables.Drawable implements class Android.Graphics.Drawables.Drawable/ICallback, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Graphics.Drawables.Drawable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Graphics.Drawables.Drawable+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/InsetDrawable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable that insets another Drawable by a specified distance.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A Drawable that insets another Drawable by a specified distance.
 This is used when a View needs a background that is smaller than
 the View's actual bounds.

 </para>
      <para tool="javadoc-to-mdoc">It can be defined in an XML file with the <c>&lt;inset&gt;</c> element. For more
 information, see the guide to <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/drawable-resource.html">Drawable Resources</a></format>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InsetDrawable (Android.Graphics.Drawables.Drawable drawable, int inset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Drawables.Drawable drawable, int32 inset) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/drawable/Drawable;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="inset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="drawable">To be added.</param>
        <param name="inset">To be added.</param>
        <summary>Creates a new inset drawable with the specified inset.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new inset drawable with the specified inset.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#InsetDrawable(android.graphics.drawable.Drawable, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InsetDrawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InsetDrawable (Android.Graphics.Drawables.Drawable drawable, int insetLeft, int insetTop, int insetRight, int insetBottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Drawables.Drawable drawable, int32 insetLeft, int32 insetTop, int32 insetRight, int32 insetBottom) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/drawable/Drawable;IIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="insetLeft" Type="System.Int32" />
        <Parameter Name="insetTop" Type="System.Int32" />
        <Parameter Name="insetRight" Type="System.Int32" />
        <Parameter Name="insetBottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="drawable">To be added.</param>
        <param name="insetLeft">To be added.</param>
        <param name="insetTop">To be added.</param>
        <param name="insetRight">To be added.</param>
        <param name="insetBottom">To be added.</param>
        <summary>Creates a new inset drawable with the specified insets.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new inset drawable with the specified insets.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#InsetDrawable(android.graphics.drawable.Drawable, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into
</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#draw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Drawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Drawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Drawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the drawable wrapped by this InsetDrawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the drawable wrapped by this InsetDrawable. May be null.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#getDrawable()" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 19" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateDrawable">
      <MemberSignature Language="C#" Value="public virtual void InvalidateDrawable (Android.Graphics.Drawables.Drawable who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateDrawable(class Android.Graphics.Drawables.Drawable who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="who">The drawable that is requesting the update.
</param>
        <summary>Called when the drawable needs to be redrawn.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the drawable needs to be redrawn.  A view at this point
 should invalidate itself (or at least the part of itself where the
 drawable appears).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#invalidateDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public override int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the opacity/transparency of this Drawable.  The returned value is
 one of the abstract format constants in
 <c><see cref="T:Android.Graphics.PixelFormat" /></c>:
 <c><see cref="F:Android.Graphics.Format.Unknown" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Translucent" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Transparent" tool="ReplaceLinkValue" /></c>, or
 <c><see cref="F:Android.Graphics.Format.Opaque" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">An OPAQUE drawable is one that draws all all content within its bounds, completely
 covering anything behind the drawable. A TRANSPARENT drawable is one that draws nothing
 within its bounds, allowing everything behind it to show through. A TRANSLUCENT drawable
 is a drawable in any other state, where the drawable will draw some, but not all,
 of the content within its bounds and at least some content behind the drawable will
 be visible. If the visibility of the drawable's contents cannot be determined, the
 safest/best return value is TRANSLUCENT.

 </para>
          <para tool="javadoc-to-mdoc">Generally a Drawable should be as conservative as possible with the
 value it returns.  For example, if it contains multiple child drawables
 and only shows one of them at a time, if only one of the children is
 TRANSLUCENT and the others are OPAQUE then TRANSLUCENT should be
 returned.  You can use the method <c><see cref="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32,System.Int32)" /></c> to perform a
 standard reduction of two opacities to the appropriate single output.

 </para>
          <para tool="javadoc-to-mdoc">Note that the returned value does not necessarily take into account a
 custom alpha or color filter that has been applied by the client through
 the <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c> or <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> methods. Some subclasses,
 such as <c><see cref="T:Android.Graphics.Drawables.BitmapDrawable" /></c>, <c><see cref="T:Android.Graphics.Drawables.ColorDrawable" /></c>, and <c><see cref="T:Android.Graphics.Drawables.GradientDrawable" /></c>,
 do account for the value of <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c>, but the general behavior is dependent
 upon the implementation of the subclass.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#getOpacity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="C#" Value="public virtual void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">The drawable being scheduled.</param>
        <param name="what">The action to execute.</param>
        <param name="when">The time (in milliseconds) to run.  The timebase is
             <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c></param>
        <summary>A Drawable can call this to schedule the next frame of its
 animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A Drawable can call this to schedule the next frame of its
 animation.  An implementation can generally simply call
 <c><see cref="M:Android.OS.Handler.PostAtTime(Java.Lang.IRunnable,Java.Lang.Object,Java.Lang.Object)" /></c> with
 the parameters <format type="text/html"><var>(what, who, when)</var></format> to perform the
 scheduling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="C#" Value="public void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class System.Action what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public override void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary tool="true">Specify an alpha value for the drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#setAlpha(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public override void SetColorFilter (Android.Graphics.ColorFilter cf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetColorFilter(class Android.Graphics.ColorFilter cf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cf" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="cf">the color filter to apply, or <c>null</c> to remove the
            existing color filter
</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an optional color filter for the drawable. Pass <c>null</c> to
 remove any existing color filter.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#setColorFilter(android.graphics.ColorFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="who">The drawable being unscheduled.</param>
        <param name="what">The action being unscheduled.
</param>
        <summary>A Drawable can call this to unschedule an action previously
 scheduled with <c><see cref="T:Android.Graphics.Drawables.Drawable+ICallback" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A Drawable can call this to unschedule an action previously
 scheduled with <c><see cref="T:Android.Graphics.Drawables.Drawable+ICallback" /></c>.  An implementation can
 generally simply call
 <c><see cref="M:Android.OS.Handler.RemoveCallbacks(Java.Lang.IRunnable,Java.Lang.Object)" /></c> with
 the parameters <format type="text/html"><var>(what, who)</var></format> to unschedule the drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="C#" Value="public void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class System.Action what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
