<Type Name="Drawable" FullName="Android.Graphics.Drawables.Drawable">
  <TypeSignature Language="C#" Value="public abstract class Drawable : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Drawable extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/Drawable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable is a general abstraction for "something that can be drawn.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A Drawable is a general abstraction for "something that can be drawn."  Most
 often you will deal with Drawable as the type of resource retrieved for
 drawing things to the screen; the Drawable class provides a generic API for
 dealing with an underlying visual resource that may take a variety of forms.
 Unlike a <c><see cref="T:Android.Views.View" /></c>, a Drawable does not have any facility to
 receive events or otherwise interact with the user.

 </para>
      <para tool="javadoc-to-mdoc">In addition to simple drawing, Drawable provides a number of generic
 mechanisms for its client to interact with what is being drawn:

 <list type="bullet"><item><term> The <c><see cref="P:Android.Graphics.Drawables.Drawable.Bounds" /></c> method <format type="text/html"><var>must</var></format> be called to tell the
     Drawable where it is drawn and how large it should be.  All Drawables
     should respect the requested size, often simply by scaling their
     imagery.  A client can find the preferred size for some Drawables with
     the <c><see cref="P:Android.Graphics.Drawables.Drawable.IntrinsicHeight" /></c> and <c><see cref="P:Android.Graphics.Drawables.Drawable.IntrinsicWidth" /></c> methods.

     </term></item><item><term> The <c><see cref="M:Android.Graphics.Drawables.Drawable.GetPadding(Android.Graphics.Rect)" /></c> method can return from some Drawables
     information about how to frame content that is placed inside of them.
     For example, a Drawable that is intended to be the frame for a button
     widget would need to return padding that correctly places the label
     inside of itself.

     </term></item><item><term> The <c><see cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" /></c> method allows the client to tell the Drawable
     in which state it is to be drawn, such as "focused", "selected", etc.
     Some drawables may modify their imagery based on the selected state.

     </term></item><item><term> The <c><see cref="M:Android.Graphics.Drawables.Drawable.SetLevel(System.Int32)" /></c> method allows the client to supply a single
     continuous controller that can modify the Drawable is displayed, such as
     a battery level or progress level.  Some drawables may modify their
     imagery based on the current level.

     </term></item><item><term> A Drawable can perform animations by calling back to its client
     through the <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> interface.  All clients should support this
     interface (via <c><see cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" /></c>) so that animations will work.  A
     simple way to do this is through the system facilities such as
     <c><see cref="P:Android.Views.View.Background" /></c> and
     <c><see cref="T:Android.Widget.ImageView" /></c>.
 </term></item></list>

 Though usually not visible to the application, Drawables may take a variety
 of forms:

 <list type="bullet"><item><term><format type="text/html"><b>Bitmap</b></format>: the simplest Drawable, a PNG or JPEG image.
     </term></item><item><term><format type="text/html"><b>Nine Patch</b></format>: an extension to the PNG format allows it to
     specify information about how to stretch it and place things inside of
     it.
     </term></item><item><term><format type="text/html"><b>Shape</b></format>: contains simple drawing commands instead of a raw
     bitmap, allowing it to resize better in some cases.
     </term></item><item><term><format type="text/html"><b>Layers</b></format>: a compound drawable, which draws multiple underlying
     drawables on top of each other.
     </term></item><item><term><format type="text/html"><b>States</b></format>: a compound drawable that selects one of a set of
     drawables based on its state.
     </term></item><item><term><format type="text/html"><b>Levels</b></format>: a compound drawable that selects one of a set of
     drawables based on its level.
     </term></item><item><term><format type="text/html"><b>Scale</b></format>: a compound drawable with a single child drawable,
     whose overall size is modified based on the current level.
 </term></item></list><format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">For more information about how to use drawables, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/graphics/2d-graphics.html">Canvas and Drawables</a></format> developer
 guide. For information and examples of creating drawable resources (XML or bitmap files that
 can be loaded in code), read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/drawable-resource.html">Drawable Resources</a></format>
 document.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Drawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#Drawable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Drawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual int Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Gets the current alpha value for the drawable. 0 means fully transparent,
 255 means fully opaque.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the current alpha value for the drawable. 0 means fully transparent,
 255 means fully opaque. This method is implemented by
 Drawable subclasses and the value returned is specific to how that class treats alpha.
 The default return value is 255 if the class does not override this method to return a value
 specific to its use of alpha.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getAlpha()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public virtual void ApplyTheme (Android.Content.Res.Resources.Theme t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme(class Android.Content.Res.Resources/Theme t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>Applies the specified theme to this Drawable and its children.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Applies the specified theme to this Drawable and its children.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#applyTheme(android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoMirrored">
      <MemberSignature Language="C#" Value="public virtual bool AutoMirrored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
 right-to-left.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#isAutoMirrored()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
 right-to-left. See <c><see cref="T:Android.Util.LayoutDirection" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setAutoMirrored(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set whether this Drawable is automatically mirrored when its layout direction is RTL
 (right-to left). See <c><see cref="T:Android.Util.LayoutDirection" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "GetGetBoundsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBounds", "(Landroid/graphics/Rect;)V", "GetSetBounds_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's bounds Rect.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getBounds()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the drawable's bounds Rect. Note: for efficiency, the returned
 object may be the same object stored in the drawable (though this is not
 guaranteed), so if a persistent copy of the bounds is needed, call
 copyBounds(rect) instead.
 You should also not change the object returned by this method as it may
 be the same object stored in the drawable.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setBounds(android.graphics.Rect)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Specify a bounding rectangle for the Drawable. This is where the drawable
 will draw when its draw() method is called.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ICallback Callback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable/ICallback Callback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCallback", "()Landroid/graphics/drawable/Drawable$Callback;", "GetGetCallbackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation attached to this
 Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation attached to this
 Drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getCallback()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="CanApplyTheme">
      <MemberSignature Language="C#" Value="public virtual bool CanApplyTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanApplyTheme() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canApplyTheme", "()Z", "GetCanApplyThemeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#canApplyTheme()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangingConfigurations">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ConfigChanges ChangingConfigurations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ConfigChanges ChangingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setChangingConfigurations", "(I)V", "GetSetChangingConfigurations_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ConfigChanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a mask of the configuration parameters for which this drawable
 may change, requiring that it be re-created.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getChangingConfigurations()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return a mask of the configuration parameters for which this drawable
 may change, requiring that it be re-created.  The default implementation
 returns whatever was provided through
 <c><see cref="P:Android.Graphics.Drawables.Drawable.ChangingConfigurations" /></c> or 0 by default.  Subclasses
 may extend this to or in the changing configurations of any other
 drawables they hold.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setChangingConfigurations(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set a mask of the configuration parameters for which this drawable
 may change, requiring that it be re-created.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearColorFilter">
      <MemberSignature Language="C#" Value="public virtual void ClearColorFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearColorFilter() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearColorFilter", "()V", "GetClearColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the color filter for this drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the color filter for this drawable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#clearColorFilter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter ColorFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorFilter ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current color filter, or <c>null</c> if none set.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current color filter, or <c>null</c> if none set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getColorFilter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect CopyBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Rect CopyBounds() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBounds", "()Landroid/graphics/Rect;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Return a copy of the drawable's bounds in a new Rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a copy of the drawable's bounds in a new Rect. This returns the
 same values as getBounds(), but the returned object is guaranteed to not
 be changed later by the drawable (i.e. it retains no reference to this
 rect). If the caller already has a Rect allocated, call copyBounds(rect).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#copyBounds()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="C#" Value="public void CopyBounds (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBounds(class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBounds", "(Landroid/graphics/Rect;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Rect to receive the drawable's bounds (allocated by the
               caller).
</param>
        <summary>Return a copy of the drawable's bounds in the specified Rect (allocated
 by the caller).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a copy of the drawable's bounds in the specified Rect (allocated
 by the caller). The bounds specify where this will draw when its draw()
 method is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#copyBounds(android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPath">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromPath (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromPath(string pathName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromPath", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>Create a drawable from file path name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from file path name.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromPath(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPathAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync(string pathName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromResourceStream (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
 value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from an inputstream, using the given resources and
 value to determine density information.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromResourceStream (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName, Android.Graphics.BitmapFactory.Options opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
 value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from an inputstream, using the given resources and
 value to determine density information.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, java.lang.String, android.graphics.BitmapFactory.Options)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName, Android.Graphics.BitmapFactory.Options opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromStream (System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromStream(class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromStream", "(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream
</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from an inputstream
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromStream(java.io.InputStream, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync (System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync(class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>Create a drawable from an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from an XML document. For more information on how to
 create resources in XML, see
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/drawable-resource.html">Drawable Resources</a></format>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create a drawable from an XML document using an optional <c><see cref="!:NoType:android/content/res/Resources$Theme;Href=../../../../reference/android/content/res/Resources.Theme.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from an XML document using an optional <c><see cref="!:NoType:android/content/res/Resources$Theme;Href=../../../../reference/android/content/res/Resources.Theme.html" /></c>.
 For more information on how to create resources in XML, see
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/drawable-resource.html">Drawable Resources</a></format>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Create from inside an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create from inside an XML document.  Called on a parser positioned at
 a tag in an XML document, tries to create a Drawable from that tag.
 Returns null if the tag is not a valid drawable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create a drawable from inside an XML document using an optional
 <c><see cref="!:NoType:android/content/res/Resources$Theme;Href=../../../../reference/android/content/res/Resources.Theme.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable from inside an XML document using an optional
 <c><see cref="!:NoType:android/content/res/Resources$Theme;Href=../../../../reference/android/content/res/Resources.Theme.html" /></c>. Called on a parser positioned at a tag in an XML
 document, tries to create a Drawable from that tag. Returns <c>null</c>
 if the tag is not a valid drawable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrent", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getCurrent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirtyBounds">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect DirtyBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect DirtyBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDirtyBounds", "()Landroid/graphics/Rect;", "GetGetDirtyBoundsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's dirty bounds Rect.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the drawable's dirty bounds Rect. Note: for efficiency, the
 returned object may be the same object stored in the drawable (though
 this is not guaranteed).
 </para>
          <para tool="javadoc-to-mdoc">
 By default, this returns the full drawable bounds. Custom drawables may
 override this method to perform more precise invalidation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getDirtyBounds()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public abstract void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into
</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#draw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConstantState">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ConstantState GetConstantState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable/ConstantState GetConstantState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "GetGetConstantStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ConstantState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a <c><see cref="!:NoType:android/graphics/drawable/Drawable$ConstantState;Href=../../../../reference/android/graphics/drawable/Drawable.ConstantState.html" /></c> instance that holds the shared state of this Drawable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a <c><see cref="!:NoType:android/graphics/drawable/Drawable$ConstantState;Href=../../../../reference/android/graphics/drawable/Drawable.ConstantState.html" /></c> instance that holds the shared state of this Drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getConstantState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Mutate" />
      </Docs>
    </Member>
    <Member MemberName="GetOutline">
      <MemberSignature Language="C#" Value="public virtual void GetOutline (Android.Graphics.Outline outline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetOutline(class Android.Graphics.Outline outline) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutline", "(Landroid/graphics/Outline;)V", "GetGetOutline_Landroid_graphics_Outline_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outline" Type="Android.Graphics.Outline" />
      </Parameters>
      <Docs>
        <param name="outline">To be added.</param>
        <summary>Called to get the drawable to populate the Outline that defines its drawing area.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to get the drawable to populate the Outline that defines its drawing area.
 </para>
          <para tool="javadoc-to-mdoc">
 This method is called by the default <c><see cref="T:Android.Views.ViewOutlineProvider" /></c> to define
 the outline of the View.
 </para>
          <para tool="javadoc-to-mdoc">
 The default behavior defines the outline to be the bounding rectangle of 0 alpha.
 Subclasses that wish to convey a different shape or alpha value must override this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getOutline(android.graphics.Outline)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPadding">
      <MemberSignature Language="C#" Value="public virtual bool GetPadding (Android.Graphics.Rect padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPadding(class Android.Graphics.Rect padding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPadding", "(Landroid/graphics/Rect;)Z", "GetGetPadding_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <summary>Return in padding the insets suggested by this Drawable for placing
 content inside the drawable's bounds.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return in padding the insets suggested by this Drawable for placing
 content inside the drawable's bounds. Positive values move toward the
 center of the Drawable (set Rect.inset).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getPadding(android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual int[] GetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getState", "()[I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describes the current state, as a union of primitve states, such as
 <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_focused" /></c>,
 <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_selected" /></c>, etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Describes the current state, as a union of primitve states, such as
 <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_focused" /></c>,
 <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_selected" /></c>, etc.
 Some drawables may modify their imagery based on the selected state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Inflate this Drawable from an XML resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Inflate this Drawable from an XML resource. Does not apply a theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources, System.Xml.XmlReader, System.Xml.XmlReader, System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">Resources used to resolve attribute values</param>
        <param name="parser">XML parser from which to inflate this Drawable</param>
        <param name="attrs">Base set of attribute values</param>
        <param name="theme">Theme to apply, may be null</param>
        <summary>Inflate this Drawable from an XML resource optionally styled by a theme.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Inflate this Drawable from an XML resource optionally styled by a theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="!:NoType:XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntrinsicHeight">
      <MemberSignature Language="C#" Value="public virtual int IntrinsicHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntrinsicHeight", "()I", "GetGetIntrinsicHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the intrinsic height of the underlying drawable object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the intrinsic height of the underlying drawable object. Returns
 -1 if it has no intrinsic height, such as with a solid color.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getIntrinsicHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntrinsicWidth">
      <MemberSignature Language="C#" Value="public virtual int IntrinsicWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntrinsicWidth", "()I", "GetGetIntrinsicWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the intrinsic width of the underlying drawable object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the intrinsic width of the underlying drawable object.  Returns
 -1 if it has no intrinsic width, such as with a solid color.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getIntrinsicWidth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateSelf">
      <MemberSignature Language="C#" Value="public virtual void InvalidateSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateSelf() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateSelf", "()V", "GetInvalidateSelfHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 redrawn.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 redrawn.  Does nothing if there is no Callback attached to the
 Drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#invalidateSelf()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="IsStateful">
      <MemberSignature Language="C#" Value="public virtual bool IsStateful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStateful" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isStateful", "()Z", "GetIsStatefulHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this drawable will change its appearance based on
 state.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether this drawable will change its appearance based on
 state. Clients can use this to determine whether it is necessary to
 calculate their state and call setState.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#isStateful()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVisible", "()Z", "GetIsVisibleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#isVisible()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JumpToCurrentState">
      <MemberSignature Language="C#" Value="public virtual void JumpToCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void JumpToCurrentState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("jumpToCurrentState", "()V", "GetJumpToCurrentStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If this Drawable does transition animations between states, ask that
 it immediately jump to the current state and skip any active animations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If this Drawable does transition animations between states, ask that
 it immediately jump to the current state and skip any active animations.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#jumpToCurrentState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLevel", "()I", "GetGetLevelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current level.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the current level.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getLevel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum height suggested by this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the minimum height suggested by this Drawable. If a View uses this
 Drawable as a background, it is suggested that the View use at least this
 value for its height. (There will be some scenarios where this will not be
 possible.) This value should INCLUDE any padding.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getMinimumHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum width suggested by this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the minimum width suggested by this Drawable. If a View uses this
 Drawable as a background, it is suggested that the View use at least this
 value for its width. (There will be some scenarios where this will not be
 possible.) This value should INCLUDE any padding.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getMinimumWidth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Mutate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable Mutate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mutate", "()Landroid/graphics/drawable/Drawable;", "GetMutateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make this drawable mutable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Make this drawable mutable. This operation cannot be reversed. A mutable
 drawable is guaranteed to not share its state with any other drawable.
 This is especially useful when you need to modify properties of drawables
 loaded from resources. By default, all drawables instances loaded from
 the same resource share a common state; if you modify the state of one
 instance, all the other instances will receive the same modification.

 Calling this method on a mutable Drawable will have no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#mutate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetConstantState" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChange">
      <MemberSignature Language="C#" Value="protected virtual void OnBoundsChange (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBoundsChange(class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based on
 the bounds.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Override this in your subclass to change appearance if you vary based on
 the bounds.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#onBoundsChange(android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLevelChange">
      <MemberSignature Language="C#" Value="protected virtual bool OnLevelChange (int level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnLevelChange(int32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLevelChange", "(I)Z", "GetOnLevelChange_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based
  on level.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Override this in your subclass to change appearance if you vary based
  on level.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#onLevelChange(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected virtual bool OnStateChange (int[] state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStateChange(int32[] state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStateChange", "([I)Z", "GetOnStateChange_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Override this in your subclass to change appearance if you recognize the
 specified state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Override this in your subclass to change appearance if you recognize the
 specified state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#onStateChange(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public abstract int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the opacity/transparency of this Drawable.  The returned value is
 one of the abstract format constants in
 <c><see cref="T:Android.Graphics.PixelFormat" /></c>:
 <c><see cref="F:Android.Graphics.Format.Unknown" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Translucent" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Transparent" tool="ReplaceLinkValue" /></c>, or
 <c><see cref="F:Android.Graphics.Format.Opaque" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">An OPAQUE drawable is one that draws all all content within its bounds, completely
 covering anything behind the drawable. A TRANSPARENT drawable is one that draws nothing
 within its bounds, allowing everything behind it to show through. A TRANSLUCENT drawable
 is a drawable in any other state, where the drawable will draw some, but not all,
 of the content within its bounds and at least some content behind the drawable will
 be visible. If the visibility of the drawable's contents cannot be determined, the
 safest/best return value is TRANSLUCENT.

 </para>
          <para tool="javadoc-to-mdoc">Generally a Drawable should be as conservative as possible with the
 value it returns.  For example, if it contains multiple child drawables
 and only shows one of them at a time, if only one of the children is
 TRANSLUCENT and the others are OPAQUE then TRANSLUCENT should be
 returned.  You can use the method <c><see cref="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32,System.Int32)" /></c> to perform a
 standard reduction of two opacities to the appropriate single output.

 </para>
          <para tool="javadoc-to-mdoc">Note that the returned value does not necessarily take into account a
 custom alpha or color filter that has been applied by the client through
 the <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c> or <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> methods. Some subclasses,
 such as <c><see cref="T:Android.Graphics.Drawables.BitmapDrawable" /></c>, <c><see cref="T:Android.Graphics.Drawables.ColorDrawable" /></c>, and <c><see cref="T:Android.Graphics.Drawables.GradientDrawable" /></c>,
 do account for the value of <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c>, but the general behavior is dependent
 upon the implementation of the subclass.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getOpacity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="ResolveOpacity">
      <MemberSignature Language="C#" Value="public static int ResolveOpacity (int op1, int op2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveOpacity(int32 op1, int32 op2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveOpacity", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op1" Type="System.Int32" />
        <Parameter Name="op2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="op1">One opacity value.</param>
        <param name="op2">Another opacity value.</param>
        <summary>Return the appropriate opacity value for two source opacities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the appropriate opacity value for two source opacities.  If
 either is UNKNOWN, that is returned; else, if either is TRANSLUCENT,
 that is returned; else, if either is TRANSPARENT, that is returned;
 else, OPAQUE is returned.

 </para>
          <para tool="javadoc-to-mdoc">This is to help in implementing <c><see cref="P:Android.Graphics.Drawables.Drawable.Opacity" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#resolveOpacity(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="C#" Value="public virtual void ScheduleSelf (Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleSelf(class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scheduleSelf", "(Ljava/lang/Runnable;J)V", "GetScheduleSelf_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">The action being scheduled.</param>
        <param name="when">The time (in milliseconds) to run.</param>
        <summary>Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 scheduled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 scheduled.  Does nothing if there is no Callback attached to the
 Drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#scheduleSelf(java.lang.Runnable, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="C#" Value="public void ScheduleSelf (Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleSelf(class System.Action what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public abstract void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary tool="true">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setAlpha(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public virtual void SetBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBounds", "(IIII)V", "GetSetBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Specify a bounding rectangle for the Drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify a bounding rectangle for the Drawable. This is where the drawable
 will draw when its draw() method is called.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setBounds(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Graphics.Drawables.Drawable.ICallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Graphics.Drawables.Drawable/ICallback cb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCallback", "(Landroid/graphics/drawable/Drawable$Callback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Graphics.Drawables.Drawable+ICallback" />
      </Parameters>
      <Docs>
        <param name="cb">The client's Callback implementation.</param>
        <summary>Bind a <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> object to this Drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Bind a <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> object to this Drawable.  Required for clients
 that want to support animated drawables.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setCallback(android.graphics.drawable.Drawable.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public abstract void SetColorFilter (Android.Graphics.ColorFilter cf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(class Android.Graphics.ColorFilter cf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cf" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="cf">the color filter to apply, or <c>null</c> to remove the
            existing color filter
</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an optional color filter for the drawable.
 </para>
          <para tool="javadoc-to-mdoc">
 If a Drawable has a ColorFilter, each output pixel of the Drawable's
 drawing contents will be modified by the color filter before it is
 blended onto the render target of a Canvas.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass <c>null</c> to remove any existing color filter.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a non-<c>null</c> color
 filter disables <c><see cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setColorFilter(android.graphics.ColorFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public virtual void SetColorFilter (Android.Graphics.Color color, Android.Graphics.PorterDuff.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(valuetype Android.Graphics.Color color, class Android.Graphics.PorterDuff/Mode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(ILandroid/graphics/PorterDuff$Mode;)V", "GetSetColorFilter_ILandroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
        <Parameter Name="mode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Specify a color and Porter-Duff mode to be the color filter for this
 drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify a color and Porter-Duff mode to be the color filter for this
 drawable.
 </para>
          <para tool="javadoc-to-mdoc">
 Convenience for <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> which constructs a
 <c><see cref="T:Android.Graphics.PorterDuffColorFilter" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a color filter disables
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setColorFilter(int, android.graphics.PorterDuff.Mode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDither">
      <MemberSignature Language="C#" Value="public virtual void SetDither (bool dither);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDither(bool dither) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dither" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dither">To be added.</param>
        <summary>Set to true to have the drawable dither its colors when drawn to a
 device with fewer than 8-bits per color component.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set to true to have the drawable dither its colors when drawn to a
 device with fewer than 8-bits per color component.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setDither(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.Dither" />
      </Docs>
    </Member>
    <Member MemberName="SetFilterBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetFilterBitmap (bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilterBitmap(bool filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>Set to true to have the drawable filter its bitmaps with bilinear
 sampling when they are scaled or rotated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set to true to have the drawable filter its bitmaps with bilinear
 sampling when they are scaled or rotated.

 </para>
          <para tool="javadoc-to-mdoc">This can improve appearance when bitmaps are rotated. If the drawable
 does not use bitmaps, this call is ignored.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setFilterBitmap(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
        <altmember cref="P:Android.Graphics.Paint.FilterBitmap" />
      </Docs>
    </Member>
    <Member MemberName="SetHotspot">
      <MemberSignature Language="C#" Value="public virtual void SetHotspot (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspot(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The X coordinate of the center of the hotspot</param>
        <param name="y">The Y coordinate of the center of the hotspot
</param>
        <summary>Specifies the hotspot's location within the drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies the hotspot's location within the drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setHotspot(float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHotspotBounds">
      <MemberSignature Language="C#" Value="public virtual void SetHotspotBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspotBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">position in pixels of the left bound</param>
        <param name="top">position in pixels of the top bound</param>
        <param name="right">position in pixels of the right bound</param>
        <param name="bottom">position in pixels of the bottom bound</param>
        <summary>Sets the bounds to which the hotspot is constrained, if they should be
 different from the drawable bounds.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the bounds to which the hotspot is constrained, if they should be
 different from the drawable bounds.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setHotspotBounds(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetHotspotBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="SetLevel">
      <MemberSignature Language="C#" Value="public bool SetLevel (int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetLevel(int32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLevel", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">The new level, from 0 (minimum) to 10000 (maximum).</param>
        <summary>Specify the level for the drawable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify the level for the drawable.  This allows a drawable to vary its
 imagery based on a continuous controller, for example to show progress
 or volume level.

 </para>
          <para tool="javadoc-to-mdoc">If the new level you are supplying causes the appearance of the
 Drawable to change, then it is responsible for calling
 <c><see cref="M:Android.Graphics.Drawables.Drawable.InvalidateSelf" /></c> in order to have itself redrawn, <i>and</i>
 true will be returned from this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setLevel(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetState">
      <MemberSignature Language="C#" Value="public virtual bool SetState (int[] stateSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetState(int32[] stateSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setState", "([I)Z", "GetSetState_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSet" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="stateSet">The new set of states to be displayed.</param>
        <summary>Specify a set of states for the drawable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify a set of states for the drawable. These are use-case specific,
 so see the relevant documentation. As an example, the background for
 widgets like Button understand the following states:
 [<c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_focused" /></c>,
  <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_pressed" /></c>].

 </para>
          <para tool="javadoc-to-mdoc">If the new state you are supplying causes the appearance of the
 Drawable to change, then it is responsible for calling
 <c><see cref="M:Android.Graphics.Drawables.Drawable.InvalidateSelf" /></c> in order to have itself redrawn, <i>and</i>
 true will be returned from this function.

 </para>
          <para tool="javadoc-to-mdoc">Note: The Drawable holds a reference on to <format type="text/html"><var>stateSet</var></format>
 until a new state array is given to it, so you must not modify this
 array during that time.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setState(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTint">
      <MemberSignature Language="C#" Value="public virtual void SetTint (int tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTint(int32 tint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTint", "(I)V", "GetSetTint_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tint">Color to use for tinting this drawable</param>
        <summary>Specifies tint color for this drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies tint color for this drawable.
 </para>
          <para tool="javadoc-to-mdoc">
 A Drawable's drawing content will be blended together with its tint
 before it is drawn to the screen. This functions similarly to
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,.Mode)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 To clear the tint, pass <c>null</c> to
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a color filter via
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> or
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,.Mode)" /></c> overrides tint.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setTint(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintList">
      <MemberSignature Language="C#" Value="public virtual void SetTintList (Android.Content.Res.ColorStateList tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintList(class Android.Content.Res.ColorStateList tint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tint" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="tint">Color state list to use for tinting this drawable, or
            <c>null</c> to clear the tint</param>
        <summary>Specifies tint color for this drawable as a color state list.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies tint color for this drawable as a color state list.
 </para>
          <para tool="javadoc-to-mdoc">
 A Drawable's drawing content will be blended together with its tint
 before it is drawn to the screen. This functions similarly to
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,.Mode)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a color filter via
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> or
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,.Mode)" /></c> overrides tint.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setTintList(android.content.res.ColorStateList)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintMode">
      <MemberSignature Language="C#" Value="public virtual void SetTintMode (Android.Graphics.PorterDuff.Mode tintMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintMode(class Android.Graphics.PorterDuff/Mode tintMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintMode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="tintMode">A Porter-Duff blending mode</param>
        <summary>Specifies a tint blending mode for this drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies a tint blending mode for this drawable.
 </para>
          <para tool="javadoc-to-mdoc">
 Defines how this drawable's tint color should be blended into the drawable
 before it is drawn to screen. Default tint mode is <c><see cref="!:NoType:android/graphics/PorterDuff$Mode;Href=../../../../reference/android/graphics/PorterDuff.Mode.html#SRC_IN" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a color filter via
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> or
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,.Mode)" /></c> overrides tint.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setTintMode(android.graphics.PorterDuff.Mode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisible">
      <MemberSignature Language="C#" Value="public virtual bool SetVisible (bool visible, bool restart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetVisible(bool visible, bool restart) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVisible", "(ZZ)Z", "GetSetVisible_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
        <Parameter Name="restart" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Set to true if visible, false if not.</param>
        <param name="restart">You can supply true here to force the drawable to behave
                as if it has just become visible, even if it had last
                been set visible.  Used for example to force animations
                to restart.</param>
        <summary>Set whether this Drawable is visible.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether this Drawable is visible.  This generally does not impact
 the Drawable's behavior, but is a hint that can be used by some
 Drawables, for example, to decide whether run animations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setVisible(boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparentRegion">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Region TransparentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Region TransparentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransparentRegion", "()Landroid/graphics/Region;", "GetGetTransparentRegionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Region representing the part of the Drawable that is completely
 transparent.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a Region representing the part of the Drawable that is completely
 transparent.  This can be used to perform drawing operations, identifying
 which parts of the target will not change when rendering the Drawable.
 The default implementation returns null, indicating no transparent
 region; subclasses can optionally override this to return an actual
 Region if they want to supply this optimization information, but it is
 not required that they do so.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getTransparentRegion()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleSelf (Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleSelf(class Java.Lang.IRunnable what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleSelf", "(Ljava/lang/Runnable;)V", "GetUnscheduleSelf_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="what">The runnable that you no longer want called.</param>
        <summary>Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 unscheduled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 unscheduled.  Does nothing if there is no Callback attached to the
 Drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#unscheduleSelf(java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="C#" Value="public void UnscheduleSelf (Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleSelf(class System.Action what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
