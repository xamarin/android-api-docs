<Type Name="Drawable" FullName="Android.Graphics.Drawables.Drawable">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Drawable&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Drawable abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class Drawable : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Drawable extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Drawables.Drawable" />
  <TypeSignature Language="F#" Value="type Drawable = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/drawable/Drawable", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/drawable/Drawable", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable is a general abstraction for "something that can be drawn.</summary>
    <remarks>
      <para>A Drawable is a general abstraction for "something that can be drawn."  Most
            often you will deal with Drawable as the type of resource retrieved for
            drawing things to the screen; the Drawable class provides a generic API for
            dealing with an underlying visual resource that may take a variety of forms.
            Unlike a <c>android.view.View</c>, a Drawable does not have any facility to
            receive events or otherwise interact with the user.</para>
      <para>In addition to simple drawing, Drawable provides a number of generic
            mechanisms for its client to interact with what is being drawn:
            
            &lt;ul&gt;
                &lt;li&gt; The <c>#setBounds</c> method &lt;var&gt;must&lt;/var&gt; be called to tell the
                Drawable where it is drawn and how large it should be.  All Drawables
                should respect the requested size, often simply by scaling their
                imagery.  A client can find the preferred size for some Drawables with
                the <c>#getIntrinsicHeight</c> and <c>#getIntrinsicWidth</c> methods.
            
                &lt;li&gt; The <c>#getPadding</c> method can return from some Drawables
                information about how to frame content that is placed inside of them.
                For example, a Drawable that is intended to be the frame for a button
                widget would need to return padding that correctly places the label
                inside of itself.
            
                &lt;li&gt; The <c>#setState</c> method allows the client to tell the Drawable
                in which state it is to be drawn, such as "focused", "selected", etc.
                Some drawables may modify their imagery based on the selected state.
            
                &lt;li&gt; The <c>#setLevel</c> method allows the client to supply a single
                continuous controller that can modify the Drawable is displayed, such as
                a battery level or progress level.  Some drawables may modify their
                imagery based on the current level.
            
                &lt;li&gt; A Drawable can perform animations by calling back to its client
                through the <c>Callback</c> interface.  All clients should support this
                interface (via <c>#setCallback</c>) so that animations will work.  A
                simple way to do this is through the system facilities such as
                <c>android.view.View#setBackground(Drawable)</c> and
                <c>android.widget.ImageView</c>.
            &lt;/ul&gt;
            
            Though usually not visible to the application, Drawables may take a variety
            of forms:
            
            &lt;ul&gt;
                &lt;li&gt; &lt;b&gt;Bitmap&lt;/b&gt;: the simplest Drawable, a PNG or JPEG image.
                &lt;li&gt; &lt;b&gt;Nine Patch&lt;/b&gt;: an extension to the PNG format allows it to
                specify information about how to stretch it and place things inside of
                it.
                &lt;li&gt;&lt;b&gt;Vector&lt;/b&gt;: a drawable defined in an XML file as a set of points,
                lines, and curves along with its associated color information. This type
                of drawable can be scaled without loss of display quality.
                &lt;li&gt; &lt;b&gt;Shape&lt;/b&gt;: contains simple drawing commands instead of a raw
                bitmap, allowing it to resize better in some cases.
                &lt;li&gt; &lt;b&gt;Layers&lt;/b&gt;: a compound drawable, which draws multiple underlying
                drawables on top of each other.
                &lt;li&gt; &lt;b&gt;States&lt;/b&gt;: a compound drawable that selects one of a set of
                drawables based on its state.
                &lt;li&gt; &lt;b&gt;Levels&lt;/b&gt;: a compound drawable that selects one of a set of
                drawables based on its level.
                &lt;li&gt; &lt;b&gt;Scale&lt;/b&gt;: a compound drawable with a single child drawable,
                whose overall size is modified based on the current level.
            &lt;/ul&gt;
            
            "Custom"&gt;&lt;h3&gt;Custom drawables&lt;/h3&gt;</para>
      <para>All versions of Android allow the Drawable class to be extended and used at
            run time in place of framework-provided drawable classes. Starting in
            <c>android.os.Build.VERSION_CODES#N API 24</c>, custom drawables classes
            may also be used in XML.</para>
      <para>&lt;strong&gt;Note:&lt;/strong&gt; Custom drawable classes are only accessible from
            within your application package. Other applications will not be able to load
            them.</para>
      <para>At a minimum, custom drawable classes must implement the abstract methods on
            Drawable and should override the <c>Drawable#draw(Canvas)</c> method to
            draw content.</para>
      <para>Custom drawables classes may be used in XML in multiple ways:
            &lt;ul&gt;
                &lt;li&gt;
                    Using the fully-qualified class name as the XML element name. For
                    this method, the custom drawable class must be a public top-level
                    class.</para>
      <code lang="text/java">&amp;lt;com.myapp.MyCustomDrawable xmlns:android="http://schemas.android.com/apk/res/android"
                android:color="#ffff0000" /&amp;gt;
            </code>
      <para>&lt;/li&gt;
                &lt;li&gt;
                    Using &lt;em&gt;drawable&lt;/em&gt; as the XML element name and specifying the
                    fully-qualified class name from the &lt;em&gt;class&lt;/em&gt; attribute. This
                    method may be used for both public top-level classes and public
                    static inner classes.</para>
      <code lang="text/java">&amp;lt;drawable xmlns:android="http://schemas.android.com/apk/res/android"
                class="com.myapp.MyTopLevelClass$InnerCustomDrawable"
                android:color="#ffff0000" /&amp;gt;
            </code>
      <para>&lt;/li&gt;
            &lt;/ul&gt;
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about how to use drawables, read the
            <see href="https://developer.android.com/guide/topics/graphics/2d-graphics.html">Canvas and Drawables</see> developer
            guide. For information and examples of creating drawable resources (XML or bitmap files that
            can be loaded in code), read the
            <see href="https://developer.android.com/guide/topics/resources/drawable-resource.html">Drawable Resources</see>
            document.</para>
      <para>&lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Drawable();" />
      <MemberSignature Language="C#" Value="public Drawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Drawable(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Drawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Drawables.Drawable : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Drawables.Drawable" Usage="new Android.Graphics.Drawables.Drawable (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alpha As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Alpha { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alpha" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Alpha" />
      <MemberSignature Language="F#" Value="member this.Alpha : int with get, set" Usage="Android.Graphics.Drawables.Drawable.Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current alpha value for the drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the current alpha value for the drawable. 0 means fully transparent,
            255 means fully opaque. This method is implemented by
            Drawable subclasses and the value returned is specific to how that class treats alpha.
            The default return value is 255 if the class does not override this method to return a value
            specific to its use of alpha.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getAlpha()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyTheme (t As Resources.Theme)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyTheme(Android::Content::Res::Resources::Theme ^ t);" />
      <MemberSignature Language="C#" Value="public virtual void ApplyTheme (Android.Content.Res.Resources.Theme t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme(class Android.Content.Res.Resources/Theme t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ApplyTheme(Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="abstract member ApplyTheme : Android.Content.Res.Resources.Theme -&gt; unit&#xA;override this.ApplyTheme : Android.Content.Res.Resources.Theme -&gt; unit" Usage="drawable.ApplyTheme t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="t">the theme to apply</param>
        <summary>Applies the specified theme to this Drawable and its children.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#applyTheme(android.content.res.Theme)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.applyTheme(android.content.res.Theme)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoMirrored">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoMirrored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoMirrored { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool AutoMirrored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoMirrored" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.AutoMirrored" />
      <MemberSignature Language="F#" Value="member this.AutoMirrored : bool with get, set" Usage="Android.Graphics.Drawables.Drawable.AutoMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mirrored">Set to true if the Drawable should be mirrored, false if not.</param>
        <summary>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
            right-to-left. -or- Set whether this Drawable is automatically mirrored when its layout direction is RTL
            (right-to left).</summary>
        <value>boolean Returns true if this Drawable will be automatically mirrored.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
            right-to-left. See <c>android.util.LayoutDirection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#isAutoMirrored()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.isAutoMirrored()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this Drawable is automatically mirrored when its layout direction is RTL
            (right-to left). See <c>android.util.LayoutDirection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setAutoMirrored(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setAutoMirrored(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="VB.NET" Value="Public Property Bounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Graphics::Rect ^ Bounds { Android::Graphics::Rect ^ get(); void set(Android::Graphics::Rect ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Bounds" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Bounds" />
      <MemberSignature Language="F#" Value="member this.Bounds : Android.Graphics.Rect with get, set" Usage="Android.Graphics.Drawables.Drawable.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBounds", "(Landroid/graphics/Rect;)V", "GetSetBounds_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBounds", "(Landroid/graphics/Rect;)V", "GetSetBounds_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's bounds Rect. -or- Specify a bounding rectangle for the Drawable.</summary>
        <value>The bounds of the drawable (which may change later, so caller
                    beware). DO NOT ALTER the returned object as it may change the
                    stored bounds of this drawable.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the drawable's bounds Rect. Note: for efficiency, the returned
            object may be the same object stored in the drawable (though this is not
            guaranteed), so if a persistent copy of the bounds is needed, call
            copyBounds(rect) instead.
            You should also not change the object returned by this method as it may
            be the same object stored in the drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getBounds()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getBounds()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify a bounding rectangle for the Drawable. This is where the drawable
            will draw when its draw() method is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setBounds(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setBounds(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Callback As Drawable.ICallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable::ICallback ^ Callback { Android::Graphics::Drawables::Drawable::ICallback ^ get(); void set(Android::Graphics::Drawables::Drawable::ICallback ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ICallback? Callback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable/ICallback Callback" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Callback" />
      <MemberSignature Language="F#" Value="member this.Callback : Android.Graphics.Drawables.Drawable.ICallback with get, set" Usage="Android.Graphics.Drawables.Drawable.Callback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallback", "()Landroid/graphics/drawable/Drawable$Callback;", "GetGetCallbackHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallback", "()Landroid/graphics/drawable/Drawable$Callback;", "GetGetCallbackHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c>Callback</c> implementation attached to this
            Drawable.</summary>
        <value>A <c>Callback</c> instance or null if no callback was set.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getCallback()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getCallback()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="CanApplyTheme">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanApplyTheme () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanApplyTheme();" />
      <MemberSignature Language="C#" Value="public virtual bool CanApplyTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanApplyTheme() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CanApplyTheme" />
      <MemberSignature Language="F#" Value="abstract member CanApplyTheme : unit -&gt; bool&#xA;override this.CanApplyTheme : unit -&gt; bool" Usage="drawable.CanApplyTheme " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canApplyTheme", "()Z", "GetCanApplyThemeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canApplyTheme", "()Z", "GetCanApplyThemeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangingConfigurations">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChangingConfigurations As ConfigChanges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::PM::ConfigChanges ChangingConfigurations { Android::Content::PM::ConfigChanges get(); void set(Android::Content::PM::ConfigChanges value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ConfigChanges ChangingConfigurations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ConfigChanges ChangingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ChangingConfigurations" />
      <MemberSignature Language="F#" Value="member this.ChangingConfigurations : Android.Content.PM.ConfigChanges with get, set" Usage="Android.Graphics.Drawables.Drawable.ChangingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setChangingConfigurations", "(I)V", "GetSetChangingConfigurations_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setChangingConfigurations", "(I)V", "GetSetChangingConfigurations_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ConfigChanges</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="configs">A mask of the changing configuration parameters, as
            defined by <c>android.content.pm.ActivityInfo</c>.</param>
        <summary>Return a mask of the configuration parameters for which this drawable
            may change, requiring that it be re-created. -or- Set a mask of the configuration parameters for which this drawable
            may change, requiring that it be re-created.</summary>
        <value>Returns a mask of the changing configuration parameters, as
            defined by <c>android.content.pm.ActivityInfo</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return a mask of the configuration parameters for which this drawable
            may change, requiring that it be re-created.  The default implementation
            returns whatever was provided through
            <c>#setChangingConfigurations(int)</c> or 0 by default.  Subclasses
            may extend this to or in the changing configurations of any other
            drawables they hold.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getChangingConfigurations()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getChangingConfigurations()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set a mask of the configuration parameters for which this drawable
            may change, requiring that it be re-created.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setChangingConfigurations(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setChangingConfigurations(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearColorFilter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearColorFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearColorFilter();" />
      <MemberSignature Language="C#" Value="public virtual void ClearColorFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearColorFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ClearColorFilter" />
      <MemberSignature Language="F#" Value="abstract member ClearColorFilter : unit -&gt; unit&#xA;override this.ClearColorFilter : unit -&gt; unit" Usage="drawable.ClearColorFilter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearColorFilter", "()V", "GetClearColorFilterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearColorFilter", "()V", "GetClearColorFilterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the color filter for this drawable.</summary>
        <remarks>
          <para>Removes the color filter for this drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#clearColorFilter()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.clearColorFilter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColorFilter As ColorFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::ColorFilter ^ ColorFilter { Android::Graphics::ColorFilter ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter? ColorFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorFilter ColorFilter" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ColorFilter" />
      <MemberSignature Language="F#" Value="member this.ColorFilter : Android.Graphics.ColorFilter" Usage="Android.Graphics.Drawables.Drawable.ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current color filter, or <c>null</c> if none set.</summary>
        <value>the current color filter, or <c>null</c> if none set</value>
        <remarks>
          <para>Returns the current color filter, or <c>null</c> if none set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getColorFilter()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getColorFilter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="VB.NET" Value="Public Function CopyBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Graphics::Rect ^ CopyBounds();" />
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect CopyBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Rect CopyBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CopyBounds" />
      <MemberSignature Language="F#" Value="member this.CopyBounds : unit -&gt; Android.Graphics.Rect" Usage="drawable.CopyBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyBounds", "()Landroid/graphics/Rect;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyBounds", "()Landroid/graphics/Rect;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a copy of the drawable's bounds in a new Rect.</summary>
        <returns>A copy of the drawable's bounds</returns>
        <remarks>
          <para>Return a copy of the drawable's bounds in a new Rect. This returns the
            same values as getBounds(), but the returned object is guaranteed to not
            be changed later by the drawable (i.e. it retains no reference to this
            rect). If the caller already has a Rect allocated, call copyBounds(rect).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#copyBounds()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.copyBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBounds (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBounds(Android::Graphics::Rect ^ bounds);" />
      <MemberSignature Language="C#" Value="public void CopyBounds (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBounds(class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CopyBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.CopyBounds : Android.Graphics.Rect -&gt; unit" Usage="drawable.CopyBounds bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyBounds", "(Landroid/graphics/Rect;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyBounds", "(Landroid/graphics/Rect;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Rect to receive the drawable's bounds (allocated by the
                          caller).</param>
        <summary>Return a copy of the drawable's bounds in the specified Rect (allocated
            by the caller).</summary>
        <returns>A copy of the drawable's bounds</returns>
        <remarks>
          <para>Return a copy of the drawable's bounds in the specified Rect (allocated
            by the caller). The bounds specify where this will draw when its draw()
            method is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#copyBounds(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.copyBounds(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPath">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPath (pathName As String) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromPath(System::String ^ pathName);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable? CreateFromPath (string? pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromPath(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromPath(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromPath : string -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromPath pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromPath", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromPath", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>Create a drawable from file path name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a drawable from file path name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromPath(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromPath(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPathAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPathAsync (pathName As String) As Task(Of Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;Android::Graphics::Drawables::Drawable ^&gt; ^ CreateFromPathAsync(System::String ^ pathName);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable?&gt; CreateFromPathAsync (string? pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromPathAsync(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromPathAsync : string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromPathAsync pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromResourceStream (res As Resources, value As TypedValue, is As Stream, srcName As String) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromResourceStream(Android::Content::Res::Resources ^ res, Android::Util::TypedValue ^ value, System::IO::Stream ^ is, System::String ^ srcName);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable? CreateFromResourceStream (Android.Content.Res.Resources? res, Android.Util.TypedValue? value, System.IO.Stream? is, string? srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStream(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStream : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStream (res, value, is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
            value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a drawable from an inputstream, using the given resources and
            value to determine density information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromResourceStream(android.content.res.Resources,%20android.util.TypedValue,%20java.io.InputStream,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromResourceStream (res As Resources, value As TypedValue, is As Stream, srcName As String, opts As BitmapFactory.Options) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromResourceStream(Android::Content::Res::Resources ^ res, Android::Util::TypedValue ^ value, System::IO::Stream ^ is, System::String ^ srcName, Android::Graphics::BitmapFactory::Options ^ opts);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable? CreateFromResourceStream (Android.Content.Res.Resources? res, Android.Util.TypedValue? value, System.IO.Stream? is, string? srcName, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStream(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String,Android.Graphics.BitmapFactory.Options)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStream : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStream (res, value, is, srcName, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
            value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromResourceStream(android.content.res.Resources,%20android.util.TypedValue,%20java.io.InputStream,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromResourceStreamAsync (res As Resources, value As TypedValue, is As Stream, srcName As String) As Task(Of Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;Android::Graphics::Drawables::Drawable ^&gt; ^ CreateFromResourceStreamAsync(Android::Content::Res::Resources ^ res, Android::Util::TypedValue ^ value, System::IO::Stream ^ is, System::String ^ srcName);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable?&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources? res, Android.Util.TypedValue? value, System.IO.Stream? is, string? srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStreamAsync : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync (res, value, is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromResourceStreamAsync (res As Resources, value As TypedValue, is As Stream, srcName As String, opts As BitmapFactory.Options) As Task(Of Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;Android::Graphics::Drawables::Drawable ^&gt; ^ CreateFromResourceStreamAsync(Android::Content::Res::Resources ^ res, Android::Util::TypedValue ^ value, System::IO::Stream ^ is, System::String ^ srcName, Android::Graphics::BitmapFactory::Options ^ opts);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable?&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources? res, Android.Util.TypedValue? value, System.IO.Stream? is, string? srcName, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String,Android.Graphics.BitmapFactory.Options)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStreamAsync : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync (res, value, is, srcName, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromStream (is As Stream, srcName As String) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromStream(System::IO::Stream ^ is, System::String ^ srcName);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable? CreateFromStream (System.IO.Stream? is, string? srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromStream(class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromStream(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromStream : System.IO.Stream * string -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromStream (is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromStream", "(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromStream", "(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a drawable from an inputstream</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromStream(java.io.InputStream,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromStream(java.io.InputStream, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromStreamAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromStreamAsync (is As Stream, srcName As String) As Task(Of Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;Android::Graphics::Drawables::Drawable ^&gt; ^ CreateFromStreamAsync(System::IO::Stream ^ is, System::String ^ srcName);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable?&gt; CreateFromStreamAsync (System.IO.Stream? is, string? srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync(class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromStreamAsync(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromStreamAsync : System.IO.Stream * string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromStreamAsync (is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXml (r As Resources, parser As XmlReader) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromXml(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXml(Android.Content.Res.Resources,System.Xml.XmlReader)" />
      <MemberSignature Language="F#" Value="static member CreateFromXml : Android.Content.Res.Resources * System.Xml.XmlReader -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXml (r, parser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>Create a drawable from an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a drawable from an XML document. For more information on how to
            create resources in XML, see
            <see href="https://developer.android.com/guide/topics/resources/drawable-resource.html">Drawable Resources</see>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromXml(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXml (r As Resources, parser As XmlReader, theme As Resources.Theme) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromXml(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Content::Res::Resources::Theme ^ theme);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme? theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXml(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="static member CreateFromXml : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Content.Res.Resources.Theme -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXml (r, parser, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create a drawable from an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromXml(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXmlAsync (r As Resources, parser As XmlReader) As Task(Of Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;Android::Graphics::Drawables::Drawable ^&gt; ^ CreateFromXmlAsync(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlAsync(Android.Content.Res.Resources,System.Xml.XmlReader)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlAsync : Android.Content.Res.Resources * System.Xml.XmlReader -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlAsync (r, parser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXmlAsync (r As Resources, parser As XmlReader, theme As Resources.Theme) As Task(Of Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;Android::Graphics::Drawables::Drawable ^&gt; ^ CreateFromXmlAsync(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Content::Res::Resources::Theme ^ theme);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme? theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlAsync(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlAsync : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Content.Res.Resources.Theme -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlAsync (r, parser, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXmlInner (r As Resources, parser As XmlReader, attrs As IAttributeSet) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromXmlInner(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlInner(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlInner : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlInner (r, parser, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Create from inside an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create from inside an XML document.  Called on a parser positioned at
            a tag in an XML document, tries to create a Drawable from that tag.
            Returns null if the tag is not a valid drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromXmlInner(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXmlInner (r As Resources, parser As XmlReader, attrs As IAttributeSet, theme As Resources.Theme) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ CreateFromXmlInner(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Util::IAttributeSet ^ attrs, Android::Content::Res::Resources::Theme ^ theme);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme? theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlInner(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlInner : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlInner (r, parser, attrs, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create from inside an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#createFromXmlInner(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Current As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ Current { Android::Graphics::Drawables::Drawable ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Current" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Current" />
      <MemberSignature Language="F#" Value="member this.Current : Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrent", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrent", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>The current drawable that will be used by this drawable. For simple drawables, this
                    is just the drawable itself. For drawables that change state like
                    <c>StateListDrawable</c> and <c>LevelListDrawable</c> this will be the child drawable
                    currently in use.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getCurrent()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getCurrent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirtyBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DirtyBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Rect ^ DirtyBounds { Android::Graphics::Rect ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect DirtyBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect DirtyBounds" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.DirtyBounds" />
      <MemberSignature Language="F#" Value="member this.DirtyBounds : Android.Graphics.Rect" Usage="Android.Graphics.Drawables.Drawable.DirtyBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDirtyBounds", "()Landroid/graphics/Rect;", "GetGetDirtyBoundsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDirtyBounds", "()Landroid/graphics/Rect;", "GetGetDirtyBoundsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's dirty bounds Rect.</summary>
        <value>The dirty bounds of this drawable</value>
        <remarks>
          <para>Return the drawable's dirty bounds Rect. Note: for efficiency, the
            returned object may be the same object stored in the drawable (though
            this is not guaranteed).</para>
          <para>By default, this returns the full drawable bounds. Custom drawables may
            override this method to perform more precise invalidation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getDirtyBounds()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getDirtyBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Draw (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Draw(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="public abstract void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas -&gt; unit" Usage="drawable.Draw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
            as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks>
          <para>Draw in its bounds (set via setBounds) respecting optional effects such
            as alpha (set via setAlpha) and color filter (set via setColorFilter).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#draw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.draw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConstantState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstantState () As Drawable.ConstantState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Graphics::Drawables::Drawable::ConstantState ^ GetConstantState();" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ConstantState? GetConstantState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable/ConstantState GetConstantState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetConstantState" />
      <MemberSignature Language="F#" Value="abstract member GetConstantState : unit -&gt; Android.Graphics.Drawables.Drawable.ConstantState&#xA;override this.GetConstantState : unit -&gt; Android.Graphics.Drawables.Drawable.ConstantState" Usage="drawable.GetConstantState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "GetGetConstantStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "GetGetConstantStateHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ConstantState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a <c>ConstantState</c> instance that holds the shared state of this Drawable.</summary>
        <returns>The ConstantState associated to that Drawable.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getConstantState()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getConstantState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Mutate" />
      </Docs>
    </Member>
    <Member MemberName="GetHotspotBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetHotspotBounds (outRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetHotspotBounds(Android::Graphics::Rect ^ outRect);" />
      <MemberSignature Language="C#" Value="public virtual void GetHotspotBounds (Android.Graphics.Rect outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetHotspotBounds(class Android.Graphics.Rect outRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetHotspotBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetHotspotBounds : Android.Graphics.Rect -&gt; unit&#xA;override this.GetHotspotBounds : Android.Graphics.Rect -&gt; unit" Usage="drawable.GetHotspotBounds outRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHotspotBounds", "(Landroid/graphics/Rect;)V", "GetGetHotspotBounds_Landroid_graphics_Rect_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHotspotBounds", "(Landroid/graphics/Rect;)V", "GetGetHotspotBounds_Landroid_graphics_Rect_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">the rect to populate with the hotspot bounds</param>
        <summary>Populates <c>outRect</c> with the hotspot bounds.</summary>
        <remarks>
          <para>Populates <c>outRect</c> with the hotspot bounds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getHotspotBounds(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getHotspotBounds(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutline">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetOutline (outline As Outline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetOutline(Android::Graphics::Outline ^ outline);" />
      <MemberSignature Language="C#" Value="public virtual void GetOutline (Android.Graphics.Outline outline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetOutline(class Android.Graphics.Outline outline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetOutline(Android.Graphics.Outline)" />
      <MemberSignature Language="F#" Value="abstract member GetOutline : Android.Graphics.Outline -&gt; unit&#xA;override this.GetOutline : Android.Graphics.Outline -&gt; unit" Usage="drawable.GetOutline outline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutline", "(Landroid/graphics/Outline;)V", "GetGetOutline_Landroid_graphics_Outline_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutline", "(Landroid/graphics/Outline;)V", "GetGetOutline_Landroid_graphics_Outline_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outline" Type="Android.Graphics.Outline" />
      </Parameters>
      <Docs>
        <param name="outline">To be added.</param>
        <summary>Called to get the drawable to populate the Outline that defines its drawing area.</summary>
        <remarks>
          <para>Called to get the drawable to populate the Outline that defines its drawing area.</para>
          <para>This method is called by the default <c>android.view.ViewOutlineProvider</c> to define
            the outline of the View.</para>
          <para>The default behavior defines the outline to be the bounding rectangle of 0 alpha.
            Subclasses that wish to convey a different shape or alpha value must override this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getOutline(android.graphics.Outline)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getOutline(android.graphics.Outline)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPadding">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPadding (padding As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPadding(Android::Graphics::Rect ^ padding);" />
      <MemberSignature Language="C#" Value="public virtual bool GetPadding (Android.Graphics.Rect padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPadding(class Android.Graphics.Rect padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetPadding(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetPadding : Android.Graphics.Rect -&gt; bool&#xA;override this.GetPadding : Android.Graphics.Rect -&gt; bool" Usage="drawable.GetPadding padding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPadding", "(Landroid/graphics/Rect;)Z", "GetGetPadding_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPadding", "(Landroid/graphics/Rect;)Z", "GetGetPadding_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <summary>Return in padding the insets suggested by this Drawable for placing
            content inside the drawable's bounds.</summary>
        <returns>true if this drawable actually has a padding, else false. When false is returned,
            the padding is always set to 0.</returns>
        <remarks>
          <para>Return in padding the insets suggested by this Drawable for placing
            content inside the drawable's bounds. Positive values move toward the
            center of the Drawable (set Rect.inset).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getPadding(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getPadding(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetState () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetState();" />
      <MemberSignature Language="C#" Value="public virtual int[] GetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetState" />
      <MemberSignature Language="F#" Value="abstract member GetState : unit -&gt; int[]&#xA;override this.GetState : unit -&gt; int[]" Usage="drawable.GetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getState", "()[I", "GetGetStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getState", "()[I", "GetGetStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describes the current state, as a union of primitve states, such as
            <c>android.R.attr#state_focused</c>,
            <c>android.R.attr#state_selected</c>, etc.</summary>
        <returns>An array of resource Ids describing the current state.</returns>
        <remarks>
          <para>Describes the current state, as a union of primitve states, such as
            <c>android.R.attr#state_focused</c>,
            <c>android.R.attr#state_selected</c>, etc.
            Some drawables may modify their imagery based on the selected state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getState()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFocusStateSpecified">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasFocusStateSpecified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasFocusStateSpecified { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasFocusStateSpecified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFocusStateSpecified" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.HasFocusStateSpecified" />
      <MemberSignature Language="F#" Value="member this.HasFocusStateSpecified : bool" Usage="Android.Graphics.Drawables.Drawable.HasFocusStateSpecified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasFocusStateSpecified", "()Z", "GetHasFocusStateSpecifiedHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasFocusStateSpecified", "()Z", "GetHasFocusStateSpecifiedHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this drawable has at least one state spec explicitly
            specifying <c>android.R.attr#state_focused</c>.</summary>
        <value>
          <c>true</c> if <c>android.R.attr#state_focused</c> is specified
            for this drawable.</value>
        <remarks>
          <para>Indicates whether this drawable has at least one state spec explicitly
            specifying <c>android.R.attr#state_focused</c>.</para>
          <para>Note: A View uses a <c>Drawable</c> instance as its background and it
            changes its appearance based on a state. On keyboard devices, it should
            specify its <c>android.R.attr#state_focused</c> to make sure the user
            knows which view is holding the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#hasFocusStateSpecified()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.hasFocusStateSpecified()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Inflate (r As Resources, parser As XmlReader, attrs As IAttributeSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Inflate(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; unit&#xA;override this.Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; unit" Usage="drawable.Inflate (r, parser, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Inflate this Drawable from an XML resource.</summary>
        <remarks>
          <para>Inflate this Drawable from an XML resource. Does not apply a theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#inflate(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources, System.Xml.XmlReader, System.Xml.XmlReader, System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Inflate (r As Resources, parser As XmlReader, attrs As IAttributeSet, theme As Resources.Theme)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Inflate(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Util::IAttributeSet ^ attrs, Android::Content::Res::Resources::Theme ^ theme);" />
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme? theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; unit&#xA;override this.Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; unit" Usage="drawable.Inflate (r, parser, attrs, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="r">Resources used to resolve attribute values</param>
        <param name="parser">XML parser from which to inflate this Drawable</param>
        <param name="attrs">Base set of attribute values</param>
        <param name="theme">Theme to apply, may be null</param>
        <summary>Inflate this Drawable from an XML resource.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#inflate(android.content.res.Resources,%20org.xmlpull.v1.XmlPullParser,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="VB.NET" Value="Public Function InflateAsync (r As Resources, parser As XmlReader, attrs As IAttributeSet) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ InflateAsync(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.InflateAsync(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="member this.InflateAsync : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; System.Threading.Tasks.Task" Usage="drawable.InflateAsync (r, parser, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="VB.NET" Value="Public Function InflateAsync (r As Resources, parser As XmlReader, attrs As IAttributeSet, theme As Resources.Theme) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ InflateAsync(Android::Content::Res::Resources ^ r, System::Xml::XmlReader ^ parser, Android::Util::IAttributeSet ^ attrs, Android::Content::Res::Resources::Theme ^ theme);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme? theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.InflateAsync(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="member this.InflateAsync : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; System.Threading.Tasks.Task" Usage="drawable.InflateAsync (r, parser, attrs, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntrinsicHeight">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IntrinsicHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int IntrinsicHeight { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int IntrinsicHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IntrinsicHeight" />
      <MemberSignature Language="F#" Value="member this.IntrinsicHeight : int" Usage="Android.Graphics.Drawables.Drawable.IntrinsicHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIntrinsicHeight", "()I", "GetGetIntrinsicHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getIntrinsicHeight", "()I", "GetGetIntrinsicHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the drawable's intrinsic height.</summary>
        <value>the intrinsic height, or -1 if no intrinsic height</value>
        <remarks>
          <para>Returns the drawable's intrinsic height.</para>
          <para>Intrinsic height is the height at which the drawable would like to be
            laid out, including any inherent padding. If the drawable has no
            intrinsic height, such as a solid color, this method returns -1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getIntrinsicHeight()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getIntrinsicHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntrinsicWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IntrinsicWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int IntrinsicWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int IntrinsicWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IntrinsicWidth" />
      <MemberSignature Language="F#" Value="member this.IntrinsicWidth : int" Usage="Android.Graphics.Drawables.Drawable.IntrinsicWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIntrinsicWidth", "()I", "GetGetIntrinsicWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getIntrinsicWidth", "()I", "GetGetIntrinsicWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the drawable's intrinsic width.</summary>
        <value>the intrinsic width, or -1 if no intrinsic width</value>
        <remarks>
          <para>Returns the drawable's intrinsic width.</para>
          <para>Intrinsic width is the width at which the drawable would like to be laid
            out, including any inherent padding. If the drawable has no intrinsic
            width, such as a solid color, this method returns -1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getIntrinsicWidth()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getIntrinsicWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateSelf">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InvalidateSelf ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InvalidateSelf();" />
      <MemberSignature Language="C#" Value="public virtual void InvalidateSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateSelf() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.InvalidateSelf" />
      <MemberSignature Language="F#" Value="abstract member InvalidateSelf : unit -&gt; unit&#xA;override this.InvalidateSelf : unit -&gt; unit" Usage="drawable.InvalidateSelf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidateSelf", "()V", "GetInvalidateSelfHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidateSelf", "()V", "GetInvalidateSelfHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Use the current <c>Callback</c> implementation to have this Drawable
            redrawn.</summary>
        <remarks>
          <para>Use the current <c>Callback</c> implementation to have this Drawable
            redrawn.  Does nothing if there is no Callback attached to the
            Drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#invalidateSelf()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.invalidateSelf()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="IsFilterBitmap">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFilterBitmap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFilterBitmap { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsFilterBitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFilterBitmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
      <MemberSignature Language="F#" Value="member this.IsFilterBitmap : bool" Usage="Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFilterBitmap", "()Z", "GetIsFilterBitmapHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFilterBitmap", "()Z", "GetIsFilterBitmapHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>whether this drawable filters its bitmaps</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#isFilterBitmap()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.isFilterBitmap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProjected">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsProjected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsProjected { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsProjected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProjected" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsProjected" />
      <MemberSignature Language="F#" Value="member this.IsProjected : bool" Usage="Android.Graphics.Drawables.Drawable.IsProjected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isProjected", "()Z", "GetIsProjectedHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isProjected", "()Z", "GetIsProjectedHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this drawable requests projection.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Whether this drawable requests projection. Indicates that the
            <c>android.graphics.RenderNode</c> this Drawable will draw into should be drawn immediately
            after the closest ancestor RenderNode containing a projection receiver.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#isProjected()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.isProjected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateful">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsStateful As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsStateful { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsStateful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStateful" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsStateful" />
      <MemberSignature Language="F#" Value="member this.IsStateful : bool" Usage="Android.Graphics.Drawables.Drawable.IsStateful" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStateful", "()Z", "GetIsStatefulHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStateful", "()Z", "GetIsStatefulHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this drawable will change its appearance based on
            state.</summary>
        <value>True if this drawable changes its appearance based on state,
                    false otherwise.</value>
        <remarks>
          <para>Indicates whether this drawable will change its appearance based on
            state. Clients can use this to determine whether it is necessary to
            calculate their state and call setState.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#isStateful()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.isStateful()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsVisible" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="Android.Graphics.Drawables.Drawable.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVisible", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVisible", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Drawables.Drawable.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpToCurrentState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub JumpToCurrentState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void JumpToCurrentState();" />
      <MemberSignature Language="C#" Value="public virtual void JumpToCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void JumpToCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.JumpToCurrentState" />
      <MemberSignature Language="F#" Value="abstract member JumpToCurrentState : unit -&gt; unit&#xA;override this.JumpToCurrentState : unit -&gt; unit" Usage="drawable.JumpToCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("jumpToCurrentState", "()V", "GetJumpToCurrentStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("jumpToCurrentState", "()V", "GetJumpToCurrentStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If this Drawable does transition animations between states, ask that
            it immediately jump to the current state and skip any active animations.</summary>
        <remarks>
          <para>If this Drawable does transition animations between states, ask that
            it immediately jump to the current state and skip any active animations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#jumpToCurrentState()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.jumpToCurrentState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirection">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayoutDirection As LayoutDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::LayoutDirection LayoutDirection { Android::Views::LayoutDirection get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutDirection LayoutDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.LayoutDirection LayoutDirection" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.LayoutDirection" />
      <MemberSignature Language="F#" Value="member this.LayoutDirection : Android.Views.LayoutDirection" Usage="Android.Graphics.Drawables.Drawable.LayoutDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the resolved layout direction for this Drawable.</summary>
        <value>One of <c>android.view.View#LAYOUT_DIRECTION_LTR</c>,
                    <c>android.view.View#LAYOUT_DIRECTION_RTL</c></value>
        <remarks>
          <para>Returns the resolved layout direction for this Drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getLayoutDirection()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getLayoutDirection()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Level" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="Android.Graphics.Drawables.Drawable.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLevel", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLevel", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current level.</summary>
        <value>int Current level, from 0 (minimum) to 10000 (maximum).</value>
        <remarks>
          <para>Retrieve the current level.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getLevel()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getLevel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinimumHeight { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.MinimumHeight" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int" Usage="Android.Graphics.Drawables.Drawable.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum height suggested by this Drawable.</summary>
        <value>The minimum height suggested by this Drawable. If this Drawable
                    doesn't have a suggested minimum height, 0 is returned.</value>
        <remarks>
          <para>Returns the minimum height suggested by this Drawable. If a View uses this
            Drawable as a background, it is suggested that the View use at least this
            value for its height. (There will be some scenarios where this will not be
            possible.) This value should INCLUDE any padding.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getMinimumHeight()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getMinimumHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinimumWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.MinimumWidth" />
      <MemberSignature Language="F#" Value="member this.MinimumWidth : int" Usage="Android.Graphics.Drawables.Drawable.MinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum width suggested by this Drawable.</summary>
        <value>The minimum width suggested by this Drawable. If this Drawable
                    doesn't have a suggested minimum width, 0 is returned.</value>
        <remarks>
          <para>Returns the minimum width suggested by this Drawable. If a View uses this
            Drawable as a background, it is suggested that the View use at least this
            value for its width. (There will be some scenarios where this will not be
            possible.) This value should INCLUDE any padding.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getMinimumWidth()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getMinimumWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Mutate () As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Graphics::Drawables::Drawable ^ Mutate();" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Mutate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable Mutate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Mutate" />
      <MemberSignature Language="F#" Value="abstract member Mutate : unit -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.Mutate : unit -&gt; Android.Graphics.Drawables.Drawable" Usage="drawable.Mutate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mutate", "()Landroid/graphics/drawable/Drawable;", "GetMutateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mutate", "()Landroid/graphics/drawable/Drawable;", "GetMutateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make this drawable mutable.</summary>
        <returns>This drawable.</returns>
        <remarks>
          <para>Make this drawable mutable. This operation cannot be reversed. A mutable
            drawable is guaranteed to not share its state with any other drawable.
            This is especially useful when you need to modify properties of drawables
            loaded from resources. By default, all drawables instances loaded from
            the same resource share a common state; if you modify the state of one
            instance, all the other instances will receive the same modification.</para>
          <para>Calling this method on a mutable Drawable will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#mutate()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.mutate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetConstantState" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChange">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBoundsChange (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBoundsChange(Android::Graphics::Rect ^ bounds);" />
      <MemberSignature Language="C#" Value="protected virtual void OnBoundsChange (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBoundsChange(class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnBoundsChange(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member OnBoundsChange : Android.Graphics.Rect -&gt; unit&#xA;override this.OnBoundsChange : Android.Graphics.Rect -&gt; unit" Usage="drawable.OnBoundsChange bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based on
            the bounds.</summary>
        <remarks>
          <para>Override this in your subclass to change appearance if you vary based on
            the bounds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#onBoundsChange(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.onBoundsChange(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLayoutDirectionChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnLayoutDirectionChanged (layoutDirection As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnLayoutDirectionChanged(int layoutDirection);" />
      <MemberSignature Language="C#" Value="public virtual bool OnLayoutDirectionChanged (int layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnLayoutDirectionChanged(int32 layoutDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnLayoutDirectionChanged(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutDirectionChanged : int -&gt; bool&#xA;override this.OnLayoutDirectionChanged : int -&gt; bool" Usage="drawable.OnLayoutDirectionChanged layoutDirection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLayoutDirectionChanged", "(I)Z", "GetOnLayoutDirectionChanged_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLayoutDirectionChanged", "(I)Z", "GetOnLayoutDirectionChanged_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutDirection" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "LayoutDirectionLtr", "LayoutDirectionRtl" }, Type="Android.Views.View")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "LayoutDirectionLtr", "LayoutDirectionRtl" }, Type="Android.Views.View")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layoutDirection">the new resolved layout direction</param>
        <summary>Called when the drawable's resolved layout direction changes.</summary>
        <returns>
          <c>true</c> if the layout direction change has caused the
                    appearance of the drawable to change such that it needs to be
                    re-drawn, <c>false</c> otherwise</returns>
        <remarks>
          <para>Called when the drawable's resolved layout direction changes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#onLayoutDirectionChanged(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.onLayoutDirectionChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLevelChange">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnLevelChange (level As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnLevelChange(int level);" />
      <MemberSignature Language="C#" Value="protected virtual bool OnLevelChange (int level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnLevelChange(int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnLevelChange(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnLevelChange : int -&gt; bool&#xA;override this.OnLevelChange : int -&gt; bool" Usage="drawable.OnLevelChange level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLevelChange", "(I)Z", "GetOnLevelChange_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLevelChange", "(I)Z", "GetOnLevelChange_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based
             on level.</summary>
        <returns>Returns true if the level change has caused the appearance of
            the Drawable to change (that is, it needs to be drawn), else false
            if it looks the same and there is no need to redraw it since its
            last level.</returns>
        <remarks>
          <para>Override this in your subclass to change appearance if you vary based
             on level.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#onLevelChange(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.onLevelChange(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStateChange (state As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStateChange(cli::array &lt;int&gt; ^ state);" />
      <MemberSignature Language="C#" Value="protected virtual bool OnStateChange (int[] state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStateChange(int32[] state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnStateChange(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member OnStateChange : int[] -&gt; bool&#xA;override this.OnStateChange : int[] -&gt; bool" Usage="drawable.OnStateChange state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStateChange", "([I)Z", "GetOnStateChange_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStateChange", "([I)Z", "GetOnStateChange_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Override this in your subclass to change appearance if you recognize the
            specified state.</summary>
        <returns>Returns true if the state change has caused the appearance of
            the Drawable to change (that is, it needs to be drawn), else false
            if it looks the same and there is no need to redraw it since its
            last state.</returns>
        <remarks>
          <para>Override this in your subclass to change appearance if you recognize the
            specified state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#onStateChange(int[])" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.onStateChange(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Opacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Opacity { int get(); };" />
      <MemberSignature Language="C#" Value="public abstract int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Opacity" />
      <MemberSignature Language="F#" Value="member this.Opacity : int" Usage="Android.Graphics.Drawables.Drawable.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="OpticalInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OpticalInsets As Insets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Insets ^ OpticalInsets { Android::Graphics::Insets ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Insets OpticalInsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Insets OpticalInsets" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.OpticalInsets" />
      <MemberSignature Language="F#" Value="member this.OpticalInsets : Android.Graphics.Insets" Usage="Android.Graphics.Drawables.Drawable.OpticalInsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOpticalInsets", "()Landroid/graphics/Insets;", "GetGetOpticalInsetsHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOpticalInsets", "()Landroid/graphics/Insets;", "GetGetOpticalInsetsHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Insets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return in insets the layout insets suggested by this Drawable for use with alignment
            operations during layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return in insets the layout insets suggested by this Drawable for use with alignment
            operations during layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getOpticalInsets()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getOpticalInsets()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveOpacity">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolveOpacity (op1 As Integer, op2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ResolveOpacity(int op1, int op2);" />
      <MemberSignature Language="C#" Value="public static int ResolveOpacity (int op1, int op2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveOpacity(int32 op1, int32 op2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ResolveOpacity : int * int -&gt; int" Usage="Android.Graphics.Drawables.Drawable.ResolveOpacity (op1, op2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveOpacity", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveOpacity", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op1" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="op2" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="op1">One opacity value.</param>
        <param name="op2">Another opacity value.</param>
        <summary>Return the appropriate opacity value for two source opacities.</summary>
        <returns>int The combined opacity value.</returns>
        <remarks>
          <para>Return the appropriate opacity value for two source opacities.  If
            either is UNKNOWN, that is returned; else, if either is TRANSLUCENT,
            that is returned; else, if either is TRANSPARENT, that is returned;
            else, OPAQUE is returned.</para>
          <para>This is to help in implementing <c>#getOpacity</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#resolveOpacity(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.resolveOpacity(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScheduleSelf (what As IRunnable, when As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ScheduleSelf(Java::Lang::IRunnable ^ what, long when);" />
      <MemberSignature Language="C#" Value="public virtual void ScheduleSelf (Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleSelf(class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ScheduleSelf(Java.Lang.IRunnable,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member ScheduleSelf : Java.Lang.IRunnable * int64 -&gt; unit&#xA;override this.ScheduleSelf : Java.Lang.IRunnable * int64 -&gt; unit" Usage="drawable.ScheduleSelf (what, when)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scheduleSelf", "(Ljava/lang/Runnable;J)V", "GetScheduleSelf_Ljava_lang_Runnable_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scheduleSelf", "(Ljava/lang/Runnable;J)V", "GetScheduleSelf_Ljava_lang_Runnable_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">The action being scheduled.</param>
        <param name="when">The time (in milliseconds) to run.</param>
        <summary>Use the current <c>Callback</c> implementation to have this Drawable
            scheduled.</summary>
        <remarks>
          <para>Use the current <c>Callback</c> implementation to have this Drawable
            scheduled.  Does nothing if there is no Callback attached to the
            Drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#scheduleSelf(java.lang.Runnable,%20long)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.scheduleSelf(java.lang.Runnable, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleSelf (what As Action, when As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleSelf(Action ^ what, long when);" />
      <MemberSignature Language="C#" Value="public void ScheduleSelf (Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleSelf(class System.Action what, int64 when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ScheduleSelf(System.Action,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.ScheduleSelf : Action * int64 -&gt; unit" Usage="drawable.ScheduleSelf (what, when)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAlpha (alpha As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAlpha(int alpha);" />
      <MemberSignature Language="C#" Value="public abstract void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAlpha : int -&gt; unit" Usage="drawable.SetAlpha alpha" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary>Specify an alpha value for the drawable.</summary>
        <remarks>
          <para>Specify an alpha value for the drawable. 0 means fully transparent, and
            255 means fully opaque.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setAlpha(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setAlpha(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBounds (left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBounds(int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void SetBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetBounds : int * int * int * int -&gt; unit&#xA;override this.SetBounds : int * int * int * int -&gt; unit" Usage="drawable.SetBounds (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBounds", "(IIII)V", "GetSetBounds_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBounds", "(IIII)V", "GetSetBounds_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Specify a bounding rectangle for the Drawable.</summary>
        <remarks>
          <para>Specify a bounding rectangle for the Drawable. This is where the drawable
            will draw when its draw() method is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setBounds(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setBounds(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub SetCallback (cb As Drawable.ICallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCallback(Android::Graphics::Drawables::Drawable::ICallback ^ cb);" />
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Graphics.Drawables.Drawable.ICallback? cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Graphics.Drawables.Drawable/ICallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetCallback(Android.Graphics.Drawables.Drawable.ICallback)" />
      <MemberSignature Language="F#" Value="member this.SetCallback : Android.Graphics.Drawables.Drawable.ICallback -&gt; unit" Usage="drawable.SetCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCallback", "(Landroid/graphics/drawable/Drawable$Callback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCallback", "(Landroid/graphics/drawable/Drawable$Callback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Graphics.Drawables.Drawable+ICallback" />
      </Parameters>
      <Docs>
        <param name="cb">The client's Callback implementation.</param>
        <summary>Bind a <c>Callback</c> object to this Drawable.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setCallback(android.graphics.drawable.Callback)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetColorFilter (colorFilter As ColorFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetColorFilter(Android::Graphics::ColorFilter ^ colorFilter);" />
      <MemberSignature Language="C#" Value="public abstract void SetColorFilter (Android.Graphics.ColorFilter? colorFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(class Android.Graphics.ColorFilter colorFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" />
      <MemberSignature Language="F#" Value="abstract member SetColorFilter : Android.Graphics.ColorFilter -&gt; unit" Usage="drawable.SetColorFilter colorFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorFilter" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="colorFilter">The color filter to apply, or <c>null</c> to remove the
                       existing color filter</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks>
          <para>Specify an optional color filter for the drawable.</para>
          <para>If a Drawable has a ColorFilter, each output pixel of the Drawable's
            drawing contents will be modified by the color filter before it is
            blended onto the render target of a Canvas.</para>
          <para>Pass <c>null</c> to remove any existing color filter.</para>
          <para>&lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Setting a non-<c>null</c> color
            filter disables <c>#setTintList(ColorStateList) tint</c>.
            &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setColorFilter(android.graphics.ColorFilter)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setColorFilter(android.graphics.ColorFilter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetColorFilter (color As Color, mode As PorterDuff.Mode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetColorFilter(Android::Graphics::Color color, Android::Graphics::PorterDuff::Mode ^ mode);" />
      <MemberSignature Language="C#" Value="public virtual void SetColorFilter (Android.Graphics.Color color, Android.Graphics.PorterDuff.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(valuetype Android.Graphics.Color color, class Android.Graphics.PorterDuff/Mode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,Android.Graphics.PorterDuff.Mode)" />
      <MemberSignature Language="F#" Value="abstract member SetColorFilter : Android.Graphics.Color * Android.Graphics.PorterDuff.Mode -&gt; unit&#xA;override this.SetColorFilter : Android.Graphics.Color * Android.Graphics.PorterDuff.Mode -&gt; unit" Usage="drawable.SetColorFilter (color, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setColorFilter", "(ILandroid/graphics/PorterDuff$Mode;)V", "GetSetColorFilter_ILandroid_graphics_PorterDuff_Mode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setColorFilter", "(ILandroid/graphics/PorterDuff$Mode;)V", "GetSetColorFilter_ILandroid_graphics_PorterDuff_Mode_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
        <Parameter Name="mode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Specify a color and Porter-Duff mode to be the color filter for this
            drawable.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setColorFilter(int,%20android.graphics.Mode)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setColorFilter(int, android.graphics.Mode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDither">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDither (dither As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDither(bool dither);" />
      <MemberSignature Language="C#" Value="public virtual void SetDither (bool dither);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDither(bool dither) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetDither(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetDither : bool -&gt; unit&#xA;override this.SetDither : bool -&gt; unit" Usage="drawable.SetDither dither" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dither" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dither">To be added.</param>
        <summary>Set to true to have the drawable dither its colors when drawn to a
            device with fewer than 8-bits per color component.</summary>
        <remarks>
          <para>Set to true to have the drawable dither its colors when drawn to a
            device with fewer than 8-bits per color component.</para>
          <para>This member is deprecated. This property is ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setDither(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setDither(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.Dither" />
      </Docs>
    </Member>
    <Member MemberName="SetFilterBitmap">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFilterBitmap (filter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFilterBitmap(bool filter);" />
      <MemberSignature Language="C#" Value="public virtual void SetFilterBitmap (bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilterBitmap(bool filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetFilterBitmap(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFilterBitmap : bool -&gt; unit&#xA;override this.SetFilterBitmap : bool -&gt; unit" Usage="drawable.SetFilterBitmap filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>Set to true to have the drawable filter its bitmaps with bilinear
            sampling when they are scaled or rotated.</summary>
        <remarks>
          <para>Set to true to have the drawable filter its bitmaps with bilinear
            sampling when they are scaled or rotated.</para>
          <para>This can improve appearance when bitmaps are rotated. If the drawable
            does not use bitmaps, this call is ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setFilterBitmap(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setFilterBitmap(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
        <altmember cref="P:Android.Graphics.Paint.FilterBitmap" />
      </Docs>
    </Member>
    <Member MemberName="SetHotspot">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetHotspot (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHotspot(float x, float y);" />
      <MemberSignature Language="C#" Value="public virtual void SetHotspot (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspot(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetHotspot(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetHotspot : single * single -&gt; unit&#xA;override this.SetHotspot : single * single -&gt; unit" Usage="drawable.SetHotspot (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The X coordinate of the center of the hotspot</param>
        <param name="y">The Y coordinate of the center of the hotspot</param>
        <summary>Specifies the hotspot's location within the drawable.</summary>
        <remarks>
          <para>Specifies the hotspot's location within the drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setHotspot(float,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setHotspot(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHotspotBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetHotspotBounds (left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHotspotBounds(int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void SetHotspotBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspotBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetHotspotBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetHotspotBounds : int * int * int * int -&gt; unit&#xA;override this.SetHotspotBounds : int * int * int * int -&gt; unit" Usage="drawable.SetHotspotBounds (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">position in pixels of the left bound</param>
        <param name="top">position in pixels of the top bound</param>
        <param name="right">position in pixels of the right bound</param>
        <param name="bottom">position in pixels of the bottom bound</param>
        <summary>Sets the bounds to which the hotspot is constrained, if they should be
            different from the drawable bounds.</summary>
        <remarks>
          <para>Sets the bounds to which the hotspot is constrained, if they should be
            different from the drawable bounds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setHotspotBounds(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setHotspotBounds(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetHotspotBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="SetLayoutDirection">
      <MemberSignature Language="VB.NET" Value="Public Function SetLayoutDirection (layoutDirection As LayoutDirection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLayoutDirection(Android::Views::LayoutDirection layoutDirection);" />
      <MemberSignature Language="C#" Value="public bool SetLayoutDirection (Android.Views.LayoutDirection layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetLayoutDirection(valuetype Android.Views.LayoutDirection layoutDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetLayoutDirection(Android.Views.LayoutDirection)" />
      <MemberSignature Language="F#" Value="member this.SetLayoutDirection : Android.Views.LayoutDirection -&gt; bool" Usage="drawable.SetLayoutDirection layoutDirection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLayoutDirection", "(I)Z", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLayoutDirection", "(I)Z", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutDirection" Type="Android.Views.LayoutDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layoutDirection">the resolved layout direction for the drawable,
                                   either <c>android.view.View#LAYOUT_DIRECTION_LTR</c>
                                   or <c>android.view.View#LAYOUT_DIRECTION_RTL</c></param>
        <summary>Set the layout direction for this drawable.</summary>
        <returns>
          <c>true</c> if the layout direction change has caused the
                    appearance of the drawable to change such that it needs to be
                    re-drawn, <c>false</c> otherwise</returns>
        <remarks>
          <para>Set the layout direction for this drawable. Should be a resolved
            layout direction, as the Drawable has no capacity to do the resolution on
            its own.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setLayoutDirection(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setLayoutDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLevel">
      <MemberSignature Language="VB.NET" Value="Public Function SetLevel (level As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLevel(int level);" />
      <MemberSignature Language="C#" Value="public bool SetLevel (int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetLevel(int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetLevel(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetLevel : int -&gt; bool" Usage="drawable.SetLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLevel", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLevel", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">The new level, from 0 (minimum) to 10000 (maximum).</param>
        <summary>Specify the level for the drawable.</summary>
        <returns>Returns true if this change in level has caused the appearance
            of the Drawable to change (hence requiring an invalidate), otherwise
            returns false.</returns>
        <remarks>
          <para>Specify the level for the drawable.  This allows a drawable to vary its
            imagery based on a continuous controller, for example to show progress
            or volume level.</para>
          <para>If the new level you are supplying causes the appearance of the
            Drawable to change, then it is responsible for calling
            <c>#invalidateSelf</c> in order to have itself redrawn, &lt;em&gt;and&lt;/em&gt;
            true will be returned from this function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setLevel(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setLevel(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetState (stateSet As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetState(cli::array &lt;int&gt; ^ stateSet);" />
      <MemberSignature Language="C#" Value="public virtual bool SetState (int[] stateSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetState(int32[] stateSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member SetState : int[] -&gt; bool&#xA;override this.SetState : int[] -&gt; bool" Usage="drawable.SetState stateSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setState", "([I)Z", "GetSetState_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setState", "([I)Z", "GetSetState_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSet" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="stateSet">The new set of states to be displayed.</param>
        <summary>Specify a set of states for the drawable.</summary>
        <returns>Returns true if this change in state has caused the appearance
            of the Drawable to change (hence requiring an invalidate), otherwise
            returns false.</returns>
        <remarks>
          <para>Specify a set of states for the drawable. These are use-case specific,
            so see the relevant documentation. As an example, the background for
            widgets like Button understand the following states:
            [<c>android.R.attr#state_focused</c>,
             <c>android.R.attr#state_pressed</c>].</para>
          <para>If the new state you are supplying causes the appearance of the
            Drawable to change, then it is responsible for calling
            <c>#invalidateSelf</c> in order to have itself redrawn, &lt;em&gt;and&lt;/em&gt;
            true will be returned from this function.</para>
          <para>Note: The Drawable holds a reference on to &lt;var&gt;stateSet&lt;/var&gt;
            until a new state array is given to it, so you must not modify this
            array during that time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setState(int[])" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setState(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTint">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTint (tintColor As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTint(int tintColor);" />
      <MemberSignature Language="C#" Value="public virtual void SetTint (int tintColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTint(int32 tintColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetTint : int -&gt; unit&#xA;override this.SetTint : int -&gt; unit" Usage="drawable.SetTint tintColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTint", "(I)V", "GetSetTint_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTint", "(I)V", "GetSetTint_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tintColor">Color to use for tinting this drawable</param>
        <summary>Specifies tint color for this drawable.</summary>
        <remarks>
          <para>Specifies tint color for this drawable.</para>
          <para>A Drawable's drawing content will be blended together with its tint
            before it is drawn to the screen. This functions similarly to
            <c>#setColorFilter(int, PorterDuff.Mode)</c>.</para>
          <para>To clear the tint, pass <c>null</c> to
            <c>#setTintList(ColorStateList)</c>.</para>
          <para>&lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Setting a color filter via
            <c>#setColorFilter(ColorFilter)</c> or
            <c>#setColorFilter(int, PorterDuff.Mode)</c> overrides tint.
            &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setTint(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setTint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintBlendMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTintBlendMode (blendMode As BlendMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTintBlendMode(Android::Graphics::BlendMode ^ blendMode);" />
      <MemberSignature Language="C#" Value="public virtual void SetTintBlendMode (Android.Graphics.BlendMode? blendMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintBlendMode(class Android.Graphics.BlendMode blendMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTintBlendMode(Android.Graphics.BlendMode)" />
      <MemberSignature Language="F#" Value="abstract member SetTintBlendMode : Android.Graphics.BlendMode -&gt; unit&#xA;override this.SetTintBlendMode : Android.Graphics.BlendMode -&gt; unit" Usage="drawable.SetTintBlendMode blendMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blendMode" Type="Android.Graphics.BlendMode" />
      </Parameters>
      <Docs>
        <param name="blendMode">BlendMode to apply to the drawable, a value of null sets the default
                             blend mode value of <c>BlendMode#SRC_IN</c></param>
        <summary>Specifies a tint blending mode for this drawable.</summary>
        <remarks>
          <para>Specifies a tint blending mode for this drawable.</para>
          <para>Defines how this drawable's tint color should be blended into the drawable
            before it is drawn to screen. Default tint mode is <c>BlendMode#SRC_IN</c>.</para>
          <para>&lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Setting a color filter via
            <c>#setColorFilter(ColorFilter)</c>&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setTintBlendMode(android.graphics.BlendMode)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setTintBlendMode(android.graphics.BlendMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTintList">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTintList (tint As ColorStateList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTintList(Android::Content::Res::ColorStateList ^ tint);" />
      <MemberSignature Language="C#" Value="public virtual void SetTintList (Android.Content.Res.ColorStateList? tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintList(class Android.Content.Res.ColorStateList tint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      <MemberSignature Language="F#" Value="abstract member SetTintList : Android.Content.Res.ColorStateList -&gt; unit&#xA;override this.SetTintList : Android.Content.Res.ColorStateList -&gt; unit" Usage="drawable.SetTintList tint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tint" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="tint">Color state list to use for tinting this drawable, or
                       <c>null</c> to clear the tint</param>
        <summary>Specifies tint color for this drawable as a color state list.</summary>
        <remarks>
          <para>Specifies tint color for this drawable as a color state list.</para>
          <para>A Drawable's drawing content will be blended together with its tint
            before it is drawn to the screen. This functions similarly to
            <c>#setColorFilter(int, PorterDuff.Mode)</c>.</para>
          <para>&lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Setting a color filter via
            <c>#setColorFilter(ColorFilter)</c> or
            <c>#setColorFilter(int, PorterDuff.Mode)</c> overrides tint.
            &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setTintList(android.content.res.ColorStateList)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setTintList(android.content.res.ColorStateList)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTintMode (tintMode As PorterDuff.Mode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTintMode(Android::Graphics::PorterDuff::Mode ^ tintMode);" />
      <MemberSignature Language="C#" Value="public virtual void SetTintMode (Android.Graphics.PorterDuff.Mode? tintMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintMode(class Android.Graphics.PorterDuff/Mode tintMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTintMode(Android.Graphics.PorterDuff.Mode)" />
      <MemberSignature Language="F#" Value="abstract member SetTintMode : Android.Graphics.PorterDuff.Mode -&gt; unit&#xA;override this.SetTintMode : Android.Graphics.PorterDuff.Mode -&gt; unit" Usage="drawable.SetTintMode tintMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintMode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="tintMode">A Porter-Duff blending mode to apply to the drawable, a value of null sets
                            the default Porter-Diff blending mode value
                            of <c>PorterDuff.Mode#SRC_IN</c></param>
        <summary>Specifies a tint blending mode for this drawable.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setTintMode(android.graphics.Mode)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setTintMode(android.graphics.Mode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisible">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetVisible (visible As Boolean, restart As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetVisible(bool visible, bool restart);" />
      <MemberSignature Language="C#" Value="public virtual bool SetVisible (bool visible, bool restart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetVisible(bool visible, bool restart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetVisible(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetVisible : bool * bool -&gt; bool&#xA;override this.SetVisible : bool * bool -&gt; bool" Usage="drawable.SetVisible (visible, restart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVisible", "(ZZ)Z", "GetSetVisible_ZZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVisible", "(ZZ)Z", "GetSetVisible_ZZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
        <Parameter Name="restart" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Set to true if visible, false if not.</param>
        <param name="restart">You can supply true here to force the drawable to behave
                           as if it has just become visible, even if it had last
                           been set visible.  Used for example to force animations
                           to restart.</param>
        <summary>Set whether this Drawable is visible.</summary>
        <returns>boolean Returns true if the new visibility is different than
                    its previous state.</returns>
        <remarks>
          <para>Set whether this Drawable is visible.  This generally does not impact
            the Drawable's behavior, but is a hint that can be used by some
            Drawables, for example, to decide whether run animations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#setVisible(boolean,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.setVisible(boolean, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Drawables.Drawable.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Drawables.Drawable.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparentRegion">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TransparentRegion As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Region ^ TransparentRegion { Android::Graphics::Region ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Region? TransparentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Region TransparentRegion" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.TransparentRegion" />
      <MemberSignature Language="F#" Value="member this.TransparentRegion : Android.Graphics.Region" Usage="Android.Graphics.Drawables.Drawable.TransparentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTransparentRegion", "()Landroid/graphics/Region;", "GetGetTransparentRegionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTransparentRegion", "()Landroid/graphics/Region;", "GetGetTransparentRegionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Region representing the part of the Drawable that is completely
            transparent.</summary>
        <value>Returns null if the Drawables has no transparent region to
            report, else a Region holding the parts of the Drawable's bounds that
            are transparent.</value>
        <remarks>
          <para>Returns a Region representing the part of the Drawable that is completely
            transparent.  This can be used to perform drawing operations, identifying
            which parts of the target will not change when rendering the Drawable.
            The default implementation returns null, indicating no transparent
            region; subclasses can optionally override this to return an actual
            Region if they want to supply this optimization information, but it is
            not required that they do so.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#getTransparentRegion()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.getTransparentRegion()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnscheduleSelf (what As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnscheduleSelf(Java::Lang::IRunnable ^ what);" />
      <MemberSignature Language="C#" Value="public virtual void UnscheduleSelf (Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleSelf(class Java.Lang.IRunnable what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.UnscheduleSelf(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member UnscheduleSelf : Java.Lang.IRunnable -&gt; unit&#xA;override this.UnscheduleSelf : Java.Lang.IRunnable -&gt; unit" Usage="drawable.UnscheduleSelf what" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unscheduleSelf", "(Ljava/lang/Runnable;)V", "GetUnscheduleSelf_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unscheduleSelf", "(Ljava/lang/Runnable;)V", "GetUnscheduleSelf_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="what">The runnable that you no longer want called.</param>
        <summary>Use the current <c>Callback</c> implementation to have this Drawable
            unscheduled.</summary>
        <remarks>
          <para>Use the current <c>Callback</c> implementation to have this Drawable
            unscheduled.  Does nothing if there is no Callback attached to the
            Drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable#unscheduleSelf(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.Drawable.unscheduleSelf(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="VB.NET" Value="Public Sub UnscheduleSelf (what As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnscheduleSelf(Action ^ what);" />
      <MemberSignature Language="C#" Value="public void UnscheduleSelf (Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleSelf(class System.Action what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.UnscheduleSelf(System.Action)" />
      <MemberSignature Language="F#" Value="member this.UnscheduleSelf : Action -&gt; unit" Usage="drawable.UnscheduleSelf what" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
