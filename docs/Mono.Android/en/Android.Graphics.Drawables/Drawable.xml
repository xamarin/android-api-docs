<Type Name="Drawable" FullName="Android.Graphics.Drawables.Drawable">
  <TypeSignature Language="C#" Value="public abstract class Drawable : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Drawable extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Drawables.Drawable" />
  <TypeSignature Language="F#" Value="type Drawable = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/Drawable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable is a general abstraction for "something that can be drawn.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/drawable/Drawable" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Drawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Drawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Drawables.Drawable : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Drawables.Drawable" Usage="new Android.Graphics.Drawables.Drawable (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual int Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alpha" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Alpha" />
      <MemberSignature Language="F#" Value="member this.Alpha : int with get, set" Usage="Android.Graphics.Drawables.Drawable.Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current alpha value for the drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public virtual void ApplyTheme (Android.Content.Res.Resources.Theme t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme(class Android.Content.Res.Resources/Theme t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ApplyTheme(Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="abstract member ApplyTheme : Android.Content.Res.Resources.Theme -&gt; unit&#xA;override this.ApplyTheme : Android.Content.Res.Resources.Theme -&gt; unit" Usage="drawable.ApplyTheme t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="t">the theme to apply</param>
        <summary>Applies the specified theme to this Drawable and its children.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoMirrored">
      <MemberSignature Language="C#" Value="public virtual bool AutoMirrored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoMirrored" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.AutoMirrored" />
      <MemberSignature Language="F#" Value="member this.AutoMirrored : bool with get, set" Usage="Android.Graphics.Drawables.Drawable.AutoMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
            right-to-left. -or- Set whether this Drawable is automatically mirrored when its layout direction is RTL
            (right-to left).</summary>
        <value>boolean Returns true if this Drawable will be automatically mirrored.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Bounds" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Bounds" />
      <MemberSignature Language="F#" Value="member this.Bounds : Android.Graphics.Rect with get, set" Usage="Android.Graphics.Drawables.Drawable.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBounds", "(Landroid/graphics/Rect;)V", "GetSetBounds_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's bounds Rect. -or- Specify a bounding rectangle for the Drawable.</summary>
        <value>The bounds of the drawable (which may change later, so caller
                    beware). DO NOT ALTER the returned object as it may change the
                    stored bounds of this drawable.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ICallback Callback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable/ICallback Callback" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Callback" />
      <MemberSignature Language="F#" Value="member this.Callback : Android.Graphics.Drawables.Drawable.ICallback with get, set" Usage="Android.Graphics.Drawables.Drawable.Callback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCallback", "()Landroid/graphics/drawable/Drawable$Callback;", "GetGetCallbackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c>Callback</c> implementation attached to this
            Drawable.</summary>
        <value>A <c>Callback</c> instance or null if no callback was set.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="CanApplyTheme">
      <MemberSignature Language="C#" Value="public virtual bool CanApplyTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanApplyTheme() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CanApplyTheme" />
      <MemberSignature Language="F#" Value="abstract member CanApplyTheme : unit -&gt; bool&#xA;override this.CanApplyTheme : unit -&gt; bool" Usage="drawable.CanApplyTheme " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canApplyTheme", "()Z", "GetCanApplyThemeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangingConfigurations">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ConfigChanges ChangingConfigurations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ConfigChanges ChangingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ChangingConfigurations" />
      <MemberSignature Language="F#" Value="member this.ChangingConfigurations : Android.Content.PM.ConfigChanges with get, set" Usage="Android.Graphics.Drawables.Drawable.ChangingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setChangingConfigurations", "(I)V", "GetSetChangingConfigurations_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ConfigChanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a mask of the configuration parameters for which this drawable
            may change, requiring that it be re-created. -or- Set a mask of the configuration parameters for which this drawable
            may change, requiring that it be re-created.</summary>
        <value>Returns a mask of the changing configuration parameters, as
            defined by <c>android.content.pm.ActivityInfo</c>.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
        <c>android.content.pm.ActivityInfo</c>
      </Docs>
    </Member>
    <Member MemberName="ClearColorFilter">
      <MemberSignature Language="C#" Value="public virtual void ClearColorFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearColorFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ClearColorFilter" />
      <MemberSignature Language="F#" Value="abstract member ClearColorFilter : unit -&gt; unit&#xA;override this.ClearColorFilter : unit -&gt; unit" Usage="drawable.ClearColorFilter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearColorFilter", "()V", "GetClearColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the color filter for this drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter ColorFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorFilter ColorFilter" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ColorFilter" />
      <MemberSignature Language="F#" Value="member this.ColorFilter : Android.Graphics.ColorFilter" Usage="Android.Graphics.Drawables.Drawable.ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current color filter, or <c>null</c> if none set.</summary>
        <value>the current color filter, or <c>null</c> if none set</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect CopyBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Rect CopyBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CopyBounds" />
      <MemberSignature Language="F#" Value="member this.CopyBounds : unit -&gt; Android.Graphics.Rect" Usage="drawable.CopyBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBounds", "()Landroid/graphics/Rect;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a copy of the drawable's bounds in a new Rect.</summary>
        <returns>A copy of the drawable's bounds</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="C#" Value="public void CopyBounds (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBounds(class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CopyBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.CopyBounds : Android.Graphics.Rect -&gt; unit" Usage="drawable.CopyBounds bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBounds", "(Landroid/graphics/Rect;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Rect to receive the drawable's bounds (allocated by the
               caller).
</param>
        <summary>Return a copy of the drawable's bounds in a new Rect.</summary>
        <returns>A copy of the drawable's bounds</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPath">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromPath (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromPath(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromPath(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromPath : string -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromPath pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromPath", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>Create a drawable from file path name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPathAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromPathAsync(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromPathAsync : string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromPathAsync pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromResourceStream (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStream(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStream : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStream (res, value, is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
            value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromResourceStream (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName, Android.Graphics.BitmapFactory.Options opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStream(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String,Android.Graphics.BitmapFactory.Options)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStream : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStream (res, value, is, srcName, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
            value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStreamAsync : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync (res, value, is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName, Android.Graphics.BitmapFactory.Options opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,System.String,Android.Graphics.BitmapFactory.Options)" />
      <MemberSignature Language="F#" Value="static member CreateFromResourceStreamAsync : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * string * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromResourceStreamAsync (res, value, is, srcName, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromStream (System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromStream(class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromStream(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromStream : System.IO.Stream * string -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromStream (is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromStream", "(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync (System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync(class System.IO.Stream is, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromStreamAsync(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateFromStreamAsync : System.IO.Stream * string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromStreamAsync (is, srcName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXml(Android.Content.Res.Resources,System.Xml.XmlReader)" />
      <MemberSignature Language="F#" Value="static member CreateFromXml : Android.Content.Res.Resources * System.Xml.XmlReader -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXml (r, parser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>Create a drawable from an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXml(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="static member CreateFromXml : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Content.Res.Resources.Theme -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXml (r, parser, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create a drawable from an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlAsync(Android.Content.Res.Resources,System.Xml.XmlReader)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlAsync : Android.Content.Res.Resources * System.Xml.XmlReader -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlAsync (r, parser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlAsync(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlAsync : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Content.Res.Resources.Theme -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlAsync (r, parser, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlInner(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlInner : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlInner (r, parser, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Create from inside an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.CreateFromXmlInner(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="static member CreateFromXmlInner : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.CreateFromXmlInner (r, parser, attrs, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create from inside an XML document.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Current" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Current" />
      <MemberSignature Language="F#" Value="member this.Current : Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.Drawables.Drawable.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrent", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>The current drawable that will be used by this drawable. For simple drawables, this
                    is just the drawable itself. For drawables that change state like
                    <c>StateListDrawable</c> and <c>LevelListDrawable</c> this will be the child drawable
                    currently in use.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirtyBounds">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect DirtyBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect DirtyBounds" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.DirtyBounds" />
      <MemberSignature Language="F#" Value="member this.DirtyBounds : Android.Graphics.Rect" Usage="Android.Graphics.Drawables.Drawable.DirtyBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDirtyBounds", "()Landroid/graphics/Rect;", "GetGetDirtyBoundsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's dirty bounds Rect.</summary>
        <value>The dirty bounds of this drawable</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public abstract void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas -&gt; unit" Usage="drawable.Draw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
            as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConstantState">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ConstantState GetConstantState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable/ConstantState GetConstantState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetConstantState" />
      <MemberSignature Language="F#" Value="abstract member GetConstantState : unit -&gt; Android.Graphics.Drawables.Drawable.ConstantState&#xA;override this.GetConstantState : unit -&gt; Android.Graphics.Drawables.Drawable.ConstantState" Usage="drawable.GetConstantState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "GetGetConstantStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ConstantState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a <c>ConstantState</c> instance that holds the shared state of this Drawable.</summary>
        <returns>The ConstantState associated to that Drawable.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Mutate" />
      </Docs>
    </Member>
    <Member MemberName="GetHotspotBounds">
      <MemberSignature Language="C#" Value="public virtual void GetHotspotBounds (Android.Graphics.Rect outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetHotspotBounds(class Android.Graphics.Rect outRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetHotspotBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetHotspotBounds : Android.Graphics.Rect -&gt; unit&#xA;override this.GetHotspotBounds : Android.Graphics.Rect -&gt; unit" Usage="drawable.GetHotspotBounds outRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHotspotBounds", "(Landroid/graphics/Rect;)V", "GetGetHotspotBounds_Landroid_graphics_Rect_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">the rect to populate with the hotspot bounds</param>
        <summary>Populates <c>outRect</c> with the hotspot bounds.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutline">
      <MemberSignature Language="C#" Value="public virtual void GetOutline (Android.Graphics.Outline outline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetOutline(class Android.Graphics.Outline outline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetOutline(Android.Graphics.Outline)" />
      <MemberSignature Language="F#" Value="abstract member GetOutline : Android.Graphics.Outline -&gt; unit&#xA;override this.GetOutline : Android.Graphics.Outline -&gt; unit" Usage="drawable.GetOutline outline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutline", "(Landroid/graphics/Outline;)V", "GetGetOutline_Landroid_graphics_Outline_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outline" Type="Android.Graphics.Outline" />
      </Parameters>
      <Docs>
        <param name="outline">To be added.</param>
        <summary>Called to get the drawable to populate the Outline that defines its drawing area.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPadding">
      <MemberSignature Language="C#" Value="public virtual bool GetPadding (Android.Graphics.Rect padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPadding(class Android.Graphics.Rect padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetPadding(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetPadding : Android.Graphics.Rect -&gt; bool&#xA;override this.GetPadding : Android.Graphics.Rect -&gt; bool" Usage="drawable.GetPadding padding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPadding", "(Landroid/graphics/Rect;)Z", "GetGetPadding_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <summary>Return in padding the insets suggested by this Drawable for placing
            content inside the drawable's bounds.</summary>
        <returns>true if this drawable actually has a padding, else false. When false is returned,
            the padding is always set to 0.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual int[] GetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.GetState" />
      <MemberSignature Language="F#" Value="abstract member GetState : unit -&gt; int[]&#xA;override this.GetState : unit -&gt; int[]" Usage="drawable.GetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getState", "()[I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describes the current state, as a union of primitve states, such as
            <c>android.R.attr#state_focused</c>,
            <c>android.R.attr#state_selected</c>, etc.</summary>
        <returns>An array of resource Ids describing the current state.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFocusStateSpecified">
      <MemberSignature Language="C#" Value="public virtual bool HasFocusStateSpecified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFocusStateSpecified" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.HasFocusStateSpecified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasFocusStateSpecified", "()Z", "GetHasFocusStateSpecifiedHandler", ApiSince=31)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this drawable has at least one state spec explicitly
            specifying <c>android.R.attr#state_focused</c>.</summary>
        <value>
          <c>true</c> if <c>android.R.attr#state_focused</c> is specified
            for this drawable.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; unit&#xA;override this.Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; unit" Usage="drawable.Inflate (r, parser, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Inflate this Drawable from an XML resource.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources, System.Xml.XmlReader, System.Xml.XmlReader, System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; unit&#xA;override this.Inflate : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; unit" Usage="drawable.Inflate (r, parser, attrs, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">Resources used to resolve attribute values</param>
        <param name="parser">XML parser from which to inflate this Drawable</param>
        <param name="attrs">Base set of attribute values</param>
        <param name="theme">Theme to apply, may be null</param>
        <summary>Inflate this Drawable from an XML resource.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.InflateAsync(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="member this.InflateAsync : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet -&gt; System.Threading.Tasks.Task" Usage="drawable.InflateAsync (r, parser, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.InflateAsync(Android.Content.Res.Resources,System.Xml.XmlReader,Android.Util.IAttributeSet,Android.Content.Res.Resources.Theme)" />
      <MemberSignature Language="F#" Value="member this.InflateAsync : Android.Content.Res.Resources * System.Xml.XmlReader * Android.Util.IAttributeSet * Android.Content.Res.Resources.Theme -&gt; System.Threading.Tasks.Task" Usage="drawable.InflateAsync (r, parser, attrs, theme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntrinsicHeight">
      <MemberSignature Language="C#" Value="public virtual int IntrinsicHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IntrinsicHeight" />
      <MemberSignature Language="F#" Value="member this.IntrinsicHeight : int" Usage="Android.Graphics.Drawables.Drawable.IntrinsicHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntrinsicHeight", "()I", "GetGetIntrinsicHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the drawable's intrinsic height.</summary>
        <value>the intrinsic height, or -1 if no intrinsic height</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntrinsicWidth">
      <MemberSignature Language="C#" Value="public virtual int IntrinsicWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IntrinsicWidth" />
      <MemberSignature Language="F#" Value="member this.IntrinsicWidth : int" Usage="Android.Graphics.Drawables.Drawable.IntrinsicWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntrinsicWidth", "()I", "GetGetIntrinsicWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the drawable's intrinsic width.</summary>
        <value>the intrinsic width, or -1 if no intrinsic width</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateSelf">
      <MemberSignature Language="C#" Value="public virtual void InvalidateSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateSelf() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.InvalidateSelf" />
      <MemberSignature Language="F#" Value="abstract member InvalidateSelf : unit -&gt; unit&#xA;override this.InvalidateSelf : unit -&gt; unit" Usage="drawable.InvalidateSelf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateSelf", "()V", "GetInvalidateSelfHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Use the current <c>Callback</c> implementation to have this Drawable
            redrawn.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="IsFilterBitmap">
      <MemberSignature Language="C#" Value="public virtual bool IsFilterBitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFilterBitmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
      <MemberSignature Language="F#" Value="member this.IsFilterBitmap : bool" Usage="Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFilterBitmap", "()Z", "GetIsFilterBitmapHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>whether this drawable filters its bitmaps</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProjected">
      <MemberSignature Language="C#" Value="public virtual bool IsProjected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProjected" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsProjected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isProjected", "()Z", "GetIsProjectedHandler", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this drawable requests projection.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateful">
      <MemberSignature Language="C#" Value="public virtual bool IsStateful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStateful" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsStateful" />
      <MemberSignature Language="F#" Value="member this.IsStateful : bool" Usage="Android.Graphics.Drawables.Drawable.IsStateful" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isStateful", "()Z", "GetIsStatefulHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this drawable will change its appearance based on
            state.</summary>
        <value>True if this drawable changes its appearance based on state,
                    false otherwise.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.IsVisible" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="Android.Graphics.Drawables.Drawable.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVisible", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Drawables.Drawable.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpToCurrentState">
      <MemberSignature Language="C#" Value="public virtual void JumpToCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void JumpToCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.JumpToCurrentState" />
      <MemberSignature Language="F#" Value="abstract member JumpToCurrentState : unit -&gt; unit&#xA;override this.JumpToCurrentState : unit -&gt; unit" Usage="drawable.JumpToCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("jumpToCurrentState", "()V", "GetJumpToCurrentStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If this Drawable does transition animations between states, ask that
            it immediately jump to the current state and skip any active animations.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirection">
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutDirection LayoutDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.LayoutDirection LayoutDirection" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.LayoutDirection" />
      <MemberSignature Language="F#" Value="member this.LayoutDirection : Android.Views.LayoutDirection" Usage="Android.Graphics.Drawables.Drawable.LayoutDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the resolved layout direction for this Drawable.</summary>
        <value>One of <c>android.view.View#LAYOUT_DIRECTION_LTR</c>,
                    <c>android.view.View#LAYOUT_DIRECTION_RTL</c></value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Level" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="Android.Graphics.Drawables.Drawable.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLevel", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current level.</summary>
        <value>int Current level, from 0 (minimum) to 10000 (maximum).</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.MinimumHeight" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int" Usage="Android.Graphics.Drawables.Drawable.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum height suggested by this Drawable.</summary>
        <value>The minimum height suggested by this Drawable. If this Drawable
                    doesn't have a suggested minimum height, 0 is returned.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.MinimumWidth" />
      <MemberSignature Language="F#" Value="member this.MinimumWidth : int" Usage="Android.Graphics.Drawables.Drawable.MinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum width suggested by this Drawable.</summary>
        <value>The minimum width suggested by this Drawable. If this Drawable
                    doesn't have a suggested minimum width, 0 is returned.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Mutate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable Mutate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.Mutate" />
      <MemberSignature Language="F#" Value="abstract member Mutate : unit -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.Mutate : unit -&gt; Android.Graphics.Drawables.Drawable" Usage="drawable.Mutate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mutate", "()Landroid/graphics/drawable/Drawable;", "GetMutateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make this drawable mutable.</summary>
        <returns>This drawable.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetConstantState" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChange">
      <MemberSignature Language="C#" Value="protected virtual void OnBoundsChange (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBoundsChange(class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnBoundsChange(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member OnBoundsChange : Android.Graphics.Rect -&gt; unit&#xA;override this.OnBoundsChange : Android.Graphics.Rect -&gt; unit" Usage="drawable.OnBoundsChange bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based on
            the bounds.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLayoutDirectionChanged">
      <MemberSignature Language="C#" Value="public virtual bool OnLayoutDirectionChanged (int layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnLayoutDirectionChanged(int32 layoutDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnLayoutDirectionChanged(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutDirectionChanged : int -&gt; bool&#xA;override this.OnLayoutDirectionChanged : int -&gt; bool" Usage="drawable.OnLayoutDirectionChanged layoutDirection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLayoutDirectionChanged", "(I)Z", "GetOnLayoutDirectionChanged_IHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutDirection" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.IntDef(Fields=new System.String[] { "LayoutDirectionLtr", "LayoutDirectionRtl" }, Type="Android.Views.View")</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layoutDirection">the new resolved layout direction</param>
        <summary>Called when the drawable's resolved layout direction changes.</summary>
        <returns>
          <c>true</c> if the layout direction change has caused the
                    appearance of the drawable to change such that it needs to be
                    re-drawn, <c>false</c> otherwise</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLevelChange">
      <MemberSignature Language="C#" Value="protected virtual bool OnLevelChange (int level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnLevelChange(int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnLevelChange(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnLevelChange : int -&gt; bool&#xA;override this.OnLevelChange : int -&gt; bool" Usage="drawable.OnLevelChange level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLevelChange", "(I)Z", "GetOnLevelChange_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based
             on level.</summary>
        <returns>Returns true if the level change has caused the appearance of
            the Drawable to change (that is, it needs to be drawn), else false
            if it looks the same and there is no need to redraw it since its
            last level.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected virtual bool OnStateChange (int[] state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStateChange(int32[] state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.OnStateChange(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member OnStateChange : int[] -&gt; bool&#xA;override this.OnStateChange : int[] -&gt; bool" Usage="drawable.OnStateChange state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStateChange", "([I)Z", "GetOnStateChange_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Override this in your subclass to change appearance if you recognize the
            specified state.</summary>
        <returns>Returns true if the state change has caused the appearance of
            the Drawable to change (that is, it needs to be drawn), else false
            if it looks the same and there is no need to redraw it since its
            last state.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public abstract int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.Opacity" />
      <MemberSignature Language="F#" Value="member this.Opacity : int" Usage="Android.Graphics.Drawables.Drawable.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="OpticalInsets">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Insets OpticalInsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Insets OpticalInsets" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.OpticalInsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpticalInsets", "()Landroid/graphics/Insets;", "GetGetOpticalInsetsHandler", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Insets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return in insets the layout insets suggested by this Drawable for use with alignment
            operations during layout.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveOpacity">
      <MemberSignature Language="C#" Value="public static int ResolveOpacity (int op1, int op2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveOpacity(int32 op1, int32 op2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ResolveOpacity : int * int -&gt; int" Usage="Android.Graphics.Drawables.Drawable.ResolveOpacity (op1, op2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveOpacity", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op1" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "" }, Type="")</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="op2" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "" }, Type="")</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="op1">One opacity value.</param>
        <param name="op2">Another opacity value.</param>
        <summary>Return the appropriate opacity value for two source opacities.</summary>
        <returns>int The combined opacity value.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="C#" Value="public virtual void ScheduleSelf (Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleSelf(class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ScheduleSelf(Java.Lang.IRunnable,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member ScheduleSelf : Java.Lang.IRunnable * int64 -&gt; unit&#xA;override this.ScheduleSelf : Java.Lang.IRunnable * int64 -&gt; unit" Usage="drawable.ScheduleSelf (what, when)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scheduleSelf", "(Ljava/lang/Runnable;J)V", "GetScheduleSelf_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">The action being scheduled.</param>
        <param name="when">The time (in milliseconds) to run.</param>
        <summary>Use the current <c>Callback</c> implementation to have this Drawable
            scheduled.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="C#" Value="public void ScheduleSelf (Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleSelf(class System.Action what, int64 when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.ScheduleSelf(System.Action,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.ScheduleSelf : Action * int64 -&gt; unit" Usage="drawable.ScheduleSelf (what, when)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public abstract void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAlpha : int -&gt; unit" Usage="drawable.SetAlpha alpha" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary>Specify an alpha value for the drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public virtual void SetBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetBounds : int * int * int * int -&gt; unit&#xA;override this.SetBounds : int * int * int * int -&gt; unit" Usage="drawable.SetBounds (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBounds", "(IIII)V", "GetSetBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Specify a bounding rectangle for the Drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Graphics.Drawables.Drawable.ICallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Graphics.Drawables.Drawable/ICallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetCallback(Android.Graphics.Drawables.Drawable.ICallback)" />
      <MemberSignature Language="F#" Value="member this.SetCallback : Android.Graphics.Drawables.Drawable.ICallback -&gt; unit" Usage="drawable.SetCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCallback", "(Landroid/graphics/drawable/Drawable$Callback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Graphics.Drawables.Drawable+ICallback" />
      </Parameters>
      <Docs>
        <param name="cb">The client's Callback implementation.</param>
        <summary>Bind a <c>Callback</c> object to this Drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public abstract void SetColorFilter (Android.Graphics.ColorFilter colorFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(class Android.Graphics.ColorFilter colorFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" />
      <MemberSignature Language="F#" Value="abstract member SetColorFilter : Android.Graphics.ColorFilter -&gt; unit" Usage="drawable.SetColorFilter colorFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorFilter" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="colorFilter">To be added.</param>
        <summary>Specify a color and Porter-Duff mode to be the color filter for this
            drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public virtual void SetColorFilter (Android.Graphics.Color color, Android.Graphics.PorterDuff.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(valuetype Android.Graphics.Color color, class Android.Graphics.PorterDuff/Mode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.Color,Android.Graphics.PorterDuff.Mode)" />
      <MemberSignature Language="F#" Value="abstract member SetColorFilter : Android.Graphics.Color * Android.Graphics.PorterDuff.Mode -&gt; unit&#xA;override this.SetColorFilter : Android.Graphics.Color * Android.Graphics.PorterDuff.Mode -&gt; unit" Usage="drawable.SetColorFilter (color, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(ILandroid/graphics/PorterDuff$Mode;)V", "GetSetColorFilter_ILandroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
        <Parameter Name="mode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Specify a color and Porter-Duff mode to be the color filter for this
            drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDither">
      <MemberSignature Language="C#" Value="public virtual void SetDither (bool dither);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDither(bool dither) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetDither(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetDither : bool -&gt; unit&#xA;override this.SetDither : bool -&gt; unit" Usage="drawable.SetDither dither" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dither" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dither">To be added.</param>
        <summary>Set to true to have the drawable dither its colors when drawn to a
            device with fewer than 8-bits per color component.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.Dither" />
      </Docs>
    </Member>
    <Member MemberName="SetFilterBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetFilterBitmap (bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilterBitmap(bool filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetFilterBitmap(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFilterBitmap : bool -&gt; unit&#xA;override this.SetFilterBitmap : bool -&gt; unit" Usage="drawable.SetFilterBitmap filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>Set to true to have the drawable filter its bitmaps with bilinear
            sampling when they are scaled or rotated.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
        <altmember cref="P:Android.Graphics.Paint.FilterBitmap" />
      </Docs>
    </Member>
    <Member MemberName="SetHotspot">
      <MemberSignature Language="C#" Value="public virtual void SetHotspot (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspot(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetHotspot(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetHotspot : single * single -&gt; unit&#xA;override this.SetHotspot : single * single -&gt; unit" Usage="drawable.SetHotspot (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The X coordinate of the center of the hotspot</param>
        <param name="y">The Y coordinate of the center of the hotspot</param>
        <summary>Specifies the hotspot's location within the drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHotspotBounds">
      <MemberSignature Language="C#" Value="public virtual void SetHotspotBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspotBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetHotspotBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetHotspotBounds : int * int * int * int -&gt; unit&#xA;override this.SetHotspotBounds : int * int * int * int -&gt; unit" Usage="drawable.SetHotspotBounds (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">position in pixels of the left bound</param>
        <param name="top">position in pixels of the top bound</param>
        <param name="right">position in pixels of the right bound</param>
        <param name="bottom">position in pixels of the bottom bound</param>
        <summary>Sets the bounds to which the hotspot is constrained, if they should be
            different from the drawable bounds.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetHotspotBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="SetLayoutDirection">
      <MemberSignature Language="C#" Value="public bool SetLayoutDirection (Android.Views.LayoutDirection layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetLayoutDirection(valuetype Android.Views.LayoutDirection layoutDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetLayoutDirection(Android.Views.LayoutDirection)" />
      <MemberSignature Language="F#" Value="member this.SetLayoutDirection : Android.Views.LayoutDirection -&gt; bool" Usage="drawable.SetLayoutDirection layoutDirection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayoutDirection", "(I)Z", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutDirection" Type="Android.Views.LayoutDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layoutDirection">the resolved layout direction for the drawable,
                                   either <c>android.view.View#LAYOUT_DIRECTION_LTR</c>
                                   or <c>android.view.View#LAYOUT_DIRECTION_RTL</c></param>
        <summary>Set the layout direction for this drawable.</summary>
        <returns>
          <c>true</c> if the layout direction change has caused the
                    appearance of the drawable to change such that it needs to be
                    re-drawn, <c>false</c> otherwise</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLevel">
      <MemberSignature Language="C#" Value="public bool SetLevel (int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetLevel(int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetLevel(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetLevel : int -&gt; bool" Usage="drawable.SetLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLevel", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">The new level, from 0 (minimum) to 10000 (maximum).</param>
        <summary>Specify the level for the drawable.</summary>
        <returns>Returns true if this change in level has caused the appearance
            of the Drawable to change (hence requiring an invalidate), otherwise
            returns false.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetState">
      <MemberSignature Language="C#" Value="public virtual bool SetState (int[] stateSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetState(int32[] stateSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member SetState : int[] -&gt; bool&#xA;override this.SetState : int[] -&gt; bool" Usage="drawable.SetState stateSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setState", "([I)Z", "GetSetState_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSet" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="stateSet">The new set of states to be displayed.</param>
        <summary>Specify a set of states for the drawable.</summary>
        <returns>Returns true if this change in state has caused the appearance
            of the Drawable to change (hence requiring an invalidate), otherwise
            returns false.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTint">
      <MemberSignature Language="C#" Value="public virtual void SetTint (int tintColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTint(int32 tintColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetTint : int -&gt; unit&#xA;override this.SetTint : int -&gt; unit" Usage="drawable.SetTint tintColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTint", "(I)V", "GetSetTint_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tintColor">Color to use for tinting this drawable</param>
        <summary>Specifies tint color for this drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintBlendMode">
      <MemberSignature Language="C#" Value="public virtual void SetTintBlendMode (Android.Graphics.BlendMode blendMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintBlendMode(class Android.Graphics.BlendMode blendMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTintBlendMode(Android.Graphics.BlendMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blendMode" Type="Android.Graphics.BlendMode" />
      </Parameters>
      <Docs>
        <param name="blendMode">BlendMode to apply to the drawable, a value of null sets the default
                             blend mode value of <c>BlendMode#SRC_IN</c></param>
        <summary>Specifies a tint blending mode for this drawable.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTintList">
      <MemberSignature Language="C#" Value="public virtual void SetTintList (Android.Content.Res.ColorStateList tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintList(class Android.Content.Res.ColorStateList tint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      <MemberSignature Language="F#" Value="abstract member SetTintList : Android.Content.Res.ColorStateList -&gt; unit&#xA;override this.SetTintList : Android.Content.Res.ColorStateList -&gt; unit" Usage="drawable.SetTintList tint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tint" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="tint">Color state list to use for tinting this drawable, or
                       <c>null</c> to clear the tint</param>
        <summary>Specifies tint color for this drawable as a color state list.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintMode">
      <MemberSignature Language="C#" Value="public virtual void SetTintMode (Android.Graphics.PorterDuff.Mode tintMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintMode(class Android.Graphics.PorterDuff/Mode tintMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetTintMode(Android.Graphics.PorterDuff.Mode)" />
      <MemberSignature Language="F#" Value="abstract member SetTintMode : Android.Graphics.PorterDuff.Mode -&gt; unit&#xA;override this.SetTintMode : Android.Graphics.PorterDuff.Mode -&gt; unit" Usage="drawable.SetTintMode tintMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintMode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="tintMode">A Porter-Duff blending mode to apply to the drawable, a value of null sets
                            the default Porter-Diff blending mode value
                            of <c>PorterDuff.Mode#SRC_IN</c></param>
        <summary>Specifies a tint blending mode for this drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisible">
      <MemberSignature Language="C#" Value="public virtual bool SetVisible (bool visible, bool restart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetVisible(bool visible, bool restart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.SetVisible(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetVisible : bool * bool -&gt; bool&#xA;override this.SetVisible : bool * bool -&gt; bool" Usage="drawable.SetVisible (visible, restart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVisible", "(ZZ)Z", "GetSetVisible_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
        <Parameter Name="restart" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Set to true if visible, false if not.</param>
        <param name="restart">You can supply true here to force the drawable to behave
                           as if it has just become visible, even if it had last
                           been set visible.  Used for example to force animations
                           to restart.</param>
        <summary>Set whether this Drawable is visible.</summary>
        <returns>boolean Returns true if the new visibility is different than
                    its previous state.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Drawables.Drawable.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Drawables.Drawable.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparentRegion">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Region TransparentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Region TransparentRegion" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.Drawable.TransparentRegion" />
      <MemberSignature Language="F#" Value="member this.TransparentRegion : Android.Graphics.Region" Usage="Android.Graphics.Drawables.Drawable.TransparentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransparentRegion", "()Landroid/graphics/Region;", "GetGetTransparentRegionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Region representing the part of the Drawable that is completely
            transparent.</summary>
        <value>Returns null if the Drawables has no transparent region to
            report, else a Region holding the parts of the Drawable's bounds that
            are transparent.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleSelf (Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleSelf(class Java.Lang.IRunnable what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.UnscheduleSelf(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member UnscheduleSelf : Java.Lang.IRunnable -&gt; unit&#xA;override this.UnscheduleSelf : Java.Lang.IRunnable -&gt; unit" Usage="drawable.UnscheduleSelf what" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleSelf", "(Ljava/lang/Runnable;)V", "GetUnscheduleSelf_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="what">The runnable that you no longer want called.</param>
        <summary>Use the current <c>Callback</c> implementation to have this Drawable
            unscheduled.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="C#" Value="public void UnscheduleSelf (Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleSelf(class System.Action what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.Drawable.UnscheduleSelf(System.Action)" />
      <MemberSignature Language="F#" Value="member this.UnscheduleSelf : Action -&gt; unit" Usage="drawable.UnscheduleSelf what" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
