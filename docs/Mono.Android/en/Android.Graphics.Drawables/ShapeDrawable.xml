<Type Name="ShapeDrawable" FullName="Android.Graphics.Drawables.ShapeDrawable">
  <TypeSignature Language="C#" Value="public class ShapeDrawable : Android.Graphics.Drawables.Drawable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShapeDrawable extends Android.Graphics.Drawables.Drawable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Graphics.Drawables.Drawable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/ShapeDrawable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable object that draws primitive shapes.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A Drawable object that draws primitive shapes. A ShapeDrawable takes a
 <c><see cref="T:Android.Graphics.Drawables.Shapes.Shape" /></c> object and manages its
 presence on the screen. If no Shape is given, then the ShapeDrawable will
 default to a <c><see cref="T:Android.Graphics.Drawables.Shapes.RectShape" /></c>.
 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">
 This object can be defined in an XML file with the <c>&lt;shape&gt;</c>
 element.
 </para>
      <para tool="javadoc-to-mdoc">
 For more information about how to use ShapeDrawable, read the <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/graphics/2d-graphics.html#shape-drawable">
 Canvas and Drawables</a></format> document. For more information about defining a
 ShapeDrawable in XML, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/drawable-resource.html#Shape">
 Drawable Resources</a></format> document.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShapeDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>ShapeDrawable constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">ShapeDrawable constructor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#ShapeDrawable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShapeDrawable (Android.Graphics.Drawables.Shapes.Shape s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Drawables.Shapes.Shape s) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/drawable/shapes/Shape;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="s" Type="Android.Graphics.Drawables.Shapes.Shape" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>Creates a ShapeDrawable with a specified Shape.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a ShapeDrawable with a specified Shape.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#ShapeDrawable(android.graphics.drawable.shapes.Shape)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShapeDrawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into
</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#draw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetShaderFactory">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.ShapeDrawable.ShaderFactory GetShaderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.ShapeDrawable/ShaderFactory GetShaderFactory() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getShaderFactory", "()Landroid/graphics/drawable/ShapeDrawable$ShaderFactory;", "GetGetShaderFactoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.ShapeDrawable+ShaderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the ShaderFactory used by this ShapeDrawable for requesting a
 <c><see cref="T:Android.Graphics.Shader" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the ShaderFactory used by this ShapeDrawable for requesting a
 <c><see cref="T:Android.Graphics.Shader" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#getShaderFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InflateTag">
      <MemberSignature Language="C#" Value="protected virtual bool InflateTag (string name, Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool InflateTag(string name, class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflateTag", "(Ljava/lang/String;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Z", "GetInflateTag_Ljava_lang_String_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Subclasses override this to parse custom subelements.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses override this to parse custom subelements. If you handle it,
 return true, else return <i>super.inflateTag(...)</i>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#inflateTag(java.lang.String, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected virtual void OnDraw (Android.Graphics.Drawables.Shapes.Shape shape, Android.Graphics.Canvas canvas, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDraw(class Android.Graphics.Drawables.Shapes.Shape shape, class Android.Graphics.Canvas canvas, class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDraw", "(Landroid/graphics/drawable/shapes/Shape;Landroid/graphics/Canvas;Landroid/graphics/Paint;)V", "GetOnDraw_Landroid_graphics_drawable_shapes_Shape_Landroid_graphics_Canvas_Landroid_graphics_Paint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="Android.Graphics.Drawables.Shapes.Shape" />
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="shape">To be added.</param>
        <param name="canvas">To be added.</param>
        <param name="paint">To be added.</param>
        <summary>Called from the drawable's draw() method after the canvas has been set to
 draw the shape at (0,0).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called from the drawable's draw() method after the canvas has been set to
 draw the shape at (0,0). Subclasses can override for special effects such
 as multiple layers, stroking, etc.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#onDraw(android.graphics.drawable.shapes.Shape, android.graphics.Canvas, android.graphics.Paint)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public override int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the opacity/transparency of this Drawable.  The returned value is
 one of the abstract format constants in
 <c><see cref="T:Android.Graphics.PixelFormat" /></c>:
 <c><see cref="F:Android.Graphics.Format.Unknown" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Translucent" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Transparent" tool="ReplaceLinkValue" /></c>, or
 <c><see cref="F:Android.Graphics.Format.Opaque" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">An OPAQUE drawable is one that draws all all content within its bounds, completely
 covering anything behind the drawable. A TRANSPARENT drawable is one that draws nothing
 within its bounds, allowing everything behind it to show through. A TRANSLUCENT drawable
 is a drawable in any other state, where the drawable will draw some, but not all,
 of the content within its bounds and at least some content behind the drawable will
 be visible. If the visibility of the drawable's contents cannot be determined, the
 safest/best return value is TRANSLUCENT.

 </para>
          <para tool="javadoc-to-mdoc">Generally a Drawable should be as conservative as possible with the
 value it returns.  For example, if it contains multiple child drawables
 and only shows one of them at a time, if only one of the children is
 TRANSLUCENT and the others are OPAQUE then TRANSLUCENT should be
 returned.  You can use the method <c><see cref="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32,System.Int32)" /></c> to perform a
 standard reduction of two opacities to the appropriate single output.

 </para>
          <para tool="javadoc-to-mdoc">Note that the returned value does not necessarily take into account a
 custom alpha or color filter that has been applied by the client through
 the <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c> or <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> methods. Some subclasses,
 such as <c><see cref="T:Android.Graphics.Drawables.BitmapDrawable" /></c>, <c><see cref="T:Android.Graphics.Drawables.ColorDrawable" /></c>, and <c><see cref="T:Android.Graphics.Drawables.GradientDrawable" /></c>,
 do account for the value of <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c>, but the general behavior is dependent
 upon the implementation of the subclass.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#getOpacity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint Paint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint Paint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaint", "()Landroid/graphics/Paint;", "GetGetPaintHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Paint used to draw the shape.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the Paint used to draw the shape.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#getPaint()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public override void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary tool="true">Set the alpha level for this drawable [0.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the alpha level for this drawable [0..255]. Note that this drawable
 also has a color in its paint, which has an alpha as well. These two
 values are automatically combined during drawing. Thus if the color's
 alpha is 75% (i.e. 192) and the drawable's alpha is 50% (i.e. 128), then
 the combined alpha that will be used during drawing will be 37.5% (i.e.
 96).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setAlpha(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public override void SetColorFilter (Android.Graphics.ColorFilter cf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetColorFilter(class Android.Graphics.ColorFilter cf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cf" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="cf">the color filter to apply, or <c>null</c> to remove the
            existing color filter
</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an optional color filter for the drawable.
 </para>
          <para tool="javadoc-to-mdoc">
 If a Drawable has a ColorFilter, each output pixel of the Drawable's
 drawing contents will be modified by the color filter before it is
 blended onto the render target of a Canvas.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass <c>null</c> to remove any existing color filter.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a non-<c>null</c> color
 filter disables <c><see cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setColorFilter(android.graphics.ColorFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetIntrinsicHeight">
      <MemberSignature Language="C#" Value="public virtual void SetIntrinsicHeight (int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIntrinsicHeight(int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIntrinsicHeight", "(I)V", "GetSetIntrinsicHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="height">the intrinsic height (in pixels)
</param>
        <summary>Sets the intrinsic (default) height for this shape.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the intrinsic (default) height for this shape.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setIntrinsicHeight(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetIntrinsicWidth">
      <MemberSignature Language="C#" Value="public virtual void SetIntrinsicWidth (int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIntrinsicWidth(int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIntrinsicWidth", "(I)V", "GetSetIntrinsicWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">the intrinsic width (in pixels)
</param>
        <summary>Sets the intrinsic (default) width for this shape.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the intrinsic (default) width for this shape.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setIntrinsicWidth(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPadding">
      <MemberSignature Language="C#" Value="public virtual void SetPadding (Android.Graphics.Rect padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPadding(class Android.Graphics.Rect padding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPadding", "(Landroid/graphics/Rect;)V", "GetSetPadding_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <summary tool="true">Sets padding for this shape, defined by a Rect object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets padding for this shape, defined by a Rect object. Define the padding
 in the Rect object as: left, top, right, bottom.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setPadding(android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPadding">
      <MemberSignature Language="C#" Value="public virtual void SetPadding (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPadding(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPadding", "(IIII)V", "GetSetPadding_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">padding for the left side (in pixels)</param>
        <param name="top">padding for the top (in pixels)</param>
        <param name="right">padding for the right side (in pixels)</param>
        <param name="bottom">padding for the bottom (in pixels)
</param>
        <summary>Sets padding for the shape.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets padding for the shape.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setPadding(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShaderFactory">
      <MemberSignature Language="C#" Value="public virtual void SetShaderFactory (Android.Graphics.Drawables.ShapeDrawable.ShaderFactory fact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShaderFactory(class Android.Graphics.Drawables.ShapeDrawable/ShaderFactory fact) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShaderFactory", "(Landroid/graphics/drawable/ShapeDrawable$ShaderFactory;)V", "GetSetShaderFactory_Landroid_graphics_drawable_ShapeDrawable_ShaderFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fact" Type="Android.Graphics.Drawables.ShapeDrawable+ShaderFactory" />
      </Parameters>
      <Docs>
        <param name="fact">an instance of your ShaderFactory implementation
</param>
        <summary>Sets a ShaderFactory to which requests for a
 <c><see cref="T:Android.Graphics.Shader" /></c> object will be made.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets a ShaderFactory to which requests for a
 <c><see cref="T:Android.Graphics.Shader" /></c> object will be made.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Shapes.Shape Shape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Shapes.Shape Shape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShape", "()Landroid/graphics/drawable/shapes/Shape;", "GetGetShapeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setShape", "(Landroid/graphics/drawable/shapes/Shape;)V", "GetSetShape_Landroid_graphics_drawable_shapes_Shape_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Shapes.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Shape of this ShapeDrawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#getShape()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Shape of this ShapeDrawable.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html#setShape(android.graphics.drawable.shapes.Shape)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Shape of this ShapeDrawable.
</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
