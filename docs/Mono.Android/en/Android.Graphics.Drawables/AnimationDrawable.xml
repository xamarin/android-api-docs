<Type Name="AnimationDrawable" FullName="Android.Graphics.Drawables.AnimationDrawable">
  <TypeSignature Language="VB.NET" Value="Public Class AnimationDrawable&#xA;Inherits DrawableContainer&#xA;Implements IAnimatable, IDisposable, IJavaPeerable, IRunnable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnimationDrawable : Android::Graphics::Drawables::DrawableContainer, Android::Graphics::Drawables::IAnimatable, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IRunnable" />
  <TypeSignature Language="C#" Value="public class AnimationDrawable : Android.Graphics.Drawables.DrawableContainer, Android.Graphics.Drawables.IAnimatable, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IRunnable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnimationDrawable extends Android.Graphics.Drawables.DrawableContainer implements class Android.Graphics.Drawables.IAnimatable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IRunnable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Drawables.AnimationDrawable" />
  <TypeSignature Language="F#" Value="type AnimationDrawable = class&#xA;    inherit DrawableContainer&#xA;    interface IAnimatable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IRunnable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Graphics.Drawables.DrawableContainer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Graphics.Drawables.IAnimatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IRunnable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/drawable/AnimationDrawable", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/drawable/AnimationDrawable", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An object used to create frame-by-frame animations, defined by a series of
            Drawable objects, which can be used as a View object's background.</summary>
    <remarks>
      <para>An object used to create frame-by-frame animations, defined by a series of
            Drawable objects, which can be used as a View object's background.</para>
      <para>The simplest way to create a frame-by-frame animation is to define the
            animation in an XML file, placed in the res/drawable/ folder, and set it as
            the background to a View object. Then, call <c>#start()</c> to run the
            animation.</para>
      <para>An AnimationDrawable defined in XML consists of a single
            <c>&lt;animation-list&gt;</c> element and a series of nested
            <c>&lt;item&gt;</c> tags. Each item defines a frame of the animation. See
            the example below.</para>
      <para>spin_animation.xml file in res/drawable/ folder:</para>
      <code lang="text/java">&amp;lt;!-- Animation frames are wheel0.png through wheel5.png
                files inside the res/drawable/ folder --&amp;gt;
            &amp;lt;animation-list android:id=&amp;quot;@+id/selected&amp;quot; android:oneshot=&amp;quot;false&amp;quot;&amp;gt;
               &amp;lt;item android:drawable=&amp;quot;@drawable/wheel0&amp;quot; android:duration=&amp;quot;50&amp;quot; /&amp;gt;
               &amp;lt;item android:drawable=&amp;quot;@drawable/wheel1&amp;quot; android:duration=&amp;quot;50&amp;quot; /&amp;gt;
               &amp;lt;item android:drawable=&amp;quot;@drawable/wheel2&amp;quot; android:duration=&amp;quot;50&amp;quot; /&amp;gt;
               &amp;lt;item android:drawable=&amp;quot;@drawable/wheel3&amp;quot; android:duration=&amp;quot;50&amp;quot; /&amp;gt;
               &amp;lt;item android:drawable=&amp;quot;@drawable/wheel4&amp;quot; android:duration=&amp;quot;50&amp;quot; /&amp;gt;
               &amp;lt;item android:drawable=&amp;quot;@drawable/wheel5&amp;quot; android:duration=&amp;quot;50&amp;quot; /&amp;gt;
            &amp;lt;/animation-list&amp;gt;</code>
      <para>Here is the code to load and play this animation.</para>
      <code lang="text/java">// Load the ImageView that will host the animation and
            // set its background to our AnimationDrawable XML resource.
            ImageView img = (ImageView)findViewById(R.id.spinning_wheel_image);
            img.setBackgroundResource(R.drawable.spin_animation);
            
            // Get the background, which has been compiled to an AnimationDrawable object.
            AnimationDrawable frameAnimation = (AnimationDrawable) img.getBackground();
            
            // Start the animation (looped playback by default).
            frameAnimation.start();
            </code>
      <para>&lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about animating with <c>AnimationDrawable</c>, read the
            <see href="https://developer.android.com/guide/topics/graphics/drawable-animation.html">Drawable Animation</see>
            developer guide.</para>
      <para>&lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnimationDrawable();" />
      <MemberSignature Language="C#" Value="public AnimationDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AnimationDrawable(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected AnimationDrawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Drawables.AnimationDrawable : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Drawables.AnimationDrawable" Usage="new Android.Graphics.Drawables.AnimationDrawable (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFrame">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddFrame (frame As Drawable, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddFrame(Android::Graphics::Drawables::Drawable ^ frame, int duration);" />
      <MemberSignature Language="C#" Value="public virtual void AddFrame (Android.Graphics.Drawables.Drawable frame, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFrame(class Android.Graphics.Drawables.Drawable frame, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.AddFrame(Android.Graphics.Drawables.Drawable,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AddFrame : Android.Graphics.Drawables.Drawable * int -&gt; unit&#xA;override this.AddFrame : Android.Graphics.Drawables.Drawable * int -&gt; unit" Usage="animationDrawable.AddFrame (frame, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addFrame", "(Landroid/graphics/drawable/Drawable;I)V", "GetAddFrame_Landroid_graphics_drawable_Drawable_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addFrame", "(Landroid/graphics/drawable/Drawable;I)V", "GetAddFrame_Landroid_graphics_drawable_Drawable_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frame">The frame to add</param>
        <param name="duration">How long in milliseconds the frame should appear</param>
        <summary>Adds a frame to the animation</summary>
        <remarks>
          <para>Adds a frame to the animation</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#addFrame(android.graphics.drawable.Drawable,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.addFrame(android.graphics.drawable.Drawable, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDuration">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDuration (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDuration(int i);" />
      <MemberSignature Language="C#" Value="public virtual int GetDuration (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDuration(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.GetDuration(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetDuration : int -&gt; int&#xA;override this.GetDuration : int -&gt; int" Usage="animationDrawable.GetDuration i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDuration", "(I)I", "GetGetDuration_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDuration", "(I)I", "GetGetDuration_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>
        </summary>
        <returns>The duration in milliseconds of the frame at the
                    specified index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#getDuration(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.getDuration(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrame (index As Integer) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Graphics::Drawables::Drawable ^ GetFrame(int index);" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.GetFrame(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetFrame : int -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.GetFrame : int -&gt; Android.Graphics.Drawables.Drawable" Usage="animationDrawable.GetFrame index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFrame", "(I)Landroid/graphics/drawable/Drawable;", "GetGetFrame_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFrame", "(I)Landroid/graphics/drawable/Drawable;", "GetGetFrame_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
        </summary>
        <returns>The Drawable at the specified frame index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#getFrame(int)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.getFrame(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsRunning { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimationDrawable.IsRunning" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Android.Graphics.Drawables.AnimationDrawable.IsRunning" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Graphics.Drawables.IAnimatable.IsRunning</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the animation is currently running or not.</summary>
        <value>true if the animation is running, false otherwise</value>
        <remarks>
          <para>Indicates whether the animation is currently running or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#isRunning()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.isRunning()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimationDrawable.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Drawables.AnimationDrawable.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfFrames">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfFrames As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfFrames { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int NumberOfFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfFrames" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimationDrawable.NumberOfFrames" />
      <MemberSignature Language="F#" Value="member this.NumberOfFrames : int" Usage="Android.Graphics.Drawables.AnimationDrawable.NumberOfFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNumberOfFrames", "()I", "GetGetNumberOfFramesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNumberOfFrames", "()I", "GetGetNumberOfFramesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>The number of frames in the animation</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#getNumberOfFrames()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.getNumberOfFrames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OneShot">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OneShot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool OneShot { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool OneShot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneShot" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimationDrawable.OneShot" />
      <MemberSignature Language="F#" Value="member this.OneShot : bool with get, set" Usage="Android.Graphics.Drawables.AnimationDrawable.OneShot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOneShot", "()Z", "GetIsOneShotHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOneShot", "()Z", "GetIsOneShotHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOneShot", "(Z)V", "GetSetOneShot_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOneShot", "(Z)V", "GetSetOneShot_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="oneShot">Pass true if the animation should only play once</param>
        <summary>Sets whether the animation should play once or repeat.</summary>
        <value>True of the animation will play once, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#isOneShot()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.isOneShot()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether the animation should play once or repeat.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#setOneShot(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.setOneShot(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Run();" />
      <MemberSignature Language="C#" Value="public virtual void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.Run" />
      <MemberSignature Language="F#" Value="abstract member Run : unit -&gt; unit&#xA;override this.Run : unit -&gt; unit" Usage="animationDrawable.Run " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IRunnable.Run</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("run", "()V", "GetRunHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("run", "()V", "GetRunHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for implementation purpose only and should not be
            called directly.</summary>
        <remarks>
          <para>This method exists for implementation purpose only and should not be
            called directly. Invoke <c>#start()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#run()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.run()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.AnimationDrawable.Start" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Start();" />
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="animationDrawable.Start " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable.Start</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the animation from the first frame, looping if necessary.</summary>
        <remarks>
          <para>Starts the animation from the first frame, looping if necessary. This method has no effect
            if the animation is running.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Do not call this in the
            <c>android.app.Activity#onCreate</c> method of your activity, because
            the <c>AnimationDrawable</c> is not yet fully attached to the window.
            If you want to play the animation immediately without requiring
            interaction, then you might want to call it from the
            <c>android.app.Activity#onWindowFocusChanged</c> method in your
            activity, which will get called when Android brings your window into
            focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#start()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.AnimationDrawable.IsRunning" />
        <altmember cref="M:Android.Graphics.Drawables.AnimationDrawable.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Stop();" />
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimationDrawable.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="animationDrawable.Stop " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable.Stop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "GetStopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "GetStopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the animation at the current frame.</summary>
        <remarks>
          <para>Stops the animation at the current frame. This method has no effect if the animation is not
            running.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable#stop()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimationDrawable.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.AnimationDrawable.IsRunning" />
        <altmember cref="M:Android.Graphics.Drawables.AnimationDrawable.Start" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimationDrawable.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Drawables.AnimationDrawable.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimationDrawable.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Drawables.AnimationDrawable.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
