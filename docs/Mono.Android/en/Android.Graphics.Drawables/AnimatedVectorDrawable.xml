<Type Name="AnimatedVectorDrawable" FullName="Android.Graphics.Drawables.AnimatedVectorDrawable">
  <TypeSignature Language="C#" Value="public class AnimatedVectorDrawable : Android.Graphics.Drawables.Drawable, Android.Graphics.Drawables.IAnimatable2, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnimatedVectorDrawable extends Android.Graphics.Drawables.Drawable implements class Android.Graphics.Drawables.IAnimatable, class Android.Graphics.Drawables.IAnimatable2, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Drawables.AnimatedVectorDrawable" />
  <TypeSignature Language="F#" Value="type AnimatedVectorDrawable = class&#xA;    inherit Drawable&#xA;    interface IAnimatable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IAnimatable2" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Graphics.Drawables.Drawable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Graphics.Drawables.IAnimatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Graphics.Drawables.IAnimatable2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/drawable/AnimatedVectorDrawable", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/drawable/AnimatedVectorDrawable", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>This class animates properties of a <c>android.graphics.drawable.VectorDrawable</c> with
            animations defined using <c>android.animation.ObjectAnimator</c> or
            <c>android.animation.AnimatorSet</c>.</summary>
    <remarks>
      <para>This class animates properties of a <c>android.graphics.drawable.VectorDrawable</c> with
            animations defined using <c>android.animation.ObjectAnimator</c> or
            <c>android.animation.AnimatorSet</c>.</para>
      <para>Starting from API 25, AnimatedVectorDrawable runs on RenderThread (as opposed to on UI thread for
            earlier APIs). This means animations in AnimatedVectorDrawable can remain smooth even when there
            is heavy workload on the UI thread. Note: If the UI thread is unresponsive, RenderThread may
            continue animating until the UI thread is capable of pushing another frame. Therefore, it is not
            possible to precisely coordinate a RenderThread-enabled AnimatedVectorDrawable with UI thread
            animations. Additionally,
            <c>android.graphics.drawable.Animatable2.AnimationCallback#onAnimationEnd(Drawable)</c> will be
            called the frame after the AnimatedVectorDrawable finishes on the RenderThread.</para>
      <para>AnimatedVectorDrawable can be defined in either three separate XML files,
            or one XML.</para>
      <para>"ThreeXML"&gt;&lt;h3&gt;Define an AnimatedVectorDrawable in three separate XML files&lt;/h3&gt;
            &lt;ul&gt;
            "VDExample"&gt;&lt;li&gt;&lt;h4&gt;XML for the VectorDrawable containing properties to be animated&lt;/h4&gt;</para>
      <para>Animations can be performed on the animatable attributes in
            <c>android.graphics.drawable.VectorDrawable</c>. These attributes will be animated by
            <c>android.animation.ObjectAnimator</c>. The ObjectAnimator's target can be the root element,
            a group element or a path element. The targeted elements need to be named uniquely within
            the same VectorDrawable. Elements without animation do not need to be named.</para>
      <para>Here are all the animatable attributes in <c>android.graphics.drawable.VectorDrawable</c>:
            &lt;table border="2" align="center" cellpadding="5"&gt;
                &lt;thead&gt;
                    &lt;tr&gt;
                        &lt;th&gt;Element Name&lt;/th&gt;
                        &lt;th&gt;Animatable attribute name&lt;/th&gt;
                    &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tr&gt;
                    &lt;td&gt;&amp;lt;vector&amp;gt;&lt;/td&gt;
                    &lt;td&gt;alpha&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td rowspan="7"&gt;&amp;lt;group&amp;gt;&lt;/td&gt;
                    &lt;td&gt;rotation&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;pivotX&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;pivotY&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;scaleX&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;scaleY&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;translateX&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;translateY&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td rowspan="9"&gt;&amp;lt;path&amp;gt;&lt;/td&gt;
                    &lt;td&gt;pathData&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;fillColor&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;strokeColor&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;strokeWidth&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;strokeAlpha&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;fillAlpha&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;trimPathStart&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;trimPathEnd&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;trimPathOffset&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;&amp;lt;clip-path&amp;gt;&lt;/td&gt;
                    &lt;td&gt;pathData&lt;/td&gt;
                &lt;/tr&gt;
            &lt;/table&gt;</para>
      <para>Below is an example of a VectorDrawable defined in vectordrawable.xml. This VectorDrawable is
            referred to by its file name (not including file suffix) in the
            AnimatedVectorDrawable XML example.</para>
      <code lang="text/java">&amp;lt;vector xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
                android:height=&amp;quot;64dp&amp;quot;
                android:width=&amp;quot;64dp&amp;quot;
                android:viewportHeight=&amp;quot;600&amp;quot;
                android:viewportWidth=&amp;quot;600&amp;quot; &amp;gt;
                &amp;lt;group
                    android:name=&amp;quot;rotationGroup&amp;quot;
                    android:pivotX=&amp;quot;300.0&amp;quot;
                    android:pivotY=&amp;quot;300.0&amp;quot;
                    android:rotation=&amp;quot;45.0&amp;quot; &amp;gt;
                    &amp;lt;path
                        android:name=&amp;quot;v&amp;quot;
                        android:fillColor=&amp;quot;#000000&amp;quot;
                        android:pathData=&amp;quot;M300,70 l 0,-70 70,70 0,0 -70,70z&amp;quot; /&amp;gt;
                &amp;lt;/group&amp;gt;
            &amp;lt;/vector&amp;gt;
            </code>
      <para>&lt;/li&gt;
            
            "AVDExample"&gt;&lt;li&gt;&lt;h4&gt;XML for AnimatedVectorDrawable&lt;/h4&gt;</para>
      <para>An AnimatedVectorDrawable element has a VectorDrawable attribute, and one or more target
            element(s). The target element can specify its target by android:name attribute, and link the
            target with the proper ObjectAnimator or AnimatorSet by android:animation attribute.</para>
      <para>The following code sample defines an AnimatedVectorDrawable. Note that the names refer to the
            groups and paths in the VectorDrawable XML above.</para>
      <code lang="text/java">&amp;lt;animated-vector xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
                android:drawable=&amp;quot;@drawable/vectordrawable&amp;quot; &amp;gt;
                &amp;lt;target
                    android:name=&amp;quot;rotationGroup&amp;quot;
                    android:animation=&amp;quot;@animator/rotation&amp;quot; /&amp;gt;
                &amp;lt;target
                    android:name=&amp;quot;v&amp;quot;
                    android:animation=&amp;quot;@animator/path_morph&amp;quot; /&amp;gt;
            &amp;lt;/animated-vector&amp;gt;
            </code>
      <para>&lt;/li&gt;
            
            &lt;li&gt;&lt;h4&gt;XML for Animations defined using ObjectAnimator or AnimatorSet&lt;/h4&gt;</para>
      <para>From the previous example of AnimatedVectorDrawable, two animations
            were used: rotation.xml and path_morph.xml.</para>
      <para>rotation.xml rotates the target group from 0 degree to 360 degrees over 6000ms:</para>
      <code lang="text/java">&amp;lt;objectAnimator
                android:duration=&amp;quot;6000&amp;quot;
                android:propertyName=&amp;quot;rotation&amp;quot;
                android:valueFrom=&amp;quot;0&amp;quot;
                android:valueTo=&amp;quot;360&amp;quot; /&amp;gt;
            </code>
      <para>path_morph.xml morphs the path from one shape into the other. Note that the paths must be
            compatible for morphing. Specifically, the paths must have the same commands, in the same order,
            and must have the same number of parameters for each command. It is recommended to store path
            strings as string resources for reuse.</para>
      <code lang="text/java">&amp;lt;set xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&amp;gt;
                &amp;lt;objectAnimator
                    android:duration=&amp;quot;3000&amp;quot;
                    android:propertyName=&amp;quot;pathData&amp;quot;
                    android:valueFrom=&amp;quot;M300,70 l 0,-70 70,70 0,0 -70,70z&amp;quot;
                    android:valueTo=&amp;quot;M300,70 l 0,-70 70,0  0,140 -70,0 z&amp;quot;
                    android:valueType=&amp;quot;pathType&amp;quot;/&amp;gt;
            &amp;lt;/set&amp;gt;
            </code>
      <para>&lt;/ul&gt;
            "OneXML"&gt;&lt;h3&gt;Define an AnimatedVectorDrawable all in one XML file&lt;/h3&gt;</para>
      <para>Since the AAPT tool supports a new format that bundles several related XML files together, we can
            merge the XML files from the previous examples into one XML file:</para>
      <code lang="text/java">&amp;lt;animated-vector xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
                             xmlns:aapt=&amp;quothttp://schemas.android.com/aapt&amp;quot; &amp;gt;
                &amp;lt;aapt:attr name="android:drawable"&amp;gt;
                    &amp;lt;vector
                        android:height=&amp;quot;64dp&amp;quot;
                        android:width=&amp;quot;64dp&amp;quot;
                        android:viewportHeight=&amp;quot;600&amp;quot;
                        android:viewportWidth=&amp;quot;600&amp;quot; &amp;gt;
                        &amp;lt;group
                            android:name=&amp;quot;rotationGroup&amp;quot;
                            android:pivotX=&amp;quot;300.0&amp;quot;
                            android:pivotY=&amp;quot;300.0&amp;quot;
                            android:rotation=&amp;quot;45.0&amp;quot; &amp;gt;
                            &amp;lt;path
                                android:name=&amp;quot;v&amp;quot;
                                android:fillColor=&amp;quot;#000000&amp;quot;
                                android:pathData=&amp;quot;M300,70 l 0,-70 70,70 0,0 -70,70z&amp;quot; /&amp;gt;
                        &amp;lt;/group&amp;gt;
                    &amp;lt;/vector&amp;gt;
                &amp;lt;/aapt:attr&amp;gt;
            
                &amp;lt;target android:name=&amp;quot;rotationGroup&amp;quot;&amp;gt; *
                    &amp;lt;aapt:attr name="android:animation"&amp;gt;
                        &amp;lt;objectAnimator
                        android:duration=&amp;quot;6000&amp;quot;
                        android:propertyName=&amp;quot;rotation&amp;quot;
                        android:valueFrom=&amp;quot;0&amp;quot;
                        android:valueTo=&amp;quot;360&amp;quot; /&amp;gt;
                    &amp;lt;/aapt:attr&amp;gt;
                &amp;lt;/target&amp;gt;
            
                &amp;lt;target android:name=&amp;quot;v&amp;quot; &amp;gt;
                    &amp;lt;aapt:attr name="android:animation"&amp;gt;
                        &amp;lt;set&amp;gt;
                            &amp;lt;objectAnimator
                                android:duration=&amp;quot;3000&amp;quot;
                                android:propertyName=&amp;quot;pathData&amp;quot;
                                android:valueFrom=&amp;quot;M300,70 l 0,-70 70,70 0,0 -70,70z&amp;quot;
                                android:valueTo=&amp;quot;M300,70 l 0,-70 70,0  0,140 -70,0 z&amp;quot;
                                android:valueType=&amp;quot;pathType&amp;quot;/&amp;gt;
                        &amp;lt;/set&amp;gt;
                    &amp;lt;/aapt:attr&amp;gt;
                 &amp;lt;/target&amp;gt;
            &amp;lt;/animated-vector&amp;gt;
            </code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/drawable/AnimatedVectorDrawable" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimatedVectorDrawable</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimatedVectorDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnimatedVectorDrawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Drawables.AnimatedVectorDrawable : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Drawables.AnimatedVectorDrawable" Usage="new Android.Graphics.Drawables.AnimatedVectorDrawable (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAnimationCallbacks">
      <MemberSignature Language="C#" Value="public virtual void ClearAnimationCallbacks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAnimationCallbacks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.ClearAnimationCallbacks" />
      <MemberSignature Language="F#" Value="abstract member ClearAnimationCallbacks : unit -&gt; unit&#xA;override this.ClearAnimationCallbacks : unit -&gt; unit" Usage="animatedVectorDrawable.ClearAnimationCallbacks " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable2.ClearAnimationCallbacks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearAnimationCallbacks", "()V", "GetClearAnimationCallbacksHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearAnimationCallbacks", "()V", "GetClearAnimationCallbacksHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override void Draw (Android.Graphics.Canvas? canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="override this.Draw : Android.Graphics.Canvas -&gt; unit" Usage="animatedVectorDrawable.Draw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into</param>
        <summary>Draws the AnimatedVectorDrawable into the given canvas.</summary>
        <remarks>
          <para>Draws the AnimatedVectorDrawable into the given canvas.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Calling this method with a software canvas when the
            AnimatedVectorDrawable is being animated on RenderThread (for API 25 and later) may yield
            outdated result, as the UI thread is not guaranteed to be in sync with RenderThread on
            VectorDrawable's property changes during RenderThread animations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimatedVectorDrawable#draw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimatedVectorDrawable.draw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public virtual bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimatedVectorDrawable.IsRunning" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Android.Graphics.Drawables.AnimatedVectorDrawable.IsRunning" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Graphics.Drawables.IAnimatable.IsRunning</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the animation is running.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimatedVectorDrawable.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Drawables.AnimatedVectorDrawable.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public override int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimatedVectorDrawable.Opacity" />
      <MemberSignature Language="F#" Value="member this.Opacity : int" Usage="Android.Graphics.Drawables.AnimatedVectorDrawable.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAnimationCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterAnimationCallback (Android.Graphics.Drawables.Animatable2AnimationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAnimationCallback(class Android.Graphics.Drawables.Animatable2AnimationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.RegisterAnimationCallback(Android.Graphics.Drawables.Animatable2AnimationCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAnimationCallback : Android.Graphics.Drawables.Animatable2AnimationCallback -&gt; unit&#xA;override this.RegisterAnimationCallback : Android.Graphics.Drawables.Animatable2AnimationCallback -&gt; unit" Usage="animatedVectorDrawable.RegisterAnimationCallback callback" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable2.RegisterAnimationCallback(Android.Graphics.Drawables.Animatable2AnimationCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAnimationCallback", "(Landroid/graphics/drawable/Animatable2$AnimationCallback;)V", "GetRegisterAnimationCallback_Landroid_graphics_drawable_Animatable2_AnimationCallback_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAnimationCallback", "(Landroid/graphics/drawable/Animatable2$AnimationCallback;)V", "GetRegisterAnimationCallback_Landroid_graphics_drawable_Animatable2_AnimationCallback_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Graphics.Drawables.Animatable2AnimationCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="animatedVectorDrawable.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the AnimatedVectorDrawable to the start state as specified in the animators.</summary>
        <remarks>
          <para>Resets the AnimatedVectorDrawable to the start state as specified in the animators.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/drawable/AnimatedVectorDrawable#reset()" title="Reference documentation">Java documentation for <code>android.graphics.drawable.AnimatedVectorDrawable.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public override void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.SetAlpha(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.SetAlpha : int -&gt; unit" Usage="animatedVectorDrawable.SetAlpha alpha" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary tool="true">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public override void SetColorFilter (Android.Graphics.ColorFilter? colorFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetColorFilter(class Android.Graphics.ColorFilter colorFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.SetColorFilter(Android.Graphics.ColorFilter)" />
      <MemberSignature Language="F#" Value="override this.SetColorFilter : Android.Graphics.ColorFilter -&gt; unit" Usage="animatedVectorDrawable.SetColorFilter colorFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorFilter" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="colorFilter">The color filter to apply, or <c>null</c> to remove the
            existing color filter
</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="animatedVectorDrawable.Start " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable.Start</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the drawable's animation.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="animatedVectorDrawable.Stop " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable.Stop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "GetStopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "GetStopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the drawable's animation.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimatedVectorDrawable.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Drawables.AnimatedVectorDrawable.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Drawables.AnimatedVectorDrawable.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Drawables.AnimatedVectorDrawable.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAnimationCallback">
      <MemberSignature Language="C#" Value="public virtual bool UnregisterAnimationCallback (Android.Graphics.Drawables.Animatable2AnimationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnregisterAnimationCallback(class Android.Graphics.Drawables.Animatable2AnimationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Drawables.AnimatedVectorDrawable.UnregisterAnimationCallback(Android.Graphics.Drawables.Animatable2AnimationCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAnimationCallback : Android.Graphics.Drawables.Animatable2AnimationCallback -&gt; bool&#xA;override this.UnregisterAnimationCallback : Android.Graphics.Drawables.Animatable2AnimationCallback -&gt; bool" Usage="animatedVectorDrawable.UnregisterAnimationCallback callback" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.IAnimatable2.UnregisterAnimationCallback(Android.Graphics.Drawables.Animatable2AnimationCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAnimationCallback", "(Landroid/graphics/drawable/Animatable2$AnimationCallback;)Z", "GetUnregisterAnimationCallback_Landroid_graphics_drawable_Animatable2_AnimationCallback_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAnimationCallback", "(Landroid/graphics/drawable/Animatable2$AnimationCallback;)Z", "GetUnregisterAnimationCallback_Landroid_graphics_drawable_Animatable2_AnimationCallback_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Graphics.Drawables.Animatable2AnimationCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
