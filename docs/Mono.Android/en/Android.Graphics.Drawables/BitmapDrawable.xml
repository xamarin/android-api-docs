<Type Name="BitmapDrawable" FullName="Android.Graphics.Drawables.BitmapDrawable">
  <TypeSignature Language="C#" Value="public class BitmapDrawable : Android.Graphics.Drawables.Drawable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BitmapDrawable extends Android.Graphics.Drawables.Drawable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Graphics.Drawables.Drawable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/BitmapDrawable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable that wraps a bitmap and can be tiled, stretched, or aligned.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A Drawable that wraps a bitmap and can be tiled, stretched, or aligned. You can create a
 BitmapDrawable from a file path, an input stream, through XML inflation, or from
 a <c><see cref="T:Android.Graphics.Bitmap" /></c> object.
 </para>
      <para tool="javadoc-to-mdoc">It can be defined in an XML file with the <c>&lt;bitmap&gt;</c> element.  For more
 information, see the guide to <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/drawable-resource.html">Drawable Resources</a></format>.</para>
      <para tool="javadoc-to-mdoc">
 Also see the <c><see cref="T:Android.Graphics.Bitmap" /></c> class, which handles the management and
 transformation of raw bitmap graphics, and should be used when drawing to a
 <c><see cref="T:Android.Graphics.Canvas" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create an empty drawable, not dealing with density.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an empty drawable, not dealing with density.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (Android.Content.Res.Resources res);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Res.Resources res) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/res/Resources;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <summary>Create an empty drawable, setting initial target density based on
 the display metrics of the resources.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an empty drawable, setting initial target density based on
 the display metrics of the resources.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(android.content.res.Resources)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <summary>Create drawable from a bitmap, not dealing with density.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create drawable from a bitmap, not dealing with density.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream is) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>Create a drawable by decoding a bitmap from the given input stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable by decoding a bitmap from the given input stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (string filepath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filepath">To be added.</param>
        <summary>Create a drawable by opening a given file path and decoding the bitmap.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable by opening a given file path and decoding the bitmap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (Android.Content.Res.Resources res, Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Res.Resources res, class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="bitmap">To be added.</param>
        <summary>Create drawable from a bitmap, setting initial target density based on
 the display metrics of the resources.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create drawable from a bitmap, setting initial target density based on
 the display metrics of the resources.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(android.content.res.Resources, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (Android.Content.Res.Resources res, System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Res.Resources res, class System.IO.Stream is) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/res/Resources;Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="is">To be added.</param>
        <summary>Create a drawable by decoding a bitmap from the given input stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable by decoding a bitmap from the given input stream.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(android.content.res.Resources, java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapDrawable (Android.Content.Res.Resources res, string filepath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Res.Resources res, string filepath) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/res/Resources;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="filepath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="filepath">To be added.</param>
        <summary>Create a drawable by opening a given file path and decoding the bitmap.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a drawable by opening a given file path and decoding the bitmap.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#BitmapDrawable(android.content.res.Resources, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitmapDrawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap Bitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap Bitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap used by this drawable to render.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the bitmap used by this drawable to render. May be null.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getBitmap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into
</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#draw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConstantState">
      <MemberSignature Language="C#" Value="public override sealed Android.Graphics.Drawables.Drawable.ConstantState GetConstantState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable/ConstantState GetConstantState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ConstantState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a <c><see cref="!:NoType:android/graphics/drawable/Drawable$ConstantState;Href=../../../../reference/android/graphics/drawable/Drawable.ConstantState.html" /></c> instance that holds the shared state of this Drawable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a <c><see cref="!:NoType:android/graphics/drawable/Drawable$ConstantState;Href=../../../../reference/android/graphics/drawable/Drawable.ConstantState.html" /></c> instance that holds the shared state of this Drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getConstantState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Gravity">
      <MemberSignature Language="C#" Value="public virtual Android.Views.GravityFlags Gravity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.GravityFlags Gravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGravity", "()I", "GetGetGravityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setGravity", "(I)V", "GetSetGravity_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.GravityFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the gravity used to position/stretch the bitmap within its bounds.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getGravity()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the gravity used to position/stretch the bitmap within its bounds.
 See android.view.Gravity</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setGravity(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the gravity used to position/stretch the bitmap within its bounds.
        See android.view.Gravity</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasAntiAlias">
      <MemberSignature Language="C#" Value="public virtual bool HasAntiAlias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAntiAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasAntiAlias", "()Z", "GetHasAntiAliasHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether anti-aliasing is enabled for this drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether anti-aliasing is enabled for this drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#hasAntiAlias()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.Graphics.Drawables.BitmapDrawable.SetAntiAlias(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="HasMipMap">
      <MemberSignature Language="C#" Value="public virtual bool HasMipMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMipMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasMipMap", "()Z", "GetHasMipMapHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the mipmap hint is enabled on this drawable's bitmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the mipmap hint is enabled on this drawable's bitmap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#hasMipMap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.Graphics.Drawables.BitmapDrawable.SetMipMap(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAutoMirrored">
      <MemberSignature Language="C#" Value="public bool IsAutoMirrored { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
 right-to-left.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
 right-to-left. See <c><see cref="T:Android.Util.LayoutDirection" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#isAutoMirrored()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public override int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the opacity/transparency of this Drawable.  The returned value is
 one of the abstract format constants in
 <c><see cref="T:Android.Graphics.PixelFormat" /></c>:
 <c><see cref="F:Android.Graphics.Format.Unknown" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Translucent" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Graphics.Format.Transparent" tool="ReplaceLinkValue" /></c>, or
 <c><see cref="F:Android.Graphics.Format.Opaque" tool="ReplaceLinkValue" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">An OPAQUE drawable is one that draws all all content within its bounds, completely
 covering anything behind the drawable. A TRANSPARENT drawable is one that draws nothing
 within its bounds, allowing everything behind it to show through. A TRANSLUCENT drawable
 is a drawable in any other state, where the drawable will draw some, but not all,
 of the content within its bounds and at least some content behind the drawable will
 be visible. If the visibility of the drawable's contents cannot be determined, the
 safest/best return value is TRANSLUCENT.

 </para>
          <para tool="javadoc-to-mdoc">Generally a Drawable should be as conservative as possible with the
 value it returns.  For example, if it contains multiple child drawables
 and only shows one of them at a time, if only one of the children is
 TRANSLUCENT and the others are OPAQUE then TRANSLUCENT should be
 returned.  You can use the method <c><see cref="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32,System.Int32)" /></c> to perform a
 standard reduction of two opacities to the appropriate single output.

 </para>
          <para tool="javadoc-to-mdoc">Note that the returned value does not necessarily take into account a
 custom alpha or color filter that has been applied by the client through
 the <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c> or <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> methods. Some subclasses,
 such as <c><see cref="T:Android.Graphics.Drawables.BitmapDrawable" /></c>, <c><see cref="T:Android.Graphics.Drawables.ColorDrawable" /></c>, and <c><see cref="T:Android.Graphics.Drawables.GradientDrawable" /></c>,
 do account for the value of <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c>, but the general behavior is dependent
 upon the implementation of the subclass.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getOpacity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public Android.Graphics.Paint Paint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint Paint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaint", "()Landroid/graphics/Paint;", "GetGetPaintHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the paint used to render this drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the paint used to render this drawable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getPaint()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public override void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary tool="true">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setAlpha(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAntiAlias">
      <MemberSignature Language="C#" Value="public virtual void SetAntiAlias (bool aa);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAntiAlias(bool aa) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAntiAlias", "(Z)V", "GetSetAntiAlias_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aa" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="aa">True if the bitmap should be anti-aliased, false otherwise.</param>
        <summary>Enables or disables anti-aliasing for this drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enables or disables anti-aliasing for this drawable. Anti-aliasing affects
 the edges of the bitmap only so it applies only when the drawable is rotated.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setAntiAlias(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.BitmapDrawable.HasAntiAlias" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public override void SetColorFilter (Android.Graphics.ColorFilter cf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetColorFilter(class Android.Graphics.ColorFilter cf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cf" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="cf">the color filter to apply, or <c>null</c> to remove the
            existing color filter
</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an optional color filter for the drawable.
 </para>
          <para tool="javadoc-to-mdoc">
 If a Drawable has a ColorFilter, each output pixel of the Drawable's
 drawing contents will be modified by the color filter before it is
 blended onto the render target of a Canvas.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass <c>null</c> to remove any existing color filter.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Setting a non-<c>null</c> color
 filter disables <c><see cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setColorFilter(android.graphics.ColorFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMipMap">
      <MemberSignature Language="C#" Value="public virtual void SetMipMap (bool mipMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMipMap(bool mipMap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMipMap", "(Z)V", "GetSetMipMap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mipMap" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mipMap">True if the bitmap should use mipmaps, false otherwise.</param>
        <summary>Enables or disables the mipmap hint for this drawable's bitmap.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enables or disables the mipmap hint for this drawable's bitmap.
 See <c><see cref="P:Android.Graphics.Bitmap.HasMipMap" /></c> for more information.

 If the bitmap is null calling this method has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setMipMap(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="P:Android.Graphics.Drawables.BitmapDrawable.HasMipMap" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetDensity">
      <MemberSignature Language="C#" Value="public virtual void SetTargetDensity (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTargetDensity(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTargetDensity", "(Landroid/graphics/Canvas;)V", "GetSetTargetDensity_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The Canvas from which the density scale must be obtained.</param>
        <summary tool="true">Set the density scale at which this drawable will be rendered.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the density scale at which this drawable will be rendered. This
 method assumes the drawable will be rendered at the same density as the
 specified canvas.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setTargetDensity(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetDensity">
      <MemberSignature Language="C#" Value="public virtual void SetTargetDensity (Android.Util.DisplayMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTargetDensity(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTargetDensity", "(Landroid/util/DisplayMetrics;)V", "GetSetTargetDensity_Landroid_util_DisplayMetrics_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">The DisplayMetrics indicating the density scale for this drawable.</param>
        <summary>Set the density scale at which this drawable will be rendered.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the density scale at which this drawable will be rendered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setTargetDensity(android.util.DisplayMetrics)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetDensity">
      <MemberSignature Language="C#" Value="public virtual void SetTargetDensity (int density);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTargetDensity(int32 density) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTargetDensity", "(I)V", "GetSetTargetDensity_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="density" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="density">The density scale for this drawable.</param>
        <summary>Set the density at which this drawable will be rendered.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the density at which this drawable will be rendered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setTargetDensity(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
      </Docs>
    </Member>
    <Member MemberName="SetTileModeXY">
      <MemberSignature Language="C#" Value="public virtual void SetTileModeXY (Android.Graphics.Shader.TileMode xmode, Android.Graphics.Shader.TileMode ymode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTileModeXY(class Android.Graphics.Shader/TileMode xmode, class Android.Graphics.Shader/TileMode ymode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTileModeXY", "(Landroid/graphics/Shader$TileMode;Landroid/graphics/Shader$TileMode;)V", "GetSetTileModeXY_Landroid_graphics_Shader_TileMode_Landroid_graphics_Shader_TileMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmode" Type="Android.Graphics.Shader+TileMode" />
        <Parameter Name="ymode" Type="Android.Graphics.Shader+TileMode" />
      </Parameters>
      <Docs>
        <param name="xmode">The X repeat mode for this drawable.</param>
        <param name="ymode">The Y repeat mode for this drawable.</param>
        <summary>Sets the repeat behavior of this drawable on both axis.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the repeat behavior of this drawable on both axis. By default, the drawable
 does not repeat its bitmap. Using <c><see cref="!:NoType:android/graphics/Shader$TileMode;Href=../../../../reference/android/graphics/Shader.TileMode.html#REPEAT" /></c> or
 <c><see cref="!:NoType:android/graphics/Shader$TileMode;Href=../../../../reference/android/graphics/Shader.TileMode.html#MIRROR" /></c> the bitmap can be repeated (or tiled)
 if the bitmap is smaller than this drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setTileModeXY(android.graphics.Shader.TileMode, android.graphics.Shader.TileMode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.BitmapDrawable.TileModeX" />
        <altmember cref="P:Android.Graphics.Drawables.BitmapDrawable.TileModeY" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TileModeX">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Shader.TileMode TileModeX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Shader/TileMode TileModeX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTileModeX", "()Landroid/graphics/Shader$TileMode;", "GetGetTileModeXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTileModeX", "(Landroid/graphics/Shader$TileMode;)V", "GetSetTileModeX_Landroid_graphics_Shader_TileMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Shader+TileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the repeat behavior of this drawable on the X axis.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getTileModeX()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Indicates the repeat behavior of this drawable on the X axis.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setTileModeX(android.graphics.Shader.TileMode)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the repeat behavior of this drawable on the X axis. By default, the drawable
 does not repeat its bitmap. Using <c><see cref="!:NoType:android/graphics/Shader$TileMode;Href=../../../../reference/android/graphics/Shader.TileMode.html#REPEAT" /></c> or
 <c><see cref="!:NoType:android/graphics/Shader$TileMode;Href=../../../../reference/android/graphics/Shader.TileMode.html#MIRROR" /></c> the bitmap can be repeated (or tiled)
 if the bitmap is smaller than this drawable.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.BitmapDrawable.TileModeY" />
        <altmember cref="M:Android.Graphics.Drawables.BitmapDrawable.SetTileModeXY(.TileMode, .TileMode)" />
      </Docs>
    </Member>
    <Member MemberName="TileModeY">
      <MemberSignature Language="C#" Value="public Android.Graphics.Shader.TileMode TileModeY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Shader/TileMode TileModeY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTileModeY", "()Landroid/graphics/Shader$TileMode;", "GetGetTileModeYHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTileModeY", "(Landroid/graphics/Shader$TileMode;)V", "GetSetTileModeY_Landroid_graphics_Shader_TileMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Shader+TileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the repeat behavior of this drawable on the Y axis.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#getTileModeY()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Indicates the repeat behavior of this drawable on the Y axis.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html#setTileModeY(android.graphics.Shader.TileMode)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the repeat behavior of this drawable on the Y axis. By default, the drawable
 does not repeat its bitmap. Using <c><see cref="!:NoType:android/graphics/Shader$TileMode;Href=../../../../reference/android/graphics/Shader.TileMode.html#REPEAT" /></c> or
 <c><see cref="!:NoType:android/graphics/Shader$TileMode;Href=../../../../reference/android/graphics/Shader.TileMode.html#MIRROR" /></c> the bitmap can be repeated (or tiled)
 if the bitmap is smaller than this drawable.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.BitmapDrawable.TileModeX" />
        <altmember cref="M:Android.Graphics.Drawables.BitmapDrawable.SetTileModeXY(.TileMode, .TileMode)" />
      </Docs>
    </Member>
  </Members>
</Type>
