<Type Name="Drawable+ICallback" FullName="Android.Graphics.Drawables.Drawable+ICallback">
  <TypeSignature Language="C#" Value="public interface Drawable.ICallback : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract Drawable/ICallback implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/Drawable$Callback", "", "Android.Graphics.Drawables.Drawable/ICallbackInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implement this interface if you want to create an animated drawable that
 extends <c><see cref="T:Android.Graphics.Drawables.Drawable" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Implement this interface if you want to create an animated drawable that
 extends <c><see cref="T:Android.Graphics.Drawables.Drawable" /></c>.
 Upon retrieving a drawable, use
 <c><see cref="M:Android.Graphics.Drawables.Drawable.SetCallback(Android.Graphics.Drawables.Drawable.ICallback)" /></c>
 to supply your implementation of the interface to the drawable; it uses
 this interface to schedule and execute animation changes.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="InvalidateDrawable">
      <MemberSignature Language="C#" Value="public void InvalidateDrawable (Android.Graphics.Drawables.Drawable who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateDrawable(class Android.Graphics.Drawables.Drawable who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler:Android.Graphics.Drawables.Drawable/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="who">The drawable that is requesting the update.
</param>
        <summary>Called when the drawable needs to be redrawn.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the drawable needs to be redrawn.  A view at this point
 should invalidate itself (or at least the part of itself where the
 drawable appears).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#invalidateDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="C#" Value="public void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler:Android.Graphics.Drawables.Drawable/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">The drawable being scheduled.</param>
        <param name="what">The action to execute.</param>
        <param name="when">The time (in milliseconds) to run.  The timebase is
             <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c></param>
        <summary>A Drawable can call this to schedule the next frame of its
 animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A Drawable can call this to schedule the next frame of its
 animation.  An implementation can generally simply call
 <c><see cref="M:Android.OS.Handler.PostAtTime(Java.Lang.IRunnable,Java.Lang.Object,Java.Lang.Object)" /></c> with
 the parameters <format type="text/html"><var>(what, who, when)</var></format> to perform the
 scheduling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="C#" Value="public void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler:Android.Graphics.Drawables.Drawable/ICallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="who">The drawable being unscheduled.</param>
        <param name="what">The action being unscheduled.
</param>
        <summary>A Drawable can call this to unschedule an action previously
 scheduled with <c><see cref="M:Android.Graphics.Drawables.Drawable.ICallback.ScheduleDrawable(Android.Graphics.Drawables.Drawable,Java.Lang.IRunnable,Java.Lang.IRunnable)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A Drawable can call this to unschedule an action previously
 scheduled with <c><see cref="M:Android.Graphics.Drawables.Drawable.ICallback.ScheduleDrawable(Android.Graphics.Drawables.Drawable,Java.Lang.IRunnable,Java.Lang.IRunnable)" /></c>.  An implementation can
 generally simply call
 <c><see cref="M:Android.OS.Handler.RemoveCallbacks(Java.Lang.IRunnable,Java.Lang.Object)" /></c> with
 the parameters <format type="text/html"><var>(what, who)</var></format> to unschedule the drawable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
