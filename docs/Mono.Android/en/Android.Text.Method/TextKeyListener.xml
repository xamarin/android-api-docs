<Type Name="TextKeyListener" FullName="Android.Text.Method.TextKeyListener">
  <TypeSignature Language="F#" Value="type TextKeyListener = class&#xA;    inherit BaseKeyListener&#xA;    interface ISpanWatcher&#xA;    interface INoCopySpan&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public class TextKeyListener : Android.Text.Method.BaseKeyListener, Android.Text.ISpanWatcher, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextKeyListener extends Android.Text.Method.BaseKeyListener implements class Android.Runtime.IJavaObject, class Android.Text.INoCopySpan, class Android.Text.ISpanWatcher, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.Method.TextKeyListener" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.Method.BaseKeyListener</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.INoCopySpan</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.ISpanWatcher</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/method/TextKeyListener", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This is the key listener for typing normal text.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/method/TextKeyListener" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.Method.TextKeyListener : Android.Text.Method.TextKeyListener.Capitalize * bool -&gt; Android.Text.Method.TextKeyListener" Usage="new Android.Text.Method.TextKeyListener (cap, autotext)" />
      <MemberSignature Language="C#" Value="public TextKeyListener (Android.Text.Method.TextKeyListener.Capitalize? cap, bool autotext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Text.Method.TextKeyListener/Capitalize cap, bool autotext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.#ctor(Android.Text.Method.TextKeyListener.Capitalize,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/text/method/TextKeyListener$Capitalize;Z)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cap" Type="Android.Text.Method.TextKeyListener+Capitalize" />
        <Parameter Name="autotext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cap">when, if ever, to automatically capitalize.</param>
        <param name="autotext">whether to automatically do spelling corrections.</param>
        <summary>Creates a new TextKeyListener with the specified capitalization
            and correction properties.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TextKeyListener#TextKeyListener(android.text.method.Capitalize,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener.TextKeyListener(android.text.method.Capitalize, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.Method.TextKeyListener : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.Method.TextKeyListener" Usage="new Android.Text.Method.TextKeyListener (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected TextKeyListener (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="F#" Value="static member Clear : Android.Text.IEditable -&gt; unit" Usage="Android.Text.Method.TextKeyListener.Clear e" />
      <MemberSignature Language="C#" Value="public static void Clear (Android.Text.IEditable? e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(class Android.Text.IEditable e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.Clear(Android.Text.IEditable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "(Landroid/text/Editable;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Text.IEditable" />
      </Parameters>
      <Docs>
        <param name="e">the buffer whose text and state are to be cleared.</param>
        <summary>Clear all the input state (autotext, autocap, multitap, undo)
            from the specified Editable, going beyond Editable.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TextKeyListener#clear(android.text.Editable)" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener.clear(android.text.Editable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="F#" Value="static member GetInstance : bool * Android.Text.Method.TextKeyListener.Capitalize -&gt; Android.Text.Method.TextKeyListener" Usage="Android.Text.Method.TextKeyListener.GetInstance (autotext, cap)" />
      <MemberSignature Language="C#" Value="public static Android.Text.Method.TextKeyListener? GetInstance (bool autotext, Android.Text.Method.TextKeyListener.Capitalize? cap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.Method.TextKeyListener GetInstance(bool autotext, class Android.Text.Method.TextKeyListener/Capitalize cap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.GetInstance(System.Boolean,Android.Text.Method.TextKeyListener.Capitalize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(ZLandroid/text/method/TextKeyListener$Capitalize;)Landroid/text/method/TextKeyListener;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.TextKeyListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autotext" Type="System.Boolean" />
        <Parameter Name="cap" Type="Android.Text.Method.TextKeyListener+Capitalize" />
      </Parameters>
      <Docs>
        <param name="autotext">whether to automatically do spelling corrections.
</param>
        <param name="cap">when, if ever, to automatically capitalize.</param>
        <summary>Returns a new or existing instance with no automatic capitalization
            or correction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TextKeyListener#getInstance()" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="F#" Value="member this.InputType : Android.Text.InputTypes" Usage="Android.Text.Method.TextKeyListener.InputType" />
      <MemberSignature Language="C#" Value="public override Android.Text.InputTypes InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.InputTypes InputType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Method.TextKeyListener.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputType", "()I", "GetGetInputTypeHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.InputTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="F#" Value="member this.Instance : Android.Text.Method.TextKeyListener" Usage="Android.Text.Method.TextKeyListener.Instance" />
      <MemberSignature Language="C#" Value="public static Android.Text.Method.TextKeyListener? Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Method.TextKeyListener Instance" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Method.TextKeyListener.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstance", "()Landroid/text/method/TextKeyListener;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.TextKeyListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new or existing instance with no automatic capitalization
            or correction.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TextKeyListener#getInstance()" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.Method.TextKeyListener.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Method.TextKeyListener.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSpanAdded">
      <MemberSignature Language="F#" Value="abstract member OnSpanAdded : Android.Text.ISpannable * Java.Lang.Object * int * int -&gt; unit&#xA;override this.OnSpanAdded : Android.Text.ISpannable * Java.Lang.Object * int * int -&gt; unit" Usage="textKeyListener.OnSpanAdded (s, what, start, end)" />
      <MemberSignature Language="C#" Value="public virtual void OnSpanAdded (Android.Text.ISpannable? s, Java.Lang.Object? what, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSpanAdded(class Android.Text.ISpannable s, class Java.Lang.Object what, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.OnSpanAdded(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanWatcher.OnSpanAdded(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSpanAdded", "(Landroid/text/Spannable;Ljava/lang/Object;II)V", "GetOnSpanAdded_Landroid_text_Spannable_Ljava_lang_Object_IIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Text.ISpannable" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="what">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>This method is called to notify you that the specified object
 has been attached to the specified range of the text.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSpanChanged">
      <MemberSignature Language="F#" Value="abstract member OnSpanChanged : Android.Text.ISpannable * Java.Lang.Object * int * int * int * int -&gt; unit&#xA;override this.OnSpanChanged : Android.Text.ISpannable * Java.Lang.Object * int * int * int * int -&gt; unit" Usage="textKeyListener.OnSpanChanged (s, what, start, end, st, en)" />
      <MemberSignature Language="C#" Value="public virtual void OnSpanChanged (Android.Text.ISpannable? s, Java.Lang.Object? what, int start, int end, int st, int en);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSpanChanged(class Android.Text.ISpannable s, class Java.Lang.Object what, int32 start, int32 end, int32 st, int32 en) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.OnSpanChanged(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanWatcher.OnSpanChanged(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSpanChanged", "(Landroid/text/Spannable;Ljava/lang/Object;IIII)V", "GetOnSpanChanged_Landroid_text_Spannable_Ljava_lang_Object_IIIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Text.ISpannable" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="st" Type="System.Int32" />
        <Parameter Name="en" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="what">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="st">To be added.</param>
        <param name="en">To be added.</param>
        <summary>This method is called to notify you that the specified object
 has been relocated from the range <c>ostart&amp;hellip;oend</c>
 to the new range <c>nstart&amp;hellip;nend</c> of the text.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSpanRemoved">
      <MemberSignature Language="F#" Value="abstract member OnSpanRemoved : Android.Text.ISpannable * Java.Lang.Object * int * int -&gt; unit&#xA;override this.OnSpanRemoved : Android.Text.ISpannable * Java.Lang.Object * int * int -&gt; unit" Usage="textKeyListener.OnSpanRemoved (s, what, start, end)" />
      <MemberSignature Language="C#" Value="public virtual void OnSpanRemoved (Android.Text.ISpannable? s, Java.Lang.Object? what, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSpanRemoved(class Android.Text.ISpannable s, class Java.Lang.Object what, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.OnSpanRemoved(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanWatcher.OnSpanRemoved(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSpanRemoved", "(Landroid/text/Spannable;Ljava/lang/Object;II)V", "GetOnSpanRemoved_Landroid_text_Spannable_Ljava_lang_Object_IIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Text.ISpannable" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="what">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>This method is called to notify you that the specified object
 has been detached from the specified range of the text.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="textKeyListener.Release " />
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.Release" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShouldCap">
      <MemberSignature Language="F#" Value="static member ShouldCap : Android.Text.Method.TextKeyListener.Capitalize * Java.Lang.ICharSequence * int -&gt; bool" Usage="Android.Text.Method.TextKeyListener.ShouldCap (cap, cs, off)" />
      <MemberSignature Language="C#" Value="public static bool ShouldCap (Android.Text.Method.TextKeyListener.Capitalize? cap, Java.Lang.ICharSequence? cs, int off);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCap(class Android.Text.Method.TextKeyListener/Capitalize cap, class Java.Lang.ICharSequence cs, int32 off) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.ShouldCap(Android.Text.Method.TextKeyListener.Capitalize,Java.Lang.ICharSequence,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldCap", "(Landroid/text/method/TextKeyListener$Capitalize;Ljava/lang/CharSequence;I)Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cap" Type="Android.Text.Method.TextKeyListener+Capitalize" />
        <Parameter Name="cs" Type="Java.Lang.ICharSequence" />
        <Parameter Name="off" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cap">the capitalization rules to consider.</param>
        <param name="cs">the text in which an insertion is being made.</param>
        <param name="off">the offset into that text where the insertion is being made.</param>
        <summary>Returns whether it makes sense to automatically capitalize at the
            specified position in the specified text, with the specified rules.</summary>
        <returns>whether the character being inserted should be capitalized.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TextKeyListener#shouldCap(android.text.method.Capitalize,%20java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener.shouldCap(android.text.method.Capitalize, java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShouldCap">
      <MemberSignature Language="F#" Value="static member ShouldCap : Android.Text.Method.TextKeyListener.Capitalize * string * int -&gt; bool" Usage="Android.Text.Method.TextKeyListener.ShouldCap (cap, cs, off)" />
      <MemberSignature Language="C#" Value="public static bool ShouldCap (Android.Text.Method.TextKeyListener.Capitalize? cap, string? cs, int off);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCap(class Android.Text.Method.TextKeyListener/Capitalize cap, string cs, int32 off) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.TextKeyListener.ShouldCap(Android.Text.Method.TextKeyListener.Capitalize,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cap" Type="Android.Text.Method.TextKeyListener+Capitalize" />
        <Parameter Name="cs" Type="System.String" />
        <Parameter Name="off" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cap">the capitalization rules to consider.</param>
        <param name="cs">the text in which an insertion is being made.</param>
        <param name="off">the offset into that text where the insertion is being made.</param>
        <summary>Returns whether it makes sense to automatically capitalize at the
            specified position in the specified text, with the specified rules.</summary>
        <returns>whether the character being inserted should be capitalized.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TextKeyListener#shouldCap(android.text.method.Capitalize,%20java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.text.method.TextKeyListener.shouldCap(android.text.method.Capitalize, java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.Method.TextKeyListener.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Method.TextKeyListener.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.Method.TextKeyListener.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Method.TextKeyListener.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
