<Type Name="PasswordTransformationMethod" FullName="Android.Text.Method.PasswordTransformationMethod">
  <TypeSignature Language="C#" Value="public class PasswordTransformationMethod : Java.Lang.Object, Android.Text.Method.ITransformationMethod, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasswordTransformationMethod extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Text.Method.ITransformationMethod, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Text.Method.ITransformationMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/method/PasswordTransformationMethod", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <format type="text/html">
        <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html" target="_blank">[Android Documentation]</a>
      </format>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordTransformationMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#PasswordTransformationMethod()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PasswordTransformationMethod (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterTextChanged">
      <MemberSignature Language="C#" Value="public virtual void AfterTextChanged (Android.Text.IEditable s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterTextChanged(class Android.Text.IEditable s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("afterTextChanged", "(Landroid/text/Editable;)V", "GetAfterTextChanged_Landroid_text_Editable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Text.IEditable" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>This method is called to notify you that, somewhere within
 <c>s</c>, the text has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called to notify you that, somewhere within
 <c>s</c>, the text has been changed.
 It is legitimate to make further changes to <c>s</c> from
 this callback, but be careful not to get yourself into an infinite
 loop, because any changes you make will cause this method to be
 called again recursively.
 (You are not told where the change took place because other
 afterTextChanged() methods may already have made other changes
 and invalidated the offsets.  But if you need to know here,
 you can use <c><see cref="M:Android.Text.ISpannable.SetSpan(Java.Lang.Object,System.Int32,System.Int32,System.Int32)" /></c> in <c><see cref="M:Android.Text.ITextWatcher.OnTextChanged(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32)" /></c>
 to mark your place and then look up from here where the span
 ended up.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#afterTextChanged(android.text.Editable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BeforeTextChanged">
      <MemberSignature Language="C#" Value="public virtual void BeforeTextChanged (Java.Lang.ICharSequence s, int start, int count, int after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeTextChanged(class Java.Lang.ICharSequence s, int32 start, int32 count, int32 after) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beforeTextChanged", "(Ljava/lang/CharSequence;III)V", "GetBeforeTextChanged_Ljava_lang_CharSequence_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="after" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="start">To be added.</param>
        <param name="count">To be added.</param>
        <param name="after">To be added.</param>
        <summary>This method is called to notify you that, within <c>s</c>,
 the <c>count</c> characters beginning at <c>start</c>
 are about to be replaced by new text with length <c>after</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called to notify you that, within <c>s</c>,
 the <c>count</c> characters beginning at <c>start</c>
 are about to be replaced by new text with length <c>after</c>.
 It is an error to attempt to make changes to <c>s</c> from
 this callback.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#beforeTextChanged(java.lang.CharSequence, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BeforeTextChanged">
      <MemberSignature Language="C#" Value="public void BeforeTextChanged (string s, int start, int count, int after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeforeTextChanged(string s, int32 start, int32 count, int32 after) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="after" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="start">To be added.</param>
        <param name="count">To be added.</param>
        <param name="after">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformation">
      <MemberSignature Language="C#" Value="public string GetTransformation (string source, Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTransformation(string source, class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformationFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetTransformationFormatted (Java.Lang.ICharSequence source, Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTransformationFormatted(class Java.Lang.ICharSequence source, class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransformation", "(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;", "GetGetTransformation_Ljava_lang_CharSequence_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="view">To be added.</param>
        <summary>Returns a CharSequence that is a transformation of the source text --
 for example, replacing each character with a dot in a password field.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a CharSequence that is a transformation of the source text --
 for example, replacing each character with a dot in a password field.
 Beware that the returned text must be exactly the same length as
 the source text, and that if the source text is Editable, the returned
 text must mirror it dynamically instead of doing a one-time copy.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#getTransformation(java.lang.CharSequence, android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Android.Text.Method.PasswordTransformationMethod Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Method.PasswordTransformationMethod Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInstance", "()Landroid/text/method/PasswordTransformationMethod;", "GetGetInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Method.PasswordTransformationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#getInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void OnFocusChanged (Android.Views.View view, Java.Lang.ICharSequence sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFocusChanged(class Android.Views.View view, class Java.Lang.ICharSequence sourceText, bool focused, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFocusChanged", "(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_Landroid_view_View_Ljava_lang_CharSequence_ZILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="sourceText" Type="Java.Lang.ICharSequence" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection" />
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="sourceText">To be added.</param>
        <param name="focused">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="previouslyFocusedRect">To be added.</param>
        <summary>This method is called when the TextView that uses this
 TransformationMethod gains or loses focus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called when the TextView that uses this
 TransformationMethod gains or loses focus.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="C#" Value="public void OnFocusChanged (Android.Views.View view, string sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnFocusChanged(class Android.Views.View view, string sourceText, bool focused, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="sourceText" Type="System.String" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection" />
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="sourceText">To be added.</param>
        <param name="focused">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="previouslyFocusedRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="public virtual void OnTextChanged (Java.Lang.ICharSequence s, int start, int before, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTextChanged(class Java.Lang.ICharSequence s, int32 start, int32 before, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTextChanged", "(Ljava/lang/CharSequence;III)V", "GetOnTextChanged_Ljava_lang_CharSequence_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="before" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="start">To be added.</param>
        <param name="before">To be added.</param>
        <param name="count">To be added.</param>
        <summary>This method is called to notify you that, within <c>s</c>,
 the <c>count</c> characters beginning at <c>start</c>
 have just replaced old text that had length <c>before</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called to notify you that, within <c>s</c>,
 the <c>count</c> characters beginning at <c>start</c>
 have just replaced old text that had length <c>before</c>.
 It is an error to attempt to make changes to <c>s</c> from
 this callback.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html#onTextChanged(java.lang.CharSequence, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="public void OnTextChanged (string s, int start, int before, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnTextChanged(string s, int32 start, int32 before, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="before" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="start">To be added.</param>
        <param name="before">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
