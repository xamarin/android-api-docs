<Type Name="BaseKeyListener" FullName="Android.Text.Method.BaseKeyListener">
  <TypeSignature Language="C#" Value="public abstract class BaseKeyListener : Android.Text.Method.MetaKeyKeyListener, Android.Text.Method.IKeyListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseKeyListener extends Android.Text.Method.MetaKeyKeyListener implements class Android.Runtime.IJavaObject, class Android.Text.Method.IKeyListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.Method.MetaKeyKeyListener</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Text.Method.IKeyListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/method/BaseKeyListener", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Abstract base class for key listeners.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Abstract base class for key listeners.

 Provides a basic foundation for entering and editing text.
 Subclasses should override <c><see cref="!:Android.Text.Method.BaseKeyListener.onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)" /></c> and <c><see cref="M:Android.Text.Method.MetaKeyKeyListener.OnKeyUp(Android.Views.View,Android.Text.IEditable,Android.Text.IEditable,Android.Text.IEditable)" /></c> to insert
 characters as keys are pressed.
 </para>
      <para tool="javadoc-to-mdoc">
 As for all implementations of <c><see cref="T:Android.Text.Method.IKeyListener" /></c>, this class is only concerned
 with hardware keyboards.  Software input methods have no obligation to trigger
 the methods in this class.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/method/BaseKeyListener.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseKeyListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/BaseKeyListener.html#BaseKeyListener()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseKeyListener (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public virtual bool Backspace (Android.Views.View view, Android.Text.IEditable content, Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Backspace(class Android.Views.View view, class Android.Text.IEditable content, valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("backspace", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z", "GetBackspace_Landroid_view_View_Landroid_text_Editable_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="content" Type="Android.Text.IEditable" />
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="content">To be added.</param>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Performs the action that happens when you press the <c><see cref="!:Android.Views.KeyEvent.KEYCODE_DEL" /></c> key in
 a <c><see cref="T:Android.Widget.TextView" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs the action that happens when you press the <c><see cref="!:Android.Views.KeyEvent.KEYCODE_DEL" /></c> key in
 a <c><see cref="T:Android.Widget.TextView" /></c>.  If there is a selection, deletes the selection; otherwise,
 deletes the character before the cursor, if any; ALT+DEL deletes everything on
 the line the cursor is on.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/BaseKeyListener.html#backspace(android.view.View, android.text.Editable, int, android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForwardDelete">
      <MemberSignature Language="C#" Value="public virtual bool ForwardDelete (Android.Views.View view, Android.Text.IEditable content, Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ForwardDelete(class Android.Views.View view, class Android.Text.IEditable content, valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forwardDelete", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z", "GetForwardDelete_Landroid_view_View_Landroid_text_Editable_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="content" Type="Android.Text.IEditable" />
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="content">To be added.</param>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Performs the action that happens when you press the <c><see cref="!:Android.Views.KeyEvent.KEYCODE_FORWARD_DEL" /></c>
 key in a <c><see cref="T:Android.Widget.TextView" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs the action that happens when you press the <c><see cref="!:Android.Views.KeyEvent.KEYCODE_FORWARD_DEL" /></c>
 key in a <c><see cref="T:Android.Widget.TextView" /></c>.  If there is a selection, deletes the selection; otherwise,
 deletes the character before the cursor, if any; ALT+FORWARD_DEL deletes everything on
 the line the cursor is on.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/BaseKeyListener.html#forwardDelete(android.view.View, android.text.Editable, int, android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public abstract Android.Text.InputTypes InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.InputTypes InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputType", "()I", "GetGetInputTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.InputTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyOther">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyOther (Android.Views.View view, Android.Text.IEditable content, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyOther(class Android.Views.View view, class Android.Text.IEditable content, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyOther", "(Landroid/view/View;Landroid/text/Editable;Landroid/view/KeyEvent;)Z", "GetOnKeyOther_Landroid_view_View_Landroid_text_Editable_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="content" Type="Android.Text.IEditable" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="content">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Base implementation handles ACTION_MULTIPLE KEYCODE_UNKNOWN by inserting
 the event's text into the content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Base implementation handles ACTION_MULTIPLE KEYCODE_UNKNOWN by inserting
 the event's text into the content.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/BaseKeyListener.html#onKeyOther(android.view.View, android.text.Editable, android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
