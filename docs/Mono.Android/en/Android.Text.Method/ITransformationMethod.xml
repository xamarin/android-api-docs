<Type Name="ITransformationMethod" FullName="Android.Text.Method.ITransformationMethod">
  <TypeSignature Language="C#" Value="public interface ITransformationMethod : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITransformationMethod implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.Method.ITransformationMethod" />
  <TypeSignature Language="F#" Value="type ITransformationMethod = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/method/TransformationMethod", "", "Android.Text.Method.ITransformationMethodInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/method/TransformationMethod", "", "Android.Text.Method.ITransformationMethodInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>TextView uses TransformationMethods to do things like replacing the
            characters of passwords with dots, or keeping the newline characters
            from causing line breaks in single-line text fields.</summary>
    <remarks>
      <para>TextView uses TransformationMethods to do things like replacing the
            characters of passwords with dots, or keeping the newline characters
            from causing line breaks in single-line text fields.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/method/TransformationMethod" title="Reference documentation">Java documentation for <code>android.text.method.TransformationMethod</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="GetTransformationFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? GetTransformationFormatted (Java.Lang.ICharSequence? source, Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTransformationFormatted(class Java.Lang.ICharSequence source, class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.ITransformationMethod.GetTransformationFormatted(Java.Lang.ICharSequence,Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member GetTransformationFormatted : Java.Lang.ICharSequence * Android.Views.View -&gt; Java.Lang.ICharSequence" Usage="iTransformationMethod.GetTransformationFormatted (source, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransformation", "(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;", "GetGetTransformation_Ljava_lang_CharSequence_Landroid_view_View_Handler:Android.Text.Method.ITransformationMethodInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransformation", "(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;", "GetGetTransformation_Ljava_lang_CharSequence_Landroid_view_View_Handler:Android.Text.Method.ITransformationMethodInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="view">To be added.</param>
        <summary>Returns a CharSequence that is a transformation of the source text --
            for example, replacing each character with a dot in a password field.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a CharSequence that is a transformation of the source text --
            for example, replacing each character with a dot in a password field.
            Beware that the returned text must be exactly the same length as
            the source text, and that if the source text is Editable, the returned
            text must mirror it dynamically instead of doing a one-time copy.
            The method should not return <c>null</c> unless <c>source</c>
            is <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TransformationMethod#getTransformation(java.lang.CharSequence,%20android.view.View)" title="Reference documentation">Java documentation for <code>android.text.method.TransformationMethod.getTransformation(java.lang.CharSequence, android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="C#" Value="public void OnFocusChanged (Android.Views.View? view, Java.Lang.ICharSequence? sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect? previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFocusChanged(class Android.Views.View view, class Java.Lang.ICharSequence sourceText, bool focused, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.ITransformationMethod.OnFocusChanged(Android.Views.View,Java.Lang.ICharSequence,System.Boolean,Android.Views.FocusSearchDirection,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member OnFocusChanged : Android.Views.View * Java.Lang.ICharSequence * bool * Android.Views.FocusSearchDirection * Android.Graphics.Rect -&gt; unit" Usage="iTransformationMethod.OnFocusChanged (view, sourceText, focused, direction, previouslyFocusedRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFocusChanged", "(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_Landroid_view_View_Ljava_lang_CharSequence_ZILandroid_graphics_Rect_Handler:Android.Text.Method.ITransformationMethodInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFocusChanged", "(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_Landroid_view_View_Ljava_lang_CharSequence_ZILandroid_graphics_Rect_Handler:Android.Text.Method.ITransformationMethodInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="sourceText" Type="Java.Lang.ICharSequence" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="sourceText">To be added.</param>
        <param name="focused">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="previouslyFocusedRect">To be added.</param>
        <summary>This method is called when the TextView that uses this
            TransformationMethod gains or loses focus.</summary>
        <remarks>
          <para>This method is called when the TextView that uses this
            TransformationMethod gains or loses focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/method/TransformationMethod#onFocusChanged(android.view.View,%20java.lang.CharSequence,%20boolean,%20int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.text.method.TransformationMethod.onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
