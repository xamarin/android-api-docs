<Type Name="Logger" FullName="Java.Util.Logging.Logger">
  <TypeSignature Language="C#" Value="public class Logger : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Logger extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Logging.Logger" />
  <TypeSignature Language="F#" Value="type Logger = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/logging/Logger", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/logging/Logger", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Logger object is used to log messages for a specific
            system or application component.</summary>
    <remarks>
      <para>A Logger object is used to log messages for a specific
            system or application component.  Loggers are normally named,
            using a hierarchical dot-separated namespace.  Logger names
            can be arbitrary strings, but they should normally be based on
            the package name or class name of the logged component, such
            as java.net or javax.swing.  In addition it is possible to create
            "anonymous" Loggers that are not stored in the Logger namespace.</para>
      <para>Logger objects may be obtained by calls on one of the getLogger
            factory methods.  These will either create a new Logger or
            return a suitable existing Logger. It is important to note that
            the Logger returned by one of the <c>getLogger</c> factory methods
            may be garbage collected at any time if a strong reference to the
            Logger is not kept.</para>
      <para>Logging messages will be forwarded to registered Handler
            objects, which can forward the messages to a variety of
            destinations, including consoles, files, OS logs, etc.</para>
      <para>Each Logger keeps track of a "parent" Logger, which is its
            nearest existing ancestor in the Logger namespace.</para>
      <para>Each Logger has a "Level" associated with it.  This reflects
            a minimum Level that this logger cares about.  If a Logger's
            level is set to <c>null</c>, then its effective level is inherited
            from its parent, which may in turn obtain it recursively from its
            parent, and so on up the tree.</para>
      <para>The log level can be configured based on the properties from the
            logging configuration file, as described in the description
            of the LogManager class.  However it may also be dynamically changed
            by calls on the Logger.setLevel method.  If a logger's level is
            changed the change may also affect child loggers, since any child
            logger that has <c>null</c> as its level will inherit its
            effective level from its parent.</para>
      <para>On each logging call the Logger initially performs a cheap
            check of the request level (e.g., SEVERE or FINE) against the
            effective log level of the logger.  If the request level is
            lower than the log level, the logging call returns immediately.</para>
      <para>After passing this initial (cheap) test, the Logger will allocate
            a LogRecord to describe the logging message.  It will then call a
            Filter (if present) to do a more detailed check on whether the
            record should be published.  If that passes it will then publish
            the LogRecord to its output Handlers.  By default, loggers also
            publish to their parent's Handlers, recursively up the tree.</para>
      <para>Each Logger may have a <c>ResourceBundle</c> associated with it.
            The <c>ResourceBundle</c> may be specified by name, using the
            <c>#getLogger(java.lang.String, java.lang.String)</c> factory
            method, or by value - using the <c>#setResourceBundle(java.util.ResourceBundle) setResourceBundle</c> method.
            This bundle will be used for localizing logging messages.
            If a Logger does not have its own <c>ResourceBundle</c> or resource bundle
            name, then it will inherit the <c>ResourceBundle</c> or resource bundle name
            from its parent, recursively up the tree.</para>
      <para>Most of the logger output methods take a "msg" argument.  This
            msg argument may be either a raw value or a localization key.
            During formatting, if the logger has (or inherits) a localization
            <c>ResourceBundle</c> and if the <c>ResourceBundle</c> has a mapping for
            the msg string, then the msg string is replaced by the localized value.
            Otherwise the original msg string is used.  Typically, formatters use
            java.text.MessageFormat style formatting to format parameters, so
            for example a format string "{0}{1}" would format two parameters
            as strings.</para>
      <para>A set of methods alternatively take a "msgSupplier" instead of a "msg"
            argument.  These methods take a <c>Supplier</c><c>&lt;String&gt;</c> function
            which is invoked to construct the desired log message only when the message
            actually is to be logged based on the effective log level thus eliminating
            unnecessary message construction. For example, if the developer wants to
            log system health status for diagnosis, with the String-accepting version,
            the code would look like:</para>
      <code lang="text/java">&lt;code&gt;
            
               class DiagnosisMessages {
                 static String systemHealthStatus() {
                   // collect system health information
                   ...
                 }
               }
               ...
               logger.log(Level.FINER, DiagnosisMessages.systemHealthStatus());
            &lt;/code&gt;</code>
      <para>With the above code, the health status is collected unnecessarily even when
            the log level FINER is disabled. With the Supplier-accepting version as
            below, the status will only be collected when the log level FINER is
            enabled.</para>
      <code lang="text/java">&lt;code&gt;
            
               logger.log(Level.FINER, DiagnosisMessages::systemHealthStatus);
            &lt;/code&gt;</code>
      <para>When looking for a <c>ResourceBundle</c>, the logger will first look at
            whether a bundle was specified using <c>#setResourceBundle(java.util.ResourceBundle) setResourceBundle</c>, and then
            only whether a resource bundle name was specified through the <c>#getLogger(java.lang.String, java.lang.String) getLogger</c> factory method.
            If no <c>ResourceBundle</c> or no resource bundle name is found,
            then it will use the nearest <c>ResourceBundle</c> or resource bundle
            name inherited from its parent tree.&lt;br&gt;
            When a <c>ResourceBundle</c> was inherited or specified through the
            <c>#setResourceBundle(java.util.ResourceBundle) setResourceBundle</c> method, then
            that <c>ResourceBundle</c> will be used. Otherwise if the logger only
            has or inherited a resource bundle name, then that resource bundle name
            will be mapped to a <c>ResourceBundle</c> object, using the default Locale
            at the time of logging.
            &lt;br id="ResourceBundleMapping"&gt;When mapping resource bundle names to
            <c>ResourceBundle</c> objects, the logger will first try to use the
            Thread's java.lang.Thread#getContextClassLoader() context class
            loader to map the given resource bundle name to a <c>ResourceBundle</c>.
            If the thread context class loader is <c>null</c>, it will try the
            java.lang.ClassLoader#getSystemClassLoader() system class loader
            instead.  If the <c>ResourceBundle</c> is still not found, it will use the
            class loader of the first caller of the <c>#getLogger(java.lang.String, java.lang.String) getLogger</c> factory method.</para>
      <para>Formatting (including localization) is the responsibility of
            the output Handler, which will typically call a Formatter.</para>
      <para>Note that formatting need not occur synchronously.  It may be delayed
            until a LogRecord is actually written to an external sink.</para>
      <para>The logging methods are grouped in five main categories:
            &lt;ul&gt;
            &lt;li&gt;</para>
      <para>There are a set of "log" methods that take a log level, a message
                string, and optionally some parameters to the message string.
            &lt;li&gt;</para>
      <para>There are a set of "logp" methods (for "log precise") that are
                like the "log" methods, but also take an explicit source class name
                and method name.
            &lt;li&gt;</para>
      <para>There are a set of "logrb" method (for "log with resource bundle")
                that are like the "logp" method, but also take an explicit resource
                bundle object for use in localizing the log message.
            &lt;li&gt;</para>
      <para>There are convenience methods for tracing method entries (the
                "entering" methods), method returns (the "exiting" methods) and
                throwing exceptions (the "throwing" methods).
            &lt;li&gt;</para>
      <para>Finally, there are a set of convenience methods for use in the
                very simplest cases, when a developer simply wants to log a
                simple string at a given log level.  These methods are named
                after the standard Level names ("severe", "warning", "info", etc.)
                and take a single argument, a message string.
            &lt;/ul&gt;</para>
      <para>For the methods that do not take an explicit source name and
            method name, the Logging framework will make a "best effort"
            to determine which class and method called into the logging method.
            However, it is important to realize that this automatically inferred
            information may only be approximate (or may even be quite wrong!).
            Virtual machines are allowed to do extensive optimizations when
            JITing and may entirely remove stack frames, making it impossible
            to reliably locate the calling class and method.</para>
      <para>All methods on Logger are multi-thread safe.</para>
      <para>&lt;b&gt;Subclassing Information:&lt;/b&gt; Note that a LogManager class may
            provide its own implementation of named Loggers for any point in
            the namespace.  Therefore, any subclasses of Logger (unless they
            are implemented in conjunction with a new LogManager class) should
            take care to obtain a Logger instance from the LogManager class and
            should delegate operations such as "isLoggable" and "log(LogRecord)"
            to that instance.  Note that in order to intercept all logging
            output, subclasses need only override the log(LogRecord) method.
            All the other logging methods are implemented as calls on this
            log(LogRecord) method.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/logging/Logger" title="Reference documentation">Java documentation for <code>java.util.logging.Logger</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Logger (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.Logger : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Logging.Logger" Usage="new Java.Util.Logging.Logger (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Logger (string? name, string? resourceBundleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, string resourceBundleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.#ctor(System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.Logger : string * string -&gt; Java.Util.Logging.Logger" Usage="new Java.Util.Logging.Logger (name, resourceBundleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceBundleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A name for the logger.  This should
                                     be a dot-separated name and should normally
                                     be based on the package name or class name
                                     of the subsystem, such as java.net
                                     or javax.swing.  It may be null for anonymous Loggers.</param>
        <param name="resourceBundleName">name of ResourceBundle to be used for localizing
                                     messages for this logger.  May be null if none
                                     of the messages require localization.</param>
        <summary>Protected method to construct a logger for a named subsystem.</summary>
        <remarks>
          <para>Protected method to construct a logger for a named subsystem.</para>
          <para>The logger will be initially configured with a null Level
            and with useParentHandlers set to true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#Logger(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.Logger(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the specified resource bundle can not be loaded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public virtual void AddHandler (Java.Util.Logging.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class Java.Util.Logging.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.AddHandler(Java.Util.Logging.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : Java.Util.Logging.Handler -&gt; unit&#xA;override this.AddHandler : Java.Util.Logging.Handler -&gt; unit" Usage="logger.AddHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addHandler", "(Ljava/util/logging/Handler;)V", "GetAddHandler_Ljava_util_logging_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addHandler", "(Ljava/util/logging/Handler;)V", "GetAddHandler_Ljava_util_logging_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Java.Util.Logging.Handler" />
      </Parameters>
      <Docs>
        <param name="handler">a logging Handler</param>
        <summary>Add a log Handler to receive logging messages.</summary>
        <remarks>
          <para>Add a log Handler to receive logging messages.</para>
          <para>By default, Loggers also send their output to their parent logger.
            Typically the root Logger is configured with a set of Handlers
            that essentially act as default handlers for all loggers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#addHandler(java.util.logging.Handler)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.addHandler(java.util.logging.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AnonymousLogger">
      <MemberSignature Language="C#" Value="public static Java.Util.Logging.Logger AnonymousLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Logging.Logger AnonymousLogger" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.AnonymousLogger" />
      <MemberSignature Language="F#" Value="static member AnonymousLogger : Java.Util.Logging.Logger" Usage="Java.Util.Logging.Logger.AnonymousLogger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAnonymousLogger", "()Ljava/util/logging/Logger;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAnonymousLogger", "()Ljava/util/logging/Logger;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Logger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Create an anonymous Logger.</summary>
        <value>a newly created private Logger</value>
        <remarks>
          <para>Create an anonymous Logger.  The newly created Logger is not
            registered in the LogManager namespace.  There will be no
            access checks on updates to the logger.</para>
          <para>This factory method is primarily intended for use from applets.
            Because the resulting Logger is anonymous it can be kept private
            by the creating class.  This removes the need for normal security
            checks, which in turn allows untrusted applet code to update
            the control state of the Logger.  For example an applet can do
            a setLevel or an addHandler on an anonymous Logger.</para>
          <para>Even although the new logger is anonymous, it is configured
            to have the root logger ("") as its parent.  This means that
            by default it inherits its effective level and handlers
            from the root logger. Changing its parent via the
            <c>#setParent(java.util.logging.Logger) setParent</c> method
            will still require the security permission specified by that method.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getAnonymousLogger()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getAnonymousLogger()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Config">
      <MemberSignature Language="C#" Value="public virtual void Config (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Config(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Config(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Config : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Config : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Config msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("config", "(Ljava/util/function/Supplier;)V", "GetConfig_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("config", "(Ljava/util/function/Supplier;)V", "GetConfig_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a CONFIG message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a CONFIG message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the CONFIG message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#config(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.config(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Config">
      <MemberSignature Language="C#" Value="public virtual void Config (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Config(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Config(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Config : string -&gt; unit&#xA;override this.Config : string -&gt; unit" Usage="logger.Config msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("config", "(Ljava/lang/String;)V", "GetConfig_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("config", "(Ljava/lang/String;)V", "GetConfig_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a CONFIG message.</summary>
        <remarks>
          <para>Log a CONFIG message.</para>
          <para>If the logger is currently enabled for the CONFIG message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#config(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.config(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Entering">
      <MemberSignature Language="C#" Value="public virtual void Entering (string? sourceClass, string? sourceMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entering(string sourceClass, string sourceMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Entering(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Entering : string * string -&gt; unit&#xA;override this.Entering : string * string -&gt; unit" Usage="logger.Entering (sourceClass, sourceMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("entering", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEntering_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("entering", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEntering_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that is being entered</param>
        <summary>Log a method entry.</summary>
        <remarks>
          <para>Log a method entry.</para>
          <para>This is a convenience method that can be used to log entry
            to a method.  A LogRecord with message "ENTRY", log level
            FINER, and the given sourceMethod and sourceClass is logged.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#entering(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.entering(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Entering">
      <MemberSignature Language="C#" Value="public virtual void Entering (string? sourceClass, string? sourceMethod, Java.Lang.Object? param1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entering(string sourceClass, string sourceMethod, class Java.Lang.Object param1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Entering(System.String,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Entering : string * string * Java.Lang.Object -&gt; unit&#xA;override this.Entering : string * string * Java.Lang.Object -&gt; unit" Usage="logger.Entering (sourceClass, sourceMethod, param1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("entering", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetEntering_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("entering", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetEntering_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="param1" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that is being entered</param>
        <param name="param1">parameter to the method being entered</param>
        <summary>Log a method entry, with one parameter.</summary>
        <remarks>
          <para>Log a method entry, with one parameter.</para>
          <para>This is a convenience method that can be used to log entry
            to a method.  A LogRecord with message "ENTRY {0}", log level
            FINER, and the given sourceMethod, sourceClass, and parameter
            is logged.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#entering(java.lang.String,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.entering(java.lang.String, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Entering">
      <MemberSignature Language="C#" Value="public virtual void Entering (string? sourceClass, string? sourceMethod, Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entering(string sourceClass, string sourceMethod, class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Entering(System.String,System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member Entering : string * string * Java.Lang.Object[] -&gt; unit&#xA;override this.Entering : string * string * Java.Lang.Object[] -&gt; unit" Usage="logger.Entering (sourceClass, sourceMethod, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("entering", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", "GetEntering_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("entering", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", "GetEntering_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="params" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that is being entered</param>
        <param name="params">array of parameters to the method being entered</param>
        <summary>Log a method entry, with an array of parameters.</summary>
        <remarks>
          <para>Log a method entry, with an array of parameters.</para>
          <para>This is a convenience method that can be used to log entry
            to a method.  A LogRecord with message "ENTRY" (followed by a
            format {N} indicator for each entry in the parameter array),
            log level FINER, and the given sourceMethod, sourceClass, and
            parameters is logged.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#entering(java.lang.String,%20java.lang.String,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.entering(java.lang.String, java.lang.String, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Exiting">
      <MemberSignature Language="C#" Value="public virtual void Exiting (string? sourceClass, string? sourceMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Exiting(string sourceClass, string sourceMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Exiting(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Exiting : string * string -&gt; unit&#xA;override this.Exiting : string * string -&gt; unit" Usage="logger.Exiting (sourceClass, sourceMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exiting", "(Ljava/lang/String;Ljava/lang/String;)V", "GetExiting_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exiting", "(Ljava/lang/String;Ljava/lang/String;)V", "GetExiting_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of the method</param>
        <summary>Log a method return.</summary>
        <remarks>
          <para>Log a method return.</para>
          <para>This is a convenience method that can be used to log returning
            from a method.  A LogRecord with message "RETURN", log level
            FINER, and the given sourceMethod and sourceClass is logged.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#exiting(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.exiting(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Exiting">
      <MemberSignature Language="C#" Value="public virtual void Exiting (string? sourceClass, string? sourceMethod, Java.Lang.Object? result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Exiting(string sourceClass, string sourceMethod, class Java.Lang.Object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Exiting(System.String,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Exiting : string * string * Java.Lang.Object -&gt; unit&#xA;override this.Exiting : string * string * Java.Lang.Object -&gt; unit" Usage="logger.Exiting (sourceClass, sourceMethod, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exiting", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetExiting_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exiting", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetExiting_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="result" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of the method</param>
        <param name="result">Object that is being returned</param>
        <summary>Log a method return, with result object.</summary>
        <remarks>
          <para>Log a method return, with result object.</para>
          <para>This is a convenience method that can be used to log returning
            from a method.  A LogRecord with message "RETURN {0}", log level
            FINER, and the gives sourceMethod, sourceClass, and result
            object is logged.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#exiting(java.lang.String,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.exiting(java.lang.String, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.IFilter? Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.IFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.Filter" />
      <MemberSignature Language="F#" Value="member this.Filter : Java.Util.Logging.IFilter with get, set" Usage="Java.Util.Logging.Logger.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFilter", "()Ljava/util/logging/Filter;", "GetGetFilterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFilter", "()Ljava/util/logging/Filter;", "GetGetFilterHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFilter", "(Ljava/util/logging/Filter;)V", "GetSetFilter_Ljava_util_logging_Filter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFilter", "(Ljava/util/logging/Filter;)V", "GetSetFilter_Ljava_util_logging_Filter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.IFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newFilter">a filter object (may be null)</param>
        <summary>Get the current filter for this Logger. -or- Set a filter to control output on this Logger.</summary>
        <value>a filter object (may be null)</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the current filter for this Logger.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getFilter()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getFilter()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set a filter to control output on this Logger.</para>
          <para>After passing the initial "level" check, the Logger will
            call this Filter to check if a log record should really
            be published.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#setFilter(java.util.logging.Filter)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.setFilter(java.util.logging.Filter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fine">
      <MemberSignature Language="C#" Value="public virtual void Fine (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fine(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Fine(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Fine : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Fine : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Fine msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fine", "(Ljava/util/function/Supplier;)V", "GetFine_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fine", "(Ljava/util/function/Supplier;)V", "GetFine_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a FINE message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a FINE message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the FINE message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#fine(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.fine(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fine">
      <MemberSignature Language="C#" Value="public virtual void Fine (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fine(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Fine(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Fine : string -&gt; unit&#xA;override this.Fine : string -&gt; unit" Usage="logger.Fine msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fine", "(Ljava/lang/String;)V", "GetFine_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fine", "(Ljava/lang/String;)V", "GetFine_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a FINE message.</summary>
        <remarks>
          <para>Log a FINE message.</para>
          <para>If the logger is currently enabled for the FINE message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#fine(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.fine(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Finer">
      <MemberSignature Language="C#" Value="public virtual void Finer (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finer(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Finer(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Finer : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Finer : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Finer msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finer", "(Ljava/util/function/Supplier;)V", "GetFiner_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finer", "(Ljava/util/function/Supplier;)V", "GetFiner_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a FINER message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a FINER message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the FINER message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#finer(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.finer(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finer">
      <MemberSignature Language="C#" Value="public virtual void Finer (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finer(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Finer(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Finer : string -&gt; unit&#xA;override this.Finer : string -&gt; unit" Usage="logger.Finer msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finer", "(Ljava/lang/String;)V", "GetFiner_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finer", "(Ljava/lang/String;)V", "GetFiner_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a FINER message.</summary>
        <remarks>
          <para>Log a FINER message.</para>
          <para>If the logger is currently enabled for the FINER message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#finer(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.finer(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Finest">
      <MemberSignature Language="C#" Value="public virtual void Finest (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finest(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Finest(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Finest : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Finest : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Finest msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finest", "(Ljava/util/function/Supplier;)V", "GetFinest_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finest", "(Ljava/util/function/Supplier;)V", "GetFinest_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a FINEST message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a FINEST message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the FINEST message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#finest(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.finest(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finest">
      <MemberSignature Language="C#" Value="public virtual void Finest (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finest(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Finest(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Finest : string -&gt; unit&#xA;override this.Finest : string -&gt; unit" Usage="logger.Finest msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finest", "(Ljava/lang/String;)V", "GetFinest_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finest", "(Ljava/lang/String;)V", "GetFinest_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a FINEST message.</summary>
        <remarks>
          <para>Log a FINEST message.</para>
          <para>If the logger is currently enabled for the FINEST message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#finest(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.finest(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAnonymousLogger">
      <MemberSignature Language="C#" Value="public static Java.Util.Logging.Logger GetAnonymousLogger (string? resourceBundleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Logging.Logger GetAnonymousLogger(string resourceBundleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.GetAnonymousLogger(System.String)" />
      <MemberSignature Language="F#" Value="static member GetAnonymousLogger : string -&gt; Java.Util.Logging.Logger" Usage="Java.Util.Logging.Logger.GetAnonymousLogger resourceBundleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAnonymousLogger", "(Ljava/lang/String;)Ljava/util/logging/Logger;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAnonymousLogger", "(Ljava/lang/String;)Ljava/util/logging/Logger;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Logger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceBundleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceBundleName">name of ResourceBundle to be used for localizing
                                     messages for this logger.
                     May be null if none of the messages require localization.</param>
        <summary>Create an anonymous Logger.</summary>
        <returns>a newly created private Logger</returns>
        <remarks>
          <para>Create an anonymous Logger.  The newly created Logger is not
            registered in the LogManager namespace.  There will be no
            access checks on updates to the logger.</para>
          <para>This factory method is primarily intended for use from applets.
            Because the resulting Logger is anonymous it can be kept private
            by the creating class.  This removes the need for normal security
            checks, which in turn allows untrusted applet code to update
            the control state of the Logger.  For example an applet can do
            a setLevel or an addHandler on an anonymous Logger.</para>
          <para>Even although the new logger is anonymous, it is configured
            to have the root logger ("") as its parent.  This means that
            by default it inherits its effective level and handlers
            from the root logger.  Changing its parent via the
            <c>#setParent(java.util.logging.Logger) setParent</c> method
            will still require the security permission specified by that method.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getAnonymousLogger(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getAnonymousLogger(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the specified resource bundle can not be loaded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHandlers">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Handler[] GetHandlers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Logging.Handler[] GetHandlers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.GetHandlers" />
      <MemberSignature Language="F#" Value="abstract member GetHandlers : unit -&gt; Java.Util.Logging.Handler[]&#xA;override this.GetHandlers : unit -&gt; Java.Util.Logging.Handler[]" Usage="logger.GetHandlers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHandlers", "()[Ljava/util/logging/Handler;", "GetGetHandlersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHandlers", "()[Ljava/util/logging/Handler;", "GetGetHandlersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Handler[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the Handlers associated with this logger.</summary>
        <returns>an array of all registered Handlers</returns>
        <remarks>
          <para>Get the Handlers associated with this logger.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getHandlers()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getHandlers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLogger">
      <MemberSignature Language="C#" Value="public static Java.Util.Logging.Logger GetLogger (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Logging.Logger GetLogger(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.GetLogger(System.String)" />
      <MemberSignature Language="F#" Value="static member GetLogger : string -&gt; Java.Util.Logging.Logger" Usage="Java.Util.Logging.Logger.GetLogger name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLogger", "(Ljava/lang/String;)Ljava/util/logging/Logger;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLogger", "(Ljava/lang/String;)Ljava/util/logging/Logger;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Logger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A name for the logger.  This should
                                     be a dot-separated name and should normally
                                     be based on the package name or class name
                                     of the subsystem, such as java.net
                                     or javax.swing</param>
        <summary>Find or create a logger for a named subsystem.</summary>
        <returns>a suitable Logger</returns>
        <remarks>
          <para>Find or create a logger for a named subsystem.  If a logger has
            already been created with the given name it is returned.  Otherwise
            a new logger is created.</para>
          <para>If a new logger is created its log level will be configured
            based on the LogManager configuration and it will configured
            to also send logging output to its parent's Handlers.  It will
            be registered in the LogManager global namespace.</para>
          <para>Note: The LogManager may only retain a weak reference to the newly
            created Logger. It is important to understand that a previously
            created Logger with the given name may be garbage collected at any
            time if there is no strong reference to the Logger. In particular,
            this means that two back-to-back calls like
            <c>getLogger("MyLogger").log(...)</c> may use different Logger
            objects named "MyLogger" if there is no strong reference to the
            Logger named "MyLogger" elsewhere in the program.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getLogger(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getLogger(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">If the specified resource bundle can not be loaded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogger">
      <MemberSignature Language="C#" Value="public static Java.Util.Logging.Logger GetLogger (string name, string? resourceBundleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Logging.Logger GetLogger(string name, string resourceBundleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.GetLogger(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetLogger : string * string -&gt; Java.Util.Logging.Logger" Usage="Java.Util.Logging.Logger.GetLogger (name, resourceBundleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLogger", "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLogger", "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/logging/Logger;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Logger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceBundleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A name for the logger.  This should
                                     be a dot-separated name and should normally
                                     be based on the package name or class name
                                     of the subsystem, such as java.net
                                     or javax.swing</param>
        <param name="resourceBundleName">name of ResourceBundle to be used for localizing
                                     messages for this logger. May be <c>null</c>
                                     if none of the messages require localization.</param>
        <summary>Find or create a logger for a named subsystem.</summary>
        <returns>a suitable Logger</returns>
        <remarks>
          <para>Find or create a logger for a named subsystem.  If a logger has
            already been created with the given name it is returned.  Otherwise
            a new logger is created.</para>
          <para>If a new logger is created its log level will be configured
            based on the LogManager and it will configured to also send logging
            output to its parent's Handlers.  It will be registered in
            the LogManager global namespace.</para>
          <para>Note: The LogManager may only retain a weak reference to the newly
            created Logger. It is important to understand that a previously
            created Logger with the given name may be garbage collected at any
            time if there is no strong reference to the Logger. In particular,
            this means that two back-to-back calls like
            <c>getLogger("MyLogger", ...).log(...)</c> may use different Logger
            objects named "MyLogger" if there is no strong reference to the
            Logger named "MyLogger" elsewhere in the program.</para>
          <para>If the named Logger already exists and does not yet have a
            localization resource bundle then the given resource bundle
            name is used.  If the named Logger already exists and has
            a different resource bundle name then an IllegalArgumentException
            is thrown.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getLogger(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getLogger(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the logger identified by <c>name</c> is associated with a
             resource bundle and its name is not equal to
             <c>resourceBundleName</c>.</exception>
        <exception cref="T:Java.Util.MissingResourceException">if the name of the resource bundle cannot be found.</exception>
      </Docs>
    </Member>
    <Member MemberName="Global">
      <MemberSignature Language="C#" Value="public static Java.Util.Logging.Logger Global { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Logging.Logger Global" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.Global" />
      <MemberSignature Language="F#" Value="static member Global : Java.Util.Logging.Logger" Usage="Java.Util.Logging.Logger.Global" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGlobal", "()Ljava/util/logging/Logger;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGlobal", "()Ljava/util/logging/Logger;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Logger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return global logger object with the name Logger.</summary>
        <value>global logger object</value>
        <remarks>
          <para>Return global logger object with the name Logger.GLOBAL_LOGGER_NAME.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getGlobal()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getGlobal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalLoggerName">
      <MemberSignature Language="C#" Value="public const string GlobalLoggerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GlobalLoggerName" />
      <MemberSignature Language="DocId" Value="F:Java.Util.Logging.Logger.GlobalLoggerName" />
      <MemberSignature Language="F#" Value="val mutable GlobalLoggerName : string" Usage="Java.Util.Logging.Logger.GlobalLoggerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("GLOBAL_LOGGER_NAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("GLOBAL_LOGGER_NAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>GLOBAL_LOGGER_NAME is a name for the global logger.</summary>
        <remarks>
          <para>GLOBAL_LOGGER_NAME is a name for the global logger.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#GLOBAL_LOGGER_NAME" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.GLOBAL_LOGGER_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public virtual void Info (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Info(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Info(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Info : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Info : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Info msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("info", "(Ljava/util/function/Supplier;)V", "GetInfo_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("info", "(Ljava/util/function/Supplier;)V", "GetInfo_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a INFO message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a INFO message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the INFO message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#info(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.info(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public virtual void Info (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Info(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Info(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Info : string -&gt; unit&#xA;override this.Info : string -&gt; unit" Usage="logger.Info msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("info", "(Ljava/lang/String;)V", "GetInfo_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("info", "(Ljava/lang/String;)V", "GetInfo_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log an INFO message.</summary>
        <remarks>
          <para>Log an INFO message.</para>
          <para>If the logger is currently enabled for the INFO message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#info(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.info(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLoggable">
      <MemberSignature Language="C#" Value="public virtual bool IsLoggable (Java.Util.Logging.Level level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLoggable(class Java.Util.Logging.Level level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.IsLoggable(Java.Util.Logging.Level)" />
      <MemberSignature Language="F#" Value="abstract member IsLoggable : Java.Util.Logging.Level -&gt; bool&#xA;override this.IsLoggable : Java.Util.Logging.Level -&gt; bool" Usage="logger.IsLoggable level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLoggable", "(Ljava/util/logging/Level;)Z", "GetIsLoggable_Ljava_util_logging_Level_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLoggable", "(Ljava/util/logging/Level;)Z", "GetIsLoggable_Ljava_util_logging_Level_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
      </Parameters>
      <Docs>
        <param name="level">a message logging level</param>
        <summary>Check if a message of the given level would actually be logged
            by this logger.</summary>
        <returns>true if the given message level is currently being logged.</returns>
        <remarks>
          <para>Check if a message of the given level would actually be logged
            by this logger.  This check is based on the Loggers effective level,
            which may be inherited from its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#isLoggable(java.util.logging.Level)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.isLoggable(java.util.logging.Level)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Logging.Logger.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Level? Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Level Level" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.Level" />
      <MemberSignature Language="F#" Value="member this.Level : Java.Util.Logging.Level with get, set" Usage="Java.Util.Logging.Logger.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLevel", "()Ljava/util/logging/Level;", "GetGetLevelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLevel", "()Ljava/util/logging/Level;", "GetGetLevelHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLevel", "(Ljava/util/logging/Level;)V", "GetSetLevel_Ljava_util_logging_Level_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLevel", "(Ljava/util/logging/Level;)V", "GetSetLevel_Ljava_util_logging_Level_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Level</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newLevel">the new value for the log level (may be null)</param>
        <summary>Get the log Level that has been specified for this Logger. -or- Set the log level specifying which message levels will be
            logged by this logger.</summary>
        <value>this Logger's level</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the log Level that has been specified for this Logger.
            The result may be null, which means that this logger's
            effective level will be inherited from its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getLevel()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getLevel()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the log level specifying which message levels will be
            logged by this logger.  Message levels lower than this
            value will be discarded.  The level value Level.OFF
            can be used to turn off logging.</para>
          <para>If the new level is null, it means that this node should
            inherit its level from its nearest ancestor with a specific
            (non-null) level value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#setLevel(java.util.logging.Level)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.setLevel(java.util.logging.Level)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.LogRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.LogRecord)" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.LogRecord -&gt; unit&#xA;override this.Log : Java.Util.Logging.LogRecord -&gt; unit" Usage="logger.Log record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/LogRecord;)V", "GetLog_Ljava_util_logging_LogRecord_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/LogRecord;)V", "GetLog_Ljava_util_logging_LogRecord_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">the LogRecord to be published</param>
        <summary>Log a LogRecord.</summary>
        <remarks>
          <para>Log a LogRecord.</para>
          <para>All the other logging methods in this class call through
            this method to actually perform any logging.  Subclasses can
            override this single method to capture all log activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.LogRecord)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.LogRecord)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.Level level, Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.Level level, class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.Level,Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.Level * Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Log : Java.Util.Logging.Level * Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Log (level, msgSupplier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/util/function/Supplier;)V", "GetLog_Ljava_util_logging_Level_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/util/function/Supplier;)V", "GetLog_Ljava_util_logging_Level_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a message, which is only to be constructed if the logging level
            is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a message, which is only to be constructed if the logging level
            is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the given message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.Level,%20java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.Level, java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.Level level, string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.Level level, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.Level,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.Level * string -&gt; unit&#xA;override this.Log : Java.Util.Logging.Level * string -&gt; unit" Usage="logger.Log (level, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a message, with no arguments.</summary>
        <remarks>
          <para>Log a message, with no arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.Level,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.Level level, Java.Lang.Throwable? thrown, Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.Level level, class Java.Lang.Throwable thrown, class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.Level,Java.Lang.Throwable,Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.Level * Java.Lang.Throwable * Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Log : Java.Util.Logging.Level * Java.Lang.Throwable * Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Log (level, thrown, msgSupplier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_Throwable_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_Throwable_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="thrown">Throwable associated with log message.</param>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a lazily constructed message, with associated Throwable information.</summary>
        <remarks>
          <para>Log a lazily constructed message, with associated Throwable information.</para>
          <para>If the logger is currently enabled for the given message level then the
            message is constructed by invoking the provided supplier function. The
            message and the given <c>Throwable</c> are then stored in a <c>LogRecord</c> which is forwarded to all registered output handlers.</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.Level,%20java.lang.Throwable,%20java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.Level, java.lang.Throwable, java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.Level level, string? msg, Java.Lang.Object? param1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.Level level, string msg, class Java.Lang.Object param1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.Level,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.Level * string * Java.Lang.Object -&gt; unit&#xA;override this.Log : Java.Util.Logging.Level * string * Java.Lang.Object -&gt; unit" Usage="logger.Log (level, msg, param1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="param1" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="param1">parameter to the message</param>
        <summary>Log a message, with one object parameter.</summary>
        <remarks>
          <para>Log a message, with one object parameter.</para>
          <para>If the logger is currently enabled for the given message
            level then a corresponding LogRecord is created and forwarded
            to all the registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.Level,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.Level level, string? msg, Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.Level level, string msg, class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.Level,System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.Level * string * Java.Lang.Object[] -&gt; unit&#xA;override this.Log : Java.Util.Logging.Level * string * Java.Lang.Object[] -&gt; unit" Usage="logger.Log (level, msg, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="params" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="params">array of parameters to the message</param>
        <summary>Log a message, with an array of object arguments.</summary>
        <remarks>
          <para>Log a message, with an array of object arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then a corresponding LogRecord is created and forwarded
            to all the registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.Level,%20java.lang.String,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Java.Util.Logging.Level level, string? msg, Java.Lang.Throwable? thrown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Java.Util.Logging.Level level, string msg, class Java.Lang.Throwable thrown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Log(Java.Util.Logging.Level,System.String,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member Log : Java.Util.Logging.Level * string * Java.Lang.Throwable -&gt; unit&#xA;override this.Log : Java.Util.Logging.Level * string * Java.Lang.Throwable -&gt; unit" Usage="logger.Log (level, msg, thrown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("log", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLog_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="thrown">Throwable associated with log message.</param>
        <summary>Log a message, with associated Throwable information.</summary>
        <remarks>
          <para>Log a message, with associated Throwable information.</para>
          <para>If the logger is currently enabled for the given message
            level then the given arguments are stored in a LogRecord
            which is forwarded to all registered output handlers.</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#log(java.util.logging.Level,%20java.lang.String,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logp">
      <MemberSignature Language="C#" Value="public virtual void Logp (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logp(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logp(Java.Util.Logging.Level,System.String,System.String,Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Logp : Java.Util.Logging.Level * string * string * Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Logp : Java.Util.Logging.Level * string * string * Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Logp (level, sourceClass, sourceMethod, msgSupplier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a lazily constructed message, specifying source class and method,
            with no arguments.</summary>
        <remarks>
          <para>Log a lazily constructed message, specifying source class and method,
            with no arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logp(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Logp">
      <MemberSignature Language="C#" Value="public virtual void Logp (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logp(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logp(Java.Util.Logging.Level,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Logp : Java.Util.Logging.Level * string * string * string -&gt; unit&#xA;override this.Logp : Java.Util.Logging.Level * string * string * string -&gt; unit" Usage="logger.Logp (level, sourceClass, sourceMethod, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a message, specifying source class and method,
            with no arguments.</summary>
        <remarks>
          <para>Log a message, specifying source class and method,
            with no arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logp(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logp">
      <MemberSignature Language="C#" Value="public virtual void Logp (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, Java.Lang.Throwable? thrown, Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logp(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, class Java.Lang.Throwable thrown, class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logp(Java.Util.Logging.Level,System.String,System.String,Java.Lang.Throwable,Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Logp : Java.Util.Logging.Level * string * string * Java.Lang.Throwable * Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Logp : Java.Util.Logging.Level * string * string * Java.Lang.Throwable * Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Logp (level, sourceClass, sourceMethod, thrown, msgSupplier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="thrown">Throwable associated with log message.</param>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a lazily constructed message, specifying source class and method,
            with associated Throwable information.</summary>
        <remarks>
          <para>Log a lazily constructed message, specifying source class and method,
            with associated Throwable information.</para>
          <para>If the logger is currently enabled for the given message level then the
            message is constructed by invoking the provided supplier function. The
            message and the given <c>Throwable</c> are then stored in a <c>LogRecord</c> which is forwarded to all registered output handlers.</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logp(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.Throwable,%20java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.Throwable, java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Logp">
      <MemberSignature Language="C#" Value="public virtual void Logp (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? msg, Java.Lang.Object? param1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logp(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string msg, class Java.Lang.Object param1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logp(Java.Util.Logging.Level,System.String,System.String,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Logp : Java.Util.Logging.Level * string * string * string * Java.Lang.Object -&gt; unit&#xA;override this.Logp : Java.Util.Logging.Level * string * string * string * Java.Lang.Object -&gt; unit" Usage="logger.Logp (level, sourceClass, sourceMethod, msg, param1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="param1" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="param1">Parameter to the log message.</param>
        <summary>Log a message, specifying source class and method,
            with a single object parameter to the log message.</summary>
        <remarks>
          <para>Log a message, specifying source class and method,
            with a single object parameter to the log message.</para>
          <para>If the logger is currently enabled for the given message
            level then a corresponding LogRecord is created and forwarded
            to all the registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logp(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logp">
      <MemberSignature Language="C#" Value="public virtual void Logp (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? msg, Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logp(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string msg, class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logp(Java.Util.Logging.Level,System.String,System.String,System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member Logp : Java.Util.Logging.Level * string * string * string * Java.Lang.Object[] -&gt; unit&#xA;override this.Logp : Java.Util.Logging.Level * string * string * string * Java.Lang.Object[] -&gt; unit" Usage="logger.Logp (level, sourceClass, sourceMethod, msg, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="params" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="params">Array of parameters to the message</param>
        <summary>Log a message, specifying source class and method,
            with an array of object arguments.</summary>
        <remarks>
          <para>Log a message, specifying source class and method,
            with an array of object arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then a corresponding LogRecord is created and forwarded
            to all the registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logp(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logp">
      <MemberSignature Language="C#" Value="public virtual void Logp (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? msg, Java.Lang.Throwable? thrown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logp(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string msg, class Java.Lang.Throwable thrown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logp(Java.Util.Logging.Level,System.String,System.String,System.String,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member Logp : Java.Util.Logging.Level * string * string * string * Java.Lang.Throwable -&gt; unit&#xA;override this.Logp : Java.Util.Logging.Level * string * string * string * Java.Lang.Throwable -&gt; unit" Usage="logger.Logp (level, sourceClass, sourceMethod, msg, thrown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logp", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLogp_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="thrown">Throwable associated with log message.</param>
        <summary>Log a message, specifying source class and method,
            with associated Throwable information.</summary>
        <remarks>
          <para>Log a message, specifying source class and method,
            with associated Throwable information.</para>
          <para>If the logger is currently enabled for the given message
            level then the given arguments are stored in a LogRecord
            which is forwarded to all registered output handlers.</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logp(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logrb">
      <MemberSignature Language="C#" Value="public virtual void Logrb (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? bundleName, string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logrb(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string bundleName, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logrb(Java.Util.Logging.Level,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Logrb : Java.Util.Logging.Level * string * string * string * string -&gt; unit&#xA;override this.Logrb : Java.Util.Logging.Level * string * string * string * string -&gt; unit" Usage="logger.Logrb (level, sourceClass, sourceMethod, bundleName, msg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="bundleName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="bundleName">name of resource bundle to localize msg,
                                    can be null</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a message, specifying source class, method, and resource bundle name
            with no arguments.</summary>
        <remarks>
          <para>Log a message, specifying source class, method, and resource bundle name
            with no arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para>The msg string is localized using the named resource bundle.  If the
            resource bundle name is null, or an empty String or invalid
            then the msg string is not localized.</para>
          <para />
          <para>This member is deprecated. Use <c>#logrb(java.util.logging.Level, java.lang.String,
            java.lang.String, java.util.ResourceBundle, java.lang.String,
            java.lang.Object...)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logrb(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logrb">
      <MemberSignature Language="C#" Value="public virtual void Logrb (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, Java.Util.ResourceBundle? bundle, string? msg, params Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logrb(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, class Java.Util.ResourceBundle bundle, string msg, class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logrb(Java.Util.Logging.Level,System.String,System.String,Java.Util.ResourceBundle,System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member Logrb : Java.Util.Logging.Level * string * string * Java.Util.ResourceBundle * string * Java.Lang.Object[] -&gt; unit&#xA;override this.Logrb : Java.Util.Logging.Level * string * string * Java.Util.ResourceBundle * string * Java.Lang.Object[] -&gt; unit" Usage="logger.Logrb (level, sourceClass, sourceMethod, bundle, msg, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_util_ResourceBundle_Ljava_lang_String_arrayLjava_lang_Object_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_util_ResourceBundle_Ljava_lang_String_arrayLjava_lang_Object_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="bundle" Type="Java.Util.ResourceBundle" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="params" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="bundle">To be added.</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="params">To be added.</param>
        <summary>Log a message, specifying source class, method, and resource bundle name
            with no arguments.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logrb(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Logrb">
      <MemberSignature Language="C#" Value="public virtual void Logrb (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, Java.Util.ResourceBundle? bundle, string? msg, Java.Lang.Throwable? thrown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logrb(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, class Java.Util.ResourceBundle bundle, string msg, class Java.Lang.Throwable thrown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logrb(Java.Util.Logging.Level,System.String,System.String,Java.Util.ResourceBundle,System.String,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member Logrb : Java.Util.Logging.Level * string * string * Java.Util.ResourceBundle * string * Java.Lang.Throwable -&gt; unit&#xA;override this.Logrb : Java.Util.Logging.Level * string * string * Java.Util.ResourceBundle * string * Java.Lang.Throwable -&gt; unit" Usage="logger.Logrb (level, sourceClass, sourceMethod, bundle, msg, thrown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_util_ResourceBundle_Ljava_lang_String_Ljava_lang_Throwable_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_util_ResourceBundle_Ljava_lang_String_Ljava_lang_Throwable_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="bundle" Type="Java.Util.ResourceBundle" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">Name of the class that issued the logging request</param>
        <param name="sourceMethod">Name of the method that issued the logging request</param>
        <param name="bundle">Resource bundle to localize <c>msg</c>,
                                    can be <c>null</c></param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="thrown">Throwable associated with the log message.</param>
        <summary>Log a message, specifying source class, method, and resource bundle,
            with associated Throwable information.</summary>
        <remarks>
          <para>Log a message, specifying source class, method, and resource bundle,
            with associated Throwable information.</para>
          <para>If the logger is currently enabled for the given message
            level then the given arguments are stored in a LogRecord
            which is forwarded to all registered output handlers.</para>
          <para>The <c>msg</c> string is localized using the given resource bundle.
            If the resource bundle is <c>null</c>, then the <c>msg</c> string is not
            localized.</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logrb(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.util.ResourceBundle,%20java.lang.String,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Logrb">
      <MemberSignature Language="C#" Value="public virtual void Logrb (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? bundleName, string? msg, Java.Lang.Object? param1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logrb(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string bundleName, string msg, class Java.Lang.Object param1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logrb(Java.Util.Logging.Level,System.String,System.String,System.String,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Logrb : Java.Util.Logging.Level * string * string * string * string * Java.Lang.Object -&gt; unit&#xA;override this.Logrb : Java.Util.Logging.Level * string * string * string * string * Java.Lang.Object -&gt; unit" Usage="logger.Logrb (level, sourceClass, sourceMethod, bundleName, msg, param1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="bundleName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="param1" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="bundleName">name of resource bundle to localize msg,
                                    can be null</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="param1">Parameter to the log message.</param>
        <summary>Log a message, specifying source class, method, and resource bundle name,
            with a single object parameter to the log message.</summary>
        <remarks>
          <para>Log a message, specifying source class, method, and resource bundle name,
            with a single object parameter to the log message.</para>
          <para>If the logger is currently enabled for the given message
            level then a corresponding LogRecord is created and forwarded
            to all the registered output Handler objects.</para>
          <para>The msg string is localized using the named resource bundle.  If the
            resource bundle name is null, or an empty String or invalid
            then the msg string is not localized.</para>
          <para />
          <para>This member is deprecated. Use <c>#logrb(java.util.logging.Level, java.lang.String,
              java.lang.String, java.util.ResourceBundle, java.lang.String,
              java.lang.Object...)</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logrb(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logrb">
      <MemberSignature Language="C#" Value="public virtual void Logrb (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? bundleName, string? msg, Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logrb(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string bundleName, string msg, class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logrb(Java.Util.Logging.Level,System.String,System.String,System.String,System.String,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member Logrb : Java.Util.Logging.Level * string * string * string * string * Java.Lang.Object[] -&gt; unit&#xA;override this.Logrb : Java.Util.Logging.Level * string * string * string * string * Java.Lang.Object[] -&gt; unit" Usage="logger.Logrb (level, sourceClass, sourceMethod, bundleName, msg, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="bundleName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="params" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="bundleName">name of resource bundle to localize msg,
                                    can be null.</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="params">Array of parameters to the message</param>
        <summary>Log a message, specifying source class, method, and resource bundle name,
            with an array of object arguments.</summary>
        <remarks>
          <para>Log a message, specifying source class, method, and resource bundle name,
            with an array of object arguments.</para>
          <para>If the logger is currently enabled for the given message
            level then a corresponding LogRecord is created and forwarded
            to all the registered output Handler objects.</para>
          <para>The msg string is localized using the named resource bundle.  If the
            resource bundle name is null, or an empty String or invalid
            then the msg string is not localized.</para>
          <para />
          <para>This member is deprecated. Use <c>#logrb(java.util.logging.Level, java.lang.String,
                 java.lang.String, java.util.ResourceBundle, java.lang.String,
                 java.lang.Object...)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logrb(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Logrb">
      <MemberSignature Language="C#" Value="public virtual void Logrb (Java.Util.Logging.Level level, string? sourceClass, string? sourceMethod, string? bundleName, string? msg, Java.Lang.Throwable? thrown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Logrb(class Java.Util.Logging.Level level, string sourceClass, string sourceMethod, string bundleName, string msg, class Java.Lang.Throwable thrown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Logrb(Java.Util.Logging.Level,System.String,System.String,System.String,System.String,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member Logrb : Java.Util.Logging.Level * string * string * string * string * Java.Lang.Throwable -&gt; unit&#xA;override this.Logrb : Java.Util.Logging.Level * string * string * string * string * Java.Lang.Throwable -&gt; unit" Usage="logger.Logrb (level, sourceClass, sourceMethod, bundleName, msg, thrown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logrb", "(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetLogrb_Ljava_util_logging_Level_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Java.Util.Logging.Level" />
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="bundleName" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="level">One of the message level identifiers, e.g., SEVERE</param>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of method that issued the logging request</param>
        <param name="bundleName">name of resource bundle to localize msg,
                                    can be null</param>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <param name="thrown">Throwable associated with log message.</param>
        <summary>Log a message, specifying source class, method, and resource bundle name,
            with associated Throwable information.</summary>
        <remarks>
          <para>Log a message, specifying source class, method, and resource bundle name,
            with associated Throwable information.</para>
          <para>If the logger is currently enabled for the given message
            level then the given arguments are stored in a LogRecord
            which is forwarded to all registered output handlers.</para>
          <para>The msg string is localized using the named resource bundle.  If the
            resource bundle name is null, or an empty String or invalid
            then the msg string is not localized.</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>This member is deprecated. Use <c>#logrb(java.util.logging.Level, java.lang.String,
                java.lang.String, java.util.ResourceBundle, java.lang.String,
                java.lang.Throwable)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#logrb(java.util.logging.Level,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Java.Util.Logging.Logger.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the name for this logger.</summary>
        <value>logger name.  Will be null for anonymous Loggers.</value>
        <remarks>
          <para>Get the name for this logger.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getName()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Logger? Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Logger Parent" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Java.Util.Logging.Logger with get, set" Usage="Java.Util.Logging.Logger.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParent", "()Ljava/util/logging/Logger;", "GetGetParentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParent", "()Ljava/util/logging/Logger;", "GetGetParentHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setParent", "(Ljava/util/logging/Logger;)V", "GetSetParent_Ljava_util_logging_Logger_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setParent", "(Ljava/util/logging/Logger;)V", "GetSetParent_Ljava_util_logging_Logger_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Logger</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="parent">the new parent logger</param>
        <summary>Return the parent for this Logger. -or- Set the parent for this Logger.</summary>
        <value>nearest existing parent Logger</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the parent for this Logger.</para>
          <para>This method returns the nearest extant parent in the namespace.
            Thus if a Logger is called "a.b.c.d", and a Logger called "a.b"
            has been created but no logger "a.b.c" exists, then a call of
            getParent on the Logger "a.b.c.d" will return the Logger "a.b".</para>
          <para>The result will be null if it is called on the root Logger
            in the namespace.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getParent()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getParent()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the parent for this Logger.  This method is used by
            the LogManager to update a Logger when the namespace changes.</para>
          <para>It should not be called from application code.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#setParent(java.util.logging.Logger)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.setParent(java.util.logging.Logger)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public virtual void RemoveHandler (Java.Util.Logging.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class Java.Util.Logging.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.RemoveHandler(Java.Util.Logging.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : Java.Util.Logging.Handler -&gt; unit&#xA;override this.RemoveHandler : Java.Util.Logging.Handler -&gt; unit" Usage="logger.RemoveHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeHandler", "(Ljava/util/logging/Handler;)V", "GetRemoveHandler_Ljava_util_logging_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeHandler", "(Ljava/util/logging/Handler;)V", "GetRemoveHandler_Ljava_util_logging_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Java.Util.Logging.Handler" />
      </Parameters>
      <Docs>
        <param name="handler">a logging Handler</param>
        <summary>Remove a log Handler.</summary>
        <remarks>
          <para>Remove a log Handler.</para>
          <para>Returns silently if the given Handler is not found or is null</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#removeHandler(java.util.logging.Handler)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.removeHandler(java.util.logging.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResourceBundle">
      <MemberSignature Language="C#" Value="public virtual Java.Util.ResourceBundle? ResourceBundle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.ResourceBundle ResourceBundle" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.ResourceBundle" />
      <MemberSignature Language="F#" Value="member this.ResourceBundle : Java.Util.ResourceBundle with get, set" Usage="Java.Util.Logging.Logger.ResourceBundle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResourceBundle", "()Ljava/util/ResourceBundle;", "GetGetResourceBundleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResourceBundle", "()Ljava/util/ResourceBundle;", "GetGetResourceBundleHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setResourceBundle", "(Ljava/util/ResourceBundle;)V", "GetSetResourceBundle_Ljava_util_ResourceBundle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setResourceBundle", "(Ljava/util/ResourceBundle;)V", "GetSetResourceBundle_Ljava_util_ResourceBundle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="bundle">The resource bundle that this logger shall use.</param>
        <summary>Retrieve the localization resource bundle for this
            logger. -or- Sets a resource bundle on this logger.</summary>
        <value>localization bundle (may be <c>null</c>)</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve the localization resource bundle for this
            logger.
            This method will return a <c>ResourceBundle</c> that was either
            set by the <c>#setResourceBundle(java.util.ResourceBundle) setResourceBundle</c> method or
            mapped from the
            the resource bundle name set via the <c>Logger#getLogger(java.lang.String, java.lang.String) getLogger</c> factory
            method for the current default locale.
            &lt;br&gt;Note that if the result is <c>null</c>, then the Logger will use a resource
            bundle or resource bundle name inherited from its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getResourceBundle()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getResourceBundle()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a resource bundle on this logger.
            All messages will be logged using the given resource bundle for its
            specific ResourceBundle#getLocale locale.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#setResourceBundle(java.util.ResourceBundle)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.setResourceBundle(java.util.ResourceBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResourceBundleName">
      <MemberSignature Language="C#" Value="public virtual string? ResourceBundleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceBundleName" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.ResourceBundleName" />
      <MemberSignature Language="F#" Value="member this.ResourceBundleName : string" Usage="Java.Util.Logging.Logger.ResourceBundleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResourceBundleName", "()Ljava/lang/String;", "GetGetResourceBundleNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResourceBundleName", "()Ljava/lang/String;", "GetGetResourceBundleNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the localization resource bundle name for this
            logger.</summary>
        <value>localization bundle name (may be <c>null</c>)</value>
        <remarks>
          <para>Retrieve the localization resource bundle name for this
            logger.
            This is either the name specified through the <c>#getLogger(java.lang.String, java.lang.String) getLogger</c> factory method,
            or the ResourceBundle#getBaseBundleName() base name of the
            ResourceBundle set through <c>#setResourceBundle(java.util.ResourceBundle) setResourceBundle</c> method.
            &lt;br&gt;Note that if the result is <c>null</c>, then the Logger will use a resource
            bundle or resource bundle name inherited from its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getResourceBundleName()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getResourceBundleName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Severe">
      <MemberSignature Language="C#" Value="public virtual void Severe (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Severe(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Severe(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Severe : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Severe : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Severe msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("severe", "(Ljava/util/function/Supplier;)V", "GetSevere_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("severe", "(Ljava/util/function/Supplier;)V", "GetSevere_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a SEVERE message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a SEVERE message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the SEVERE message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#severe(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.severe(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Severe">
      <MemberSignature Language="C#" Value="public virtual void Severe (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Severe(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Severe(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Severe : string -&gt; unit&#xA;override this.Severe : string -&gt; unit" Usage="logger.Severe msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("severe", "(Ljava/lang/String;)V", "GetSevere_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("severe", "(Ljava/lang/String;)V", "GetSevere_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a SEVERE message.</summary>
        <remarks>
          <para>Log a SEVERE message.</para>
          <para>If the logger is currently enabled for the SEVERE message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#severe(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.severe(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Logging.Logger.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Logging.Logger.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throwing">
      <MemberSignature Language="C#" Value="public virtual void Throwing (string? sourceClass, string? sourceMethod, Java.Lang.Throwable? thrown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throwing(string sourceClass, string sourceMethod, class Java.Lang.Throwable thrown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Throwing(System.String,System.String,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member Throwing : string * string * Java.Lang.Throwable -&gt; unit&#xA;override this.Throwing : string * string * Java.Lang.Throwable -&gt; unit" Usage="logger.Throwing (sourceClass, sourceMethod, thrown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("throwing", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetThrowing_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("throwing", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V", "GetThrowing_Ljava_lang_String_Ljava_lang_String_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceClass" Type="System.String" />
        <Parameter Name="sourceMethod" Type="System.String" />
        <Parameter Name="thrown" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="sourceClass">name of class that issued the logging request</param>
        <param name="sourceMethod">name of the method.</param>
        <param name="thrown">The Throwable that is being thrown.</param>
        <summary>Log throwing an exception.</summary>
        <remarks>
          <para>Log throwing an exception.</para>
          <para>This is a convenience method to log that a method is
            terminating by throwing an exception.  The logging is done
            using the FINER level.</para>
          <para>If the logger is currently enabled for the given message
            level then the given arguments are stored in a LogRecord
            which is forwarded to all registered output handlers.  The
            LogRecord's message is set to "THROW".</para>
          <para>Note that the thrown argument is stored in the LogRecord thrown
            property, rather than the LogRecord parameters property.  Thus it is
            processed specially by output Formatters and is not treated
            as a formatting parameter to the LogRecord message property.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#throwing(java.lang.String,%20java.lang.String,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.throwing(java.lang.String, java.lang.String, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UseParentHandlers">
      <MemberSignature Language="C#" Value="public virtual bool UseParentHandlers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseParentHandlers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Logger.UseParentHandlers" />
      <MemberSignature Language="F#" Value="member this.UseParentHandlers : bool with get, set" Usage="Java.Util.Logging.Logger.UseParentHandlers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUseParentHandlers", "()Z", "GetGetUseParentHandlersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUseParentHandlers", "()Z", "GetGetUseParentHandlersHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setUseParentHandlers", "(Z)V", "GetSetUseParentHandlers_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setUseParentHandlers", "(Z)V", "GetSetUseParentHandlers_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="useParentHandlers">true if output is to be sent to the
                     logger's parent.</param>
        <summary>Discover whether or not this logger is sending its output
            to its parent logger. -or- Specify whether or not this logger should send its output
            to its parent Logger.</summary>
        <value>true if output is to be sent to the logger's parent</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Discover whether or not this logger is sending its output
            to its parent logger.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#getUseParentHandlers()" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.getUseParentHandlers()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify whether or not this logger should send its output
            to its parent Logger.  This means that any LogRecords will
            also be written to the parent's Handlers, and potentially
            to its parent, recursively up the namespace.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#setUseParentHandlers(boolean)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.setUseParentHandlers(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="C#" Value="public virtual void Warning (Java.Util.Functions.ISupplier msgSupplier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Warning(class Java.Util.Functions.ISupplier msgSupplier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Warning(Java.Util.Functions.ISupplier)" />
      <MemberSignature Language="F#" Value="abstract member Warning : Java.Util.Functions.ISupplier -&gt; unit&#xA;override this.Warning : Java.Util.Functions.ISupplier -&gt; unit" Usage="logger.Warning msgSupplier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("warning", "(Ljava/util/function/Supplier;)V", "GetWarning_Ljava_util_function_Supplier_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("warning", "(Ljava/util/function/Supplier;)V", "GetWarning_Ljava_util_function_Supplier_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msgSupplier" Type="Java.Util.Functions.ISupplier" />
      </Parameters>
      <Docs>
        <param name="msgSupplier">A function, which when called, produces the
                                   desired log message</param>
        <summary>Log a WARNING message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</summary>
        <remarks>
          <para>Log a WARNING message, which is only to be constructed if the logging
            level is such that the message will actually be logged.</para>
          <para>If the logger is currently enabled for the WARNING message
            level then the message is constructed by invoking the provided
            supplier function and forwarded to all the registered output
            Handler objects.</para>
          <para />
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#warning(java.util.function.Supplier%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.warning(java.util.function.Supplier&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="C#" Value="public virtual void Warning (string? msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Warning(string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Logger.Warning(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Warning : string -&gt; unit&#xA;override this.Warning : string -&gt; unit" Usage="logger.Warning msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("warning", "(Ljava/lang/String;)V", "GetWarning_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("warning", "(Ljava/lang/String;)V", "GetWarning_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">The string message (or a key in the message catalog)</param>
        <summary>Log a WARNING message.</summary>
        <remarks>
          <para>Log a WARNING message.</para>
          <para>If the logger is currently enabled for the WARNING message
            level then the given message is forwarded to all the
            registered output Handler objects.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/Logger#warning(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.Logger.warning(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
