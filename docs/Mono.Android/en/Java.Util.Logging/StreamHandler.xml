<Type Name="StreamHandler" FullName="Java.Util.Logging.StreamHandler">
  <TypeSignature Language="C#" Value="public class StreamHandler : Java.Util.Logging.Handler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamHandler extends Java.Util.Logging.Handler" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Logging.StreamHandler" />
  <TypeSignature Language="F#" Value="type StreamHandler = class&#xA;    inherit Handler" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Logging.Handler</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/logging/StreamHandler", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/logging/StreamHandler", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Stream based logging <c>Handler</c>.</summary>
    <remarks>
      <para>Stream based logging <c>Handler</c>.</para>
      <para>This is primarily intended as a base class or support class to
            be used in implementing other logging <c>Handlers</c>.</para>
      <para>
        <c>LogRecords</c> are published to a given <c>java.io.OutputStream</c>.</para>
      <para>&lt;b&gt;Configuration:&lt;/b&gt;
            By default each <c>StreamHandler</c> is initialized using the following
            <c>LogManager</c> configuration properties where <c>&amp;lt;handler-name&amp;gt;</c>
            refers to the fully-qualified class name of the handler.
            If properties are not defined
            (or have invalid values) then the specified default values are used.
            &lt;ul&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.level
                   specifies the default level for the <c>Handler</c>
                   (defaults to <c>Level.INFO</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.filter
                   specifies the name of a <c>Filter</c> class to use
                    (defaults to no <c>Filter</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.formatter
                   specifies the name of a <c>Formatter</c> class to use
                   (defaults to <c>java.util.logging.SimpleFormatter</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.encoding
                   the name of the character set encoding to use (defaults to
                   the default platform encoding). &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>For example, the properties for <c>StreamHandler</c> would be:
            &lt;ul&gt;
            &lt;li&gt;   java.util.logging.StreamHandler.level=INFO &lt;/li&gt;
            &lt;li&gt;   java.util.logging.StreamHandler.formatter=java.util.logging.SimpleFormatter &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>For a custom handler, e.g. com.foo.MyHandler, the properties would be:
            &lt;ul&gt;
            &lt;li&gt;   com.foo.MyHandler.level=INFO &lt;/li&gt;
            &lt;li&gt;   com.foo.MyHandler.formatter=java.util.logging.SimpleFormatter &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para />
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/logging/StreamHandler" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a <c>StreamHandler</c>, with no current output stream.</summary>
        <remarks>
          <para>Create a <c>StreamHandler</c>, with no current output stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/StreamHandler#StreamHandler()" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler.StreamHandler()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamHandler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.StreamHandler : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Logging.StreamHandler" Usage="new Java.Util.Logging.StreamHandler (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamHandler (System.IO.Stream? out, Java.Util.Logging.Formatter? formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream out, class Java.Util.Logging.Formatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.#ctor(System.IO.Stream,Java.Util.Logging.Formatter)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.StreamHandler : System.IO.Stream * Java.Util.Logging.Formatter -&gt; Java.Util.Logging.StreamHandler" Usage="new Java.Util.Logging.StreamHandler (out, formatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/util/logging/Formatter;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/util/logging/Formatter;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
        <Parameter Name="formatter" Type="Java.Util.Logging.Formatter" />
      </Parameters>
      <Docs>
        <param name="out">the target output stream</param>
        <param name="formatter">Formatter to be used to format output</param>
        <summary>Create a <c>StreamHandler</c> with a given <c>Formatter</c>
            and output stream.</summary>
        <remarks>
          <para>Create a <c>StreamHandler</c> with a given <c>Formatter</c>
            and output stream.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/StreamHandler#StreamHandler(java.io.OutputStream,%20java.util.logging.Formatter)" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler.StreamHandler(java.io.OutputStream, java.util.logging.Formatter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>os</c> or <c>formatter</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.Close" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="streamHandler.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Close the current output stream.</summary>
        <remarks>
          <para>Close the current output stream.</para>
          <para>The <c>Formatter</c>'s "tail" string is written to the stream before it
            is closed.  In addition, if the <c>Formatter</c>'s "head" string has not
            yet been written to the stream, it will be written before the
            "tail" string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/StreamHandler#close()" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.Flush" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="streamHandler.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "GetFlushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flush any buffered messages.</summary>
        <remarks>
          <para>Flush any buffered messages.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/StreamHandler#flush()" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.StreamHandler.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Logging.StreamHandler.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public override void Publish (Java.Util.Logging.LogRecord? record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Publish(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.Publish(Java.Util.Logging.LogRecord)" />
      <MemberSignature Language="F#" Value="override this.Publish : Java.Util.Logging.LogRecord -&gt; unit" Usage="streamHandler.Publish record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("publish", "(Ljava/util/logging/LogRecord;)V", "GetPublish_Ljava_util_logging_LogRecord_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("publish", "(Ljava/util/logging/LogRecord;)V", "GetPublish_Ljava_util_logging_LogRecord_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">description of the log event. A null record is
                            silently ignored and is not published</param>
        <summary>Format and publish a <c>LogRecord</c>.</summary>
        <remarks>
          <para>Format and publish a <c>LogRecord</c>.</para>
          <para>The <c>StreamHandler</c> first checks if there is an <c>OutputStream</c>
            and if the given <c>LogRecord</c> has at least the required log level.
            If not it silently returns.  If so, it calls any associated
            <c>Filter</c> to check if the record should be published.  If so,
            it calls its <c>Formatter</c> to format the record and then writes
            the result to the current output stream.</para>
          <para>If this is the first <c>LogRecord</c> to be written to a given
            <c>OutputStream</c>, the <c>Formatter</c>'s "head" string is
            written to the stream before the <c>LogRecord</c> is written.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/StreamHandler#publish(java.util.logging.LogRecord)" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler.publish(java.util.logging.LogRecord)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputStream">
      <MemberSignature Language="C#" Value="protected virtual void SetOutputStream (System.IO.Stream? out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetOutputStream(class System.IO.Stream out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.StreamHandler.SetOutputStream(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputStream : System.IO.Stream -&gt; unit&#xA;override this.SetOutputStream : System.IO.Stream -&gt; unit" Usage="streamHandler.SetOutputStream out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutputStream", "(Ljava/io/OutputStream;)V", "GetSetOutputStream_Ljava_io_OutputStream_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutputStream", "(Ljava/io/OutputStream;)V", "GetSetOutputStream_Ljava_io_OutputStream_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="out">New output stream.  May not be null.</param>
        <summary>Change the output stream.</summary>
        <remarks>
          <para>Change the output stream.</para>
          <para>If there is a current output stream then the <c>Formatter</c>'s
            tail string is written and the stream is flushed and closed.
            Then the output stream is replaced with the new output stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/StreamHandler#setOutputStream(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.util.logging.StreamHandler.setOutputStream(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>os</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.StreamHandler.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Logging.StreamHandler.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.StreamHandler.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Logging.StreamHandler.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
