<Type Name="MemoryHandler" FullName="Java.Util.Logging.MemoryHandler">
  <TypeSignature Language="VB.NET" Value="Public Class MemoryHandler&#xA;Inherits Handler" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryHandler : Java::Util::Logging::Handler" />
  <TypeSignature Language="C#" Value="public class MemoryHandler : Java.Util.Logging.Handler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryHandler extends Java.Util.Logging.Handler" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Logging.MemoryHandler" />
  <TypeSignature Language="F#" Value="type MemoryHandler = class&#xA;    inherit Handler" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Logging.Handler</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/logging/MemoryHandler", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/logging/MemoryHandler", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>Handler</c> that buffers requests in a circular buffer in memory.</summary>
    <remarks>
      <para>
        <c>Handler</c> that buffers requests in a circular buffer in memory.</para>
      <para>Normally this <c>Handler</c> simply stores incoming <c>LogRecords</c>
            into its memory buffer and discards earlier records.  This buffering
            is very cheap and avoids formatting costs.  On certain trigger
            conditions, the <c>MemoryHandler</c> will push out its current buffer
            contents to a target <c>Handler</c>, which will typically publish
            them to the outside world.</para>
      <para>There are three main models for triggering a push of the buffer:
            &lt;ul&gt;
            &lt;li&gt;
            An incoming <c>LogRecord</c> has a type that is greater than
            a pre-defined level, the <c>pushLevel</c>. &lt;/li&gt;
            &lt;li&gt;
            An external class calls the <c>push</c> method explicitly. &lt;/li&gt;
            &lt;li&gt;
            A subclass overrides the <c>log</c> method and scans each incoming
            <c>LogRecord</c> and calls <c>push</c> if a record matches some
            desired criteria. &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>&lt;b&gt;Configuration:&lt;/b&gt;
            By default each <c>MemoryHandler</c> is initialized using the following
            <c>LogManager</c> configuration properties where <c>&amp;lt;handler-name&amp;gt;</c>
            refers to the fully-qualified class name of the handler.
            If properties are not defined
            (or have invalid values) then the specified default values are used.
            If no default value is defined then a RuntimeException is thrown.
            &lt;ul&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.level
                   specifies the level for the <c>Handler</c>
                   (defaults to <c>Level.ALL</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.filter
                   specifies the name of a <c>Filter</c> class to use
                   (defaults to no <c>Filter</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.size
                   defines the buffer size (defaults to 1000). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.push
                   defines the <c>pushLevel</c> (defaults to <c>level.SEVERE</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.target
                   specifies the name of the target <c>Handler </c> class.
                   (no default). &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>For example, the properties for <c>MemoryHandler</c> would be:
            &lt;ul&gt;
            &lt;li&gt;   java.util.logging.MemoryHandler.level=INFO &lt;/li&gt;
            &lt;li&gt;   java.util.logging.MemoryHandler.formatter=java.util.logging.SimpleFormatter &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>For a custom handler, e.g. com.foo.MyHandler, the properties would be:
            &lt;ul&gt;
            &lt;li&gt;   com.foo.MyHandler.level=INFO &lt;/li&gt;
            &lt;li&gt;   com.foo.MyHandler.formatter=java.util.logging.SimpleFormatter &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para />
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryHandler();" />
      <MemberSignature Language="C#" Value="public MemoryHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a <c>MemoryHandler</c> and configure it based on
            <c>LogManager</c> configuration properties.</summary>
        <remarks>
          <para>Create a <c>MemoryHandler</c> and configure it based on
            <c>LogManager</c> configuration properties.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#MemoryHandler()" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.MemoryHandler()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.RuntimeException">if property value are invalid and no default value could be
             used.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MemoryHandler(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected MemoryHandler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.MemoryHandler : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Logging.MemoryHandler" Usage="new Java.Util.Logging.MemoryHandler (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Handler, size As Integer, pushLevel As Level)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryHandler(Java::Util::Logging::Handler ^ target, int size, Java::Util::Logging::Level ^ pushLevel);" />
      <MemberSignature Language="C#" Value="public MemoryHandler (Java.Util.Logging.Handler? target, int size, Java.Util.Logging.Level? pushLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.Logging.Handler target, int32 size, class Java.Util.Logging.Level pushLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.#ctor(Java.Util.Logging.Handler,System.Int32,Java.Util.Logging.Level)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.MemoryHandler : Java.Util.Logging.Handler * int * Java.Util.Logging.Level -&gt; Java.Util.Logging.MemoryHandler" Usage="new Java.Util.Logging.MemoryHandler (target, size, pushLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/logging/Handler;ILjava/util/logging/Level;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/logging/Handler;ILjava/util/logging/Level;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="Java.Util.Logging.Handler" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="pushLevel" Type="Java.Util.Logging.Level" />
      </Parameters>
      <Docs>
        <param name="target">the Handler to which to publish output.</param>
        <param name="size">the number of log records to buffer (must be greater than zero)</param>
        <param name="pushLevel">message level to push on</param>
        <summary>Create a <c>MemoryHandler</c>.</summary>
        <remarks>
          <para>Create a <c>MemoryHandler</c>.</para>
          <para>The <c>MemoryHandler</c> is configured based on <c>LogManager</c>
            properties (or their default values) except that the given <c>pushLevel</c>
            argument and buffer size argument are used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#MemoryHandler(java.util.logging.Handler,%20int,%20java.util.logging.Level)" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.MemoryHandler(java.util.logging.Handler, int, java.util.logging.Level)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>size &lt;= 0</c></exception>
        <exception cref="T:Java.Lang.RuntimeException">if property value are invalid and no default value could be
             used.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.Close" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="memoryHandler.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Close the <c>Handler</c> and free all associated resources.</summary>
        <remarks>
          <para>Close the <c>Handler</c> and free all associated resources.
            This will also close the target <c>Handler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#close()" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.Flush" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="memoryHandler.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "GetFlushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes a flush on the target <c>Handler</c>.</summary>
        <remarks>
          <para>Causes a flush on the target <c>Handler</c>.</para>
          <para>Note that the current contents of the <c>MemoryHandler</c>
            buffer are &lt;b&gt;not&lt;/b&gt; written out.  That requires a "push".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#flush()" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.MemoryHandler.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Logging.MemoryHandler.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Publish (record As LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Publish(Java::Util::Logging::LogRecord ^ record);" />
      <MemberSignature Language="C#" Value="public override void Publish (Java.Util.Logging.LogRecord? record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Publish(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.Publish(Java.Util.Logging.LogRecord)" />
      <MemberSignature Language="F#" Value="override this.Publish : Java.Util.Logging.LogRecord -&gt; unit" Usage="memoryHandler.Publish record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("publish", "(Ljava/util/logging/LogRecord;)V", "GetPublish_Ljava_util_logging_LogRecord_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("publish", "(Ljava/util/logging/LogRecord;)V", "GetPublish_Ljava_util_logging_LogRecord_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">description of the log event. A null record is
                            silently ignored and is not published</param>
        <summary>Store a <c>LogRecord</c> in an internal buffer.</summary>
        <remarks>
          <para>Store a <c>LogRecord</c> in an internal buffer.</para>
          <para>If there is a <c>Filter</c>, its <c>isLoggable</c>
            method is called to check if the given log record is loggable.
            If not we return.  Otherwise the given record is copied into
            an internal circular buffer.  Then the record's level property is
            compared with the <c>pushLevel</c>. If the given level is
            greater than or equal to the <c>pushLevel</c> then <c>push</c>
            is called to write all buffered records to the target output
            <c>Handler</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#publish(java.util.logging.LogRecord)" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.publish(java.util.logging.LogRecord)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Push();" />
      <MemberSignature Language="C#" Value="public virtual void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.MemoryHandler.Push" />
      <MemberSignature Language="F#" Value="abstract member Push : unit -&gt; unit&#xA;override this.Push : unit -&gt; unit" Usage="memoryHandler.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("push", "()V", "GetPushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("push", "()V", "GetPushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Push any buffered output to the target <c>Handler</c>.</summary>
        <remarks>
          <para>Push any buffered output to the target <c>Handler</c>.</para>
          <para>The buffer is then cleared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#push()" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.push()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PushLevel">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PushLevel As Level" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Util::Logging::Level ^ PushLevel { Java::Util::Logging::Level ^ get(); void set(Java::Util::Logging::Level ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Level? PushLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Level PushLevel" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.MemoryHandler.PushLevel" />
      <MemberSignature Language="F#" Value="member this.PushLevel : Java.Util.Logging.Level with get, set" Usage="Java.Util.Logging.MemoryHandler.PushLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPushLevel", "()Ljava/util/logging/Level;", "GetGetPushLevelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPushLevel", "()Ljava/util/logging/Level;", "GetGetPushLevelHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPushLevel", "(Ljava/util/logging/Level;)V", "GetSetPushLevel_Ljava_util_logging_Level_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPushLevel", "(Ljava/util/logging/Level;)V", "GetSetPushLevel_Ljava_util_logging_Level_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Level</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newLevel">the new value of the <c>pushLevel</c></param>
        <summary>Get the <c>pushLevel</c>. -or- Set the <c>pushLevel</c>.</summary>
        <value>the value of the <c>pushLevel</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the <c>pushLevel</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#getPushLevel()" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.getPushLevel()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the <c>pushLevel</c>.  After a <c>LogRecord</c> is copied
            into our internal buffer, if its level is greater than or equal to
            the <c>pushLevel</c>, then <c>push</c> will be called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/MemoryHandler#setPushLevel(java.util.logging.Level)" title="Reference documentation">Java documentation for <code>java.util.logging.MemoryHandler.setPushLevel(java.util.logging.Level)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.MemoryHandler.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Logging.MemoryHandler.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.MemoryHandler.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Logging.MemoryHandler.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
