<Type Name="SimpleFormatter" FullName="Java.Util.Logging.SimpleFormatter">
  <TypeSignature Language="VB.NET" Value="Public Class SimpleFormatter&#xA;Inherits Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SimpleFormatter : Java::Util::Logging::Formatter" />
  <TypeSignature Language="C#" Value="public class SimpleFormatter : Java.Util.Logging.Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleFormatter extends Java.Util.Logging.Formatter" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Logging.SimpleFormatter" />
  <TypeSignature Language="F#" Value="type SimpleFormatter = class&#xA;    inherit Formatter" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Logging.Formatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/logging/SimpleFormatter", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/logging/SimpleFormatter", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Print a brief summary of the <c>LogRecord</c> in a human readable
            format.</summary>
    <remarks>
      <para>Print a brief summary of the <c>LogRecord</c> in a human readable
            format.  The summary will typically be 1 or 2 lines.</para>
      <para>"formatting"&gt;
            &lt;b&gt;Configuration:&lt;/b&gt;
            The <c>SimpleFormatter</c> is initialized with the
            format string
            specified in the <c>java.util.logging.SimpleFormatter.format</c>
            property to #format format the log messages.
            This property can be defined
            in the LogManager#getProperty logging properties
            configuration file
            or as a system property.  If this property is set in both
            the logging properties and system properties,
            the format string specified in the system property will be used.
            If this property is not defined or the given format string
            is java.util.IllegalFormatException illegal,
            the default format is implementation-specific.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/logging/SimpleFormatter" title="Reference documentation">Java documentation for <code>java.util.logging.SimpleFormatter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SimpleFormatter();" />
      <MemberSignature Language="C#" Value="public SimpleFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.SimpleFormatter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>SimpleFormatter</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SimpleFormatter(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SimpleFormatter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.SimpleFormatter.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.SimpleFormatter : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Logging.SimpleFormatter" Usage="new Java.Util.Logging.SimpleFormatter (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Format (record As LogRecord) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Format(Java::Util::Logging::LogRecord ^ record);" />
      <MemberSignature Language="C#" Value="public override string? Format (Java.Util.Logging.LogRecord? record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Format(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.SimpleFormatter.Format(Java.Util.Logging.LogRecord)" />
      <MemberSignature Language="F#" Value="override this.Format : Java.Util.Logging.LogRecord -&gt; string" Usage="simpleFormatter.Format record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Ljava/util/logging/LogRecord;)Ljava/lang/String;", "GetFormat_Ljava_util_logging_LogRecord_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Ljava/util/logging/LogRecord;)Ljava/lang/String;", "GetFormat_Ljava_util_logging_LogRecord_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">the log record to be formatted.</param>
        <summary>Format the given LogRecord.</summary>
        <returns>a formatted log record</returns>
        <remarks>
          <para>Format the given LogRecord.</para>
          <para>The formatting can be customized by specifying the
            format string
            in the 
            &lt;c&gt;java.util.logging.SimpleFormatter.format&lt;/c&gt; property.
            The given <c>LogRecord</c> will be formatted as if by calling:</para>
          <code lang="text/java">{@link String#format String.format}(format, date, source, logger, level, message, thrown);
            </code>
          <para>where the arguments are:&lt;br&gt;
            &lt;ol&gt;
            &lt;li&gt;<c>format</c> - the <c>java.util.Formatter
                java.util.Formatter</c> format string specified in the
                <c>java.util.logging.SimpleFormatter.format</c> property
                or the default format.&lt;/li&gt;
            &lt;li&gt;<c>date</c> - a <c>Date</c> object representing
                LogRecord#getMillis event time of the log record.&lt;/li&gt;
            &lt;li&gt;<c>source</c> - a string representing the caller, if available;
                otherwise, the logger's name.&lt;/li&gt;
            &lt;li&gt;<c>logger</c> - the logger's name.&lt;/li&gt;
            &lt;li&gt;<c>level</c> - the Level#getLocalizedName
                log level.&lt;/li&gt;
            &lt;li&gt;<c>message</c> - the formatted log message
                returned from the <c>Formatter#formatMessage(LogRecord)</c>
                method.  It uses <c>java.text.MessageFormat java.text</c>
                formatting and does not use the <c>java.util.Formatter
                format</c> argument.&lt;/li&gt;
            &lt;li&gt;<c>thrown</c> - a string representing
                the LogRecord#getThrown throwable
                associated with the log record and its backtrace
                beginning with a newline character, if any;
                otherwise, an empty string.&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>Some example formats:&lt;br&gt;
            &lt;ul&gt;
            &lt;li&gt; <c>java.util.logging.SimpleFormatter.format="%4$s: %5$s [%1$tc]%n"</c></para>
          <para>This prints 1 line with the log level (<c>4$</c>),
                the log message (<c>5$</c>) and the timestamp (<c>1$</c>) in
                a square bracket.</para>
          <code lang="text/java">WARNING: warning message [Tue Mar 22 13:11:31 PDT 2011]
                </code>
          <para>&lt;/li&gt;
            &lt;li&gt; <c>java.util.logging.SimpleFormatter.format="%1$tc %2$s%n%4$s: %5$s%6$s%n"</c></para>
          <para>This prints 2 lines where the first line includes
                the timestamp (<c>1$</c>) and the source (<c>2$</c>);
                the second line includes the log level (<c>4$</c>) and
                the log message (<c>5$</c>) followed with the throwable
                and its backtrace (<c>6$</c>), if any:</para>
          <code lang="text/java">Tue Mar 22 13:11:31 PDT 2011 MyClass fatal
                SEVERE: several message with an exception
                java.lang.IllegalArgumentException: invalid argument
                        at MyClass.mash(MyClass.java:9)
                        at MyClass.crunch(MyClass.java:6)
                        at MyClass.main(MyClass.java:3)
                </code>
          <para>&lt;/li&gt;
            &lt;li&gt; <c>java.util.logging.SimpleFormatter.format="%1$tb %1$td, %1$tY %1$tl:%1$tM:%1$tS %1$Tp %2$s%n%4$s: %5$s%n"</c></para>
          <para>This prints 2 lines similar to the example above
                    with a different date/time formatting and does not print
                    the throwable and its backtrace:</para>
          <code lang="text/java">Mar 22, 2011 1:11:31 PM MyClass fatal
                SEVERE: several message with an exception
                </code>
          <para>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>This method can also be overridden in a subclass.
            It is recommended to use the <c>Formatter#formatMessage</c>
            convenience method to localize and format the message field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/SimpleFormatter#format(java.util.logging.LogRecord)" title="Reference documentation">Java documentation for <code>java.util.logging.SimpleFormatter.format(java.util.logging.LogRecord)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.SimpleFormatter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Logging.SimpleFormatter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.SimpleFormatter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Logging.SimpleFormatter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.SimpleFormatter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Logging.SimpleFormatter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
