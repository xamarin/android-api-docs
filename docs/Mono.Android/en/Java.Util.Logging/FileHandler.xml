<Type Name="FileHandler" FullName="Java.Util.Logging.FileHandler">
  <TypeSignature Language="VB.NET" Value="Public Class FileHandler&#xA;Inherits StreamHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileHandler : Java::Util::Logging::StreamHandler" />
  <TypeSignature Language="C#" Value="public class FileHandler : Java.Util.Logging.StreamHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileHandler extends Java.Util.Logging.StreamHandler" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Logging.FileHandler" />
  <TypeSignature Language="F#" Value="type FileHandler = class&#xA;    inherit StreamHandler" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Logging.StreamHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/logging/FileHandler", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/logging/FileHandler", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Simple file logging <c>Handler</c>.</summary>
    <remarks>
      <para>Simple file logging <c>Handler</c>.</para>
      <para>The <c>FileHandler</c> can either write to a specified file,
            or it can write to a rotating set of files.</para>
      <para>For a rotating set of files, as each file reaches a given size
            limit, it is closed, rotated out, and a new file opened.
            Successively older files are named by adding "0", "1", "2",
            etc. into the base filename.</para>
      <para>By default buffering is enabled in the IO libraries but each log
            record is flushed out when it is complete.</para>
      <para>By default the <c>XMLFormatter</c> class is used for formatting.</para>
      <para>&lt;b&gt;Configuration:&lt;/b&gt;
            By default each <c>FileHandler</c> is initialized using the following
            <c>LogManager</c> configuration properties where <c>&amp;lt;handler-name&amp;gt;</c>
            refers to the fully-qualified class name of the handler.
            If properties are not defined
            (or have invalid values) then the specified default values are used.
            &lt;ul&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.level
                   specifies the default level for the <c>Handler</c>
                   (defaults to <c>Level.ALL</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.filter
                   specifies the name of a <c>Filter</c> class to use
                   (defaults to no <c>Filter</c>). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.formatter
                   specifies the name of a <c>Formatter</c> class to use
                   (defaults to <c>java.util.logging.XMLFormatter</c>) &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.encoding
                   the name of the character set encoding to use (defaults to
                   the default platform encoding). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.limit
                   specifies an approximate maximum amount to write (in bytes)
                   to any one file.  If this is zero, then there is no limit.
                   (Defaults to no limit). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.count
                   specifies how many output files to cycle through (defaults to 1). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.pattern
                   specifies a pattern for generating the output file name.  See
                   below for details. (Defaults to "%h/java%u.log"). &lt;/li&gt;
            &lt;li&gt;   &amp;lt;handler-name&amp;gt;.append
                   specifies whether the FileHandler should append onto
                   any existing files (defaults to false). &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>For example, the properties for <c>FileHandler</c> would be:
            &lt;ul&gt;
            &lt;li&gt;   java.util.logging.FileHandler.level=INFO &lt;/li&gt;
            &lt;li&gt;   java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>For a custom handler, e.g. com.foo.MyHandler, the properties would be:
            &lt;ul&gt;
            &lt;li&gt;   com.foo.MyHandler.level=INFO &lt;/li&gt;
            &lt;li&gt;   com.foo.MyHandler.formatter=java.util.logging.SimpleFormatter &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>A pattern consists of a string that includes the following special
            components that will be replaced at runtime:
            &lt;ul&gt;
            &lt;li&gt;    "/"    the local pathname separator &lt;/li&gt;
            &lt;li&gt;     "%t"   the system temporary directory &lt;/li&gt;
            &lt;li&gt;     "%h"   the value of the "user.home" system property &lt;/li&gt;
            &lt;li&gt;     "%g"   the generation number to distinguish rotated logs &lt;/li&gt;
            &lt;li&gt;     "%u"   a unique number to resolve conflicts &lt;/li&gt;
            &lt;li&gt;     "%%"   translates to a single percent sign "%" &lt;/li&gt;
            &lt;/ul&gt;
            If no "%g" field has been specified and the file count is greater
            than one, then the generation number will be added to the end of
            the generated filename, after a dot.</para>
      <para>Thus for example a pattern of "%t/java%g.log" with a count of 2
            would typically cause log files to be written on Solaris to
            /var/tmp/java0.log and /var/tmp/java1.log whereas on Windows 95 they
            would be typically written to C:\TEMP\java0.log and C:\TEMP\java1.log</para>
      <para>Generation numbers follow the sequence 0, 1, 2, etc.</para>
      <para>Normally the "%u" unique field is set to 0.  However, if the <c>FileHandler</c>
            tries to open the filename and finds the file is currently in use by
            another process it will increment the unique number field and try
            again.  This will be repeated until <c>FileHandler</c> finds a file name that
            is  not currently in use. If there is a conflict and no "%u" field has
            been specified, it will be added at the end of the filename after a dot.
            (This will be after any automatically added generation number.)</para>
      <para>Thus if three processes were all trying to log to fred%u.%g.txt then
            they  might end up using fred0.0.txt, fred1.0.txt, fred2.0.txt as
            the first file in their rotating sequences.</para>
      <para>Note that the use of unique ids to avoid conflicts is only guaranteed
            to work reliably when using a local disk file system.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/logging/FileHandler" title="Reference documentation">Java documentation for <code>java.util.logging.FileHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileHandler();" />
      <MemberSignature Language="C#" Value="public FileHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.FileHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Construct a default <c>FileHandler</c>.</summary>
        <remarks>
          <para>Construct a default <c>FileHandler</c>.  This will be configured
            entirely from <c>LogManager</c> properties (or their default values).</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/FileHandler#FileHandler()" title="Reference documentation">Java documentation for <code>java.util.logging.FileHandler.FileHandler()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileHandler(System::String ^ pattern);" />
      <MemberSignature Language="C#" Value="public FileHandler (string? pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.FileHandler.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.FileHandler : string -&gt; Java.Util.Logging.FileHandler" Usage="new Java.Util.Logging.FileHandler pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">the name of the output file</param>
        <summary>Initialize a <c>FileHandler</c> to write to the given filename.</summary>
        <remarks>
          <para>Initialize a <c>FileHandler</c> to write to the given filename.</para>
          <para>The <c>FileHandler</c> is configured based on <c>LogManager</c>
            properties (or their default values) except that the given pattern
            argument is used as the filename pattern, the file limit is
            set to no limit, and the file count is set to one.</para>
          <para>There is no limit on the amount of data that may be written,
            so use this with care.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/FileHandler#FileHandler(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.logging.FileHandler.FileHandler(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is empty.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileHandler(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected FileHandler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.FileHandler.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.FileHandler : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Logging.FileHandler" Usage="new Java.Util.Logging.FileHandler (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileHandler(System::String ^ pattern, bool append);" />
      <MemberSignature Language="C#" Value="public FileHandler (string? pattern, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.FileHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.FileHandler : string * bool -&gt; Java.Util.Logging.FileHandler" Usage="new Java.Util.Logging.FileHandler (pattern, append)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Z)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">the name of the output file</param>
        <param name="append">specifies append mode</param>
        <summary>Initialize a <c>FileHandler</c> to write to the given filename,
            with optional append.</summary>
        <remarks>
          <para>Initialize a <c>FileHandler</c> to write to the given filename,
            with optional append.</para>
          <para>The <c>FileHandler</c> is configured based on <c>LogManager</c>
            properties (or their default values) except that the given pattern
            argument is used as the filename pattern, the file limit is
            set to no limit, the file count is set to one, and the append
            mode is set to the given <c>append</c> argument.</para>
          <para>There is no limit on the amount of data that may be written,
            so use this with care.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/FileHandler#FileHandler(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.logging.FileHandler.FileHandler(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>pattern</c> is empty.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>pattern</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, limit As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileHandler(System::String ^ pattern, int limit, int count);" />
      <MemberSignature Language="C#" Value="public FileHandler (string? pattern, int limit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, int32 limit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.FileHandler.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.FileHandler : string * int * int -&gt; Java.Util.Logging.FileHandler" Usage="new Java.Util.Logging.FileHandler (pattern, limit, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;II)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pattern">the pattern for naming the output file</param>
        <param name="limit">the maximum number of bytes to write to any one file</param>
        <param name="count">the number of files to use</param>
        <summary>Initialize a <c>FileHandler</c> to write to a set of files.</summary>
        <remarks>
          <para>Initialize a <c>FileHandler</c> to write to a set of files.  When
            (approximately) the given limit has been written to one file,
            another file will be opened.  The output will cycle through a set
            of count files.</para>
          <para>The <c>FileHandler</c> is configured based on <c>LogManager</c>
            properties (or their default values) except that the given pattern
            argument is used as the filename pattern, the file limit is
            set to the limit argument, and the file count is set to the
            given count argument.</para>
          <para>The count must be at least 1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/FileHandler#FileHandler(java.lang.String,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.logging.FileHandler.FileHandler(java.lang.String, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>pattern</c> is empty, <c>limit </c> or
             <c>count </c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>pattern</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, limit As Integer, count As Integer, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileHandler(System::String ^ pattern, int limit, int count, bool append);" />
      <MemberSignature Language="C#" Value="public FileHandler (string? pattern, int limit, int count, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, int32 limit, int32 count, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.FileHandler.#ctor(System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.FileHandler : string * int * int * bool -&gt; Java.Util.Logging.FileHandler" Usage="new Java.Util.Logging.FileHandler (pattern, limit, count, append)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;IIZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;IIZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">the pattern for naming the output file</param>
        <param name="limit">the maximum number of bytes to write to any one file</param>
        <param name="count">the number of files to use</param>
        <param name="append">specifies append mode</param>
        <summary>Initialize a <c>FileHandler</c> to write to a set of files
            with optional append.</summary>
        <remarks>
          <para>Initialize a <c>FileHandler</c> to write to a set of files
            with optional append.  When (approximately) the given limit has
            been written to one file, another file will be opened.  The
            output will cycle through a set of count files.</para>
          <para>The <c>FileHandler</c> is configured based on <c>LogManager</c>
            properties (or their default values) except that the given pattern
            argument is used as the filename pattern, the file limit is
            set to the limit argument, and the file count is set to the
            given count argument, and the append mode is set to the given
            <c>append</c> argument.</para>
          <para>The count must be at least 1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/logging/FileHandler#FileHandler(java.lang.String,%20int,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.logging.FileHandler.FileHandler(java.lang.String, int, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>pattern</c> is empty, <c>limit </c> or
             <c>count </c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>pattern</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.FileHandler.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Logging.FileHandler.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.FileHandler.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Logging.FileHandler.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.FileHandler.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Logging.FileHandler.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
