<Type Name="ByteBuffer" FullName="Java.Nio.ByteBuffer">
  <TypeSignature Language="C#" Value="public abstract class ByteBuffer : Java.Nio.Buffer, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ByteBuffer extends Java.Nio.Buffer implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.ByteBuffer" />
  <TypeSignature Language="F#" Value="type ByteBuffer = class&#xA;    inherit Buffer&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Buffer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/ByteBuffer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/ByteBuffer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A byte buffer.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/ByteBuffer" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ByteBuffer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.ByteBuffer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.ByteBuffer" Usage="new Java.Nio.ByteBuffer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignedSlice">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer AlignedSlice (int unitSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer AlignedSlice(int32 unitSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AlignedSlice(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AlignedSlice : int -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.AlignedSlice unitSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("alignedSlice", "(I)Ljava/nio/ByteBuffer;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("alignedSlice", "(I)Ljava/nio/ByteBuffer;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unitSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unitSize">The unit size in bytes, must be a power of <c>2</c></param>
        <summary>Creates a new byte buffer whose content is a shared and aligned
            subsequence of this buffer's content.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#alignedSlice(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.alignedSlice(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentOffset">
      <MemberSignature Language="C#" Value="public int AlignmentOffset (int index, int unitSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AlignmentOffset(int32 index, int32 unitSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AlignmentOffset(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AlignmentOffset : int * int -&gt; int" Usage="byteBuffer.AlignmentOffset (index, unitSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("alignmentOffset", "(II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("alignmentOffset", "(II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="unitSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index to query for alignment offset, must be non-negative, no
                    upper bounds check is performed</param>
        <param name="unitSize">The unit size in bytes, must be a power of <c>2</c></param>
        <summary>Returns the memory address, pointing to the byte at the given index,
            modulus the given unit size.</summary>
        <returns>The indexed byte's memory address modulus the unit size</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#alignmentOffset(int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.alignmentOffset(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public static Java.Nio.ByteBuffer Allocate (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ByteBuffer Allocate(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Allocate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member Allocate : int -&gt; Java.Nio.ByteBuffer" Usage="Java.Nio.ByteBuffer.Allocate capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allocate", "(I)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allocate", "(I)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">The new buffer's capacity, in bytes</param>
        <summary>Allocates a new byte buffer.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#allocate(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.allocate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>capacity </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AllocateDirect">
      <MemberSignature Language="C#" Value="public static Java.Nio.ByteBuffer AllocateDirect (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ByteBuffer AllocateDirect(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AllocateDirect(System.Int32)" />
      <MemberSignature Language="F#" Value="static member AllocateDirect : int -&gt; Java.Nio.ByteBuffer" Usage="Java.Nio.ByteBuffer.AllocateDirect capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allocateDirect", "(I)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allocateDirect", "(I)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">The new buffer's capacity, in bytes</param>
        <summary>Allocates a new direct byte buffer.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#allocateDirect(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.allocateDirect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>capacity </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayOffset">
      <MemberSignature Language="C#" Value="public override sealed int ArrayOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ArrayOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.ArrayOffset" />
      <MemberSignature Language="F#" Value="override this.ArrayOffset : unit -&gt; int" Usage="byteBuffer.ArrayOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayOffset", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayOffset", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the offset within this buffer's backing array of the first
            element of the buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>The offset within this buffer's array
                     of the first element of the buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#arrayOffset()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.arrayOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if this buffer is based on a read-only array.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this buffer is not based on an array.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AsCharBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer AsCharBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer AsCharBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsCharBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsCharBuffer : unit -&gt; Java.Nio.CharBuffer" Usage="byteBuffer.AsCharBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asCharBuffer", "()Ljava/nio/CharBuffer;", "GetAsCharBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asCharBuffer", "()Ljava/nio/CharBuffer;", "GetAsCharBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a view of this byte buffer as a char buffer.</summary>
        <returns>A new char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asCharBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asCharBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsDoubleBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.DoubleBuffer AsDoubleBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.DoubleBuffer AsDoubleBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsDoubleBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsDoubleBuffer : unit -&gt; Java.Nio.DoubleBuffer" Usage="byteBuffer.AsDoubleBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asDoubleBuffer", "()Ljava/nio/DoubleBuffer;", "GetAsDoubleBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asDoubleBuffer", "()Ljava/nio/DoubleBuffer;", "GetAsDoubleBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.DoubleBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a view of this byte buffer as a double buffer.</summary>
        <returns>A new double buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asDoubleBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asDoubleBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsFloatBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer AsFloatBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer AsFloatBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsFloatBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsFloatBuffer : unit -&gt; Java.Nio.FloatBuffer" Usage="byteBuffer.AsFloatBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asFloatBuffer", "()Ljava/nio/FloatBuffer;", "GetAsFloatBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asFloatBuffer", "()Ljava/nio/FloatBuffer;", "GetAsFloatBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a view of this byte buffer as a float buffer.</summary>
        <returns>A new float buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asFloatBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asFloatBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsIntBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.IntBuffer AsIntBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.IntBuffer AsIntBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsIntBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsIntBuffer : unit -&gt; Java.Nio.IntBuffer" Usage="byteBuffer.AsIntBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asIntBuffer", "()Ljava/nio/IntBuffer;", "GetAsIntBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asIntBuffer", "()Ljava/nio/IntBuffer;", "GetAsIntBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.IntBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a view of this byte buffer as an int buffer.</summary>
        <returns>A new int buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asIntBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asIntBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsLongBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.LongBuffer AsLongBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.LongBuffer AsLongBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsLongBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsLongBuffer : unit -&gt; Java.Nio.LongBuffer" Usage="byteBuffer.AsLongBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asLongBuffer", "()Ljava/nio/LongBuffer;", "GetAsLongBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asLongBuffer", "()Ljava/nio/LongBuffer;", "GetAsLongBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.LongBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a view of this byte buffer as a long buffer.</summary>
        <returns>A new long buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asLongBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asLongBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnlyBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer AsReadOnlyBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer AsReadOnlyBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsReadOnlyBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsReadOnlyBuffer : unit -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.AsReadOnlyBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/ByteBuffer;", "GetAsReadOnlyBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/ByteBuffer;", "GetAsReadOnlyBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new, read-only byte buffer that shares this buffer's
            content.</summary>
        <returns>The new, read-only byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asReadOnlyBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asReadOnlyBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsShortBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer AsShortBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer AsShortBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.AsShortBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsShortBuffer : unit -&gt; Java.Nio.ShortBuffer" Usage="byteBuffer.AsShortBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asShortBuffer", "()Ljava/nio/ShortBuffer;", "GetAsShortBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asShortBuffer", "()Ljava/nio/ShortBuffer;", "GetAsShortBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a view of this byte buffer as a short buffer.</summary>
        <returns>A new short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#asShortBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.asShortBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="public abstract char Char { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Char" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.Char" />
      <MemberSignature Language="F#" Value="member this.Char : char" Usage="Java.Nio.ByteBuffer.Char" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChar", "()C", "GetGetCharHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChar", "()C", "GetGetCharHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the char at the current position and increases the position by 2.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is greater than <c>limit - 2</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer Compact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Compact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Compact" />
      <MemberSignature Language="F#" Value="abstract member Compact : unit -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Compact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compact", "()Ljava/nio/ByteBuffer;", "GetCompactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compact", "()Ljava/nio/ByteBuffer;", "GetCompactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compacts this buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#compact()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.compact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Nio.ByteBuffer that);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Nio.ByteBuffer that) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.CompareTo(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.Nio.ByteBuffer -&gt; int&#xA;override this.CompareTo : Java.Nio.ByteBuffer -&gt; int" Usage="byteBuffer.CompareTo that" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/nio/ByteBuffer;)I", "GetCompareTo_Ljava_nio_ByteBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/nio/ByteBuffer;)I", "GetCompareTo_Ljava_nio_ByteBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="that" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="that">To be added.</param>
        <summary>Compares this buffer to another.</summary>
        <returns>A negative integer, zero, or a positive integer as this buffer
                     is less than, equal to, or greater than the given buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#compareTo(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.compareTo(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if <c>other</c> is not a byte buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Double">
      <MemberSignature Language="C#" Value="public abstract double Double { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Double" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.Double" />
      <MemberSignature Language="F#" Value="member this.Double : double" Usage="Java.Nio.ByteBuffer.Double" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDouble", "()D", "GetGetDoubleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDouble", "()D", "GetGetDoubleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the double at the current position and increases the position by
 8.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is greater than <c>limit - 8</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Duplicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Duplicate" />
      <MemberSignature Language="F#" Value="abstract member Duplicate : unit -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Duplicate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("duplicate", "()Ljava/nio/ByteBuffer;", "GetDuplicateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("duplicate", "()Ljava/nio/ByteBuffer;", "GetDuplicateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new byte buffer that shares this buffer's content.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#duplicate()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.duplicate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Float">
      <MemberSignature Language="C#" Value="public abstract float Float { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Float" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.Float" />
      <MemberSignature Language="F#" Value="member this.Float : single" Usage="Java.Nio.ByteBuffer.Float" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFloat", "()F", "GetGetFloatHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFloat", "()F", "GetGetFloatHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the float at the current position and increases the position by
 4.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is greater than <c>limit - 4</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract sbyte Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Get" />
      <MemberSignature Language="F#" Value="abstract member Get : unit -&gt; sbyte" Usage="byteBuffer.Get " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "()B", "GetGetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "()B", "GetGetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The byte at the buffer's current position</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#get()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is equal or greater than limit.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ByteBuffer Get (byte[] dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Get(unsigned int8[] dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Get(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Get : byte[] -&gt; Java.Nio.ByteBuffer&#xA;override this.Get : byte[] -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Get dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([B)Ljava/nio/ByteBuffer;", "GetGet_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([B)Ljava/nio/ByteBuffer;", "GetGet_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="dst">The destination array</param>
        <summary>Relative bulk <i>get</i> method.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#get(byte[])" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.get(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>dst.length</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract sbyte Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Get(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; sbyte" Usage="byteBuffer.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(I)B", "GetGet_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(I)B", "GetGet_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the byte will be read</param>
        <summary>Absolute <i>get</i> method.</summary>
        <returns>The byte at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#get(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.get(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ByteBuffer Get (byte[] dst, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Get(unsigned int8[] dst, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Get(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Get : byte[] * int * int -&gt; Java.Nio.ByteBuffer&#xA;override this.Get : byte[] * int * int -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Get (dst, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([BII)Ljava/nio/ByteBuffer;", "GetGet_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([BII)Ljava/nio/ByteBuffer;", "GetGet_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">The array into which bytes are to be written</param>
        <param name="offset">The offset within the array of the first byte to be
                    written; must be non-negative and no larger than
                    <c>dst.length</c></param>
        <param name="length">The maximum number of bytes to be written to the given
                    array; must be non-negative and no larger than
                    <c>dst.length - offset</c></param>
        <summary>Relative bulk <i>get</i> method.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#get(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.get(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>dstOffset </c></exception>
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>byteCount &gt; remaining()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public abstract char GetChar (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.GetChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetChar : int -&gt; char" Usage="byteBuffer.GetChar index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getChar", "(I)C", "GetGetChar_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getChar", "(I)C", "GetGetChar_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the bytes will be read</param>
        <summary>Absolute <i>get</i> method for reading a char value.</summary>
        <returns>The char value at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#getChar(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.getChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public abstract double GetDouble (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.GetDouble(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : int -&gt; double" Usage="byteBuffer.GetDouble index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDouble", "(I)D", "GetGetDouble_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDouble", "(I)D", "GetGetDouble_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the bytes will be read</param>
        <summary>Absolute <i>get</i> method for reading a double value.</summary>
        <returns>The double value at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#getDouble(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.getDouble(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public abstract float GetFloat (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.GetFloat(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : int -&gt; single" Usage="byteBuffer.GetFloat index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFloat", "(I)F", "GetGetFloat_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFloat", "(I)F", "GetGetFloat_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the bytes will be read</param>
        <summary>Absolute <i>get</i> method for reading a float value.</summary>
        <returns>The float value at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#getFloat(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.getFloat(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt">
      <MemberSignature Language="C#" Value="public abstract int GetInt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.GetInt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetInt : int -&gt; int" Usage="byteBuffer.GetInt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInt", "(I)I", "GetGetInt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInt", "(I)I", "GetGetInt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the bytes will be read</param>
        <summary>Absolute <i>get</i> method for reading an int value.</summary>
        <returns>The int value at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#getInt(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.getInt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLong">
      <MemberSignature Language="C#" Value="public abstract long GetLong (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetLong(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.GetLong(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLong : int -&gt; int64" Usage="byteBuffer.GetLong index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLong", "(I)J", "GetGetLong_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLong", "(I)J", "GetGetLong_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the bytes will be read</param>
        <summary>Absolute <i>get</i> method for reading a long value.</summary>
        <returns>The long value at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#getLong(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.getLong(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetShort">
      <MemberSignature Language="C#" Value="public abstract short GetShort (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetShort(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.GetShort(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetShort : int -&gt; int16" Usage="byteBuffer.GetShort index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShort", "(I)S", "GetGetShort_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShort", "(I)S", "GetGetShort_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the bytes will be read</param>
        <summary>Absolute <i>get</i> method for reading a short value.</summary>
        <returns>The short value at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#getShort(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.getShort(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public override bool HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasArray" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.HasArray" />
      <MemberSignature Language="F#" Value="member this.HasArray : bool" Usage="Java.Nio.ByteBuffer.HasArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasArray", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasArray", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this buffer is backed by an accessible byte
            array.</summary>
        <value>
          <c>true</c> if, and only if, this buffer
                     is backed by an array and is not read-only</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#hasArray()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.hasArray()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public abstract int Int { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Int" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.Int" />
      <MemberSignature Language="F#" Value="member this.Int : int" Usage="Java.Nio.ByteBuffer.Int" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInt", "()I", "GetGetIntHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInt", "()I", "GetGetIntHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the int at the current position and increases the position by 4.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is greater than <c>limit - 4</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="byteBuffer.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.ByteBuffer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Long">
      <MemberSignature Language="C#" Value="public abstract long Long { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Long" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.Long" />
      <MemberSignature Language="F#" Value="member this.Long : int64" Usage="Java.Nio.ByteBuffer.Long" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLong", "()J", "GetGetLongHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLong", "()J", "GetGetLongHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the long at the current position and increases the position by 8.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is greater than <c>limit - 8</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteOrder Order ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteOrder Order() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Order" />
      <MemberSignature Language="F#" Value="member this.Order : unit -&gt; Java.Nio.ByteOrder" Usage="byteBuffer.Order " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteOrder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves this buffer's byte order.</summary>
        <returns>This buffer's byte order</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#order()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.order()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer Order (Java.Nio.ByteOrder bo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer Order(class Java.Nio.ByteOrder bo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Order(Java.Nio.ByteOrder)" />
      <MemberSignature Language="F#" Value="member this.Order : Java.Nio.ByteOrder -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Order bo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("order", "(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("order", "(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bo" Type="Java.Nio.ByteOrder" />
      </Parameters>
      <Docs>
        <param name="bo">The new byte order,
                    either <c>ByteOrder#BIG_ENDIAN BIG_ENDIAN</c>
                    or <c>ByteOrder#LITTLE_ENDIAN LITTLE_ENDIAN</c></param>
        <summary>Modifies this buffer's byte order.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#order(java.nio.ByteOrder)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.order(java.nio.ByteOrder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Nio.ByteOrder" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ByteBuffer Put (Java.Nio.ByteBuffer src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Put(class Java.Nio.ByteBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Put(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Put : Java.Nio.ByteBuffer -&gt; Java.Nio.ByteBuffer&#xA;override this.Put : Java.Nio.ByteBuffer -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;", "GetPut_Ljava_nio_ByteBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;", "GetPut_Ljava_nio_ByteBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">The source buffer from which bytes are to be read;
                    must not be this buffer</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#put(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.put(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>src.remaining()</c> is greater than this buffer's
                <c>remaining()</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> is this buffer.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer Put (byte[] src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer Put(unsigned int8[] src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Put(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.Put : byte[] -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "([B)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "([B)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="src">The source array</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#put(byte[])" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.put(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>src.length</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer Put (sbyte b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Put(int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Put(System.SByte)" />
      <MemberSignature Language="F#" Value="abstract member Put : sbyte -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Put b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(B)Ljava/nio/ByteBuffer;", "GetPut_BHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(B)Ljava/nio/ByteBuffer;", "GetPut_BHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="b">The byte to be written</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#put(byte)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.put(byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is equal or greater than limit.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer Put (int index, sbyte b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Put(int32 index, int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Put(System.Int32,System.SByte)" />
      <MemberSignature Language="F#" Value="abstract member Put : int * sbyte -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Put (index, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(IB)Ljava/nio/ByteBuffer;", "GetPut_IBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(IB)Ljava/nio/ByteBuffer;", "GetPut_IBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="b" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the byte will be written</param>
        <param name="b">The byte value to be written</param>
        <summary>Absolute <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#put(int,%20byte)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.put(int, byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ByteBuffer Put (byte[] src, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Put(unsigned int8[] src, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Put(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Put : byte[] * int * int -&gt; Java.Nio.ByteBuffer&#xA;override this.Put : byte[] * int * int -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Put (src, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "([BII)Ljava/nio/ByteBuffer;", "GetPut_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "([BII)Ljava/nio/ByteBuffer;", "GetPut_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">The array from which bytes are to be read</param>
        <param name="offset">The offset within the array of the first byte to be read;
                    must be non-negative and no larger than <c>array.length</c></param>
        <param name="length">The number of bytes to be read from the given array;
                    must be non-negative and no larger than
                    <c>array.length - offset</c></param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#put(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.put(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>byteCount</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>srcOffset</c> or <c>byteCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutChar">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutChar (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutChar(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutChar(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member PutChar : char -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putChar", "(C)Ljava/nio/ByteBuffer;", "GetPutChar_CHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putChar", "(C)Ljava/nio/ByteBuffer;", "GetPutChar_CHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">The char value to be written</param>
        <summary>Relative <i>put</i> method for writing a char
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putChar(char)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putChar(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is greater than <c>limit - 2</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutChar">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutChar (int index, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutChar(int32 index, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutChar(System.Int32,System.Char)" />
      <MemberSignature Language="F#" Value="abstract member PutChar : int * char -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutChar (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putChar", "(IC)Ljava/nio/ByteBuffer;", "GetPutChar_ICHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putChar", "(IC)Ljava/nio/ByteBuffer;", "GetPutChar_ICHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the bytes will be written</param>
        <param name="value">The char value to be written</param>
        <summary>Absolute <i>put</i> method for writing a char
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putChar(int,%20char)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putChar(int, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutDouble">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutDouble(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutDouble(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member PutDouble : double -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putDouble", "(D)Ljava/nio/ByteBuffer;", "GetPutDouble_DHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putDouble", "(D)Ljava/nio/ByteBuffer;", "GetPutDouble_DHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The double value to be written</param>
        <summary>Relative <i>put</i> method for writing a double
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putDouble(double)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putDouble(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is greater than <c>limit - 8</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutDouble">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutDouble (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutDouble(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutDouble(System.Int32,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member PutDouble : int * double -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutDouble (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putDouble", "(ID)Ljava/nio/ByteBuffer;", "GetPutDouble_IDHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putDouble", "(ID)Ljava/nio/ByteBuffer;", "GetPutDouble_IDHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the bytes will be written</param>
        <param name="value">The double value to be written</param>
        <summary>Absolute <i>put</i> method for writing a double
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putDouble(int,%20double)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putDouble(int, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutFloat">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutFloat (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutFloat(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutFloat(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PutFloat : single -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutFloat value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putFloat", "(F)Ljava/nio/ByteBuffer;", "GetPutFloat_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putFloat", "(F)Ljava/nio/ByteBuffer;", "GetPutFloat_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The float value to be written</param>
        <summary>Relative <i>put</i> method for writing a float
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putFloat(float)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putFloat(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is greater than <c>limit - 4</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutFloat">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutFloat (int index, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutFloat(int32 index, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutFloat(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PutFloat : int * single -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutFloat (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putFloat", "(IF)Ljava/nio/ByteBuffer;", "GetPutFloat_IFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putFloat", "(IF)Ljava/nio/ByteBuffer;", "GetPutFloat_IFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the bytes will be written</param>
        <param name="value">The float value to be written</param>
        <summary>Absolute <i>put</i> method for writing a float
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putFloat(int,%20float)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putFloat(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutInt">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutInt (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutInt(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutInt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PutInt : int -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutInt value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putInt", "(I)Ljava/nio/ByteBuffer;", "GetPutInt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putInt", "(I)Ljava/nio/ByteBuffer;", "GetPutInt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The int value to be written</param>
        <summary>Relative <i>put</i> method for writing an int
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putInt(int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putInt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is greater than <c>limit - 4</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutInt">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutInt (int index, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutInt(int32 index, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutInt(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PutInt : int * int -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutInt (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putInt", "(II)Ljava/nio/ByteBuffer;", "GetPutInt_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putInt", "(II)Ljava/nio/ByteBuffer;", "GetPutInt_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the bytes will be written</param>
        <param name="value">The int value to be written</param>
        <summary>Absolute <i>put</i> method for writing an int
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putInt(int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putInt(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutLong">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutLong (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutLong(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutLong(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member PutLong : int64 -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutLong value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putLong", "(J)Ljava/nio/ByteBuffer;", "GetPutLong_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putLong", "(J)Ljava/nio/ByteBuffer;", "GetPutLong_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The long value to be written</param>
        <summary>Relative <i>put</i> method for writing a long
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putLong(long)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putLong(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is greater than <c>limit - 8</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutLong">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutLong (int index, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutLong(int32 index, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutLong(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member PutLong : int * int64 -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutLong (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putLong", "(IJ)Ljava/nio/ByteBuffer;", "GetPutLong_IJHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putLong", "(IJ)Ljava/nio/ByteBuffer;", "GetPutLong_IJHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the bytes will be written</param>
        <param name="value">The long value to be written</param>
        <summary>Absolute <i>put</i> method for writing a long
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putLong(int,%20long)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putLong(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutShort">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutShort (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutShort(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutShort(System.Int16)" />
      <MemberSignature Language="F#" Value="abstract member PutShort : int16 -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutShort value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putShort", "(S)Ljava/nio/ByteBuffer;", "GetPutShort_SHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putShort", "(S)Ljava/nio/ByteBuffer;", "GetPutShort_SHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">The short value to be written</param>
        <summary>Relative <i>put</i> method for writing a short
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putShort(short)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putShort(short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is greater than <c>limit - 2</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutShort">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer PutShort (int index, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer PutShort(int32 index, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.PutShort(System.Int32,System.Int16)" />
      <MemberSignature Language="F#" Value="abstract member PutShort : int * int16 -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.PutShort (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putShort", "(IS)Ljava/nio/ByteBuffer;", "GetPutShort_ISHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putShort", "(IS)Ljava/nio/ByteBuffer;", "GetPutShort_ISHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the bytes will be written</param>
        <param name="value">The short value to be written</param>
        <summary>Absolute <i>put</i> method for writing a short
            value&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#putShort(int,%20short)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.putShort(int, short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Short">
      <MemberSignature Language="C#" Value="public abstract short Short { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Short" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.Short" />
      <MemberSignature Language="F#" Value="member this.Short : int16" Usage="Java.Nio.ByteBuffer.Short" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShort", "()S", "GetGetShortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShort", "()S", "GetGetShortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the short at the current position and increases the position by 2.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is greater than <c>limit - 2</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteBuffer Slice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteBuffer Slice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Slice" />
      <MemberSignature Language="F#" Value="abstract member Slice : unit -&gt; Java.Nio.ByteBuffer" Usage="byteBuffer.Slice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slice", "()Ljava/nio/ByteBuffer;", "GetSliceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slice", "()Ljava/nio/ByteBuffer;", "GetSliceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new byte buffer whose content is a shared subsequence of
            this buffer's content.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#slice()" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.slice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.ByteBuffer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ByteBuffer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.ByteBuffer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.ByteBuffer Wrap (byte[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ByteBuffer Wrap(unsigned int8[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Wrap(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member Wrap : byte[] -&gt; Java.Nio.ByteBuffer" Usage="Java.Nio.ByteBuffer.Wrap array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "([B)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "([B)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back this buffer</param>
        <summary>Wraps a byte array into a buffer.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#wrap(byte[])" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.wrap(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.ByteBuffer Wrap (byte[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ByteBuffer Wrap(unsigned int8[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ByteBuffer.Wrap(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Wrap : byte[] * int * int -&gt; Java.Nio.ByteBuffer" Usage="Java.Nio.ByteBuffer.Wrap (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "([BII)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "([BII)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back the new buffer</param>
        <param name="offset">The offset of the subarray to be used; must be non-negative and
                    no larger than <c>array.length</c>.  The new buffer's position
                    will be set to this value.</param>
        <param name="length">The length of the subarray to be used;
                    must be non-negative and no larger than
                    <c>array.length - offset</c>.
                    The new buffer's limit will be set to <c>offset + length</c>.</param>
        <summary>Wraps a byte array into a buffer.</summary>
        <returns>The new byte buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ByteBuffer#wrap(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ByteBuffer.wrap(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>byteCount</c> is invalid.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
