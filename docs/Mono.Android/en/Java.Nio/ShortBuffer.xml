<Type Name="ShortBuffer" FullName="Java.Nio.ShortBuffer">
  <TypeSignature Language="C#" Value="public abstract class ShortBuffer : Java.Nio.Buffer, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ShortBuffer extends Java.Nio.Buffer implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.ShortBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ShortBuffer&#xA;Inherits Buffer&#xA;Implements IComparable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ShortBuffer abstract : Java::Nio::Buffer, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IComparable" />
  <TypeSignature Language="F#" Value="type ShortBuffer = class&#xA;    inherit Buffer&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Buffer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/ShortBuffer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/ShortBuffer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A short buffer.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/ShortBuffer" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShortBuffer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ShortBuffer(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="F#" Value="new Java.Nio.ShortBuffer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.ShortBuffer" Usage="new Java.Nio.ShortBuffer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public static Java.Nio.ShortBuffer? Allocate (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ShortBuffer Allocate(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Allocate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Allocate (capacity As Integer) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::ShortBuffer ^ Allocate(int capacity);" />
      <MemberSignature Language="F#" Value="static member Allocate : int -&gt; Java.Nio.ShortBuffer" Usage="Java.Nio.ShortBuffer.Allocate capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allocate", "(I)Ljava/nio/ShortBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allocate", "(I)Ljava/nio/ShortBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">The new buffer's capacity, in shorts</param>
        <summary>Allocates a new short buffer.</summary>
        <returns>The new short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#allocate(int)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.allocate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>capacity</c> is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayOffset">
      <MemberSignature Language="C#" Value="public override sealed int ArrayOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ArrayOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.ArrayOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ArrayOffset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ArrayOffset();" />
      <MemberSignature Language="F#" Value="override this.ArrayOffset : unit -&gt; int" Usage="shortBuffer.ArrayOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayOffset", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayOffset", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the offset within this buffer's backing array of the first
            element of the buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>The offset within this buffer's array
                     of the first element of the buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#arrayOffset()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.arrayOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnlyBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer? AsReadOnlyBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer AsReadOnlyBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.AsReadOnlyBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AsReadOnlyBuffer () As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ShortBuffer ^ AsReadOnlyBuffer();" />
      <MemberSignature Language="F#" Value="abstract member AsReadOnlyBuffer : unit -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.AsReadOnlyBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/ShortBuffer;", "GetAsReadOnlyBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/ShortBuffer;", "GetAsReadOnlyBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new, read-only short buffer that shares this buffer's
            content.</summary>
        <returns>The new, read-only short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#asReadOnlyBuffer()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.asReadOnlyBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer? Compact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Compact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Compact" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compact () As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ShortBuffer ^ Compact();" />
      <MemberSignature Language="F#" Value="abstract member Compact : unit -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Compact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compact", "()Ljava/nio/ShortBuffer;", "GetCompactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compact", "()Ljava/nio/ShortBuffer;", "GetCompactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compacts this buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#compact()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.compact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Nio.ShortBuffer? that);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Nio.ShortBuffer that) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.CompareTo(Java.Nio.ShortBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompareTo (that As ShortBuffer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Java::Nio::ShortBuffer ^ that);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.Nio.ShortBuffer -&gt; int&#xA;override this.CompareTo : Java.Nio.ShortBuffer -&gt; int" Usage="shortBuffer.CompareTo that" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/nio/ShortBuffer;)I", "GetCompareTo_Ljava_nio_ShortBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/nio/ShortBuffer;)I", "GetCompareTo_Ljava_nio_ShortBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="that" Type="Java.Nio.ShortBuffer" />
      </Parameters>
      <Docs>
        <param name="that">To be added.</param>
        <summary>Compares this buffer to another.</summary>
        <returns>A negative integer, zero, or a positive integer as this buffer
                     is less than, equal to, or greater than the given buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#compareTo(java.nio.ShortBuffer)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.compareTo(java.nio.ShortBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if <c>otherBuffer</c> is not a short buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer? Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Duplicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Duplicate () As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ShortBuffer ^ Duplicate() = Java::Nio::Buffer::Duplicate;" />
      <MemberSignature Language="F#" Value="override this.Duplicate : unit -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Duplicate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("duplicate", "()Ljava/nio/ShortBuffer;", "GetDuplicateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("duplicate", "()Ljava/nio/ShortBuffer;", "GetDuplicateHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new short buffer that shares this buffer's content.</summary>
        <returns>The new short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#duplicate()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.duplicate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract short Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Get" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract short Get();" />
      <MemberSignature Language="F#" Value="abstract member Get : unit -&gt; int16" Usage="shortBuffer.Get " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "()S", "GetGetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "()S", "GetGetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The short at the buffer's current position</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#get()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is equal or greater than limit.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ShortBuffer? Get (short[]? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Get(int16[] dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Get(System.Int16[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (dst As Short()) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::ShortBuffer ^ Get(cli::array &lt;short&gt; ^ dst);" />
      <MemberSignature Language="F#" Value="abstract member Get : int16[] -&gt; Java.Nio.ShortBuffer&#xA;override this.Get : int16[] -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Get dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([S)Ljava/nio/ShortBuffer;", "GetGet_arraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([S)Ljava/nio/ShortBuffer;", "GetGet_arraySHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="dst">The destination array</param>
        <summary>Relative bulk <i>get</i> method.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#get(short[])" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.get(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>dst.length</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract short Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (index As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract short Get(int index);" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; int16" Usage="shortBuffer.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(I)S", "GetGet_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(I)S", "GetGet_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the short will be read</param>
        <summary>Absolute <i>get</i> method.</summary>
        <returns>The short at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#get(int)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.get(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ShortBuffer? Get (short[]? dst, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Get(int16[] dst, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Get(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (dst As Short(), offset As Integer, length As Integer) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::ShortBuffer ^ Get(cli::array &lt;short&gt; ^ dst, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : int16[] * int * int -&gt; Java.Nio.ShortBuffer&#xA;override this.Get : int16[] * int * int -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Get (dst, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([SII)Ljava/nio/ShortBuffer;", "GetGet_arraySIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([SII)Ljava/nio/ShortBuffer;", "GetGet_arraySIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Int16[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">The array into which shorts are to be written</param>
        <param name="offset">The offset within the array of the first short to be
                    written; must be non-negative and no larger than
                    <c>dst.length</c></param>
        <param name="length">The maximum number of shorts to be written to the given
                    array; must be non-negative and no larger than
                    <c>dst.length - offset</c></param>
        <summary>Relative bulk <i>get</i> method.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#get(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.get(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>dstOffset</c> or <c>shortCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>shortCount</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public override bool HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasArray" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ShortBuffer.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasArray : bool" Usage="Java.Nio.ShortBuffer.HasArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasArray", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasArray", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this buffer is backed by an accessible short
            array.</summary>
        <value>
          <c>true</c> if, and only if, this buffer
                     is backed by an array and is not read-only</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#hasArray()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.hasArray()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (o As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Java.Lang.IComparable.CompareTo(Java::Lang::Object ^ o) = Java::Lang::IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="shortBuffer.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ShortBuffer.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.ShortBuffer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="C#" Value="public virtual int Mismatch (Java.Nio.ShortBuffer? that);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Mismatch(class Java.Nio.ShortBuffer that) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Mismatch(Java.Nio.ShortBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Mismatch (that As ShortBuffer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Mismatch(Java::Nio::ShortBuffer ^ that);" />
      <MemberSignature Language="F#" Value="abstract member Mismatch : Java.Nio.ShortBuffer -&gt; int&#xA;override this.Mismatch : Java.Nio.ShortBuffer -&gt; int" Usage="shortBuffer.Mismatch that" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "(Ljava/nio/ShortBuffer;)I", "GetMismatch_Ljava_nio_ShortBuffer_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "(Ljava/nio/ShortBuffer;)I", "GetMismatch_Ljava_nio_ShortBuffer_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="that" Type="Java.Nio.ShortBuffer" />
      </Parameters>
      <Docs>
        <param name="that">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteOrder? Order ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteOrder Order() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Order" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Order () As ByteOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ByteOrder ^ Order();" />
      <MemberSignature Language="F#" Value="abstract member Order : unit -&gt; Java.Nio.ByteOrder" Usage="shortBuffer.Order " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "GetOrderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "GetOrderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteOrder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves this buffer's byte order.</summary>
        <returns>This buffer's byte order</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#order()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.order()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ShortBuffer? Put (Java.Nio.ShortBuffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Put(class Java.Nio.ShortBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Put(Java.Nio.ShortBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Put (src As ShortBuffer) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::ShortBuffer ^ Put(Java::Nio::ShortBuffer ^ src);" />
      <MemberSignature Language="F#" Value="abstract member Put : Java.Nio.ShortBuffer -&gt; Java.Nio.ShortBuffer&#xA;override this.Put : Java.Nio.ShortBuffer -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/nio/ShortBuffer;)Ljava/nio/ShortBuffer;", "GetPut_Ljava_nio_ShortBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/nio/ShortBuffer;)Ljava/nio/ShortBuffer;", "GetPut_Ljava_nio_ShortBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ShortBuffer" />
      </Parameters>
      <Docs>
        <param name="src">The source buffer from which shorts are to be read;
                    must not be this buffer</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#put(java.nio.ShortBuffer)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.put(java.nio.ShortBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>src.remaining()</c> is greater than this buffer's
                <c>remaining()</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> is this buffer.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer? Put (short s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Put(int16 s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Put(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Put (s As Short) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ShortBuffer ^ Put(short s);" />
      <MemberSignature Language="F#" Value="abstract member Put : int16 -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Put s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(S)Ljava/nio/ShortBuffer;", "GetPut_SHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(S)Ljava/nio/ShortBuffer;", "GetPut_SHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="s">The short to be written</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#put(short)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.put(short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is equal or greater than limit.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public Java.Nio.ShortBuffer? Put (short[]? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ShortBuffer Put(int16[] src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Put(System.Int16[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Put (src As Short()) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::ShortBuffer ^ Put(cli::array &lt;short&gt; ^ src);" />
      <MemberSignature Language="F#" Value="member this.Put : int16[] -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "([S)Ljava/nio/ShortBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "([S)Ljava/nio/ShortBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="src">The source array</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#put(short[])" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.put(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>src.length</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer? Put (int index, short s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Put(int32 index, int16 s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Put(System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Put (index As Integer, s As Short) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ShortBuffer ^ Put(int index, short s);" />
      <MemberSignature Language="F#" Value="abstract member Put : int * int16 -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Put (index, s)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(IS)Ljava/nio/ShortBuffer;", "GetPut_ISHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(IS)Ljava/nio/ShortBuffer;", "GetPut_ISHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="s" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the short will be written</param>
        <param name="s">The short value to be written</param>
        <summary>Absolute <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#put(int,%20short)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.put(int, short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ShortBuffer? Put (short[]? src, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Put(int16[] src, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Put(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Put (src As Short(), offset As Integer, length As Integer) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::ShortBuffer ^ Put(cli::array &lt;short&gt; ^ src, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Put : int16[] * int * int -&gt; Java.Nio.ShortBuffer&#xA;override this.Put : int16[] * int * int -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Put (src, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "([SII)Ljava/nio/ShortBuffer;", "GetPut_arraySIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "([SII)Ljava/nio/ShortBuffer;", "GetPut_arraySIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Int16[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">The array from which shorts are to be read</param>
        <param name="offset">The offset within the array of the first short to be read;
                    must be non-negative and no larger than <c>array.length</c></param>
        <param name="length">The number of shorts to be read from the given array;
                    must be non-negative and no larger than
                    <c>array.length - offset</c></param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#put(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.put(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>shortCount</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>srcOffset</c> or <c>shortCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ShortBuffer? Slice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Slice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Slice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Slice () As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::ShortBuffer ^ Slice() = Java::Nio::Buffer::Slice;" />
      <MemberSignature Language="F#" Value="override this.Slice : unit -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Slice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slice", "()Ljava/nio/ShortBuffer;", "GetSliceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slice", "()Ljava/nio/ShortBuffer;", "GetSliceHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new short buffer whose content is a shared subsequence of
            this buffer's content.</summary>
        <returns>The new short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#slice()" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.slice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ShortBuffer? Slice (int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ShortBuffer Slice(int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Slice(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Slice (index As Integer, length As Integer) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::ShortBuffer ^ Slice(int index, int length) = Java::Nio::Buffer::Slice;" />
      <MemberSignature Language="F#" Value="override this.Slice : int * int -&gt; Java.Nio.ShortBuffer" Usage="shortBuffer.Slice (index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slice", "(II)Ljava/nio/ShortBuffer;", "GetSlice_IIHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slice", "(II)Ljava/nio/ShortBuffer;", "GetSlice_IIHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ShortBuffer.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.ShortBuffer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.ShortBuffer.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.ShortBuffer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.ShortBuffer? Wrap (short[]? array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ShortBuffer Wrap(int16[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Wrap(System.Int16[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Wrap (array As Short()) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::ShortBuffer ^ Wrap(cli::array &lt;short&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member Wrap : int16[] -&gt; Java.Nio.ShortBuffer" Usage="Java.Nio.ShortBuffer.Wrap array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "([S)Ljava/nio/ShortBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "([S)Ljava/nio/ShortBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back this buffer</param>
        <summary>Wraps a short array into a buffer.</summary>
        <returns>The new short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#wrap(short[])" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.wrap(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.ShortBuffer? Wrap (short[]? array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.ShortBuffer Wrap(int16[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.ShortBuffer.Wrap(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Wrap (array As Short(), offset As Integer, length As Integer) As ShortBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::ShortBuffer ^ Wrap(cli::array &lt;short&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="static member Wrap : int16[] * int * int -&gt; Java.Nio.ShortBuffer" Usage="Java.Nio.ShortBuffer.Wrap (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "([SII)Ljava/nio/ShortBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "([SII)Ljava/nio/ShortBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ShortBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int16[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back the new buffer</param>
        <param name="offset">The offset of the subarray to be used; must be non-negative and
                    no larger than <c>array.length</c>.  The new buffer's position
                    will be set to this value.</param>
        <param name="length">The length of the subarray to be used;
                    must be non-negative and no larger than
                    <c>array.length - offset</c>.
                    The new buffer's limit will be set to <c>offset + length</c>.</param>
        <summary>Wraps a short array into a buffer.</summary>
        <returns>The new short buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/ShortBuffer#wrap(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.ShortBuffer.wrap(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>shortCount</c> is invalid.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
