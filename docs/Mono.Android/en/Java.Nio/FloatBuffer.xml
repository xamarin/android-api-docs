<Type Name="FloatBuffer" FullName="Java.Nio.FloatBuffer">
  <TypeSignature Language="C#" Value="public abstract class FloatBuffer : Java.Nio.Buffer, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FloatBuffer extends Java.Nio.Buffer implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.FloatBuffer" />
  <TypeSignature Language="F#" Value="type FloatBuffer = class&#xA;    inherit Buffer&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Buffer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/FloatBuffer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A float buffer.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/FloatBuffer" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FloatBuffer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.FloatBuffer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.FloatBuffer" Usage="new Java.Nio.FloatBuffer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public static Java.Nio.FloatBuffer Allocate (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.FloatBuffer Allocate(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Allocate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member Allocate : int -&gt; Java.Nio.FloatBuffer" Usage="Java.Nio.FloatBuffer.Allocate capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allocate", "(I)Ljava/nio/FloatBuffer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">The new buffer's capacity, in floats</param>
        <summary>Allocates a new float buffer.</summary>
        <returns>The new float buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>capacity</c> is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayOffset">
      <MemberSignature Language="C#" Value="public override sealed int ArrayOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ArrayOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.ArrayOffset" />
      <MemberSignature Language="F#" Value="override this.ArrayOffset : unit -&gt; int" Usage="floatBuffer.ArrayOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("arrayOffset", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the offset within this buffer's backing array of the first
            element of the buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>The offset within this buffer's array
                     of the first element of the buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnlyBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer AsReadOnlyBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer AsReadOnlyBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.AsReadOnlyBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsReadOnlyBuffer : unit -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.AsReadOnlyBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/FloatBuffer;", "GetAsReadOnlyBufferHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new, read-only float buffer that shares this buffer's
            content.</summary>
        <returns>The new, read-only float buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer Compact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Compact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Compact" />
      <MemberSignature Language="F#" Value="abstract member Compact : unit -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Compact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compact", "()Ljava/nio/FloatBuffer;", "GetCompactHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compacts this buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Nio.FloatBuffer that);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Nio.FloatBuffer that) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.CompareTo(Java.Nio.FloatBuffer)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.Nio.FloatBuffer -&gt; int&#xA;override this.CompareTo : Java.Nio.FloatBuffer -&gt; int" Usage="floatBuffer.CompareTo that" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareTo", "(Ljava/nio/FloatBuffer;)I", "GetCompareTo_Ljava_nio_FloatBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="that" Type="Java.Nio.FloatBuffer" />
      </Parameters>
      <Docs>
        <param name="that">To be added.</param>
        <summary>Compares this buffer to another.</summary>
        <returns>A negative integer, zero, or a positive integer as this buffer
                     is less than, equal to, or greater than the given buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if <c>otherBuffer</c> is not a float buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Duplicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Duplicate" />
      <MemberSignature Language="F#" Value="abstract member Duplicate : unit -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Duplicate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("duplicate", "()Ljava/nio/FloatBuffer;", "GetDuplicateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new float buffer that shares this buffer's content.</summary>
        <returns>The new float buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract float Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Get" />
      <MemberSignature Language="F#" Value="abstract member Get : unit -&gt; single" Usage="floatBuffer.Get " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "()F", "GetGetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The float at the buffer's current position</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is equal or greater than limit.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract float Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Get(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; single" Usage="floatBuffer.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(I)F", "GetGet_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the index, must not be negative and less than limit.</param>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The float at the buffer's current position</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FloatBuffer Get (float[] dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Get(float32[] dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Get(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Get : single[] -&gt; Java.Nio.FloatBuffer&#xA;override this.Get : single[] -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Get dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "([F)Ljava/nio/FloatBuffer;", "GetGet_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="dst">the destination float array.</param>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The float at the buffer's current position</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>dst.length</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FloatBuffer Get (float[] dst, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Get(float32[] dst, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Get(System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Get : single[] * int * int -&gt; Java.Nio.FloatBuffer&#xA;override this.Get : single[] * int * int -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Get (dst, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "([FII)Ljava/nio/FloatBuffer;", "GetGet_arrayFIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">the target float array.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The float at the buffer's current position</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>dstOffset</c> or <c>floatCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>floatCount</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public override bool HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasArray" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FloatBuffer.HasArray" />
      <MemberSignature Language="F#" Value="member this.HasArray : bool" Usage="Java.Nio.FloatBuffer.HasArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasArray", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this buffer is backed by an accessible float
            array.</summary>
        <value>
          <c>true</c> if, and only if, this buffer
                     is backed by an array and is not read-only</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FloatBuffer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.FloatBuffer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteOrder Order ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteOrder Order() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Order" />
      <MemberSignature Language="F#" Value="abstract member Order : unit -&gt; Java.Nio.ByteOrder" Usage="floatBuffer.Order " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "GetOrderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteOrder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves this buffer's byte order.</summary>
        <returns>This buffer's byte order</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FloatBuffer Put (Java.Nio.FloatBuffer src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Put(class Java.Nio.FloatBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Put(Java.Nio.FloatBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Put : Java.Nio.FloatBuffer -&gt; Java.Nio.FloatBuffer&#xA;override this.Put : Java.Nio.FloatBuffer -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "(Ljava/nio/FloatBuffer;)Ljava/nio/FloatBuffer;", "GetPut_Ljava_nio_FloatBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.FloatBuffer" />
      </Parameters>
      <Docs>
        <param name="src">the source float buffer.</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>src.remaining()</c> is greater than this buffer's
                <c>remaining()</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> is this buffer.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer Put (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Put(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Put(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Put : single -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Put f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "(F)Ljava/nio/FloatBuffer;", "GetPut_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">The float to be written</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is equal or greater than limit.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public Java.Nio.FloatBuffer Put (float[] src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.FloatBuffer Put(float32[] src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Put(System.Single[])" />
      <MemberSignature Language="F#" Value="member this.Put : single[] -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "([F)Ljava/nio/FloatBuffer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="src">the source float array.</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>src.length</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer Put (int index, float f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Put(int32 index, float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Put(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Put : int * single -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Put (index, f)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "(IF)Ljava/nio/FloatBuffer;", "GetPut_IFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">the index, must not be negative and less than the limit.</param>
        <param name="f">The float to be written</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FloatBuffer Put (float[] src, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Put(float32[] src, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Put(System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Put : single[] * int * int -&gt; Java.Nio.FloatBuffer&#xA;override this.Put : single[] * int * int -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Put (src, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "([FII)Ljava/nio/FloatBuffer;", "GetPut_arrayFIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">the source float array.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>floatCount</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>srcOffset</c> or <c>floatCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FloatBuffer Slice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FloatBuffer Slice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Slice" />
      <MemberSignature Language="F#" Value="abstract member Slice : unit -&gt; Java.Nio.FloatBuffer" Usage="floatBuffer.Slice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("slice", "()Ljava/nio/FloatBuffer;", "GetSliceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new float buffer whose content is a shared subsequence of
            this buffer's content.</summary>
        <returns>The new float buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FloatBuffer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.FloatBuffer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FloatBuffer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.FloatBuffer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.FloatBuffer Wrap (float[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.FloatBuffer Wrap(float32[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Wrap(System.Single[])" />
      <MemberSignature Language="F#" Value="static member Wrap : single[] -&gt; Java.Nio.FloatBuffer" Usage="Java.Nio.FloatBuffer.Wrap array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "([F)Ljava/nio/FloatBuffer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back this buffer</param>
        <summary>Wraps a float array into a buffer.</summary>
        <returns>The new float buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.FloatBuffer Wrap (float[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.FloatBuffer Wrap(float32[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FloatBuffer.Wrap(System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Wrap : single[] * int * int -&gt; Java.Nio.FloatBuffer" Usage="Java.Nio.FloatBuffer.Wrap (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "([FII)Ljava/nio/FloatBuffer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FloatBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back this buffer</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>Wraps a float array into a buffer.</summary>
        <returns>The new float buffer</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>floatCount</c> is invalid.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>array</c> is null.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
