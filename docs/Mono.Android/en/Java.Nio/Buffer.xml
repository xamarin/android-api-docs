<Type Name="Buffer" FullName="Java.Nio.Buffer">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Buffer&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Buffer abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class Buffer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Buffer extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Buffer" />
  <TypeSignature Language="F#" Value="type Buffer = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/Buffer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/Buffer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A container for data of a specific primitive type.</summary>
    <remarks>
      <para>A container for data of a specific primitive type.</para>
      <para>A buffer is a linear, finite sequence of elements of a specific
            primitive type.  Aside from its content, the essential properties of a
            buffer are its capacity, limit, and position:</para>
      <para>&lt;blockquote&gt;</para>
      <para>A buffer's <i>capacity</i> is the number of elements it contains.  The
              capacity of a buffer is never negative and never changes.</para>
      <para>A buffer's <i>limit</i> is the index of the first element that should
              not be read or written.  A buffer's limit is never negative and is never
              greater than its capacity.</para>
      <para>A buffer's <i>position</i> is the index of the next element to be
              read or written.  A buffer's position is never negative and is never
              greater than its limit.</para>
      <para>&lt;/blockquote&gt;</para>
      <para>There is one subclass of this class for each non-boolean primitive type.
            
            
            &lt;h2&gt; Transferring data &lt;/h2&gt;</para>
      <para>Each subclass of this class defines two categories of <i>get</i> and
            <i>put</i> operations:</para>
      <para>&lt;blockquote&gt;</para>
      <para>
        <i>Relative</i> operations read or write one or more elements starting
              at the current position and then increment the position by the number of
              elements transferred.  If the requested transfer exceeds the limit then a
              relative <i>get</i> operation throws a <c>BufferUnderflowException</c>
              and a relative <i>put</i> operation throws a <c>BufferOverflowException</c>; in either case, no data is transferred.</para>
      <para>
        <i>Absolute</i> operations take an explicit element index and do not
              affect the position.  Absolute <i>get</i> and <i>put</i> operations throw
              an <c>IndexOutOfBoundsException</c> if the index argument exceeds the
              limit.</para>
      <para>&lt;/blockquote&gt;</para>
      <para>Data may also, of course, be transferred in to or out of a buffer by the
            I/O operations of an appropriate channel, which are always relative to the
            current position.
            
            
            &lt;h2&gt; Marking and resetting &lt;/h2&gt;</para>
      <para>A buffer's <i>mark</i> is the index to which its position will be reset
            when the <c>#reset reset</c> method is invoked.  The mark is not always
            defined, but when it is defined it is never negative and is never greater
            than the position.  If the mark is defined then it is discarded when the
            position or the limit is adjusted to a value smaller than the mark.  If the
            mark is not defined then invoking the <c>#reset reset</c> method causes an
            <c>InvalidMarkException</c> to be thrown.
            
            
            &lt;h2&gt; Invariants &lt;/h2&gt;</para>
      <para>The following invariant holds for the mark, position, limit, and
            capacity values:
            
            &lt;blockquote&gt;
                <c>0</c><c>&amp;lt;=</c><i>mark</i><c>&amp;lt;=</c><i>position</i><c>&amp;lt;=</c><i>limit</i><c>&amp;lt;=</c><i>capacity</i>&lt;/blockquote&gt;</para>
      <para>A newly-created buffer always has a position of zero and a mark that is
            undefined.  The initial limit may be zero, or it may be some other value
            that depends upon the type of the buffer and the manner in which it is
            constructed.  Each element of a newly-allocated buffer is initialized
            to zero.
            
            
            &lt;h2&gt; Clearing, flipping, and rewinding &lt;/h2&gt;</para>
      <para>In addition to methods for accessing the position, limit, and capacity
            values and for marking and resetting, this class also defines the following
            operations upon buffers:
            
            &lt;ul&gt;
            
              &lt;li&gt;</para>
      <para>
        <c>#clear</c> makes a buffer ready for a new sequence of
              channel-read or relative <i>put</i> operations: It sets the limit to the
              capacity and the position to zero.</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>
        <c>#flip</c> makes a buffer ready for a new sequence of
              channel-write or relative <i>get</i> operations: It sets the limit to the
              current position and then sets the position to zero.</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>
        <c>#rewind</c> makes a buffer ready for re-reading the data that
              it already contains: It leaves the limit unchanged and sets the position
              to zero.</para>
      <para>&lt;/li&gt;
            
            &lt;/ul&gt;
            
            
            &lt;h2&gt; Read-only buffers &lt;/h2&gt;</para>
      <para>Every buffer is readable, but not every buffer is writable.  The
            mutation methods of each buffer class are specified as <i>optional
            operations</i> that will throw a <c>ReadOnlyBufferException</c> when
            invoked upon a read-only buffer.  A read-only buffer does not allow its
            content to be changed, but its mark, position, and limit values are mutable.
            Whether or not a buffer is read-only may be determined by invoking its
            <c>#isReadOnly isReadOnly</c> method.
            
            
            &lt;h2&gt; Thread safety &lt;/h2&gt;</para>
      <para>Buffers are not safe for use by multiple concurrent threads.  If a
            buffer is to be used by more than one thread then access to the buffer
            should be controlled by appropriate synchronization.
            
            
            &lt;h2&gt; Invocation chaining &lt;/h2&gt;</para>
      <para>Methods in this class that do not otherwise have a value to return are
            specified to return the buffer upon which they are invoked.  This allows
            method invocations to be chained; for example, the sequence of statements
            
            &lt;blockquote&gt;</para>
      <code lang="text/java">b.flip();
            b.position(23);
            b.limit(42);</code>
      <para>&lt;/blockquote&gt;
            
            can be replaced by the single, more compact statement
            
            &lt;blockquote&gt;</para>
      <code lang="text/java">b.flip().position(23).limit(42);</code>
      <para>&lt;/blockquote&gt;</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/Buffer" title="Reference documentation">Java documentation for <code>java.nio.Buffer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Buffer(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Buffer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Buffer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Buffer" Usage="new Java.Nio.Buffer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayOffset">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ArrayOffset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int ArrayOffset();" />
      <MemberSignature Language="C#" Value="public abstract int ArrayOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ArrayOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.ArrayOffset" />
      <MemberSignature Language="F#" Value="abstract member ArrayOffset : unit -&gt; int" Usage="buffer.ArrayOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayOffset", "()I", "GetArrayOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayOffset", "()I", "GetArrayOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the offset within this buffer's backing array of the first
            element of the buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>The offset within this buffer's array
                     of the first element of the buffer</returns>
        <remarks>
          <para>Returns the offset within this buffer's backing array of the first
            element of the buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</para>
          <para>If this buffer is backed by an array then buffer position <i>p</i>
            corresponds to array index <i>p</i>&amp;nbsp;+&amp;nbsp;<c>arrayOffset()</c>.</para>
          <para>Invoke the <c>#hasArray hasArray</c> method before invoking this
            method in order to ensure that this buffer has an accessible backing
            array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#arrayOffset()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.arrayOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if the buffer is read-only
         UnsupportedOperationException if the buffer does not expose an array</exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="VB.NET" Value="Public Function Capacity () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Capacity();" />
      <MemberSignature Language="C#" Value="public int Capacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Capacity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Capacity" />
      <MemberSignature Language="F#" Value="member this.Capacity : unit -&gt; int" Usage="buffer.Capacity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("capacity", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("capacity", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this buffer's capacity.</summary>
        <returns>The capacity of this buffer</returns>
        <remarks>
          <para>Returns this buffer's capacity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#capacity()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.capacity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clear () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Clear();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Clear" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; Java.Nio.Buffer&#xA;override this.Clear : unit -&gt; Java.Nio.Buffer" Usage="buffer.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "()Ljava/nio/Buffer;", "GetClearHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clear", "()Ljava/nio/Buffer;", "GetClearHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears this buffer.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Clears this buffer.  The position is set to zero, the limit is set to
            the capacity, and the mark is discarded.</para>
          <para>Invoke this method before using a sequence of channel-read or
            <i>put</i> operations to fill this buffer.  For example:
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">buf.clear();     // Prepare buffer for reading
            in.read(buf);    // Read data</code>
          <para>&lt;/blockquote&gt;</para>
          <para>This method does not actually erase the data in the buffer, but it
            is named as if it did because it will most often be used in situations
            in which that might as well be the case.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#clear()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.clear()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Duplicate () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Duplicate();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Duplicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Duplicate" />
      <MemberSignature Language="F#" Value="abstract member Duplicate : unit -&gt; Java.Nio.Buffer&#xA;override this.Duplicate : unit -&gt; Java.Nio.Buffer" Usage="buffer.Duplicate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("duplicate", "()Ljava/nio/Buffer;", "GetDuplicateHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("duplicate", "()Ljava/nio/Buffer;", "GetDuplicateHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new buffer that shares this buffer's content.</summary>
        <returns>The new buffer</returns>
        <remarks>
          <para>Creates a new buffer that shares this buffer's content.</para>
          <para>The content of the new buffer will be that of this buffer.  Changes
            to this buffer's content will be visible in the new buffer, and vice
            versa; the two buffers' position, limit, and mark values will be
            independent.</para>
          <para>The new buffer's capacity, limit, position and mark values will be
            identical to those of this buffer. The new buffer will be direct if, and
            only if, this buffer is direct, and it will be read-only if, and only if,
            this buffer is read-only.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#duplicate()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.duplicate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Flip () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Flip();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Flip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Flip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Flip" />
      <MemberSignature Language="F#" Value="abstract member Flip : unit -&gt; Java.Nio.Buffer&#xA;override this.Flip : unit -&gt; Java.Nio.Buffer" Usage="buffer.Flip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flip", "()Ljava/nio/Buffer;", "GetFlipHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flip", "()Ljava/nio/Buffer;", "GetFlipHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flips this buffer.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Flips this buffer.  The limit is set to the current position and then
            the position is set to zero.  If the mark is defined then it is
            discarded.</para>
          <para>After a sequence of channel-read or <i>put</i> operations, invoke
            this method to prepare for a sequence of channel-write or relative
            <i>get</i> operations.  For example:
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">buf.put(magic);    // Prepend header
            in.read(buf);      // Read data into rest of buffer
            buf.flip();        // Flip buffer
            out.write(buf);    // Write header + data to channel</code>
          <para>&lt;/blockquote&gt;</para>
          <para>This method is often used in conjunction with the <c>java.nio.ByteBuffer#compact compact</c> method when transferring data from
            one place to another.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#flip()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.flip()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectBufferAddress">
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectBufferAddress () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetDirectBufferAddress();" />
      <MemberSignature Language="C#" Value="public IntPtr GetDirectBufferAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetDirectBufferAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.GetDirectBufferAddress" />
      <MemberSignature Language="F#" Value="member this.GetDirectBufferAddress : unit -&gt; nativeint" Usage="buffer.GetDirectBufferAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasArray { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasArray" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.HasArray" />
      <MemberSignature Language="F#" Value="member this.HasArray : bool" Usage="Java.Nio.Buffer.HasArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasArray", "()Z", "GetHasArrayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasArray", "()Z", "GetHasArrayHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if <c>array</c> and <c>arrayOffset</c> won't throw.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="HasRemaining">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasRemaining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRemaining { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool HasRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRemaining" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.HasRemaining" />
      <MemberSignature Language="F#" Value="member this.HasRemaining : bool" Usage="Java.Nio.Buffer.HasRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasRemaining", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasRemaining", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether there are any elements between the current position and
            the limit.</summary>
        <value>
          <c>true</c> if, and only if, there is at least one element
                     remaining in this buffer</value>
        <remarks>
          <para>Tells whether there are any elements between the current position and
            the limit.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#hasRemaining()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.hasRemaining()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDirect">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDirect { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsDirect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirect" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.IsDirect" />
      <MemberSignature Language="F#" Value="member this.IsDirect : bool" Usage="Java.Nio.Buffer.IsDirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDirect", "()Z", "GetIsDirectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDirect", "()Z", "GetIsDirectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this is a direct buffer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.IsReadOnly" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Java.Nio.Buffer.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this buffer is read-only.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Buffer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="VB.NET" Value="Public Function Limit () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Limit();" />
      <MemberSignature Language="C#" Value="public int Limit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Limit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Limit" />
      <MemberSignature Language="F#" Value="member this.Limit : unit -&gt; int" Usage="buffer.Limit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("limit", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("limit", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this buffer's limit.</summary>
        <returns>The limit of this buffer</returns>
        <remarks>
          <para>Returns this buffer's limit.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#limit()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.limit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Limit (newLimit As Integer) As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Limit(int newLimit);" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Limit (int newLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Limit(int32 newLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Limit(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Limit : int -&gt; Java.Nio.Buffer&#xA;override this.Limit : int -&gt; Java.Nio.Buffer" Usage="buffer.Limit newLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("limit", "(I)Ljava/nio/Buffer;", "GetLimit_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("limit", "(I)Ljava/nio/Buffer;", "GetLimit_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newLimit">The new limit value; must be non-negative
                    and no larger than this buffer's capacity</param>
        <summary>Sets this buffer's limit.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Sets this buffer's limit.  If the position is larger than the new limit
            then it is set to the new limit.  If the mark is defined and larger than
            the new limit then it is discarded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#limit(int)" title="Reference documentation">Java documentation for <code>java.nio.Buffer.limit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>newLimit</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Mark">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Mark () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Mark();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Mark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Mark() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Mark" />
      <MemberSignature Language="F#" Value="abstract member Mark : unit -&gt; Java.Nio.Buffer&#xA;override this.Mark : unit -&gt; Java.Nio.Buffer" Usage="buffer.Mark " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mark", "()Ljava/nio/Buffer;", "GetMarkHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mark", "()Ljava/nio/Buffer;", "GetMarkHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets this buffer's mark at its position.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Sets this buffer's mark at its position.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#mark()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.mark()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="VB.NET" Value="Public Function Position () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Position();" />
      <MemberSignature Language="C#" Value="public int Position ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Position() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Position" />
      <MemberSignature Language="F#" Value="member this.Position : unit -&gt; int" Usage="buffer.Position " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("position", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("position", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this buffer's position.</summary>
        <returns>The position of this buffer</returns>
        <remarks>
          <para>Returns this buffer's position.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#position()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.position()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Position (newPosition As Integer) As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Position(int newPosition);" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Position (int newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Position(int32 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Position(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Position : int -&gt; Java.Nio.Buffer&#xA;override this.Position : int -&gt; Java.Nio.Buffer" Usage="buffer.Position newPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("position", "(I)Ljava/nio/Buffer;", "GetPosition_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("position", "(I)Ljava/nio/Buffer;", "GetPosition_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newPosition">The new position value; must be non-negative
                    and no larger than the current limit</param>
        <summary>Sets this buffer's position.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Sets this buffer's position.  If the mark is defined and larger than the
            new position then it is discarded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#position(int)" title="Reference documentation">Java documentation for <code>java.nio.Buffer.position(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>newPosition</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="VB.NET" Value="Public Function Remaining () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Remaining();" />
      <MemberSignature Language="C#" Value="public int Remaining ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Remaining() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Remaining" />
      <MemberSignature Language="F#" Value="member this.Remaining : unit -&gt; int" Usage="buffer.Remaining " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remaining", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remaining", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of elements between the current position and the
            limit.</summary>
        <returns>The number of elements remaining in this buffer</returns>
        <remarks>
          <para>Returns the number of elements between the current position and the
            limit.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#remaining()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.remaining()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reset () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Reset();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; Java.Nio.Buffer&#xA;override this.Reset : unit -&gt; Java.Nio.Buffer" Usage="buffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()Ljava/nio/Buffer;", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()Ljava/nio/Buffer;", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this buffer's position to the previously-marked position.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Resets this buffer's position to the previously-marked position.</para>
          <para>Invoking this method neither changes nor discards the mark's
            value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#reset()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.InvalidMarkException">if the mark is not set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Rewind () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Rewind();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Rewind" />
      <MemberSignature Language="F#" Value="abstract member Rewind : unit -&gt; Java.Nio.Buffer&#xA;override this.Rewind : unit -&gt; Java.Nio.Buffer" Usage="buffer.Rewind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rewind", "()Ljava/nio/Buffer;", "GetRewindHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rewind", "()Ljava/nio/Buffer;", "GetRewindHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rewinds this buffer.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>Rewinds this buffer.  The position is set to zero and the mark is
            discarded.</para>
          <para>Invoke this method before a sequence of channel-write or <i>get</i>
            operations, assuming that the limit has already been set
            appropriately.  For example:
            
            &lt;blockquote&gt;</para>
          <code lang="text/java">out.write(buf);    // Write remaining data
            buf.rewind();      // Rewind buffer
            buf.get(array);    // Copy data into array</code>
          <para>&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#rewind()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.rewind()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Slice () As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Slice();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Slice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Slice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Slice" />
      <MemberSignature Language="F#" Value="abstract member Slice : unit -&gt; Java.Nio.Buffer&#xA;override this.Slice : unit -&gt; Java.Nio.Buffer" Usage="buffer.Slice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slice", "()Ljava/nio/Buffer;", "GetSliceHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slice", "()Ljava/nio/Buffer;", "GetSliceHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new buffer whose content is a shared subsequence of
            this buffer's content.</summary>
        <returns>The new buffer</returns>
        <remarks>
          <para>Creates a new buffer whose content is a shared subsequence of
            this buffer's content.</para>
          <para>The content of the new buffer will start at this buffer's current
            position.  Changes to this buffer's content will be visible in the new
            buffer, and vice versa; the two buffers' position, limit, and mark
            values will be independent.</para>
          <para>The new buffer's position will be zero, its capacity and its limit
            will be the number of elements remaining in this buffer, its mark will be
            undefined. The new buffer will be direct if, and only if, this buffer is
            direct, and it will be read-only if, and only if, this buffer is
            read-only.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#slice()" title="Reference documentation">Java documentation for <code>java.nio.Buffer.slice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Slice (index As Integer, length As Integer) As Buffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Buffer ^ Slice(int index, int length);" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Buffer? Slice (int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Buffer Slice(int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Buffer.Slice(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Slice : int * int -&gt; Java.Nio.Buffer&#xA;override this.Slice : int * int -&gt; Java.Nio.Buffer" Usage="buffer.Slice (index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slice", "(II)Ljava/nio/Buffer;", "GetSlice_IIHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slice", "(II)Ljava/nio/Buffer;", "GetSlice_IIHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The position in this buffer at which the content of the new
                     buffer will start; must be non-negative and no larger than
                     <c>#limit() limit()</c></param>
        <param name="length">The number of elements the new buffer will contain; must be
                     non-negative and no larger than <c>limit() - index</c></param>
        <summary>Creates a new buffer whose content is a shared subsequence of
            this buffer's content.</summary>
        <returns>The new buffer</returns>
        <remarks>
          <para>Creates a new buffer whose content is a shared subsequence of
            this buffer's content.</para>
          <para>The content of the new buffer will start at position <c>index</c>
            in this buffer, and will contain <c>length</c> elements. Changes to
            this buffer's content will be visible in the new buffer, and vice versa;
            the two buffers' position, limit, and mark values will be independent.</para>
          <para>The new buffer's position will be zero, its capacity and its limit
            will be <c>length</c>, its mark will be undefined. The new buffer will
            be direct if, and only if, this buffer is direct, and it will be
            read-only if, and only if, this buffer is read-only.</para>
          <para>Added in 13.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/Buffer#slice(int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.Buffer.slice(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Buffer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Buffer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Buffer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
