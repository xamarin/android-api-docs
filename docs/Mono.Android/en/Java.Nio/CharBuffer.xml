<Type Name="CharBuffer" FullName="Java.Nio.CharBuffer">
  <TypeSignature Language="C#" Value="public abstract class CharBuffer : Java.Nio.Buffer, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAppendable, Java.Lang.ICharSequence, Java.Lang.IComparable, Java.Lang.IReadable, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CharBuffer extends Java.Nio.Buffer implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAppendable, class Java.Lang.ICharSequence, class Java.Lang.IComparable, class Java.Lang.IReadable, class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.CharBuffer" />
  <TypeSignature Language="F#" Value="type CharBuffer = class&#xA;    inherit Buffer&#xA;    interface IAppendable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ICharSequence&#xA;    interface seq&lt;char&gt;&#xA;    interface IEnumerable&#xA;    interface IComparable&#xA;    interface IReadable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Buffer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAppendable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICharSequence</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IReadable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/CharBuffer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/CharBuffer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A char buffer.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/CharBuffer" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CharBuffer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.CharBuffer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.CharBuffer" Usage="new Java.Nio.CharBuffer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Allocate (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Allocate(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Allocate(System.Int32)" />
      <MemberSignature Language="F#" Value="static member Allocate : int -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Allocate capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("allocate", "(I)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("allocate", "(I)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">The new buffer's capacity, in chars</param>
        <summary>Allocates a new char buffer.</summary>
        <returns>The new char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#allocate(int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.allocate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>capacity</c> is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Append (Java.Lang.ICharSequence? csq);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Append(class Java.Lang.ICharSequence csq) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Append(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence -&gt; Java.Nio.CharBuffer&#xA;override this.Append : Java.Lang.ICharSequence -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Append csq" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;", "GetAppend_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;", "GetAppend_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="csq">The character sequence to append.  If <c>csq</c> is
                    <c>null</c>, then the four characters <c>"null"</c> are
                    appended to this character buffer.</param>
        <summary>Appends the specified character sequence  to this
            buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#append(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.append(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than the length of csq.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Append (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Append(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Append(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member Append : char -&gt; Java.Nio.CharBuffer&#xA;override this.Append : char -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Append c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(C)Ljava/nio/CharBuffer;", "GetAppend_CHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(C)Ljava/nio/CharBuffer;", "GetAppend_CHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The 16-bit char to append</param>
        <summary>Appends the specified char  to this
            buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#append(char)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.append(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is equal or greater than limit.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer? Append (string? csq);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Append(string csq) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Append(System.String)" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Append csq" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="csq">The character sequence to append.  If <c>csq</c> is
                    <c>null</c>, then the four characters <c>"null"</c> are
                    appended to this character buffer.</param>
        <summary>Appends the specified character sequence  to this
            buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#append(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.append(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Append (Java.Lang.ICharSequence? csq, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Append(class Java.Lang.ICharSequence csq, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Append(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence * int * int -&gt; Java.Nio.CharBuffer&#xA;override this.Append : Java.Lang.ICharSequence * int * int -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Append (csq, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;", "GetAppend_Ljava_lang_CharSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;", "GetAppend_Ljava_lang_CharSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the first char to write, must not be negative and not greater
            than <c>csq.length()</c>.</param>
        <param name="end">the last char to write (excluding), must be less than
            <c>start</c> and not greater than <c>csq.length()</c>.</param>
        <param name="csq">The character sequence from which a subsequence will be
                    appended.  If <c>csq</c> is <c>null</c>, then characters
                    will be appended as if <c>csq</c> contained the four
                    characters <c>"null"</c>.</param>
        <summary>Appends a subsequence of the  specified character sequence  to this
            buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#append(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.append(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>end - start</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>end</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer? Append (string? csq, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Append(string csq, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Append (csq, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="csq">The character sequence from which a subsequence will be
                    appended.  If <c>csq</c> is <c>null</c>, then characters
                    will be appended as if <c>csq</c> contained the four
                    characters <c>"null"</c>.</param>
        <summary>Appends a subsequence of the  specified character sequence  to this
            buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#append(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.append(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayOffset">
      <MemberSignature Language="C#" Value="public override sealed int ArrayOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ArrayOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.ArrayOffset" />
      <MemberSignature Language="F#" Value="override this.ArrayOffset : unit -&gt; int" Usage="charBuffer.ArrayOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("arrayOffset", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("arrayOffset", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the offset within this buffer's backing array of the first
            element of the buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>The offset within this buffer's array
                     of the first element of the buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#arrayOffset()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.arrayOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnlyBuffer">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer? AsReadOnlyBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer AsReadOnlyBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.AsReadOnlyBuffer" />
      <MemberSignature Language="F#" Value="abstract member AsReadOnlyBuffer : unit -&gt; Java.Nio.CharBuffer" Usage="charBuffer.AsReadOnlyBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/CharBuffer;", "GetAsReadOnlyBufferHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asReadOnlyBuffer", "()Ljava/nio/CharBuffer;", "GetAsReadOnlyBufferHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new, read-only char buffer that shares this buffer's
            content.</summary>
        <returns>The new, read-only char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#asReadOnlyBuffer()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.asReadOnlyBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CharAt">
      <MemberSignature Language="C#" Value="public char CharAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char CharAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.CharAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CharAt : int -&gt; char&#xA;override this.CharAt : int -&gt; char" Usage="charBuffer.CharAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.ICharSequence.CharAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charAt", "(I)C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charAt", "(I)C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the character to be read, relative to the position;
                    must be non-negative and smaller than <c>remaining()</c></param>
        <summary>Reads the character at the given index relative to the current
            position.</summary>
        <returns>The character at index
                     <c>position()&amp;nbsp;+&amp;nbsp;index</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#charAt(int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.charAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c> or <c>index &gt;= remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer? Compact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Compact() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Compact" />
      <MemberSignature Language="F#" Value="abstract member Compact : unit -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Compact " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compact", "()Ljava/nio/CharBuffer;", "GetCompactHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compact", "()Ljava/nio/CharBuffer;", "GetCompactHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compacts this buffer&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#compact()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.compact()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Nio.CharBuffer? that);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Nio.CharBuffer that) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.CompareTo(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.Nio.CharBuffer -&gt; int&#xA;override this.CompareTo : Java.Nio.CharBuffer -&gt; int" Usage="charBuffer.CompareTo that" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/nio/CharBuffer;)I", "GetCompareTo_Ljava_nio_CharBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/nio/CharBuffer;)I", "GetCompareTo_Ljava_nio_CharBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="that" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="that">To be added.</param>
        <summary>Compares this buffer to another.</summary>
        <returns>A negative integer, zero, or a positive integer as this buffer
                     is less than, equal to, or greater than the given buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#compareTo(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.compareTo(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if <c>otherBuffer</c> is not a char buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer? Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Duplicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Duplicate" />
      <MemberSignature Language="F#" Value="abstract member Duplicate : unit -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Duplicate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("duplicate", "()Ljava/nio/CharBuffer;", "GetDuplicateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("duplicate", "()Ljava/nio/CharBuffer;", "GetDuplicateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new char buffer that shares this buffer's content.</summary>
        <returns>The new char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#duplicate()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.duplicate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract char Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Get" />
      <MemberSignature Language="F#" Value="abstract member Get : unit -&gt; char" Usage="charBuffer.Get " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "()C", "GetGetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "()C", "GetGetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Relative <i>get</i> method.</summary>
        <returns>The char at the buffer's current position</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#get()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if the position is equal or greater than limit.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Get (char[]? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Get(char[] dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Get(System.Char[])" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] -&gt; Java.Nio.CharBuffer&#xA;override this.Get : char[] -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Get dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([C)Ljava/nio/CharBuffer;", "GetGet_arrayCHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([C)Ljava/nio/CharBuffer;", "GetGet_arrayCHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="dst">The destination array</param>
        <summary>Relative bulk <i>get</i> method.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#get(char[])" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.get(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>dst.length</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract char Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Get(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; char" Usage="charBuffer.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(I)C", "GetGet_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(I)C", "GetGet_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index from which the char will be read</param>
        <summary>Absolute <i>get</i> method.</summary>
        <returns>The char at the given index</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#get(int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.get(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Get (char[]? dst, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Get(char[] dst, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; Java.Nio.CharBuffer&#xA;override this.Get : char[] * int * int -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Get (dst, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([CII)Ljava/nio/CharBuffer;", "GetGet_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([CII)Ljava/nio/CharBuffer;", "GetGet_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">The array into which chars are to be written</param>
        <param name="offset">The offset within the array of the first char to be
                    written; must be non-negative and no larger than
                    <c>dst.length</c></param>
        <param name="length">The maximum number of chars to be written to the given
                    array; must be non-negative and no larger than
                    <c>dst.length - offset</c></param>
        <summary>Relative bulk <i>get</i> method.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#get(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.get(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>dstOffset</c> or <c>charCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.BufferUnderflowException">if <c>charCount</c> is greater than <c>remaining()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;char&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;char&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;char&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;char&gt;" Usage="charBuffer.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Java.Nio.CharBuffer+&lt;GetEnumerator&gt;d__112))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Java.Nio.CharBuffer+&lt;GetEnumerator&gt;d__112))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public override bool HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasArray" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.CharBuffer.HasArray" />
      <MemberSignature Language="F#" Value="member this.HasArray : bool" Usage="Java.Nio.CharBuffer.HasArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasArray", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasArray", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this buffer is backed by an accessible char
            array.</summary>
        <value>
          <c>true</c> if, and only if, this buffer
                     is backed by an array and is not read-only</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#hasArray()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.hasArray()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IAppendable.Append">
      <MemberSignature Language="C#" Value="Java.Lang.IAppendable IAppendable.Append (Java.Lang.ICharSequence? csq);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Java.Lang.IAppendable Java.Lang.IAppendable.Append(class Java.Lang.ICharSequence csq) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Java#Lang#IAppendable#Append(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IAppendable.Append : Java.Lang.ICharSequence -&gt; Java.Lang.IAppendable&#xA;override this.Java.Lang.IAppendable.Append : Java.Lang.ICharSequence -&gt; Java.Lang.IAppendable" Usage="charBuffer.Java.Lang.IAppendable.Append csq" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAppendable.Append(Java.Lang.ICharSequence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="csq">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IAppendable.Append">
      <MemberSignature Language="C#" Value="Java.Lang.IAppendable IAppendable.Append (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Java.Lang.IAppendable Java.Lang.IAppendable.Append(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Java#Lang#IAppendable#Append(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IAppendable.Append : char -&gt; Java.Lang.IAppendable&#xA;override this.Java.Lang.IAppendable.Append : char -&gt; Java.Lang.IAppendable" Usage="charBuffer.Java.Lang.IAppendable.Append ch" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAppendable.Append(System.Char)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IAppendable.Append">
      <MemberSignature Language="C#" Value="Java.Lang.IAppendable IAppendable.Append (Java.Lang.ICharSequence? csq, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Java.Lang.IAppendable Java.Lang.IAppendable.Append(class Java.Lang.ICharSequence csq, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Java#Lang#IAppendable#Append(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IAppendable.Append : Java.Lang.ICharSequence * int * int -&gt; Java.Lang.IAppendable&#xA;override this.Java.Lang.IAppendable.Append : Java.Lang.ICharSequence * int * int -&gt; Java.Lang.IAppendable" Usage="charBuffer.Java.Lang.IAppendable.Append (csq, start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAppendable.Append(Java.Lang.ICharSequence,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="csq">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="charBuffer.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.CharBuffer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.CharBuffer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Length" />
      <MemberSignature Language="F#" Value="abstract member Length : unit -&gt; int&#xA;override this.Length : unit -&gt; int" Usage="charBuffer.Length " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.ICharSequence.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("length", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("length", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of this character buffer.</summary>
        <returns>The length of this character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#length()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.length()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.ByteOrder? Order ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.ByteOrder Order() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Order" />
      <MemberSignature Language="F#" Value="abstract member Order : unit -&gt; Java.Nio.ByteOrder" Usage="charBuffer.Order " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "GetOrderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("order", "()Ljava/nio/ByteOrder;", "GetOrderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteOrder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves this buffer's byte order.</summary>
        <returns>This buffer's byte order</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#order()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.order()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Put (Java.Nio.CharBuffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Put(class Java.Nio.CharBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Put : Java.Nio.CharBuffer -&gt; Java.Nio.CharBuffer&#xA;override this.Put : Java.Nio.CharBuffer -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;", "GetPut_Ljava_nio_CharBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;", "GetPut_Ljava_nio_CharBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="src">The source buffer from which chars are to be read;
                    must not be this buffer</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>src.remaining()</c> is greater than this buffer's
                <c>remaining()</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> is this buffer.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer? Put (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Put(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member Put : char -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(C)Ljava/nio/CharBuffer;", "GetPut_CHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(C)Ljava/nio/CharBuffer;", "GetPut_CHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The char to be written</param>
        <summary>Relative <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(char)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if position is equal or greater than limit.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer? Put (char[]? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Put(char[] src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(System.Char[])" />
      <MemberSignature Language="F#" Value="member this.Put : char[] -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "([C)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "([C)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="src">The source array</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(char[])" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>src.length</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer? Put (string? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Put(string src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(System.String)" />
      <MemberSignature Language="F#" Value="member this.Put : string -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/lang/String;)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/lang/String;)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="src">The source string</param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than the length of string.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer? Put (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Put(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(System.Int32,System.Char)" />
      <MemberSignature Language="F#" Value="abstract member Put : int * char -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(IC)Ljava/nio/CharBuffer;", "GetPut_ICHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(IC)Ljava/nio/CharBuffer;", "GetPut_ICHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">The index at which the char will be written</param>
        <param name="c">The char value to be written</param>
        <summary>Absolute <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(int,%20char)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(int, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if index is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Put (char[]? src, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Put(char[] src, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Put : char[] * int * int -&gt; Java.Nio.CharBuffer&#xA;override this.Put : char[] * int * int -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put (src, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "([CII)Ljava/nio/CharBuffer;", "GetPut_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "([CII)Ljava/nio/CharBuffer;", "GetPut_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">The array from which chars are to be read</param>
        <param name="offset">The offset within the array of the first char to be read;
                    must be non-negative and no larger than <c>array.length</c></param>
        <param name="length">The number of chars to be read from the given array;
                    must be non-negative and no larger than
                    <c>array.length - offset</c></param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>charCount</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>srcOffset</c> or <c>charCount</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.CharBuffer? Put (string? src, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Put(string src, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Put(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Put : string * int * int -&gt; Java.Nio.CharBuffer&#xA;override this.Put : string * int * int -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Put (src, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/lang/String;II)Ljava/nio/CharBuffer;", "GetPut_Ljava_lang_String_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/lang/String;II)Ljava/nio/CharBuffer;", "GetPut_Ljava_lang_String_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">The string from which chars are to be read</param>
        <param name="start">The offset within the string of the first char to be read;
                    must be non-negative and no larger than
                    <c>string.length()</c></param>
        <param name="end">The offset within the string of the last char to be read,
                    plus one; must be non-negative and no larger than
                    <c>string.length()</c></param>
        <summary>Relative bulk <i>put</i> method&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>This buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#put(java.lang.String,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.put(java.lang.String, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.BufferOverflowException">if <c>remaining()</c> is less than <c>end - start</c>.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>end</c> is invalid.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of this buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Java.Nio.CharBuffer? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(class Java.Nio.CharBuffer target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Read(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.CharBuffer -&gt; int&#xA;override this.Read : Java.Nio.CharBuffer -&gt; int" Usage="charBuffer.Read target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IReadable.Read(Java.Nio.CharBuffer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/CharBuffer;)I", "GetRead_Ljava_nio_CharBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/CharBuffer;)I", "GetRead_Ljava_nio_CharBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="target">the buffer to read characters into</param>
        <summary>Attempts to read characters into the specified character buffer.</summary>
        <returns>The number of characters added to the buffer, or
                    -1 if this source of characters is at its end</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#read(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.read(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>target</c> is this buffer.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if no changes may be made to the contents of <c>target</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.CharBuffer? Slice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.CharBuffer Slice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Slice" />
      <MemberSignature Language="F#" Value="abstract member Slice : unit -&gt; Java.Nio.CharBuffer" Usage="charBuffer.Slice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slice", "()Ljava/nio/CharBuffer;", "GetSliceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slice", "()Ljava/nio/CharBuffer;", "GetSliceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new char buffer whose content is a shared subsequence of
            this buffer's content.</summary>
        <returns>The new char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#slice()" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.slice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SubSequence">
      <MemberSignature Language="C#" Value="public string? SubSequence (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubSequence(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.SubSequence(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SubSequence : int * int -&gt; string" Usage="charBuffer.SubSequence (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The index, relative to the current position, of the first
                    character in the subsequence; must be non-negative and no larger
                    than <c>remaining()</c></param>
        <param name="end">The index, relative to the current position, of the character
                    following the last character in the subsequence; must be no
                    smaller than <c>start</c> and no larger than
                    <c>remaining()</c></param>
        <summary>Creates a new character buffer that represents the specified subsequence
            of this buffer, relative to the current position.</summary>
        <returns>The new character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#subSequence(int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.subSequence(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubSequenceFormatted">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ICharSequence? SubSequenceFormatted (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence SubSequenceFormatted(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.SubSequenceFormatted(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SubSequenceFormatted : int * int -&gt; Java.Lang.ICharSequence" Usage="charBuffer.SubSequenceFormatted (start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.ICharSequence.SubSequenceFormatted(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">The index, relative to the current position, of the first
                    character in the subsequence; must be non-negative and no larger
                    than <c>remaining()</c></param>
        <param name="end">The index, relative to the current position, of the character
                    following the last character in the subsequence; must be no
                    smaller than <c>start</c> and no larger than
                    <c>remaining()</c></param>
        <summary>Creates a new character buffer that represents the specified subsequence
            of this buffer, relative to the current position.</summary>
        <returns>The new character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#subSequence(int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.subSequence(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>end</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="global::System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.global::System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member global::System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.global::System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="charBuffer.global::System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.CharBuffer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.CharBuffer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.CharBuffer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.CharBuffer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Wrap (Java.Lang.ICharSequence? csq);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Wrap(class Java.Lang.ICharSequence csq) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Wrap(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member Wrap : Java.Lang.ICharSequence -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Wrap csq" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="csq">The character sequence from which the new character buffer is to
                    be created</param>
        <summary>Wraps a character sequence into a buffer.</summary>
        <returns>The new character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#wrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.wrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Wrap (char[]? array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Wrap(char[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Wrap(System.Char[])" />
      <MemberSignature Language="F#" Value="static member Wrap : char[] -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Wrap array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "([C)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "([C)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back this buffer</param>
        <summary>Wraps a char array into a buffer.</summary>
        <returns>The new char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#wrap(char[])" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.wrap(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Wrap (string? csq);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Wrap(string csq) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Wrap(System.String)" />
      <MemberSignature Language="F#" Value="static member Wrap : string -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Wrap csq" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="csq">The character sequence from which the new character buffer is to
                    be created</param>
        <summary>Wraps a character sequence into a buffer.</summary>
        <returns>The new character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#wrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.wrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Wrap (Java.Lang.ICharSequence? csq, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Wrap(class Java.Lang.ICharSequence csq, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Wrap(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Wrap : Java.Lang.ICharSequence * int * int -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Wrap (csq, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="csq">The character sequence from which the new character buffer is to
                    be created</param>
        <param name="start">The index of the first character to be used;
                    must be non-negative and no larger than <c>csq.length()</c>.
                    The new buffer's position will be set to this value.</param>
        <param name="end">The index of the character following the last character to be
                    used; must be no smaller than <c>start</c> and no larger
                    than <c>csq.length()</c>.
                    The new buffer's limit will be set to this value.</param>
        <summary>Wraps a character sequence into a buffer.</summary>
        <returns>The new character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#wrap(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.wrap(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>end</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Wrap (char[]? array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Wrap(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Wrap(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Wrap : char[] * int * int -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Wrap (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrap", "([CII)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrap", "([CII)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The array that will back the new buffer</param>
        <param name="offset">The offset of the subarray to be used; must be non-negative and
                    no larger than <c>array.length</c>.  The new buffer's position
                    will be set to this value.</param>
        <param name="length">The length of the subarray to be used;
                    must be non-negative and no larger than
                    <c>array.length - offset</c>.
                    The new buffer's limit will be set to <c>offset + length</c>.</param>
        <summary>Wraps a char array into a buffer.</summary>
        <returns>The new char buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#wrap(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.wrap(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if either <c>start</c> or <c>charCount</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Java.Nio.CharBuffer? Wrap (string? csq, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.CharBuffer Wrap(string csq, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.CharBuffer.Wrap(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Wrap : string * int * int -&gt; Java.Nio.CharBuffer" Usage="Java.Nio.CharBuffer.Wrap (csq, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="csq" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="csq">The character sequence from which the new character buffer is to
                    be created</param>
        <param name="start">The index of the first character to be used;
                    must be non-negative and no larger than <c>csq.length()</c>.
                    The new buffer's position will be set to this value.</param>
        <param name="end">The index of the character following the last character to be
                    used; must be no smaller than <c>start</c> and no larger
                    than <c>csq.length()</c>.
                    The new buffer's limit will be set to this value.</param>
        <summary>Wraps a character sequence into a buffer.</summary>
        <returns>The new character buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/CharBuffer#wrap(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.nio.CharBuffer.wrap(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
