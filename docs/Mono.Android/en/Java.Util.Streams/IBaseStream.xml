<Type Name="IBaseStream" FullName="Java.Util.Streams.IBaseStream">
  <TypeSignature Language="C#" Value="public interface IBaseStream : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBaseStream implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Streams.IBaseStream" />
  <TypeSignature Language="F#" Value="type IBaseStream = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/stream/BaseStream", "", "Java.Util.Streams.IBaseStreamInvoker", ApiSince=24)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/stream/BaseStream", "", "Java.Util.Streams.IBaseStreamInvoker", ApiSince=24)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T", "S extends java.util.stream.BaseStream&lt;T, S&gt;" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T", "S extends java.util.stream.BaseStream&lt;T, S&gt;" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="&lt;T&gt;&lt;T&gt;">the type of the stream elements</param>
    <param name="&lt;S&gt;&lt;S&gt;">the type of of the stream implementing <c>BaseStream</c></param>
    <summary>Base interface for streams, which are sequences of elements supporting
            sequential and parallel aggregate operations.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/stream/BaseStream" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iBaseStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this stream, causing all close handlers for this stream pipeline
            to be called.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#close()" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsParallel">
      <MemberSignature Language="C#" Value="public bool IsParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParallel" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Streams.IBaseStream.IsParallel" />
      <MemberSignature Language="F#" Value="member this.IsParallel : bool" Usage="Java.Util.Streams.IBaseStream.IsParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isParallel", "()Z", "GetIsParallelHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isParallel", "()Z", "GetIsParallelHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iterator">
      <MemberSignature Language="C#" Value="public Java.Util.IIterator? Iterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IIterator Iterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.Iterator" />
      <MemberSignature Language="F#" Value="abstract member Iterator : unit -&gt; Java.Util.IIterator" Usage="iBaseStream.Iterator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an iterator for the elements of this stream.</summary>
        <returns>the element iterator for this stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#iterator()" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.iterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? OnClose (Java.Lang.IRunnable? closeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object OnClose(class Java.Lang.IRunnable closeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.OnClose(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member OnClose : Java.Lang.IRunnable -&gt; Java.Lang.Object" Usage="iBaseStream.OnClose closeHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onClose", "(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;", "GetOnClose_Ljava_lang_Runnable_Handler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onClose", "(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;", "GetOnClose_Ljava_lang_Runnable_Handler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeHandler" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="closeHandler">A task to execute when the stream is closed</param>
        <summary>Returns an equivalent stream with an additional close handler.</summary>
        <returns>a stream with a handler that is run if the stream is closed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#onClose(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.onClose(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parallel">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Parallel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Parallel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.Parallel" />
      <MemberSignature Language="F#" Value="abstract member Parallel : unit -&gt; Java.Lang.Object" Usage="iBaseStream.Parallel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallel", "()Ljava/util/stream/BaseStream;", "GetParallelHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallel", "()Ljava/util/stream/BaseStream;", "GetParallelHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an equivalent stream that is parallel.</summary>
        <returns>a parallel stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#parallel()" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.parallel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sequential">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Sequential ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Sequential() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.Sequential" />
      <MemberSignature Language="F#" Value="abstract member Sequential : unit -&gt; Java.Lang.Object" Usage="iBaseStream.Sequential " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sequential", "()Ljava/util/stream/BaseStream;", "GetSequentialHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sequential", "()Ljava/util/stream/BaseStream;", "GetSequentialHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an equivalent stream that is sequential.</summary>
        <returns>a sequential stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#sequential()" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.sequential()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spliterator">
      <MemberSignature Language="C#" Value="public Java.Util.ISpliterator? Spliterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.ISpliterator Spliterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.Spliterator" />
      <MemberSignature Language="F#" Value="abstract member Spliterator : unit -&gt; Java.Util.ISpliterator" Usage="iBaseStream.Spliterator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spliterator", "()Ljava/util/Spliterator;", "GetSpliteratorHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spliterator", "()Ljava/util/Spliterator;", "GetSpliteratorHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ISpliterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a spliterator for the elements of this stream.</summary>
        <returns>the element spliterator for this stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#spliterator()" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.spliterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unordered">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Unordered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Unordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Streams.IBaseStream.Unordered" />
      <MemberSignature Language="F#" Value="abstract member Unordered : unit -&gt; Java.Lang.Object" Usage="iBaseStream.Unordered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unordered", "()Ljava/util/stream/BaseStream;", "GetUnorderedHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unordered", "()Ljava/util/stream/BaseStream;", "GetUnorderedHandler:Java.Util.Streams.IBaseStreamInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an equivalent stream that is
            &lt;a href="package-summary.</summary>
        <returns>an unordered stream</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/stream/BaseStream#unordered()" title="Reference documentation">Java documentation for <code>java.util.stream.BaseStream.unordered()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
