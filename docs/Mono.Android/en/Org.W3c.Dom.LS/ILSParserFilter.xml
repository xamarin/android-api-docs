<Type Name="ILSParserFilter" FullName="Org.W3c.Dom.LS.ILSParserFilter">
  <TypeSignature Language="VB.NET" Value="Public Interface ILSParserFilter&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILSParserFilter : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface ILSParserFilter : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ILSParserFilter implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.LS.ILSParserFilter" />
  <TypeSignature Language="F#" Value="type ILSParserFilter = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/w3c/dom/ls/LSParserFilter", "", "Org.W3c.Dom.LS.ILSParserFilterInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/w3c/dom/ls/LSParserFilter", "", "Org.W3c.Dom.LS.ILSParserFilterInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>
      <c>LSParserFilter</c>s provide applications the ability to examine
            nodes as they are being constructed while parsing.</summary>
    <remarks>
      <para>
        <c>LSParserFilter</c>s provide applications the ability to examine
            nodes as they are being constructed while parsing. As each node is
            examined, it may be modified or removed, or the entire parse may be
            terminated early.</para>
      <para>At the time any of the filter methods are called by the parser, the
            owner Document and DOMImplementation objects exist and are accessible.
            The document element is never passed to the <c>LSParserFilter</c>
            methods, i.e. it is not possible to filter out the document element.
            <c>Document</c>, <c>DocumentType</c>, <c>Notation</c>,
            <c>Entity</c>, and <c>Attr</c> nodes are never passed to the
            <c>acceptNode</c> method on the filter. The child nodes of an
            <c>EntityReference</c> node are passed to the filter if the
            parameter "<see href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-entities">
            entities</see>" is set to <c>false</c>. Note that, as described by the parameter "<see href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-entities">
            entities</see>", unexpanded entity reference nodes are never discarded and are always
            passed to the filter.</para>
      <para>All validity checking while parsing a document occurs on the source
            document as it appears on the input stream, not on the DOM document as it
            is built in memory. With filters, the document in memory may be a subset
            of the document on the stream, and its validity may have been affected by
            the filtering.</para>
      <para>All default attributes must be present on elements when the elements
            are passed to the filter methods. All other default content must be
            passed to the filter methods.</para>
      <para>DOM applications must not raise exceptions in a filter. The effect of
            throwing exceptions from a filter is DOM implementation dependent.</para>
      <para>See also the <see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407">Document Object Model (DOM) Level 3 Load
            and Save Specification</see>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="AcceptNode">
      <MemberSignature Language="VB.NET" Value="Public Function AcceptNode (nodeArg As INode) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short AcceptNode(Org::W3c::Dom::INode ^ nodeArg);" />
      <MemberSignature Language="C#" Value="public short AcceptNode (Org.W3c.Dom.INode? nodeArg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 AcceptNode(class Org.W3c.Dom.INode nodeArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.LS.ILSParserFilter.AcceptNode(Org.W3c.Dom.INode)" />
      <MemberSignature Language="F#" Value="abstract member AcceptNode : Org.W3c.Dom.INode -&gt; int16" Usage="iLSParserFilter.AcceptNode nodeArg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptNode", "(Lorg/w3c/dom/Node;)S", "GetAcceptNode_Lorg_w3c_dom_Node_Handler:Org.W3c.Dom.LS.ILSParserFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptNode", "(Lorg/w3c/dom/Node;)S", "GetAcceptNode_Lorg_w3c_dom_Node_Handler:Org.W3c.Dom.LS.ILSParserFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArg" Type="Org.W3c.Dom.INode" />
      </Parameters>
      <Docs>
        <param name="nodeArg">The newly constructed element. At the time this method
              is called, the element is complete - it has all of its children
              (and their children, recursively) and attributes, and is attached
              as a child to its parent.</param>
        <summary>This method will be called by the parser at the completion of the
            parsing of each node.</summary>
        <returns>&lt;ul&gt;
            &lt;li&gt; <c>FILTER_ACCEPT</c> if this <c>Node</c> should
              be included in the DOM document being built.
            &lt;/li&gt;
            &lt;li&gt;
              <c>FILTER_REJECT</c> if the <c>Node</c> and all of its
              children should be rejected.
            &lt;/li&gt;
            &lt;li&gt; <c>FILTER_SKIP</c> if the
              <c>Node</c> should be skipped and the <c>Node</c>
              should be replaced by all the children of the <c>Node</c>.
            &lt;/li&gt;
            &lt;li&gt;
              <c>FILTER_INTERRUPT</c> if the filter wants to stop the
              processing of the document. Interrupting the processing of the
              document does no longer guarantee that the resulting DOM tree is
              XML well-formed. The <c>Node</c> is accepted and will be the
              last completely parsed node.
            &lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>This method will be called by the parser at the completion of the
            parsing of each node. The node and all of its descendants will exist
            and be complete. The parent node will also exist, although it may be
            incomplete, i.e. it may have additional children that have not yet
            been parsed. Attribute nodes are never passed to this function.
            &lt;br&gt;From within this method, the new node may be freely modified -
            children may be added or removed, text nodes modified, etc. The state
            of the rest of the document outside this node is not defined, and the
            affect of any attempt to navigate to, or to modify any other part of
            the document is undefined.
            &lt;br&gt;For validating parsers, the checks are made on the original
            document, before any modification by the filter. No validity checks
            are made on any document modifications made by the filter.
            &lt;br&gt;If this new node is rejected, the parser might reuse the new node
            and any of its descendants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter#acceptNode(org.w3c.dom.Node)" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter.acceptNode(org.w3c.dom.Node)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FilterAccept">
      <MemberSignature Language="VB.NET" Value="Public Const FilterAccept As Short  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: short FilterAccept = 1;" />
      <MemberSignature Language="C#" Value="public const short FilterAccept = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 FilterAccept = (1)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParserFilter.FilterAccept" />
      <MemberSignature Language="F#" Value="val mutable FilterAccept : int16" Usage="Org.W3c.Dom.LS.ILSParserFilter.FilterAccept" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FILTER_ACCEPT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FILTER_ACCEPT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Accept the node.</summary>
        <remarks>
          <para>Accept the node.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter#FILTER_ACCEPT" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter.FILTER_ACCEPT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterInterrupt">
      <MemberSignature Language="VB.NET" Value="Public Const FilterInterrupt As Short  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: short FilterInterrupt = 4;" />
      <MemberSignature Language="C#" Value="public const short FilterInterrupt = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 FilterInterrupt = (4)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParserFilter.FilterInterrupt" />
      <MemberSignature Language="F#" Value="val mutable FilterInterrupt : int16" Usage="Org.W3c.Dom.LS.ILSParserFilter.FilterInterrupt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FILTER_INTERRUPT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FILTER_INTERRUPT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Interrupt the normal processing of the document.</summary>
        <remarks>
          <para>Interrupt the normal processing of the document.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter#FILTER_INTERRUPT" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter.FILTER_INTERRUPT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterReject">
      <MemberSignature Language="VB.NET" Value="Public Const FilterReject As Short  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: short FilterReject = 2;" />
      <MemberSignature Language="C#" Value="public const short FilterReject = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 FilterReject = (2)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParserFilter.FilterReject" />
      <MemberSignature Language="F#" Value="val mutable FilterReject : int16" Usage="Org.W3c.Dom.LS.ILSParserFilter.FilterReject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FILTER_REJECT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FILTER_REJECT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Reject the node and its children.</summary>
        <remarks>
          <para>Reject the node and its children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter#FILTER_REJECT" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter.FILTER_REJECT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterSkip">
      <MemberSignature Language="VB.NET" Value="Public Const FilterSkip As Short  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: short FilterSkip = 3;" />
      <MemberSignature Language="C#" Value="public const short FilterSkip = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 FilterSkip = (3)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParserFilter.FilterSkip" />
      <MemberSignature Language="F#" Value="val mutable FilterSkip : int16" Usage="Org.W3c.Dom.LS.ILSParserFilter.FilterSkip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FILTER_SKIP")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FILTER_SKIP")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Skip this single node.</summary>
        <remarks>
          <para>Skip this single node. The children of this node will still be
            considered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter#FILTER_SKIP" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter.FILTER_SKIP</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="VB.NET" Value="Public Function StartElement (elementArg As IElement) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short StartElement(Org::W3c::Dom::IElement ^ elementArg);" />
      <MemberSignature Language="C#" Value="public short StartElement (Org.W3c.Dom.IElement? elementArg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 StartElement(class Org.W3c.Dom.IElement elementArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.LS.ILSParserFilter.StartElement(Org.W3c.Dom.IElement)" />
      <MemberSignature Language="F#" Value="abstract member StartElement : Org.W3c.Dom.IElement -&gt; int16" Usage="iLSParserFilter.StartElement elementArg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startElement", "(Lorg/w3c/dom/Element;)S", "GetStartElement_Lorg_w3c_dom_Element_Handler:Org.W3c.Dom.LS.ILSParserFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startElement", "(Lorg/w3c/dom/Element;)S", "GetStartElement_Lorg_w3c_dom_Element_Handler:Org.W3c.Dom.LS.ILSParserFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementArg" Type="Org.W3c.Dom.IElement" />
      </Parameters>
      <Docs>
        <param name="elementArg">The newly encountered element. At the time this
              method is called, the element is incomplete - it will have its
              attributes, but no children.</param>
        <summary>The parser will call this method after each <c>Element</c> start
            tag has been scanned, but before the remainder of the
            <c>Element</c> is processed.</summary>
        <returns>&lt;ul&gt;
            &lt;li&gt; <c>FILTER_ACCEPT</c> if the <c>Element</c> should
              be included in the DOM document being built.
            &lt;/li&gt;
            &lt;li&gt;
              <c>FILTER_REJECT</c> if the <c>Element</c> and all of
              its children should be rejected.
            &lt;/li&gt;
            &lt;li&gt; <c>FILTER_SKIP</c> if the
              <c>Element</c> should be skipped. All of its children are
              inserted in place of the skipped <c>Element</c> node.
            &lt;/li&gt;
            &lt;li&gt;
              <c>FILTER_INTERRUPT</c> if the filter wants to stop the
              processing of the document. Interrupting the processing of the
              document does no longer guarantee that the resulting DOM tree is
              XML well-formed. The <c>Element</c> is rejected.
            &lt;/li&gt;
            &lt;/ul&gt; Returning
              any other values will result in unspecified behavior.</returns>
        <remarks>
          <para>The parser will call this method after each <c>Element</c> start
            tag has been scanned, but before the remainder of the
            <c>Element</c> is processed. The intent is to allow the
            element, including any children, to be efficiently skipped. Note that
            only element nodes are passed to the <c>startElement</c>
            function.
            &lt;br&gt;The element node passed to <c>startElement</c> for filtering
            will include all of the Element's attributes, but none of the
            children nodes. The Element may not yet be in place in the document
            being constructed (it may not have a parent node.)
            &lt;br&gt;A <c>startElement</c> filter function may access or change
            the attributes for the Element. Changing Namespace declarations will
            have no effect on namespace resolution by the parser.
            &lt;br&gt;For efficiency, the Element node passed to the filter may not be
            the same one as is actually placed in the tree if the node is
            accepted. And the actual node (node object identity) may be reused
            during the process of reading in and filtering a document.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter#startElement(org.w3c.dom.Element)" title="Reference documentation">Java documentation for <code>org.w3c.dom.ls.LSParserFilter.startElement(org.w3c.dom.Element)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="WhatToShow">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhatToShow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WhatToShow { int get(); };" />
      <MemberSignature Language="C#" Value="public int WhatToShow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WhatToShow" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.LS.ILSParserFilter.WhatToShow" />
      <MemberSignature Language="F#" Value="member this.WhatToShow : int" Usage="Org.W3c.Dom.LS.ILSParserFilter.WhatToShow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWhatToShow", "()I", "GetGetWhatToShowHandler:Org.W3c.Dom.LS.ILSParserFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWhatToShow", "()I", "GetGetWhatToShowHandler:Org.W3c.Dom.LS.ILSParserFilterInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells the <c>LSParser</c> what types of nodes to show to the
 method <c>LSParserFilter.acceptNode</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
