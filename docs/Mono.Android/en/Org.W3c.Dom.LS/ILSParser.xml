<Type Name="ILSParser" FullName="Org.W3c.Dom.LS.ILSParser">
  <TypeSignature Language="C#" Value="public interface ILSParser : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILSParser implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.LS.ILSParser" />
  <TypeSignature Language="F#" Value="type ILSParser = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/w3c/dom/ls/LSParser", "", "Org.W3c.Dom.LS.ILSParserInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>An interface to an object that is able to build, or augment, a DOM tree
            from various input sources.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/ls/LSParser" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.LS.ILSParser.Abort" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iLSParser.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abort", "()V", "GetAbortHandler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abort the loading of the document that is currently being loaded by
            the &lt;code&gt;LSParser&lt;/code&gt;.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionAppendAsChildren">
      <MemberSignature Language="C#" Value="public const short ActionAppendAsChildren = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionAppendAsChildren = (1)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParser.ActionAppendAsChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_APPEND_AS_CHILDREN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Append the result of the parse operation as children of the context
            node.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionInsertAfter">
      <MemberSignature Language="C#" Value="public const short ActionInsertAfter = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionInsertAfter = (4)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParser.ActionInsertAfter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_INSERT_AFTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Insert the result of the parse operation as the immediately following
            sibling of the context node.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionInsertBefore">
      <MemberSignature Language="C#" Value="public const short ActionInsertBefore = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionInsertBefore = (3)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParser.ActionInsertBefore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_INSERT_BEFORE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Insert the result of the parse operation as the immediately preceding
            sibling of the context node.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionReplace">
      <MemberSignature Language="C#" Value="public const short ActionReplace = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionReplace = (5)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParser.ActionReplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_REPLACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Replace the context node with the result of the parse operation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionReplaceChildren">
      <MemberSignature Language="C#" Value="public const short ActionReplaceChildren = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionReplaceChildren = (2)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.LS.ILSParser.ActionReplaceChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_REPLACE_CHILDREN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Replace all the children of the context node with the result of the
            parse operation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.LS.ILSParser.Async" />
      <MemberSignature Language="F#" Value="member this.Async : bool" Usage="Org.W3c.Dom.LS.ILSParser.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAsync", "()Z", "GetGetAsyncHandler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>true</c> if the <c>LSParser</c> is asynchronous,
 <c>false</c> if it is synchronous.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Busy">
      <MemberSignature Language="C#" Value="public bool Busy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Busy" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.LS.ILSParser.Busy" />
      <MemberSignature Language="F#" Value="member this.Busy : bool" Usage="Org.W3c.Dom.LS.ILSParser.Busy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBusy", "()Z", "GetGetBusyHandler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>true</c> if the <c>LSParser</c> is currently busy
 loading a document, otherwise <c>false</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DomConfig">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDOMConfiguration DomConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IDOMConfiguration DomConfig" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.LS.ILSParser.DomConfig" />
      <MemberSignature Language="F#" Value="member this.DomConfig : Org.W3c.Dom.IDOMConfiguration" Usage="Org.W3c.Dom.LS.ILSParser.DomConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDomConfig", "()Lorg/w3c/dom/DOMConfiguration;", "GetGetDomConfigHandler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDOMConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>DOMConfiguration</c> object used when parsing an input
 source.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.LS.ILSParserFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.LS.ILSParserFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.LS.ILSParser.Filter" />
      <MemberSignature Language="F#" Value="member this.Filter : Org.W3c.Dom.LS.ILSParserFilter with get, set" Usage="Org.W3c.Dom.LS.ILSParser.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilter", "()Lorg/w3c/dom/ls/LSParserFilter;", "GetGetFilterHandler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFilter", "(Lorg/w3c/dom/ls/LSParserFilter;)V", "GetSetFilter_Lorg_w3c_dom_ls_LSParserFilter_Handler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.LS.ILSParserFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When a filter is provided, the implementation will call out to the
 filter as it is constructing the DOM tree structure.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDocument Parse (Org.W3c.Dom.LS.ILSInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument Parse(class Org.W3c.Dom.LS.ILSInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.LS.ILSParser.Parse(Org.W3c.Dom.LS.ILSInput)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Org.W3c.Dom.LS.ILSInput -&gt; Org.W3c.Dom.IDocument" Usage="iLSParser.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Lorg/w3c/dom/ls/LSInput;)Lorg/w3c/dom/Document;", "GetParse_Lorg_w3c_dom_ls_LSInput_Handler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Org.W3c.Dom.LS.ILSInput" />
      </Parameters>
      <Docs>
        <param name="input">The &lt;code&gt;LSInput&lt;/code&gt; from which the source of the
              document is to be read.</param>
        <summary>Parse an XML document from a resource identified by a
            &lt;code&gt;LSInput&lt;/code&gt;.</summary>
        <returns>If the &lt;code&gt;LSParser&lt;/code&gt; is a synchronous
              &lt;code&gt;LSParser&lt;/code&gt;, the newly created and populated
              &lt;code&gt;Document&lt;/code&gt; is returned. If the &lt;code&gt;LSParser&lt;/code&gt; is
              asynchronous, &lt;code&gt;null&lt;/code&gt; is returned since the document
              object may not yet be constructed when this method returns.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_STATE_ERR: Raised if the <c>LSParser</c>'s
   <c>LSParser.busy</c> attribute is <c>true</c>.</exception>
        <exception cref="T:Org.W3c.Dom.LS.LSException">PARSE_ERR: Raised if the <c>LSParser</c> was unable to load
   the XML document. DOM applications should attach a
   <c>DOMErrorHandler</c> using the parameter "" if they wish to get details on the error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseURI">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDocument ParseURI (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument ParseURI(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.LS.ILSParser.ParseURI(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ParseURI : string -&gt; Org.W3c.Dom.IDocument" Usage="iLSParser.ParseURI uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseURI", "(Ljava/lang/String;)Lorg/w3c/dom/Document;", "GetParseURI_Ljava_lang_String_Handler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The location of the XML document to be read.</param>
        <summary>Parse an XML document from a location identified by a URI reference [&lt;a href='http://www.</summary>
        <returns>If the &lt;code&gt;LSParser&lt;/code&gt; is a synchronous
              &lt;code&gt;LSParser&lt;/code&gt;, the newly created and populated
              &lt;code&gt;Document&lt;/code&gt; is returned, or &lt;code&gt;null&lt;/code&gt; if an error
              occured. If the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous,
              &lt;code&gt;null&lt;/code&gt; is returned since the document object may not yet
              be constructed when this method returns.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_STATE_ERR: Raised if the <c>LSParser.busy</c>
   attribute is <c>true</c>.</exception>
        <exception cref="T:Org.W3c.Dom.LS.LSException">PARSE_ERR: Raised if the <c>LSParser</c> was unable to load
   the XML document. DOM applications should attach a
   <c>DOMErrorHandler</c> using the parameter "" if they wish to get details on the error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseWithContext">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.INode ParseWithContext (Org.W3c.Dom.LS.ILSInput input, Org.W3c.Dom.INode contextArg, short action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.INode ParseWithContext(class Org.W3c.Dom.LS.ILSInput input, class Org.W3c.Dom.INode contextArg, int16 action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.LS.ILSParser.ParseWithContext(Org.W3c.Dom.LS.ILSInput,Org.W3c.Dom.INode,System.Int16)" />
      <MemberSignature Language="F#" Value="abstract member ParseWithContext : Org.W3c.Dom.LS.ILSInput * Org.W3c.Dom.INode * int16 -&gt; Org.W3c.Dom.INode" Usage="iLSParser.ParseWithContext (input, contextArg, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseWithContext", "(Lorg/w3c/dom/ls/LSInput;Lorg/w3c/dom/Node;S)Lorg/w3c/dom/Node;", "GetParseWithContext_Lorg_w3c_dom_ls_LSInput_Lorg_w3c_dom_Node_SHandler:Org.W3c.Dom.LS.ILSParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Org.W3c.Dom.LS.ILSInput" />
        <Parameter Name="contextArg" Type="Org.W3c.Dom.INode" />
        <Parameter Name="action" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="input">The &lt;code&gt;LSInput&lt;/code&gt; from which the source document
              is to be read. The source document must be an XML fragment, i.e.
              anything except a complete XML document (except in the case where
              the context node of type &lt;code&gt;DOCUMENT_NODE&lt;/code&gt;, and the action
              is &lt;code&gt;ACTION_REPLACE_CHILDREN&lt;/code&gt;), a DOCTYPE (internal
              subset), entity declaration(s), notation declaration(s), or XML or
              text declaration(s).</param>
        <param name="contextArg">The node that is used as the context for the data
              that is being parsed. This node must be a &lt;code&gt;Document&lt;/code&gt;
              node, a &lt;code&gt;DocumentFragment&lt;/code&gt; node, or a node of a type
              that is allowed as a child of an &lt;code&gt;Element&lt;/code&gt; node, e.g. it
              cannot be an &lt;code&gt;Attribute&lt;/code&gt; node.</param>
        <param name="action">This parameter describes which action should be taken
              between the new set of nodes being inserted and the existing
              children of the context node. The set of possible actions is
              defined in &lt;code&gt;ACTION_TYPES&lt;/code&gt; above.</param>
        <summary>Parse an XML fragment from a resource identified by a
            &lt;code&gt;LSInput&lt;/code&gt; and insert the content into an existing document
            at the position specified with the &lt;code&gt;context&lt;/code&gt; and
            &lt;code&gt;action&lt;/code&gt; arguments.</summary>
        <returns>Return the node that is the result of the parse operation. If
              the result is more than one top-level node, the first one is
              returned.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">HIERARCHY_REQUEST_ERR: Raised if the content cannot replace, be
   inserted before, after, or as a child of the context node (see also
   <c>Node.insertBefore</c> or <c>Node.replaceChild</c> in []
   ).
   <format type="text/html"><br /></format> NOT_SUPPORTED_ERR: Raised if the <c>LSParser</c> doesn't
   support this method, or if the context node is of type
   <c>Document</c> and the DOM implementation doesn't support
   the replacement of the <c>DocumentType</c> child or
   <c>Element</c> child.
   <format type="text/html"><br /></format> NO_MODIFICATION_ALLOWED_ERR: Raised if the context node is a
   read only node and the content is being appended to its child list,
   or if the parent node of the context node is read only node and the
   content is being inserted in its child list.
   <format type="text/html"><br /></format> INVALID_STATE_ERR: Raised if the <c>LSParser.busy</c>
   attribute is <c>true</c>.</exception>
        <exception cref="T:Org.W3c.Dom.LS.LSException">PARSE_ERR: Raised if the <c>LSParser</c> was unable to load
   the XML fragment. DOM applications should attach a
   <c>DOMErrorHandler</c> using the parameter "" if they wish to get details on the error.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
