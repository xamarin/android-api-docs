<Type Name="Bind" FullName="Android.Content.Bind">
  <TypeSignature Language="C#" Value="public enum Bind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Bind extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Enumerates values returned by several methods of <see cref="T:Android.Content.Bind" /> and taken as a parameter of the <see cref="F:Android.Content.Context.BindService" />, <see cref="F:Android.Content.ContextWrapper.BindService" />, and <see cref="F:Android.Test.Mock.MockContext.BindService" /> members.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="F:Android.Content.Bind.AboveClient" /></term></item><item><term><see cref="F:Android.Content.Bind.AdjustWithActivity" /></term></item><item><term><see cref="F:Android.Content.Bind.AllowOomManagement" /></term></item><item><term><see cref="F:Android.Content.Bind.AutoCreate" /></term></item><item><term><see cref="F:Android.Content.Bind.DebugUnbind" /></term></item><item><term><see cref="F:Android.Content.Bind.Important" /></term></item><item><term><see cref="F:Android.Content.Bind.None" /></term></item><item><term><see cref="F:Android.Content.Bind.NotForeground" /></term></item><item><term><see cref="F:Android.Content.Bind.WaivePriority" /></term></item></list>
 and taken as a parameter of the <see cref="F:Android.Content.Context.BindService" />, <see cref="F:Android.Content.ContextWrapper.BindService" />, and <see cref="F:Android.Test.Mock.MockContext.BindService" /> members.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AboveClient">
      <MemberSignature Language="C#" Value="AboveClient" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind AboveClient = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: indicates that the client application
 binding to this service considers the service to be more important than
 the app itself.  When set, the platform will try to have the out of
 memory killer kill the app before it kills the service it is bound to, though
 this is not guaranteed to be the case.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AdjustWithActivity">
      <MemberSignature Language="C#" Value="AdjustWithActivity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind AdjustWithActivity = int32(128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: If binding from an activity, allow the
 target service's process importance to be raised based on whether the
 activity is visible to the user, regardless whether another flag is
 used to reduce the amount that the client process's overall importance
 is used to impact it.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AllowOomManagement">
      <MemberSignature Language="C#" Value="AllowOomManagement" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind AllowOomManagement = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: allow the process hosting the bound
 service to go through its normal memory management.  It will be
 treated more like a running service, allowing the system to
 (temporarily) expunge the process if low on memory or for some other
 whim it may have, and being more aggressive about making it a candidate
 to be killed (and restarted) if running for a long time.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AutoCreate">
      <MemberSignature Language="C#" Value="AutoCreate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind AutoCreate = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" />
            </c>
            <c>
              <see cref="M:Android.App.Service.OnStartCommand(Android.Content.Intent,Android.App.StartCommandFlags,Android.App.StartCommandFlags)" />
            </c>
            <c>
              <see cref="M:Android.Content.Context.StartService(Android.Content.Intent)" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">Note that prior to <c><see cref="F:Android.OS.Build.VERSION_CODES.IceCreamSandwich" /></c>,
 not supplying this flag would also impact how important the system
 consider's the target service's process to be.  When set, the only way
 for it to be raised was by binding from a service in which case it will
 only be important when that activity is in the foreground.  Now to
 achieve this behavior you must explicitly supply the new flag
 <c><see cref="F:Android.Content.Bind.AdjustWithActivity" /></c>.  For compatibility, old applications
 that don't specify <c><see cref="F:Android.Content.Bind.AutoCreate" /></c> will automatically have
 the flags <c><see cref="F:Android.Content.Bind.WaivePriority" /></c> and
 <c><see cref="F:Android.Content.Bind.AdjustWithActivity" /></c> set for them in order to achieve
 the same result.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DebugUnbind">
      <MemberSignature Language="C#" Value="DebugUnbind" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind DebugUnbind = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: include debugging help for mismatched
 calls to unbind.  When this flag is set, the callstack of the following
 <c><see cref="M:Android.Content.Context.UnbindService(Android.Content.IServiceConnection)" /></c> call is retained, to be printed if a later
 incorrect unbind call is made.  Note that doing this requires retaining
 information about the binding that was made for the lifetime of the app,
 resulting in a leak -- this should only be used for debugging.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Important">
      <MemberSignature Language="C#" Value="Important" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind Important = int32(64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: this service is very important to
 the client, so should be brought to the foreground process level
 when the client is.  Normally a process can only be raised to the
 visibility level by a client, even if that client is in the foreground.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotForeground">
      <MemberSignature Language="C#" Value="NotForeground" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind NotForeground = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: don't allow this binding to raise
 the target service's process to the foreground scheduling priority.
 It will still be raised to at least the same memory priority
 as the client (so that its process will not be killable in any
 situation where the client is not killable), but for CPU scheduling
 purposes it may be left in the background.  This only has an impact
 in the situation where the binding client is a foreground process
 and the target service is in a background process.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaivePriority">
      <MemberSignature Language="C#" Value="WaivePriority" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.Bind WaivePriority = int32(32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.Bind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.IServiceConnection)" /></c>: don't impact the scheduling or
 memory management priority of the target service's hosting process.
 Allows the service's process to be managed on the background LRU list
 just like a regular application process in the background.
</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
