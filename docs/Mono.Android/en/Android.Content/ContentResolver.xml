<Type Name="ContentResolver" FullName="Android.Content.ContentResolver">
  <TypeSignature Language="C#" Value="public abstract class ContentResolver : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContentResolver extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/ContentResolver", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides applications access to the content model.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides applications access to the content model.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">For more information about using a ContentResolver with content providers, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/providers/content-providers.html">Content Providers</a></format>
 developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <!-- jd-descr  -->
        <format type="text/html">
          <h2>Summary</h2>
        </format>
        <!-- =========== ENUM CONSTANT SUMMARY ===========  -->
        <format type="text/html">
          <table id="constants" class="jd-sumtable">
            <tr>
              <th colspan="12">Constants</th>
            </tr>
            <tr class="alt-color api apilevel-21">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.AnyCursorItemType" />
              </td>
              <td class="jd-descrcol" width="100%">
          This is the Android platform's generic MIME type to match any MIME
 type of the form "<c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c>/<c>SUB_TYPE</c>".
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.CursorDirBaseType" />
              </td>
              <td class="jd-descrcol" width="100%">
          This is the Android platform's base MIME type for a content: URI
 containing a Cursor of zero or more items.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.CursorItemBaseType" />
              </td>
              <td class="jd-descrcol" width="100%">
          This is the Android platform's base MIME type for a content: URI
 containing a Cursor of a single item.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-21">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.ExtraSize" />
              </td>
              <td class="jd-descrcol" width="100%">
          An extra <c><see cref="T:Android.Graphics.Point" /></c> describing the optimal size for a requested image
 resource, in pixels.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" />
              </td>
              <td class="jd-descrcol" width="100%" />
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SchemeContent" />
              </td>
              <td class="jd-descrcol" width="100%" />
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SchemeFile" />
              </td>
              <td class="jd-descrcol" width="100%" />
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasAccount" />
              </td>
              <td class="jd-descrcol" width="100%">
                <i>
      This constant was deprecated
      in API level 5.
    instead use
 <c><see cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account,System.String,System.String)" /></c></i>
              </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasDiscardLocalDeletions" />
              </td>
              <td class="jd-descrcol" width="100%">
          Indicates that the sync adapter should not proceed with the delete operations,
 if it determines that there are too many.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-8">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasDoNotRetry" />
              </td>
              <td class="jd-descrcol" width="100%">
          If this extra is set to true then the request will not be retried if it fails.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasExpedited" />
              </td>
              <td class="jd-descrcol" width="100%">
          If this extra is set to true, the sync request will be scheduled
 at the front of the sync request queue and without any delay

          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasForce" />
              </td>
              <td class="jd-descrcol" width="100%">
                <i>
      This constant was deprecated
      in API level 5.
    instead use
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasManual" /></c></i>
              </td>
            </tr>
            <tr class="alt-color api apilevel-8">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" />
              </td>
              <td class="jd-descrcol" width="100%">
          If this extra is set to true then any backoffs for the initial attempt (e.g.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-8">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" />
              </td>
              <td class="jd-descrcol" width="100%">
          If this extra is set to true then the sync settings (like getSyncAutomatically())
 are ignored by the sync scheduler.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasInitialize" />
              </td>
              <td class="jd-descrcol" width="100%">
          Set by the SyncManager to request that the SyncAdapter initialize itself for
 the given account/authority pair.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasManual" />
              </td>
              <td class="jd-descrcol" width="100%">
          Setting this extra is the equivalent of setting both <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>
 and <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c></td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasOverrideTooManyDeletions" />
              </td>
              <td class="jd-descrcol" width="100%">
          Indicates that the sync adapter should proceed with the delete operations,
 even if it determines that there are too many.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <see cref="T:Java.Lang.String" />
              </td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncExtrasUpload" />
              </td>
              <td class="jd-descrcol" width="100%">
          Indicates that this sync is intended to only upload local changes to the server.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-8">
              <td class="jd-typecol">int</td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncObserverTypeActive" />
              </td>
              <td class="jd-descrcol" width="100%" />
            </tr>
            <tr class=" api apilevel-8">
              <td class="jd-typecol">int</td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncObserverTypePending" />
              </td>
              <td class="jd-descrcol" width="100%" />
            </tr>
            <tr class="alt-color api apilevel-8">
              <td class="jd-typecol">int</td>
              <td class="jd-linkcol">
                <see cref="F:Android.Content.ContentResolver.SyncObserverTypeSettings" />
              </td>
              <td class="jd-descrcol" width="100%" />
            </tr>
          </table>
        </format>
        <!-- ======== CONSTRUCTOR SUMMARY ========  -->
        <format type="text/html">
          <table id="pubctors" class="jd-sumtable">
            <tr>
              <th colspan="12">Public Constructors</th>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <nobr />
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="C:Android.Content.ContentResolver(Android.Content.Context)" />(<see cref="T:Android.Content.Context" /> context)</nobr>
              </td>
            </tr>
          </table>
        </format>
        <!-- ========== METHOD SUMMARY ===========  -->
        <format type="text/html">
          <table id="pubmethods" class="jd-sumtable">
            <tr>
              <th colspan="12">Public Methods</th>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.ContentProviderClient" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> uri)</nobr>
          Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 that services the content at uri, starting the provider if necessary.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.ContentProviderClient" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(System.String)" />(<see cref="T:Java.Lang.String" /> name)</nobr>
          Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 with the authority of name, starting the provider if necessary.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-16">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.ContentProviderClient" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.AcquireUnstableContentProviderClient(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> uri)</nobr>
          Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(Android.Net.Uri)" /></c>, but for use when you do
 not trust the stability of the target content provider.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-16">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.ContentProviderClient" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.AcquireUnstableContentProviderClient(System.String)" />(<see cref="T:Java.Lang.String" /> name)</nobr>
          Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(System.String)" /></c>, but for use when you do
 not trust the stability of the target content provider.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-8">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.AddPeriodicSync(Android.Accounts.Account,System.String,System.String,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.OS.Bundle" /> extras, long pollFrequency)</nobr>
          Specifies that a sync should be requested with the specified the account, authority,
 and extras at the given frequency.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            <see cref="T:Java.Lang.Object" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.AddStatusChangeListener(Android.Content.SyncObserverType,Android.Content.ISyncStatusObserver)" />(int mask, <see cref="T:Android.Content.ISyncStatusObserver" /> callback)</nobr>
          Request notifications when the different aspects of the SyncManager change.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
                  <see cref="T:Android.Content.ContentProviderResult" />
                </nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="!:Android.Content.ContentResolver.applyBatch(java.lang.String,java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;)" />(<see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.Runtime.JavaList" />&lt;<see cref="T:Android.Content.ContentProviderOperation" />&gt; operations)</nobr>
          Applies each of the <c><see cref="T:Android.Content.ContentProviderOperation" /></c> objects and returns an array
 of their results.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            int</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.BulkInsert(Android.Net.Uri,Android.Content.ContentValues[])" />(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Android.Content.ContentValues" /> values)</nobr>
          Inserts multiple rows into a table at the given URL.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-11">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.OS.Bundle" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Call(Android.Net.Uri,System.String,System.String,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> method, <see cref="T:Java.Lang.String" /> arg, <see cref="T:Android.OS.Bundle" /> extras)</nobr>
          Call a provider-defined method.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-21">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.CancelSync(Android.Content.SyncRequest)" />(<see cref="T:Android.Content.SyncRequest" /> request)</nobr>
          Remove the specified sync.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.CancelSync(Android.Accounts.Account,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</nobr>
          Cancel any active or pending syncs that match account and authority.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.CancelSync(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> uri)</nobr>
                <i>
      This method was deprecated
      in API level 5.
    instead use <c><see cref="M:Android.Content.ContentResolver.CancelSync(Android.Accounts.Account,System.String)" /></c></i>
              </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Net.Uri" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> url)</nobr>
          Transform the given <var>url</var> to a canonical representation of
 its referenced resource, which can be used across devices, persisted,
 backed up and restored, etc.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            int</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Delete(Android.Net.Uri,System.String,System.String)" />(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Java.Lang.String" /> where, <see cref="T:Java.Lang.String" /> selectionArgs)</nobr>
          Deletes row(s) specified by a content URI.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-8">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            <see cref="T:Android.Content.SyncInfo" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="P:Android.Content.ContentResolver.CurrentSync" />()</nobr>
                <i>
      This method was deprecated
      in API level 11.
    Since multiple concurrent syncs are now supported you should use
 <c><see cref="P:Android.Content.ContentResolver.CurrentSyncs" /></c> to get the accurate list of current syncs.
 This method returns the first item from the list of current syncs
 or null if there are none.
</i>
              </td>
            </tr>
            <tr class=" api apilevel-11">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.SyncInfo" />&gt;</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="P:Android.Content.ContentResolver.CurrentSyncs" />()</nobr>
          Returns a list with information about all the active syncs.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            int</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.GetIsSyncable(Android.Accounts.Account,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</nobr>
          Check if this account/provider is syncable.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            boolean</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="P:Android.Content.ContentResolver.MasterSyncAutomatically" />()</nobr>
          Gets the master auto-sync setting that applies to all the providers and accounts.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
                  <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.UriPermission" />&gt;</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="P:Android.Content.ContentResolver.OutgoingPersistedUriPermissions" />()</nobr>
          Return list of all persisted URI permission grants that are hosted by the
 calling app.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-8">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.PeriodicSync" />&gt;</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.GetPeriodicSyncs(Android.Accounts.Account,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</nobr>
          Get the list of information about the periodic syncs for the given account and authority.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
                  <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.UriPermission" />&gt;</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="P:Android.Content.ContentResolver.PersistedUriPermissions" />()</nobr>
          Return list of all URI permission grants that have been persisted by the
 calling app.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-11">
              <td class="jd-typecol">
                <nobr>
                  <see cref="T:Java.Lang.String" />
                </nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.GetStreamTypes(Android.Net.Uri,System.String)" />(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Java.Lang.String" /> mimeTypeFilter)</nobr>
          Query for the possible MIME types for the representations the given
 content URL can be returned when opened as as stream with
 <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            <see cref="T:Android.Content.SyncAdapterType" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.GetSyncAdapterTypes" />()</nobr>
          Get information about the SyncAdapters that are known to the system.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            boolean</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.GetSyncAutomatically(Android.Accounts.Account,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</nobr>
          Check if the provider should be synced when a network tickle is received
 This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Java.Lang.String" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.GetType(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> url)</nobr>
          Return the MIME type of the given content URL.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Net.Uri" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Insert(Android.Net.Uri,Android.Content.ContentValues)" />(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Android.Content.ContentValues" /> values)</nobr>
          Inserts a row into a table at the given URL.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            boolean</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.IsSyncActive(Android.Accounts.Account,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</nobr>
          Returns true if there is currently a sync operation for the given account or authority
 actively being processed.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            boolean</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.IsSyncPending(Android.Accounts.Account,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</nobr>
          Return true if the pending status is true of any matching authorities.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.NotifyChange(Android.Net.Uri,Android.Database.ContentObserver,Android.Database.ContentObserver)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.Database.ContentObserver" /> observer, boolean syncToNetwork)</nobr>
          Notify registered observers that a row was updated.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.NotifyChange(Android.Net.Uri,Android.Database.ContentObserver)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.Database.ContentObserver" /> observer)</nobr>
          Notify registered observers that a row was updated and attempt to sync changes
 to the network.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-3">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.Res.AssetFileDescriptor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode)</nobr>
          Open a raw file descriptor to access data under a URI.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.Res.AssetFileDescriptor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</nobr>
          Open a raw file descriptor to access data under a URI.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.OS.ParcelFileDescriptor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenFileDescriptor(Android.Net.Uri,System.String,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</nobr>
          Open a raw file descriptor to access data under a URI.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.OS.ParcelFileDescriptor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenFileDescriptor(Android.Net.Uri,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode)</nobr>
          Open a raw file descriptor to access data under a URI.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Java.IO.InputStream" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenInputStream(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> uri)</nobr>
          Open a stream on to the content associated with a content URI.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Java.IO.OutputStream" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> uri)</nobr>
          Synonym for <c><see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri,System.String)" /></c>.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-3">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Java.IO.OutputStream" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode)</nobr>
          Open a stream on to the content associated with a content URI.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.Res.AssetFileDescriptor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mimeType, <see cref="T:Android.OS.Bundle" /> opts, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</nobr>
          Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-11">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Content.Res.AssetFileDescriptor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mimeType, <see cref="T:Android.OS.Bundle" /> opts)</nobr>
          Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Database.ICursor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri,System.String[],System.String[],System.String[],System.String[])" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> projection, <see cref="T:Java.Lang.String" /> selection, <see cref="T:Java.Lang.String" /> selectionArgs, <see cref="T:Java.Lang.String" /> sortOrder)</nobr>
          Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-16">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Database.ICursor" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri,System.String[],System.String[],System.String[],System.String[],System.String[])" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> projection, <see cref="T:Java.Lang.String" /> selection, <see cref="T:Java.Lang.String" /> selectionArgs, <see cref="T:Java.Lang.String" /> sortOrder, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</nobr>
          Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set
 with optional support for cancellation.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri,System.Boolean,System.Boolean)" />(<see cref="T:Android.Net.Uri" /> uri, boolean notifyForDescendents, <see cref="T:Android.Database.ContentObserver" /> observer)</nobr>
          Register an observer class that gets callbacks when data identified by a
 given content URI changes.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.ReleasePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />(<see cref="T:Android.Net.Uri" /> uri, int modeFlags)</nobr>
          Relinquish a persisted URI permission grant.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-8">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.RemovePeriodicSync(Android.Accounts.Account,System.String,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.OS.Bundle" /> extras)</nobr>
          Remove a periodic sync.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.RemoveStatusChangeListener(Java.Lang.Object)" />(<see cref="T:Java.Lang.Object" /> handle)</nobr>
          Remove a previously registered status change listener.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account,System.String,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.OS.Bundle" /> extras)</nobr>
          Start an asynchronous sync operation.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.RequestSync(Android.Content.SyncRequest)" />(<see cref="T:Android.Content.SyncRequest" /> request)</nobr>
          Register a sync with the SyncManager.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.SetIsSyncable(Android.Accounts.Account,System.String,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, int syncable)</nobr>
          Set whether this account/provider is syncable.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="P:Android.Content.ContentResolver.MasterSyncAutomatically" />(boolean sync)</nobr>
          Sets the master auto-sync setting that applies to all the providers and accounts.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-5">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.SetSyncAutomatically(Android.Accounts.Account,System.String,System.String)" />(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, boolean sync)</nobr>
          Set whether or not the provider is synced when it receives a network tickle.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.StartSync(Android.Net.Uri,Android.OS.Bundle)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.OS.Bundle" /> extras)</nobr>
                <i>
      This method was deprecated
      in API level 5.
    instead use
 <c><see cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account,System.String,System.String)" /></c></i>
              </td>
            </tr>
            <tr class=" api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />(<see cref="T:Android.Net.Uri" /> uri, int modeFlags)</nobr>
          Take a persistable URI permission grant that has been offered.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-19">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            <see cref="T:Android.Net.Uri" /></nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Uncanonicalize(Android.Net.Uri)" />(<see cref="T:Android.Net.Uri" /> url)</nobr>
          Given a canonical Uri previously generated by <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c>, convert
 it to its local non-canonical form.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.UnregisterContentObserver(Android.Database.ContentObserver)" />(<see cref="T:Android.Database.ContentObserver" /> observer)</nobr>
          Unregisters a change observer.
          
    

        </td>
            </tr>
            <tr class="alt-color api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            final
            
            
            int</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.Update(Android.Net.Uri,Android.Content.ContentValues,Android.Content.ContentValues,Android.Content.ContentValues)" />(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.Content.ContentValues" /> values, <see cref="T:Java.Lang.String" /> where, <see cref="T:Java.Lang.String" /> selectionArgs)</nobr>
          Update row(s) in a content URI.
          
    

        </td>
            </tr>
            <tr class=" api apilevel-1">
              <td class="jd-typecol">
                <nobr>
            
            
            
            static
            
            void</nobr>
              </td>
              <td class="jd-linkcol" width="100%">
                <nobr>
                  <see cref="M:Android.Content.ContentResolver.ValidateSyncExtrasBundle(Android.OS.Bundle)" />(<see cref="T:Android.OS.Bundle" /> extras)</nobr>
          Check that only values of the following types are in the Bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></td>
            </tr>
          </table>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
        <!-- ========== METHOD SUMMARY ===========  -->
        <format type="text/html">
          <table id="inhmethods" class="jd-sumtable">
            <tr>
              <th>Inherited Methods</th>
            </tr>
            <tr class="api apilevel-">
              <td colspan="12">
From class

  <see cref="T:Java.Lang.Object" /><table class="jd-sumtable-expando"><tr class="alt-color api apilevel-1"><td class="jd-typecol"><nobr><see cref="T:Java.Lang.Object" /></nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.Clone" />()</nobr>
          Creates and returns a copy of this <c>Object</c>.
          
    

        </td></tr><tr class=" api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            
            
            
            boolean</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" />(<see cref="T:Java.Lang.Object" /> o)</nobr>
          Compares this instance with the specified object and indicates if they
 are equal.
          
    

        </td></tr><tr class="alt-color api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            
            
            
            void</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.JavaFinalize" />()</nobr>
          Invoked when the garbage collector has detected that this instance is no longer reachable.
          
    

        </td></tr><tr class=" api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            final
            
            
            <see cref="T:Java.Lang.Class" />&lt;?&gt;</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="P:Java.Lang.Object.Class" />()</nobr>
          Returns the unique instance of <c><see cref="T:Java.Lang.Class" /></c> that represents this
 object's class.
          
    

        </td></tr><tr class="alt-color api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            
            
            
            int</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.GetHashCode" />()</nobr>
          Returns an integer hash code for this object.
          
    

        </td></tr><tr class=" api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            final
            
            
            void</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.Notify" />()</nobr>
          Causes a thread which is waiting on this object's monitor (by means of
 calling one of the <c>wait()</c> methods) to be woken up.
          
    

        </td></tr><tr class="alt-color api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            final
            
            
            void</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.NotifyAll" />()</nobr>
          Causes all threads which are waiting on this object's monitor (by means
 of calling one of the <c>wait()</c> methods) to be woken up.
          
    

        </td></tr><tr class=" api apilevel-1"><td class="jd-typecol"><nobr><see cref="T:Java.Lang.String" /></nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.ToString" />()</nobr>
          Returns a string containing a concise, human-readable description of this
 object.
          
    

        </td></tr><tr class="alt-color api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            final
            
            
            void</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.Wait" />()</nobr>
          Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object.
          
    

        </td></tr><tr class=" api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            final
            
            
            void</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.Wait(System.Int64,System.Int32)" />(long millis, int nanos)</nobr>
          Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object or until the
 specified timeout expires.
          
    

        </td></tr><tr class="alt-color api apilevel-1"><td class="jd-typecol"><nobr>
            
            
            final
            
            
            void</nobr></td><td class="jd-linkcol" width="100%"><nobr><see cref="M:Java.Lang.Object.Wait(System.Int64)" />(long millis)</nobr>
          Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object or until the
 specified timeout expires.
          
    

        </td></tr></table></td>
            </tr>
          </table>
        </format>
        <!-- jd-descr (summary)  -->
        <!-- Details  -->
        <!-- XML Attributes  -->
        <!-- Enum Values  -->
        <!-- Constants  -->
        <!-- ========= ENUM CONSTANTS DETAIL ========  -->
        <format type="text/html">
          <h2>Constants</h2>
        </format>
        <format type="text/html">
          <h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        ANY_CURSOR_ITEM_TYPE
    </h4>
        </format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 21</a></format></para>
      <para tool="javadoc-to-mdoc">This is the Android platform's generic MIME type to match any MIME
 type of the form "<c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c>/<c>SUB_TYPE</c>".
 <c>SUB_TYPE</c> is the sub-type of the application-dependent
 content, e.g., "audio", "video", "playlist".
</para>Constant Value: 
            
                "vnd.android.cursor.item/*"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        CURSOR_DIR_BASE_TYPE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">This is the Android platform's base MIME type for a content: URI
 containing a Cursor of zero or more items.  Applications should use this
 as the base type along with their own sub-type of their content: URIs
 that represent a directory of items.  For example, hypothetical IMAP email
 client may have a URI
 <c>content://com.company.provider.imap/inbox</c> for all of the
 messages in its inbox, whose MIME type would be reported as
 <c>CURSOR_DIR_BASE_TYPE + "/vnd.company.imap-msg"</c></para><para tool="javadoc-to-mdoc">Note how the base MIME type varies between this and
 <c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c> depending on whether there is
 one single item or multiple items in the data set, while the sub-type
 remains the same because in either case the data structure contained
 in the cursor is the same.
</para>Constant Value: 
            
                "vnd.android.cursor.dir"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        CURSOR_ITEM_BASE_TYPE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">This is the Android platform's base MIME type for a content: URI
 containing a Cursor of a single item.  Applications should use this
 as the base type along with their own sub-type of their content: URIs
 that represent a particular item.  For example, hypothetical IMAP email
 client may have a URI
 <c>content://com.company.provider.imap/inbox/1</c> for a particular
 message in the inbox, whose MIME type would be reported as
 <c>CURSOR_ITEM_BASE_TYPE + "/vnd.company.imap-msg"</c></para><para tool="javadoc-to-mdoc">Compare with <c><see cref="F:Android.Content.ContentResolver.CursorDirBaseType" /></c>.
</para>Constant Value: 
            
                "vnd.android.cursor.item"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        EXTRA_SIZE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 21</a></format><para tool="javadoc-to-mdoc">An extra <c><see cref="T:Android.Graphics.Point" /></c> describing the optimal size for a requested image
 resource, in pixels. If a provider has multiple sizes of the image, it
 should return the image closest to this size.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c></term></item><item><term><c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String,System.String)" /></c></term></item></list>Constant Value: 
            
                "android.content.extra.SIZE"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SCHEME_ANDROID_RESOURCE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Constant Value: 
            
                "android.resource"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SCHEME_CONTENT
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Constant Value: 
            
                "content"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SCHEME_FILE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Constant Value: 
            
                "file"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_ACCOUNT
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><i>
      This constant was deprecated
      in API level 5.</i><format type="text/html"><br /></format>
    instead use
 <c><see cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account,System.String,System.String)" /></c></para><para tool="javadoc-to-mdoc">Constant Value: 
            
                "account"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Indicates that the sync adapter should not proceed with the delete operations,
 if it determines that there are too many.
 See <c><see cref="P:Android.Content.SyncResult.TooManyDeletions" /></c></para>Constant Value: 
            
                "discard_deletions"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_DO_NOT_RETRY
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format><para tool="javadoc-to-mdoc">If this extra is set to true then the request will not be retried if it fails.
Constant Value: 
            
                "do_not_retry"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_EXPEDITED
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">If this extra is set to true, the sync request will be scheduled
 at the front of the sync request queue and without any delay
Constant Value: 
            
                "expedited"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_FORCE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><i>
      This constant was deprecated
      in API level 5.</i><format type="text/html"><br /></format>
    instead use
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasManual" /></c></para><para tool="javadoc-to-mdoc">Constant Value: 
            
                "force"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_IGNORE_BACKOFF
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format></para><para tool="javadoc-to-mdoc">If this extra is set to true then any backoffs for the initial attempt (e.g. due to retries)
 are ignored by the sync scheduler. If this request fails and gets rescheduled then the
 retries will still honor the backoff.
Constant Value: 
            
                "ignore_backoff"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_IGNORE_SETTINGS
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format></para><para tool="javadoc-to-mdoc">If this extra is set to true then the sync settings (like getSyncAutomatically())
 are ignored by the sync scheduler.
Constant Value: 
            
                "ignore_settings"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_INITIALIZE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format></para><para tool="javadoc-to-mdoc">Set by the SyncManager to request that the SyncAdapter initialize itself for
 the given account/authority pair. One required initialization step is to
 ensure that <c><see cref="M:Android.Content.ContentResolver.SetIsSyncable(Android.Accounts.Account,System.String,System.String)" /></c> has been
 called with a &gt;= 0 value. When this flag is set the SyncAdapter does not need to
 do a full sync, though it is allowed to do so.
</para>Constant Value: 
            
                "initialize"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_MANUAL
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Setting this extra is the equivalent of setting both <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>
 and <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c></para>Constant Value: 
            
                "force"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Indicates that the sync adapter should proceed with the delete operations,
 even if it determines that there are too many.
 See <c><see cref="P:Android.Content.SyncResult.TooManyDeletions" /></c></para>Constant Value: 
            
                "deletions_override"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        <see cref="T:Java.Lang.String" />
        SYNC_EXTRAS_UPLOAD
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Indicates that this sync is intended to only upload local changes to the server.
 For example, this will be set to true if the sync is initiated by a call to
 <c><see cref="M:Android.Content.ContentResolver.NotifyChange(Android.Net.Uri,Android.Database.ContentObserver,Android.Database.ContentObserver)" /></c></para>Constant Value: 
            
                "upload"
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        int
      
        SYNC_OBSERVER_TYPE_ACTIVE
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format><para tool="javadoc-to-mdoc">Constant Value: 
            
                4
                (0x00000004)
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        int
      
        SYNC_OBSERVER_TYPE_PENDING
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format></para><para tool="javadoc-to-mdoc">Constant Value: 
            
                2
                (0x00000002)
            
        <format type="text/html"><h4 class="jd-details-title">
        public 
        static 
        final 
        int
      
        SYNC_OBSERVER_TYPE_SETTINGS
    </h4></format>
        
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format></para><para tool="javadoc-to-mdoc">Constant Value: 
            
                1
                (0x00000001)
            
        <!-- Fields  --><!-- Public ctors  --><!-- ========= CONSTRUCTOR DETAIL ========  --><format type="text/html"><h2>Public Constructors</h2></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        
      ContentResolver(<see cref="T:Android.Content.Context" /> context)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc"><!-- ========= CONSTRUCTOR DETAIL ========  --><!-- Protected ctors  --><!-- ========= METHOD DETAIL ========  --><!-- Public methdos  --><format type="text/html"><h2>Public Methods</h2></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.ContentProviderClient" />acquireContentProviderClient(<see cref="T:Android.Net.Uri" /> uri)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format></para><para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 that services the content at uri, starting the provider if necessary. Returns
 null if there is no provider associated wih the uri. The caller must indicate that they are
 done with the provider by calling <c><see cref="M:Android.Content.ContentProviderClient.Release" /></c> which will allow
 the system to release the provider it it determines that there is no other reason for
 keeping it active.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>specifies which provider should be acquired</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 that services the content at uri or null if there isn't one.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.ContentProviderClient" />acquireContentProviderClient(<see cref="T:Java.Lang.String" /> name)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 with the authority of name, starting the provider if necessary. Returns
 null if there is no provider associated wih the uri. The caller must indicate that they are
 done with the provider by calling <c><see cref="M:Android.Content.ContentProviderClient.Release" /></c> which will allow
 the system to release the provider it it determines that there is no other reason for
 keeping it active.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>name
          <td>specifies which provider should be acquired</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 with the authority of name or null if there isn't one.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.ContentProviderClient" />acquireUnstableContentProviderClient(<see cref="T:Android.Net.Uri" /> uri)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 16</a></format><para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(Android.Net.Uri)" /></c>, but for use when you do
 not trust the stability of the target content provider.  This turns off
 the mechanism in the platform clean up processes that are dependent on
 a content provider if that content provider's process goes away.  Normally
 you can safely assume that once you have acquired a provider, you can freely
 use it as needed and it won't disappear, even if your process is in the
 background.  If using this method, you need to take care to deal with any
 failures when communicating with the provider, and be sure to close it
 so that it can be re-opened later.  In particular, catching a
 <c><see cref="T:Android.OS.DeadObjectException" /></c> from the calls there will let you
 know that the content provider has gone away; at that point the current
 ContentProviderClient object is invalid, and you should release it.  You
 can acquire a new one if you would like to try to restart the provider
 and perform new operations on it.
</para><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.ContentProviderClient" />acquireUnstableContentProviderClient(<see cref="T:Java.Lang.String" /> name)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 16</a></format><para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(System.String)" /></c>, but for use when you do
 not trust the stability of the target content provider.  This turns off
 the mechanism in the platform clean up processes that are dependent on
 a content provider if that content provider's process goes away.  Normally
 you can safely assume that once you have acquired a provider, you can freely
 use it as needed and it won't disappear, even if your process is in the
 background.  If using this method, you need to take care to deal with any
 failures when communicating with the provider, and be sure to close it
 so that it can be re-opened later.  In particular, catching a
 <c><see cref="T:Android.OS.DeadObjectException" /></c> from the calls there will let you
 know that the content provider has gone away; at that point the current
 ContentProviderClient object is invalid, and you should release it.  You
 can acquire a new one if you would like to try to restart the provider
 and perform new operations on it.
</para><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      addPeriodicSync(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.OS.Bundle" /> extras, long pollFrequency)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format><para tool="javadoc-to-mdoc">Specifies that a sync should be requested with the specified the account, authority,
 and extras at the given frequency. If there is already another periodic sync scheduled
 with the account, authority and extras then a new periodic sync won't be added, instead
 the frequency of the previous one will be updated.
 </para><para tool="javadoc-to-mdoc">
 These periodic syncs honor the "syncAutomatically" and "masterSyncAutomatically" settings.
 Although these sync are scheduled at the specified frequency, it may take longer for it to
 actually be started if other syncs are ahead of it in the sync operation queue. This means
 that the actual start time may drift.
 </para><para tool="javadoc-to-mdoc">
 Periodic syncs are not allowed to have any of <c><see cref="F:Android.Content.ContentResolver.SyncExtrasDoNotRetry" /></c>,
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c>, <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>,
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasInitialize" /></c>, <c><see cref="F:Android.Content.ContentResolver.SyncExtrasForce" /></c>,
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasExpedited" /></c>, <c><see cref="F:Android.Content.ContentResolver.SyncExtrasManual" /></c> set to true.
 If any are supplied then an <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> will be thrown.

 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.
 </para><para tool="javadoc-to-mdoc">The bundle for a periodic sync can be queried by applications with the correct
 permissions using
 <c><see cref="M:Android.Content.ContentResolver.GetPeriodicSyncs(Android.Accounts.Account,System.String)" /></c>, so no
 sensitive data should be transferred here.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account to specify in the sync</td></th></tr><tr><th>authority
          <td>the provider to specify in the sync request</td></th></tr><tr><th>extras
          <td>extra parameters to go along with the sync request</td></th></tr><tr><th>pollFrequency
          <td>how frequently the sync should be performed, in seconds.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.Lang.IllegalArgumentException" /><td>if an illegal extra was set or if any of the parameters
 are null.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        <see cref="T:Java.Lang.Object" />addStatusChangeListener(int mask, <see cref="T:Android.Content.ISyncStatusObserver" /> callback)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Request notifications when the different aspects of the SyncManager change. The
 different items that can be requested are:
 <list type="bullet"><item><term><c><see cref="F:Android.Content.ContentResolver.SyncObserverTypePending" /></c></term></item><item><term><c><see cref="F:Android.Content.ContentResolver.SyncObserverTypeActive" /></c></term></item><item><term><c><see cref="F:Android.Content.ContentResolver.SyncObserverTypeSettings" /></c></term></item></list>
 The caller can set one or more of the status types in the mask for any
 given listener registration.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>mask
          <td>the status change types that will cause the callback to be invoked</td></th></tr><tr><th>callback
          <td>observer to be invoked when the status changes</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>a handle that can be used to remove the listener at a later time
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        <see cref="T:Android.Content.ContentProviderResult" />applyBatch(<see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.Runtime.JavaList" />&lt;<see cref="T:Android.Content.ContentProviderOperation" />&gt; operations)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Applies each of the <c><see cref="T:Android.Content.ContentProviderOperation" /></c> objects and returns an array
 of their results. Passes through OperationApplicationException, which may be thrown
 by the call to <c><see cref="M:Android.Content.ContentProviderOperation.Apply(Android.Content.ContentProvider,Android.Content.ContentProviderResult[],Android.Content.ContentProviderResult[])" /></c>.
 If all the applications succeed then a <c><see cref="T:Android.Content.ContentProviderResult" /></c> array with the
 same number of elements as the operations will be returned. It is implementation-specific
 how many, if any, operations will have been successfully applied if a call to
 apply results in a <c><see cref="T:Android.Content.OperationApplicationException" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>authority
          <td>the authority of the ContentProvider to which this batch should be applied</td></th></tr><tr><th>operations
          <td>the operations to apply</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>the results of the applications</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Android.Content.OperationApplicationException" /><td>thrown if an application fails.
 See <c><see cref="M:Android.Content.ContentProviderOperation.Apply(Android.Content.ContentProvider,Android.Content.ContentProviderResult[],Android.Content.ContentProviderResult[])" /></c> for more information.</td></th></tr><tr><th><see cref="T:Android.OS.RemoteException" /><td>thrown if a RemoteException is encountered while attempting
   to communicate with a remote provider.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        int
      bulkInsert(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Android.Content.ContentValues" /> values)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Inserts multiple rows into a table at the given URL.

 This function make no guarantees about the atomicity of the insertions.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>The URL of the table to insert into.</td></th></tr><tr><th>values
          <td>The initial values for the newly inserted rows. The key is the column name for
               the field. Passing null will create an empty row.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>the number of newly created rows.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.OS.Bundle" />call(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> method, <see cref="T:Java.Lang.String" /> arg, <see cref="T:Android.OS.Bundle" /> extras)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 11</a></format></para><para tool="javadoc-to-mdoc">Call a provider-defined method.  This can be used to implement
 read or write interfaces which are cheaper than using a Cursor and/or
 do not fit into the traditional table model.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>method
          <td>provider-defined method name to call.  Opaque to
   framework, but must be non-null.</td></th></tr><tr><th>arg
          <td>provider-defined String argument.  May be null.</td></th></tr><tr><th>extras
          <td>provider-defined Bundle argument.  May be null.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>a result Bundle, possibly null.  Will be null if the ContentProvider
   does not implement call.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.Lang.NullPointerException" /><td>if uri or method is null</td></th></tr><tr><th><see cref="T:Java.Lang.IllegalArgumentException" /><td>if uri is not known
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      cancelSync(<see cref="T:Android.Content.SyncRequest" /> request)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 21</a></format></para><para tool="javadoc-to-mdoc">Remove the specified sync. This will cancel any pending or active syncs. If the request is
 for a periodic sync, this call will remove any future occurrences.
 
 It is possible to cancel a sync using a SyncRequest object that is not the same object
 with which you requested the sync. Do so by building a SyncRequest with the same
 adapter, frequency, <format type="text/html"><b>and</b></format> extras bundle.</para><para tool="javadoc-to-mdoc">
     If a periodic sync is specified, the caller must hold the permission
     <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.
</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>request
          <td>SyncRequest object containing information about sync to cancel.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      cancelSync(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Cancel any active or pending syncs that match account and authority. The account and
 authority can each independently be set to null, which means that syncs with any account
 or authority, respectively, will match.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>filters the syncs that match by this account</td></th></tr><tr><th>authority
          <td>filters the syncs that match by this authority
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        void
      cancelSync(<see cref="T:Android.Net.Uri" /> uri)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><i>
      This method was deprecated
      in API level 5.</i><format type="text/html"><br /></format>
    instead use <c><see cref="M:Android.Content.ContentResolver.CancelSync(Android.Accounts.Account,System.String)" /></c></para><para tool="javadoc-to-mdoc">Cancel any active or pending syncs that match the Uri. If the uri is null then
 all syncs will be canceled.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>the uri of the provider to sync or null to sync all providers.</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Net.Uri" />canonicalize(<see cref="T:Android.Net.Uri" /> url)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format></para><para tool="javadoc-to-mdoc">Transform the given <format type="text/html"><var>url</var></format> to a canonical representation of
 its referenced resource, which can be used across devices, persisted,
 backed up and restored, etc.  The returned Uri is still a fully capable
 Uri for use with its content provider, allowing you to do all of the
 same content provider operations as with the original Uri --
 <c><see cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri,System.String[],System.String[],System.String[],System.String[])" /></c>, <c><see cref="M:Android.Content.ContentResolver.OpenInputStream(Android.Net.Uri)" /></c>, etc.  The
 only difference in behavior between the original and new Uris is that
 the content provider may need to do some additional work at each call
 using it to resolve it to the correct resource, especially if the
 canonical Uri has been moved to a different environment.

 </para><para tool="javadoc-to-mdoc">If you are moving a canonical Uri between environments, you should
 perform another call to <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c> with that original Uri to
 re-canonicalize it for the current environment.  Alternatively, you may
 want to use <c><see cref="M:Android.Content.ContentResolver.Uncanonicalize(Android.Net.Uri)" /></c> to transform it to a non-canonical
 Uri that works only in the current environment but potentially more
 efficiently than the canonical representation.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>The <c><see cref="T:Android.Net.Uri" /></c> that is to be transformed to a canonical
 representation.  Like all resolver calls, the input can be either
 a non-canonical or canonical Uri.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns the official canonical representation of <format type="text/html"><var>url</var></format>,
 or null if the content provider does not support a canonical representation
 of the given Uri.  Many providers may not support canonicalization of some
 or all of their Uris.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.Uncanonicalize(Android.Net.Uri)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        int
      delete(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Java.Lang.String" /> where, <see cref="T:Java.Lang.String" /> selectionArgs)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Deletes row(s) specified by a content URI.

 If the content provider supports transactions, the deletion will be atomic.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>The URL of the row to delete.</td></th></tr><tr><th>where
          <td>A filter to apply to rows before deleting, formatted as an SQL WHERE clause
                    (excluding the WHERE itself).</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>The number of rows deleted.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        <see cref="T:Android.Content.SyncInfo" />getCurrentSync()</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><i>
      This method was deprecated
      in API level 11.</i><format type="text/html"><br /></format>
    Since multiple concurrent syncs are now supported you should use
 <c><see cref="P:Android.Content.ContentResolver.CurrentSyncs" /></c> to get the accurate list of current syncs.
 This method returns the first item from the list of current syncs
 or null if there are none.

  </para><para tool="javadoc-to-mdoc">If a sync is active returns the information about it, otherwise returns null.
 </para><para tool="javadoc-to-mdoc">
 This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>the SyncInfo for the currently active sync or null if one is not active.</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.SyncInfo" />&gt;
      getCurrentSyncs()</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 11</a></format></para><para tool="javadoc-to-mdoc">Returns a list with information about all the active syncs. This list will be empty
 if there are no active syncs.
 </para><para tool="javadoc-to-mdoc">
 This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>a List of SyncInfo objects for the currently active syncs.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        int
      getIsSyncable(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format></para><para tool="javadoc-to-mdoc">Check if this account/provider is syncable.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>&gt;0 if it is syncable, 0 if not, and &lt;0 if the state isn't known yet.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        boolean
      getMasterSyncAutomatically()</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Gets the master auto-sync setting that applies to all the providers and accounts.
 If this is false then the per-provider auto-sync setting is ignored.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>the master auto-sync setting that applies to all the providers and accounts
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.UriPermission" />&gt;
      getOutgoingPersistedUriPermissions()</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Return list of all persisted URI permission grants that are hosted by the
 calling app. That is, the returned permissions have been granted
 <i>from</i> the calling app. Only grants taken with
 <c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c> are returned.
</para><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.PeriodicSync" />&gt;
      getPeriodicSyncs(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format><para tool="javadoc-to-mdoc">Get the list of information about the periodic syncs for the given account and authority.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account whose periodic syncs we are querying</td></th></tr><tr><th>authority
          <td>the provider whose periodic syncs we are querying</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>a list of PeriodicSync objects. This list may be empty but will never be null.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        <see cref="T:Java.Util.IList" />&lt;<see cref="T:Android.Content.UriPermission" />&gt;
      getPersistedUriPermissions()</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Return list of all URI permission grants that have been persisted by the
 calling app. That is, the returned permissions have been granted
 <i>to</i> the calling app. Only persistable grants taken with
 <c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c> are returned.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c></term></item><item><term><c><see cref="M:Android.Content.ContentResolver.ReleasePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        <see cref="T:Java.Lang.String" />getStreamTypes(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Java.Lang.String" /> mimeTypeFilter)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 11</a></format><para tool="javadoc-to-mdoc">Query for the possible MIME types for the representations the given
 content URL can be returned when opened as as stream with
 <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>.  Note that the types here are
 not necessarily a superset of the type returned by <c><see cref="M:Android.Content.ContentResolver.GetType(Android.Net.Uri)" /></c> --
 many content providers cannot return a raw stream for the structured
 data that they contain.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>A Uri identifying content (either a list or specific type),
 using the content:// scheme.</td></th></tr><tr><th>mimeTypeFilter
          <td>The desired MIME type.  This may be a pattern,
 such as *&amp;#47;*, to query for all available MIME types that match the
 pattern.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns an array of MIME type strings for all available
 data streams that match the given mimeTypeFilter.  If there are none,
 null is returned.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        <see cref="T:Android.Content.SyncAdapterType" />getSyncAdapterTypes()</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Get information about the SyncAdapters that are known to the system.<format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>an array of SyncAdapters that have registered with the system
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        boolean
      getSyncAutomatically(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format></para><para tool="javadoc-to-mdoc">Check if the provider should be synced when a network tickle is received
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account whose setting we are querying</td></th></tr><tr><th>authority
          <td>the provider whose setting we are querying</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>true if the provider should be synced when a network tickle is received
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Java.Lang.String" />getType(<see cref="T:Android.Net.Uri" /> url)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Return the MIME type of the given content URL.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>A Uri identifying content (either a list or specific type),
 using the content:// scheme.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>A MIME type for the content, or null if the URL is invalid or the type is unknown
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Net.Uri" />insert(<see cref="T:Android.Net.Uri" /> url, <see cref="T:Android.Content.ContentValues" /> values)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Inserts a row into a table at the given URL.

 If the content provider supports transactions the insertion will be atomic.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>The URL of the table to insert into.</td></th></tr><tr><th>values
          <td>The initial values for the newly inserted row. The key is the column name for
               the field. Passing an empty ContentValues will create an empty row.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>the URL of the newly created row.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        boolean
      isSyncActive(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format></para><para tool="javadoc-to-mdoc">Returns true if there is currently a sync operation for the given account or authority
 actively being processed.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account whose setting we are querying</td></th></tr><tr><th>authority
          <td>the provider whose behavior is being queried</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>true if a sync is active for the given account or authority.
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        boolean
      isSyncPending(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Return true if the pending status is true of any matching authorities.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account whose setting we are querying</td></th></tr><tr><th>authority
          <td>the provider whose behavior is being queried</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>true if there is a pending sync with the matching account and authority
</term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        void
      notifyChange(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.Database.ContentObserver" /> observer, boolean syncToNetwork)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Notify registered observers that a row was updated.
 To register, call <c><see cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri,System.Boolean,System.Boolean)" /></c>.
 By default, CursorAdapter objects will get this notification.
 If syncToNetwork is true, this will attempt to schedule a local sync using the sync
 adapter that's registered for the authority of the provided uri. No account will be
 passed to the sync adapter, so all matching accounts will be synchronized.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The uri of the content that was changed.</td></th></tr><tr><th>observer
          <td>The observer that originated the change, may be <c>null.
 The observer that originated the change will only receive the notification if it
 has requested to receive self-change notifications by implementing
 <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c> to return true.</c></td></th></tr><tr><th>syncToNetwork
          <td>If true, attempt to sync the change to the network.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account,System.String,System.String)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        void
      notifyChange(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.Database.ContentObserver" /> observer)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Notify registered observers that a row was updated and attempt to sync changes
 to the network.
 To register, call <c><see cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri,System.Boolean,System.Boolean)" /></c>.
 By default, CursorAdapter objects will get this notification.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The uri of the content that was changed.</td></th></tr><tr><th>observer
          <td>The observer that originated the change, may be <c>null.
 The observer that originated the change will only receive the notification if it
 has requested to receive self-change notifications by implementing
 <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c> to return true.
</c></td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.Res.AssetFileDescriptor" />openAssetFileDescriptor(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 3</a></format><para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 interacts with the underlying <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>
 method of the provider associated with the given URI, to retrieve any file stored there.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list><format type="text/html"><h5>The android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>) Scheme</h5></format></para><para tool="javadoc-to-mdoc">
 A Uri object can be used to reference a resource in an APK file.  The
 Uri should be one of the following formats:
 <list type="bullet"><item><term><c>android.resource://package_name/id_number</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>id_number</c> is the int form of the ID.<format type="text/html"><br /></format>
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/" + R.raw.my_resource");</code></example></term></item><item><term><c>android.resource://package_name/type/name</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>type</c> is the string form of the resource type.  For example, <c>raw</c>
 or <c>drawable</c>.
 <c>name</c> is the string form of the resource name.  That is, whatever the file
 name was in your res directory, without the type extension.
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/raw/my_resource");</code></example></term></item></list></para><para tool="javadoc-to-mdoc">Note that if this function is called for read-only input (mode is "r")
 on a content: URI, it will instead call <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>
 for you with a MIME type of "*&amp;#47;*".  This allows such callers to benefit
 from any built-in data conversion that a provider implements.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI to open.</td></th></tr><tr><th>mode
          <td>The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns a new ParcelFileDescriptor pointing to the file.  You
 own this descriptor and are responsible for closing it when done.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>Throws FileNotFoundException of no
 file exists under the URI or the mode is invalid.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.Res.AssetFileDescriptor" />openAssetFileDescriptor(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 interacts with the underlying <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>
 method of the provider associated with the given URI, to retrieve any file stored there.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list><format type="text/html"><h5>The android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>) Scheme</h5></format></para><para tool="javadoc-to-mdoc">
 A Uri object can be used to reference a resource in an APK file.  The
 Uri should be one of the following formats:
 <list type="bullet"><item><term><c>android.resource://package_name/id_number</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>id_number</c> is the int form of the ID.<format type="text/html"><br /></format>
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/" + R.raw.my_resource");</code></example></term></item><item><term><c>android.resource://package_name/type/name</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>type</c> is the string form of the resource type.  For example, <c>raw</c>
 or <c>drawable</c>.
 <c>name</c> is the string form of the resource name.  That is, whatever the file
 name was in your res directory, without the type extension.
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/raw/my_resource");</code></example></term></item></list></para><para tool="javadoc-to-mdoc">Note that if this function is called for read-only input (mode is "r")
 on a content: URI, it will instead call <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>
 for you with a MIME type of "*&amp;#47;*".  This allows such callers to benefit
 from any built-in data conversion that a provider implements.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI to open.</td></th></tr><tr><th>mode
          <td>The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>.</td></th></tr><tr><th>cancellationSignal
          <td>A signal to cancel the operation in progress, or null if
            none. If the operation is canceled, then
            <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns a new ParcelFileDescriptor pointing to the file.  You
 own this descriptor and are responsible for closing it when done.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>Throws FileNotFoundException of no
 file exists under the URI or the mode is invalid.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.OS.ParcelFileDescriptor" />openFileDescriptor(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 is like <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, but uses the
 underlying <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>
 ContentProvider.openFile()} method, so will <i>not</i> work with
 providers that return sub-sections of files.  If at all possible,
 you should use <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>.  You
 will receive a FileNotFoundException exception if the provider returns a
 sub-section of a file.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para><para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.
 </para><para tool="javadoc-to-mdoc">
 If opening with the exclusive "r" or "w" modes, the returned
 ParcelFileDescriptor could be a pipe or socket pair to enable streaming
 of data. Opening with the "rw" mode implies a file on disk that supports
 seeking. If possible, always use an exclusive mode to give the underlying
 <c><see cref="T:Android.Content.ContentProvider" /></c> the most flexibility.
 </para><para tool="javadoc-to-mdoc">
 If you are writing a file, and need to communicate an error to the
 provider, use <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI to open.</td></th></tr><tr><th>mode
          <td>The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>.</td></th></tr><tr><th>cancellationSignal
          <td>A signal to cancel the operation in progress,
         or null if none. If the operation is canceled, then
         <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns a new ParcelFileDescriptor pointing to the file.  You
 own this descriptor and are responsible for closing it when done.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>Throws FileNotFoundException if no
 file exists under the URI or the mode is invalid.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.OS.ParcelFileDescriptor" />openFileDescriptor(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 is like <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, but uses the
 underlying <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>
 ContentProvider.openFile()} method, so will <i>not</i> work with
 providers that return sub-sections of files.  If at all possible,
 you should use <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>.  You
 will receive a FileNotFoundException exception if the provider returns a
 sub-section of a file.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para><para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.
 </para><para tool="javadoc-to-mdoc">
 If opening with the exclusive "r" or "w" modes, the returned
 ParcelFileDescriptor could be a pipe or socket pair to enable streaming
 of data. Opening with the "rw" mode implies a file on disk that supports
 seeking. If possible, always use an exclusive mode to give the underlying
 <c><see cref="T:Android.Content.ContentProvider" /></c> the most flexibility.
 </para><para tool="javadoc-to-mdoc">
 If you are writing a file, and need to communicate an error to the
 provider, use <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI to open.</td></th></tr><tr><th>mode
          <td>The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns a new ParcelFileDescriptor pointing to the file.  You
 own this descriptor and are responsible for closing it when done.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>Throws FileNotFoundException if no
 file exists under the URI or the mode is invalid.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Java.IO.InputStream" />openInputStream(<see cref="T:Android.Net.Uri" /> uri)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Open a stream on to the content associated with a content URI.  If there
 is no data associated with the URI, FileNotFoundException is thrown.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para><para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>InputStream</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>if the provided URI could not be opened.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Java.IO.OutputStream" />openOutputStream(<see cref="T:Android.Net.Uri" /> uri)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Synonym for <c><see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri,System.String)" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>if the provided URI could not be opened.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Java.IO.OutputStream" />openOutputStream(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mode)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 3</a></format><para tool="javadoc-to-mdoc">Open a stream on to the content associated with a content URI.  If there
 is no data associated with the URI, FileNotFoundException is thrown.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para><para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI.</td></th></tr><tr><th>mode
          <td>May be "w", "wa", "rw", or "rwt".</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>OutputStream</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>if the provided URI could not be opened.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.Res.AssetFileDescriptor" />openTypedAssetFileDescriptor(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mimeType, <see cref="T:Android.OS.Bundle" /> opts, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.  This interacts with the underlying
 <c><see cref="M:Android.Content.ContentProvider.OpenTypedAssetFile(Android.Net.Uri,System.String,System.String)" /></c> method of the provider
 associated with the given URI, to retrieve retrieve any appropriate
 data stream for the data stored there.

 </para><para tool="javadoc-to-mdoc">Unlike <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, this function only works
 with "content:" URIs, because content providers are the only facility
 with an associated MIME type to ensure that the returned data stream
 is of the desired type.

 </para><para tool="javadoc-to-mdoc">All text/* streams are encoded in UTF-8.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI to open.</td></th></tr><tr><th>mimeType
          <td>The desired MIME type of the returned data.  This can
 be a pattern such as *&amp;#47;*, which will allow the content provider to
 select a type, though there is no way for you to determine what type
 it is returning.</td></th></tr><tr><th>opts
          <td>Additional provider-dependent options.</td></th></tr><tr><th>cancellationSignal
          <td>A signal to cancel the operation in progress,
         or null if none. If the operation is canceled, then
         <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns a new ParcelFileDescriptor from which you can read the
 data stream from the provider.  Note that this may be a pipe, meaning
 you can't seek in it.  The only seek you should do is if the
 AssetFileDescriptor contains an offset, to move to that offset before
 reading.  You own this descriptor and are responsible for closing it when done.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>Throws FileNotFoundException of no
 data of the desired type exists under the URI.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Content.Res.AssetFileDescriptor" />openTypedAssetFileDescriptor(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> mimeType, <see cref="T:Android.OS.Bundle" /> opts)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 11</a></format></para><para tool="javadoc-to-mdoc">Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.  This interacts with the underlying
 <c><see cref="M:Android.Content.ContentProvider.OpenTypedAssetFile(Android.Net.Uri,System.String,System.String)" /></c> method of the provider
 associated with the given URI, to retrieve retrieve any appropriate
 data stream for the data stored there.

 </para><para tool="javadoc-to-mdoc">Unlike <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, this function only works
 with "content:" URIs, because content providers are the only facility
 with an associated MIME type to ensure that the returned data stream
 is of the desired type.

 </para><para tool="javadoc-to-mdoc">All text/* streams are encoded in UTF-8.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The desired URI to open.</td></th></tr><tr><th>mimeType
          <td>The desired MIME type of the returned data.  This can
 be a pattern such as *&amp;#47;*, which will allow the content provider to
 select a type, though there is no way for you to determine what type
 it is returning.</td></th></tr><tr><th>opts
          <td>Additional provider-dependent options.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns a new ParcelFileDescriptor from which you can read the
 data stream from the provider.  Note that this may be a pipe, meaning
 you can't seek in it.  The only seek you should do is if the
 AssetFileDescriptor contains an offset, to move to that offset before
 reading.  You own this descriptor and are responsible for closing it when done.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.IO.FileNotFoundException" /><td>Throws FileNotFoundException of no
 data of the desired type exists under the URI.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Database.ICursor" />query(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> projection, <see cref="T:Java.Lang.String" /> selection, <see cref="T:Java.Lang.String" /> selectionArgs, <see cref="T:Java.Lang.String" /> sortOrder)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set.
 </para><para tool="javadoc-to-mdoc">
 For best performance, the caller should follow these guidelines:
 <list type="bullet"><item><term>Provide an explicit projection, to prevent
 reading data from storage that aren't going to be used.</term></item><item><term>Use question mark parameter markers such as 'phone=?' instead of
 explicit values in the <c>selection</c> parameter, so that queries
 that differ only by those values will be recognized as the same
 for caching purposes.</term></item></list></para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The URI, using the content:// scheme, for the content to
         retrieve.</td></th></tr><tr><th>projection
          <td>A list of which columns to return. Passing null will
         return all columns, which is inefficient.</td></th></tr><tr><th>selection
          <td>A filter declaring which rows to return, formatted as an
         SQL WHERE clause (excluding the WHERE itself). Passing null will
         return all rows for the given URI.</td></th></tr><tr><th>selectionArgs
          <td>You may include ?s in selection, which will be
         replaced by the values from selectionArgs, in the order that they
         appear in the selection. The values will be bound as Strings.</td></th></tr><tr><th>sortOrder
          <td>How to order the rows, formatted as an SQL ORDER BY
         clause (excluding the ORDER BY itself). Passing null will use the
         default sort order, which may be unordered.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>A Cursor object, which is positioned before the first entry, or null</term></item></list><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Android.Database.ICursor" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Database.ICursor" />query(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Java.Lang.String" /> projection, <see cref="T:Java.Lang.String" /> selection, <see cref="T:Java.Lang.String" /> selectionArgs, <see cref="T:Java.Lang.String" /> sortOrder, <see cref="T:Android.OS.CancellationSignal" /> cancellationSignal)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 16</a></format><para tool="javadoc-to-mdoc">Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set
 with optional support for cancellation.
 </para><para tool="javadoc-to-mdoc">
 For best performance, the caller should follow these guidelines:
 <list type="bullet"><item><term>Provide an explicit projection, to prevent
 reading data from storage that aren't going to be used.</term></item><item><term>Use question mark parameter markers such as 'phone=?' instead of
 explicit values in the <c>selection</c> parameter, so that queries
 that differ only by those values will be recognized as the same
 for caching purposes.</term></item></list></para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The URI, using the content:// scheme, for the content to
         retrieve.</td></th></tr><tr><th>projection
          <td>A list of which columns to return. Passing null will
         return all columns, which is inefficient.</td></th></tr><tr><th>selection
          <td>A filter declaring which rows to return, formatted as an
         SQL WHERE clause (excluding the WHERE itself). Passing null will
         return all rows for the given URI.</td></th></tr><tr><th>selectionArgs
          <td>You may include ?s in selection, which will be
         replaced by the values from selectionArgs, in the order that they
         appear in the selection. The values will be bound as Strings.</td></th></tr><tr><th>sortOrder
          <td>How to order the rows, formatted as an SQL ORDER BY
         clause (excluding the ORDER BY itself). Passing null will use the
         default sort order, which may be unordered.</td></th></tr><tr><th>cancellationSignal
          <td>A signal to cancel the operation in progress, or null if none.
 If the operation is canceled, then <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown
 when the query is executed.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>A Cursor object, which is positioned before the first entry, or null</term></item></list><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Android.Database.ICursor" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        void
      registerContentObserver(<see cref="T:Android.Net.Uri" /> uri, boolean notifyForDescendents, <see cref="T:Android.Database.ContentObserver" /> observer)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Register an observer class that gets callbacks when data identified by a
 given content URI changes.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The URI to watch for changes. This can be a specific row URI, or a base URI
 for a whole class of content.</td></th></tr><tr><th>notifyForDescendents
          <td>When false, the observer will be notified whenever a
 change occurs to the exact URI specified by <c>uri</c> or to one of the
 URI's ancestors in the path hierarchy.  When true, the observer will also be notified
 whenever a change occurs to the URI's descendants in the path hierarchy.</td></th></tr><tr><th>observer
          <td>The object that receives callbacks when changes occur.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.UnregisterContentObserver(Android.Database.ContentObserver)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        void
      releasePersistableUriPermission(<see cref="T:Android.Net.Uri" /> uri, int modeFlags)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format></para><para tool="javadoc-to-mdoc">Relinquish a persisted URI permission grant. The URI must have been
 previously made persistent with
 <c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c>. Any non-persistent
 grants to the calling package will remain intact.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="P:Android.Content.ContentResolver.PersistedUriPermissions" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      removePeriodicSync(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.OS.Bundle" /> extras)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 8</a></format><para tool="javadoc-to-mdoc">Remove a periodic sync. Has no affect if account, authority and extras don't match
 an existing periodic sync.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account of the periodic sync to remove</td></th></tr><tr><th>authority
          <td>the provider of the periodic sync to remove</td></th></tr><tr><th>extras
          <td>the extras of the periodic sync to remove
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      removeStatusChangeListener(<see cref="T:Java.Lang.Object" /> handle)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Remove a previously registered status change listener.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>handle
          <td>the handle that was returned by <c><see cref="M:Android.Content.ContentResolver.AddStatusChangeListener(Android.Content.SyncObserverType,Android.Content.ISyncStatusObserver)" /></c></td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      requestSync(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, <see cref="T:Android.OS.Bundle" /> extras)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format></para><para tool="javadoc-to-mdoc">Start an asynchronous sync operation. If you want to monitor the progress
 of the sync you may register a SyncObserver. Only values of the following
 types may be used in the extras bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>which account should be synced</td></th></tr><tr><th>authority
          <td>which authority should be synced</td></th></tr><tr><th>extras
          <td>any extras to pass to the SyncAdapter.
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      requestSync(<see cref="T:Android.Content.SyncRequest" /> request)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Register a sync with the SyncManager. These requests are built using the
 <c><see cref="!:NoType:android/content/SyncRequest$Builder;Href=../../../reference/android/content/SyncRequest.Builder.html" /></c>.
</para><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      setIsSyncable(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, int syncable)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Set whether this account/provider is syncable.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>syncable
          <td>&gt;0 denotes syncable, 0 means not syncable, &lt;0 means unknown
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      setMasterSyncAutomatically(boolean sync)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Sets the master auto-sync setting that applies to all the providers and accounts.
 If this is false then the per-provider auto-sync setting is ignored.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>sync
          <td>the master auto-sync setting that applies to all the providers and accounts
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      setSyncAutomatically(<see cref="T:Android.Accounts.Account" /> account, <see cref="T:Java.Lang.String" /> authority, boolean sync)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 5</a></format><para tool="javadoc-to-mdoc">Set whether or not the provider is synced when it receives a network tickle.
 </para><para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>account
          <td>the account whose setting we are querying</td></th></tr><tr><th>authority
          <td>the provider whose behavior is being controlled</td></th></tr><tr><th>sync
          <td>true if the provider should be synced when tickles are received for it
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        void
      startSync(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.OS.Bundle" /> extras)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><i>
      This method was deprecated
      in API level 5.</i><format type="text/html"><br /></format>
    instead use
 <c><see cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account,System.String,System.String)" /></c></para><para tool="javadoc-to-mdoc">Start an asynchronous sync operation. If you want to monitor the progress
 of the sync you may register a SyncObserver. Only values of the following
 types may be used in the extras bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>the uri of the provider to sync or null to sync all providers.</td></th></tr><tr><th>extras
          <td>any extras to pass to the SyncAdapter.</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
         
         
         
         
        void
      takePersistableUriPermission(<see cref="T:Android.Net.Uri" /> uri, int modeFlags)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Take a persistable URI permission grant that has been offered. Once
 taken, the permission grant will be remembered across device reboots.
 Only URI permissions granted with
 <c><see cref="!:Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION" /></c> can be persisted. If
 the grant has already been persisted, taking it again will touch
 <c><see cref="P:Android.Content.UriPermission.PersistedTime" /></c>.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="P:Android.Content.ContentResolver.PersistedUriPermissions" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        <see cref="T:Android.Net.Uri" />uncanonicalize(<see cref="T:Android.Net.Uri" /> url)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 19</a></format><para tool="javadoc-to-mdoc">Given a canonical Uri previously generated by <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c>, convert
 it to its local non-canonical form.  This can be useful in some cases where
 you know that you will only be using the Uri in the current environment and
 want to avoid any possible overhead when using it with the content
 provider or want to verify that the referenced data exists at all in the
 new environment.</para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>url
          <td>The canonical <c><see cref="T:Android.Net.Uri" /></c> that is to be convered back to its
 non-canonical form.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>Returns the non-canonical representation of <format type="text/html"><var>url</var></format>.  This will
 return null if data identified by the canonical Uri can not be found in
 the current environment; callers must always check for null and deal with
 that by appropriately falling back to an alternative.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        void
      unregisterContentObserver(<see cref="T:Android.Database.ContentObserver" /> observer)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format><para tool="javadoc-to-mdoc">Unregisters a change observer.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>observer
          <td>The previously registered observer that is no longer needed.</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri,System.Boolean,System.Boolean)" /></c></term></item></list><format type="text/html"><h4 class="jd-details-title">
        public 
         
        final 
         
         
        int
      update(<see cref="T:Android.Net.Uri" /> uri, <see cref="T:Android.Content.ContentValues" /> values, <see cref="T:Java.Lang.String" /> where, <see cref="T:Java.Lang.String" /> selectionArgs)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Update row(s) in a content URI.

 If the content provider supports transactions the update will be atomic.<format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>uri
          <td>The URI to modify.</td></th></tr><tr><th>values
          <td>The new field values. The key is the column name for the field.
                     A null value will remove an existing field value.</td></th></tr><tr><th>where
          <td>A filter to apply to rows before updating, formatted as an SQL WHERE clause
                    (excluding the WHERE itself).</td></th></tr></table></format><format type="text/html"><h5 class="jd-tagtitle">Returns</h5></format><list type="bullet"><item><term>the number of rows updated.</term></item></list><format type="text/html"><h5 class="jd-tagtitle">Throws</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th><see cref="T:Java.Lang.NullPointerException" /><td>if uri or values are null
</td></th></tr></table></format><format type="text/html"><h4 class="jd-details-title">
        public 
        static 
         
         
         
        void
      validateSyncExtrasBundle(<see cref="T:Android.OS.Bundle" /> extras)</h4></format>
  Added in <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level 1</a></format></para><para tool="javadoc-to-mdoc">Check that only values of the following types are in the Bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></para><format type="text/html"><h5 class="jd-tagtitle">Parameters</h5></format><format type="text/html"><table class="jd-tagtable"><tr><th>extras
          <td>the Bundle to check
</td></th></tr></table></format><!-- ========= METHOD DETAIL ========  --><!-- ========= END OF CLASS DATA =========  --><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ContentResolver.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentResolver (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#ContentResolver(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContentResolver (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireContentProviderClient (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireContentProviderClient(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireContentProviderClient", "(Landroid/net/Uri;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">specifies which provider should be acquired</param>
        <summary>Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 that services the content at uri, starting the provider if necessary.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 that services the content at uri, starting the provider if necessary. Returns
 null if there is no provider associated wih the uri. The caller must indicate that they are
 done with the provider by calling <c><see cref="M:Android.Content.ContentProviderClient.Release" /></c> which will allow
 the system to release the provider it it determines that there is no other reason for
 keeping it active.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#acquireContentProviderClient(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AcquireContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireContentProviderClient (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireContentProviderClient(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireContentProviderClient", "(Ljava/lang/String;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">specifies which provider should be acquired</param>
        <summary>Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 with the authority of name, starting the provider if necessary.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 with the authority of name, starting the provider if necessary. Returns
 null if there is no provider associated wih the uri. The caller must indicate that they are
 done with the provider by calling <c><see cref="M:Android.Content.ContentProviderClient.Release" /></c> which will allow
 the system to release the provider it it determines that there is no other reason for
 keeping it active.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#acquireContentProviderClient(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUnstableContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireUnstableContentProviderClient (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireUnstableContentProviderClient(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireUnstableContentProviderClient", "(Landroid/net/Uri;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(Android.Net.Uri)" /></c>, but for use when you do
 not trust the stability of the target content provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(Android.Net.Uri)" /></c>, but for use when you do
 not trust the stability of the target content provider.  This turns off
 the mechanism in the platform clean up processes that are dependent on
 a content provider if that content provider's process goes away.  Normally
 you can safely assume that once you have acquired a provider, you can freely
 use it as needed and it won't disappear, even if your process is in the
 background.  If using this method, you need to take care to deal with any
 failures when communicating with the provider, and be sure to close it
 so that it can be re-opened later.  In particular, catching a
 <c><see cref="T:Android.OS.DeadObjectException" /></c> from the calls there will let you
 know that the content provider has gone away; at that point the current
 ContentProviderClient object is invalid, and you should release it.  You
 can acquire a new one if you would like to try to restart the provider
 and perform new operations on it.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#acquireUnstableContentProviderClient(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUnstableContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireUnstableContentProviderClient (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireUnstableContentProviderClient(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireUnstableContentProviderClient", "(Ljava/lang/String;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(System.String)" /></c>, but for use when you do
 not trust the stability of the target content provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(System.String)" /></c>, but for use when you do
 not trust the stability of the target content provider.  This turns off
 the mechanism in the platform clean up processes that are dependent on
 a content provider if that content provider's process goes away.  Normally
 you can safely assume that once you have acquired a provider, you can freely
 use it as needed and it won't disappear, even if your process is in the
 background.  If using this method, you need to take care to deal with any
 failures when communicating with the provider, and be sure to close it
 so that it can be re-opened later.  In particular, catching a
 <c><see cref="T:Android.OS.DeadObjectException" /></c> from the calls there will let you
 know that the content provider has gone away; at that point the current
 ContentProviderClient object is invalid, and you should release it.  You
 can acquire a new one if you would like to try to restart the provider
 and perform new operations on it.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#acquireUnstableContentProviderClient(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddPeriodicSync">
      <MemberSignature Language="C#" Value="public static void AddPeriodicSync (Android.Accounts.Account account, string authority, Android.OS.Bundle extras, long pollFrequency);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPeriodicSync(class Android.Accounts.Account account, string authority, class Android.OS.Bundle extras, int64 pollFrequency) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPeriodicSync", "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="pollFrequency" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="account">the account to specify in the sync</param>
        <param name="authority">the provider to specify in the sync request</param>
        <param name="extras">extra parameters to go along with the sync request</param>
        <param name="pollFrequency">how frequently the sync should be performed, in seconds.</param>
        <summary>Specifies that a sync should be requested with the specified the account, authority,
 and extras at the given frequency.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that a sync should be requested with the specified the account, authority,
 and extras at the given frequency. If there is already another periodic sync scheduled
 with the account, authority and extras then a new periodic sync won't be added, instead
 the frequency of the previous one will be updated.
 </para>
          <para tool="javadoc-to-mdoc">
 These periodic syncs honor the "syncAutomatically" and "masterSyncAutomatically" settings.
 Although these sync are scheduled at the specified frequency, it may take longer for it to
 actually be started if other syncs are ahead of it in the sync operation queue. This means
 that the actual start time may drift.
 </para>
          <para tool="javadoc-to-mdoc">
 Periodic syncs are not allowed to have any of <c><see cref="F:Android.Content.ContentResolver.SyncExtrasDoNotRetry" /></c>,
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c>, <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>,
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasInitialize" /></c>, <c><see cref="F:Android.Content.ContentResolver.SyncExtrasForce" /></c>,
 <c><see cref="F:Android.Content.ContentResolver.SyncExtrasExpedited" /></c>, <c><see cref="F:Android.Content.ContentResolver.SyncExtrasManual" /></c> set to true.
 If any are supplied then an <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> will be thrown.

 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">The bundle for a periodic sync can be queried by applications with the correct
 permissions using
 <c><see cref="M:Android.Content.ContentResolver.GetPeriodicSyncs(Android.Accounts.Account,System.String)" /></c>, so no
 sensitive data should be transferred here.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if an illegal extra was set or if any of the parameters
 are null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddStatusChangeListener">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object AddStatusChangeListener (Android.Content.SyncObserverType mask, Android.Content.ISyncStatusObserver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object AddStatusChangeListener(valuetype Android.Content.SyncObserverType mask, class Android.Content.ISyncStatusObserver callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addStatusChangeListener", "(ILandroid/content/SyncStatusObserver;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="Android.Content.SyncObserverType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="callback" Type="Android.Content.ISyncStatusObserver" />
      </Parameters>
      <Docs>
        <param name="mask">the status change types that will cause the callback to be invoked</param>
        <param name="callback">observer to be invoked when the status changes</param>
        <summary>Request notifications when the different aspects of the SyncManager change.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Request notifications when the different aspects of the SyncManager change. The
 different items that can be requested are:
 <list type="bullet"><item><term><c><see cref="F:Android.Content.ContentResolver.SyncObserverTypePending" /></c></term></item><item><term><c><see cref="F:Android.Content.ContentResolver.SyncObserverTypeActive" /></c></term></item><item><term><c><see cref="F:Android.Content.ContentResolver.SyncObserverTypeSettings" /></c></term></item></list>
 The caller can set one or more of the status types in the mask for any
 given listener registration.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#addStatusChangeListener(int, android.content.SyncStatusObserver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AnyCursorItemType">
      <MemberSignature Language="C#" Value="public const string AnyCursorItemType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AnyCursorItemType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ANY_CURSOR_ITEM_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's generic MIME type to match any MIME
 type of the form "<c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c>/<c>SUB_TYPE</c>".</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is the Android platform's generic MIME type to match any MIME
 type of the form "<c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c>/<c>SUB_TYPE</c>".
 <c>SUB_TYPE</c> is the sub-type of the application-dependent
 content, e.g., "audio", "video", "playlist".
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#ANY_CURSOR_ITEM_TYPE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyBatch">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ContentProviderResult[] ApplyBatch (string authority, System.Collections.Generic.IList&lt;Android.Content.ContentProviderOperation&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ContentProviderResult[] ApplyBatch(string authority, class System.Collections.Generic.IList`1&lt;class Android.Content.ContentProviderOperation&gt; operations) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyBatch", "(Ljava/lang/String;Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;", "GetApplyBatch_Ljava_lang_String_Ljava_util_ArrayList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="operations" Type="System.Collections.Generic.IList&lt;Android.Content.ContentProviderOperation&gt;" />
      </Parameters>
      <Docs>
        <param name="authority">To be added.</param>
        <param name="operations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkInsert">
      <MemberSignature Language="C#" Value="public int BulkInsert (Android.Net.Uri url, Android.Content.ContentValues[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BulkInsert(class Android.Net.Uri url, class Android.Content.ContentValues[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bulkInsert", "(Landroid/net/Uri;[Landroid/content/ContentValues;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues[]" />
      </Parameters>
      <Docs>
        <param name="url">The URL of the table to insert into.</param>
        <param name="values">The initial values for the newly inserted rows. The key is the column name for
               the field. Passing null will create an empty row.</param>
        <summary>Inserts multiple rows into a table at the given URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Inserts multiple rows into a table at the given URL.

 This function make no guarantees about the atomicity of the insertions.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#bulkInsert(android.net.Uri, android.content.ContentValues[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle Call (Android.Net.Uri uri, string method, string arg, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.Bundle Call(class Android.Net.Uri uri, string method, string arg, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("call", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="arg" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="method">provider-defined method name to call.  Opaque to
   framework, but must be non-null.</param>
        <param name="arg">provider-defined String argument.  May be null.</param>
        <param name="extras">provider-defined Bundle argument.  May be null.</param>
        <summary>Call a provider-defined method.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Call a provider-defined method.  This can be used to implement
 read or write interfaces which are cheaper than using a Cursor and/or
 do not fit into the traditional table model.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#call(android.net.Uri, java.lang.String, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.NullPointerException">if uri or method is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if uri is not known
</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelSync">
      <MemberSignature Language="C#" Value="public static void CancelSync (Android.Content.SyncRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelSync(class Android.Content.SyncRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelSync", "(Landroid/content/SyncRequest;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Content.SyncRequest" />
      </Parameters>
      <Docs>
        <param name="request">SyncRequest object containing information about sync to cancel.
</param>
        <summary tool="true">Remove the specified sync.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove the specified sync. This will cancel any pending or active syncs. If the request is
 for a periodic sync, this call will remove any future occurrences.
 
 It is possible to cancel a sync using a SyncRequest object that is not the same object
 with which you requested the sync. Do so by building a SyncRequest with the same
 adapter, frequency, <format type="text/html"><b>and</b></format> extras bundle.</para>
          <para tool="javadoc-to-mdoc">
     If a periodic sync is specified, the caller must hold the permission
     <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#cancelSync(android.content.SyncRequest)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSync">
      <MemberSignature Language="C#" Value="public virtual void CancelSync (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelSync(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelSync", "(Landroid/net/Uri;)V", "GetCancelSync_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">the uri of the provider to sync or null to sync all providers.</param>
        <summary>Cancel any active or pending syncs that match the Uri.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel any active or pending syncs that match the Uri. If the uri is null then
 all syncs will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#cancelSync(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CancelSync">
      <MemberSignature Language="C#" Value="public static void CancelSync (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelSync(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelSync", "(Landroid/accounts/Account;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">filters the syncs that match by this account</param>
        <param name="authority">filters the syncs that match by this authority
</param>
        <summary>Cancel any active or pending syncs that match account and authority.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel any active or pending syncs that match account and authority. The account and
 authority can each independently be set to null, which means that syncs with any account
 or authority, respectively, will match.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#cancelSync(android.accounts.Account, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Canonicalize">
      <MemberSignature Language="C#" Value="public Android.Net.Uri Canonicalize (Android.Net.Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri Canonicalize(class Android.Net.Uri url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canonicalize", "(Landroid/net/Uri;)Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="url">The <c><see cref="T:Android.Net.Uri" /></c> that is to be transformed to a canonical
 representation.  Like all resolver calls, the input can be either
 a non-canonical or canonical Uri.</param>
        <summary>Transform the given <format type="text/html"><var>url</var></format> to a canonical representation of
 its referenced resource, which can be used across devices, persisted,
 backed up and restored, etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Transform the given <format type="text/html"><var>url</var></format> to a canonical representation of
 its referenced resource, which can be used across devices, persisted,
 backed up and restored, etc.  The returned Uri is still a fully capable
 Uri for use with its content provider, allowing you to do all of the
 same content provider operations as with the original Uri --
 <c><see cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri,System.String[],System.String[],System.String[],System.String[])" /></c>, <c><see cref="M:Android.Content.ContentResolver.OpenInputStream(Android.Net.Uri)" /></c>, etc.  The
 only difference in behavior between the original and new Uris is that
 the content provider may need to do some additional work at each call
 using it to resolve it to the correct resource, especially if the
 canonical Uri has been moved to a different environment.

 </para>
          <para tool="javadoc-to-mdoc">If you are moving a canonical Uri between environments, you should
 perform another call to <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c> with that original Uri to
 re-canonicalize it for the current environment.  Alternatively, you may
 want to use <c><see cref="M:Android.Content.ContentResolver.Uncanonicalize(Android.Net.Uri)" /></c> to transform it to a non-canonical
 Uri that works only in the current environment but potentially more
 efficiently than the canonical representation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#canonicalize(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.ContentResolver.Uncanonicalize(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSync">
      <MemberSignature Language="C#" Value="public static Android.Content.SyncInfo CurrentSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Content.SyncInfo CurrentSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentSync", "()Landroid/content/SyncInfo;", "GetGetCurrentSyncHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If a sync is active returns the information about it, otherwise returns null.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">If a sync is active returns the information about it, otherwise returns null.
 </para>
          <para tool="javadoc-to-mdoc">
 This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getCurrentSync()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSyncs">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Android.Content.SyncInfo&gt; CurrentSyncs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class Android.Content.SyncInfo&gt; CurrentSyncs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentSyncs", "()Ljava/util/List;", "GetGetCurrentSyncsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.SyncInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list with information about all the active syncs.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a list with information about all the active syncs. This list will be empty
 if there are no active syncs.
 </para>
          <para tool="javadoc-to-mdoc">
 This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getCurrentSyncs()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CursorDirBaseType">
      <MemberSignature Language="C#" Value="public const string CursorDirBaseType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CursorDirBaseType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CURSOR_DIR_BASE_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's base MIME type for a content: URI
 containing a Cursor of zero or more items.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is the Android platform's base MIME type for a content: URI
 containing a Cursor of zero or more items.  Applications should use this
 as the base type along with their own sub-type of their content: URIs
 that represent a directory of items.  For example, hypothetical IMAP email
 client may have a URI
 <c>content://com.company.provider.imap/inbox</c> for all of the
 messages in its inbox, whose MIME type would be reported as
 <c>CURSOR_DIR_BASE_TYPE + "/vnd.company.imap-msg"</c></para>
          <para tool="javadoc-to-mdoc">Note how the base MIME type varies between this and
 <c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c> depending on whether there is
 one single item or multiple items in the data set, while the sub-type
 remains the same because in either case the data structure contained
 in the cursor is the same.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#CURSOR_DIR_BASE_TYPE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CursorItemBaseType">
      <MemberSignature Language="C#" Value="public const string CursorItemBaseType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CursorItemBaseType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CURSOR_ITEM_BASE_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's base MIME type for a content: URI
 containing a Cursor of a single item.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is the Android platform's base MIME type for a content: URI
 containing a Cursor of a single item.  Applications should use this
 as the base type along with their own sub-type of their content: URIs
 that represent a particular item.  For example, hypothetical IMAP email
 client may have a URI
 <c>content://com.company.provider.imap/inbox/1</c> for a particular
 message in the inbox, whose MIME type would be reported as
 <c>CURSOR_ITEM_BASE_TYPE + "/vnd.company.imap-msg"</c></para>
          <para tool="javadoc-to-mdoc">Compare with <c><see cref="F:Android.Content.ContentResolver.CursorDirBaseType" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#CURSOR_ITEM_BASE_TYPE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (Android.Net.Uri url, string where, string[] selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class Android.Net.Uri url, string where, string[] selectionArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="where" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="url">The URL of the row to delete.</param>
        <param name="where">A filter to apply to rows before deleting, formatted as an SQL WHERE clause
                    (excluding the WHERE itself).</param>
        <param name="selectionArgs">To be added.</param>
        <summary>Deletes row(s) specified by a content URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Deletes row(s) specified by a content URI.

 If the content provider supports transactions, the deletion will be atomic.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#delete(android.net.Uri, java.lang.String, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtraSize">
      <MemberSignature Language="C#" Value="public const string ExtraSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An extra <c><see cref="T:Android.Graphics.Point" /></c> describing the optimal size for a requested image
 resource, in pixels.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An extra <c><see cref="T:Android.Graphics.Point" /></c> describing the optimal size for a requested image
 resource, in pixels. If a provider has multiple sizes of the image, it
 should return the image closest to this size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#EXTRA_SIZE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri, System.String, System.String)" />
        <altmember cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetIsSyncable">
      <MemberSignature Language="C#" Value="public static int GetIsSyncable (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIsSyncable(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIsSyncable", "(Landroid/accounts/Account;Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">To be added.</param>
        <param name="authority">To be added.</param>
        <summary>Check if this account/provider is syncable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Check if this account/provider is syncable.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getIsSyncable(android.accounts.Account, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetPeriodicSyncs">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Android.Content.PeriodicSync&gt; GetPeriodicSyncs (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Android.Content.PeriodicSync&gt; GetPeriodicSyncs(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPeriodicSyncs", "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PeriodicSync&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose periodic syncs we are querying</param>
        <param name="authority">the provider whose periodic syncs we are querying</param>
        <summary>Get the list of information about the periodic syncs for the given account and authority.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the list of information about the periodic syncs for the given account and authority.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getPeriodicSyncs(android.accounts.Account, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamTypes">
      <MemberSignature Language="C#" Value="public virtual string[] GetStreamTypes (Android.Net.Uri url, string mimeTypeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetStreamTypes(class Android.Net.Uri url, string mimeTypeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStreamTypes", "(Landroid/net/Uri;Ljava/lang/String;)[Ljava/lang/String;", "GetGetStreamTypes_Landroid_net_Uri_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="mimeTypeFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">A Uri identifying content (either a list or specific type),
 using the content:// scheme.</param>
        <param name="mimeTypeFilter">The desired MIME type.  This may be a pattern,
 such as *&amp;#47;*, to query for all available MIME types that match the
 pattern.</param>
        <summary>Query for the possible MIME types for the representations the given
 content URL can be returned when opened as as stream with
 <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Query for the possible MIME types for the representations the given
 content URL can be returned when opened as as stream with
 <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>.  Note that the types here are
 not necessarily a superset of the type returned by <c><see cref="M:Android.Content.ContentResolver.GetType(Android.Net.Uri)" /></c> --
 many content providers cannot return a raw stream for the structured
 data that they contain.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getStreamTypes(android.net.Uri, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetSyncAdapterTypes">
      <MemberSignature Language="C#" Value="public static Android.Content.SyncAdapterType[] GetSyncAdapterTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.SyncAdapterType[] GetSyncAdapterTypes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSyncAdapterTypes", "()[Landroid/content/SyncAdapterType;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncAdapterType[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get information about the SyncAdapters that are known to the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get information about the SyncAdapters that are known to the system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getSyncAdapterTypes()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetSyncAutomatically">
      <MemberSignature Language="C#" Value="public static bool GetSyncAutomatically (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetSyncAutomatically(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSyncAutomatically", "(Landroid/accounts/Account;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose setting we are querying</param>
        <summary>Check if the provider should be synced when a network tickle is received
 </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Check if the provider should be synced when a network tickle is received
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getSyncAutomatically(android.accounts.Account, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public string GetType (Android.Net.Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetType(class Android.Net.Uri url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="url">A Uri identifying content (either a list or specific type),
 using the content:// scheme.</param>
        <summary>Return the MIME type of the given content URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the MIME type of the given content URL.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getType(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public Android.Net.Uri Insert (Android.Net.Uri url, Android.Content.ContentValues values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri Insert(class Android.Net.Uri url, class Android.Content.ContentValues values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="url">The URL of the table to insert into.</param>
        <param name="values">The initial values for the newly inserted row. The key is the column name for
               the field. Passing an empty ContentValues will create an empty row.</param>
        <summary>Inserts a row into a table at the given URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Inserts a row into a table at the given URL.

 If the content provider supports transactions the insertion will be atomic.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#insert(android.net.Uri, android.content.ContentValues)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSyncActive">
      <MemberSignature Language="C#" Value="public static bool IsSyncActive (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSyncActive(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSyncActive", "(Landroid/accounts/Account;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose behavior is being queried</param>
        <summary>Returns true if there is currently a sync operation for the given account or authority
 actively being processed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if there is currently a sync operation for the given account or authority
 actively being processed.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#isSyncActive(android.accounts.Account, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsSyncPending">
      <MemberSignature Language="C#" Value="public static bool IsSyncPending (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSyncPending(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSyncPending", "(Landroid/accounts/Account;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose behavior is being queried</param>
        <summary>Return true if the pending status is true of any matching authorities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the pending status is true of any matching authorities.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_STATS" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#isSyncPending(android.accounts.Account, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="MasterSyncAutomatically">
      <MemberSignature Language="C#" Value="public static bool MasterSyncAutomatically { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MasterSyncAutomatically" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMasterSyncAutomatically", "()Z", "GetGetMasterSyncAutomaticallyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMasterSyncAutomatically", "(Z)V", "GetSetMasterSyncAutomatically_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the master auto-sync setting that applies to all the providers and accounts.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getMasterSyncAutomatically()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the master auto-sync setting that applies to all the providers and accounts.
 If this is false then the per-provider auto-sync setting is ignored.
 This method requires the caller to hold the permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#READ_SYNC_SETTINGS" /></c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#setMasterSyncAutomatically(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the master auto-sync setting that applies to all the providers and accounts.
 If this is false then the per-provider auto-sync setting is ignored.
 This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="NotifyChange">
      <MemberSignature Language="C#" Value="public virtual void NotifyChange (Android.Net.Uri uri, Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyChange(class Android.Net.Uri uri, class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyChange", "(Landroid/net/Uri;Landroid/database/ContentObserver;)V", "GetNotifyChange_Landroid_net_Uri_Landroid_database_ContentObserver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="uri">The uri of the content that was changed.</param>
        <param name="observer">The observer that originated the change, may be <c>null.
 The observer that originated the change will only receive the notification if it
 has requested to receive self-change notifications by implementing
 <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c> to return true.
</c></param>
        <summary tool="true">Notify registered observers that a row was updated and attempt to sync changes
 to the network.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notify registered observers that a row was updated and attempt to sync changes
 to the network.
 To register, call <c><see cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri,System.Boolean,System.Boolean)" /></c>.
 By default, CursorAdapter objects will get this notification.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#notifyChange(android.net.Uri, android.database.ContentObserver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NotifyChange">
      <MemberSignature Language="C#" Value="public virtual void NotifyChange (Android.Net.Uri uri, Android.Database.ContentObserver observer, bool syncToNetwork);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyChange(class Android.Net.Uri uri, class Android.Database.ContentObserver observer, bool syncToNetwork) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyChange", "(Landroid/net/Uri;Landroid/database/ContentObserver;Z)V", "GetNotifyChange_Landroid_net_Uri_Landroid_database_ContentObserver_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
        <Parameter Name="syncToNetwork" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The uri of the content that was changed.</param>
        <param name="observer">The observer that originated the change, may be <c>null.
 The observer that originated the change will only receive the notification if it
 has requested to receive self-change notifications by implementing
 <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c> to return true.</c></param>
        <param name="syncToNetwork">If true, attempt to sync the change to the network.</param>
        <summary>Notify registered observers that a row was updated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notify registered observers that a row was updated.
 To register, call <c><see cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri,System.Boolean,System.Boolean)" /></c>.
 By default, CursorAdapter objects will get this notification.
 If syncToNetwork is true, this will attempt to schedule a local sync using the sync
 adapter that's registered for the authority of the provided uri. No account will be
 passed to the sync adapter, so all matching accounts will be synchronized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#notifyChange(android.net.Uri, android.database.ContentObserver, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor (Android.Net.Uri uri, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor(class Android.Net.Uri uri, string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 interacts with the underlying <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>
 method of the provider associated with the given URI, to retrieve any file stored there.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list><format type="text/html"><h5>The android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>) Scheme</h5></format></para>
          <para tool="javadoc-to-mdoc">
 A Uri object can be used to reference a resource in an APK file.  The
 Uri should be one of the following formats:
 <list type="bullet"><item><term><c>android.resource://package_name/id_number</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>id_number</c> is the int form of the ID.<format type="text/html"><br /></format>
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/" + R.raw.my_resource");</code></example></term></item><item><term><c>android.resource://package_name/type/name</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>type</c> is the string form of the resource type.  For example, <c>raw</c>
 or <c>drawable</c>.
 <c>name</c> is the string form of the resource name.  That is, whatever the file
 name was in your res directory, without the type extension.
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/raw/my_resource");</code></example></term></item></list></para>
          <para tool="javadoc-to-mdoc">Note that if this function is called for read-only input (mode is "r")
 on a content: URI, it will instead call <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>
 for you with a MIME type of "*&amp;#47;*".  This allows such callers to benefit
 from any built-in data conversion that a provider implements.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openAssetFileDescriptor(android.net.Uri, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 file exists under the URI or the mode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor (Android.Net.Uri uri, string mode, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor(class Android.Net.Uri uri, string mode, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if
            none. If the operation is canceled, then
            <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 interacts with the underlying <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri,System.String)" /></c>
 method of the provider associated with the given URI, to retrieve any file stored there.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list><format type="text/html"><h5>The android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>) Scheme</h5></format></para>
          <para tool="javadoc-to-mdoc">
 A Uri object can be used to reference a resource in an APK file.  The
 Uri should be one of the following formats:
 <list type="bullet"><item><term><c>android.resource://package_name/id_number</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>id_number</c> is the int form of the ID.<format type="text/html"><br /></format>
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/" + R.raw.my_resource");</code></example></term></item><item><term><c>android.resource://package_name/type/name</c><format type="text/html"><br /></format><c>package_name</c> is your package name as listed in your AndroidManifest.xml.
 For example <c>com.example.myapp</c><format type="text/html"><br /></format><c>type</c> is the string form of the resource type.  For example, <c>raw</c>
 or <c>drawable</c>.
 <c>name</c> is the string form of the resource name.  That is, whatever the file
 name was in your res directory, without the type extension.
 The easiest way to construct this form is
 <example><code lang="java">Uri uri = Uri.parse("android.resource://com.example.myapp/raw/my_resource");</code></example></term></item></list></para>
          <para tool="javadoc-to-mdoc">Note that if this function is called for read-only input (mode is "r")
 on a content: URI, it will instead call <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri,System.String,System.String)" /></c>
 for you with a MIME type of "*&amp;#47;*".  This allows such callers to benefit
 from any built-in data conversion that a provider implements.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 file exists under the URI or the mode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.OS.ParcelFileDescriptor OpenFileDescriptor (Android.Net.Uri uri, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.ParcelFileDescriptor OpenFileDescriptor(class Android.Net.Uri uri, string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 is like <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, but uses the
 underlying <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>
 ContentProvider.openFile()} method, so will <i>not</i> work with
 providers that return sub-sections of files.  If at all possible,
 you should use <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>.  You
 will receive a FileNotFoundException exception if the provider returns a
 sub-section of a file.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para>
          <para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.
 </para>
          <para tool="javadoc-to-mdoc">
 If opening with the exclusive "r" or "w" modes, the returned
 ParcelFileDescriptor could be a pipe or socket pair to enable streaming
 of data. Opening with the "rw" mode implies a file on disk that supports
 seeking. If possible, always use an exclusive mode to give the underlying
 <c><see cref="T:Android.Content.ContentProvider" /></c> the most flexibility.
 </para>
          <para tool="javadoc-to-mdoc">
 If you are writing a file, and need to communicate an error to the
 provider, use <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openFileDescriptor(android.net.Uri, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException if no
 file exists under the URI or the mode is invalid.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.OS.ParcelFileDescriptor OpenFileDescriptor (Android.Net.Uri uri, string mode, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.ParcelFileDescriptor OpenFileDescriptor(class Android.Net.Uri uri, string mode, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress,
         or null if none. If the operation is canceled, then
         <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a raw file descriptor to access data under a URI.  This
 is like <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, but uses the
 underlying <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri,System.String)" /></c>
 ContentProvider.openFile()} method, so will <i>not</i> work with
 providers that return sub-sections of files.  If at all possible,
 you should use <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>.  You
 will receive a FileNotFoundException exception if the provider returns a
 sub-section of a file.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para>
          <para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.
 </para>
          <para tool="javadoc-to-mdoc">
 If opening with the exclusive "r" or "w" modes, the returned
 ParcelFileDescriptor could be a pipe or socket pair to enable streaming
 of data. Opening with the "rw" mode implies a file on disk that supports
 seeking. If possible, always use an exclusive mode to give the underlying
 <c><see cref="T:Android.Content.ContentProvider" /></c> the most flexibility.
 </para>
          <para tool="javadoc-to-mdoc">
 If you are writing a file, and need to communicate an error to the
 provider, use <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException if no
 file exists under the URI or the mode is invalid.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenInputStream (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenInputStream(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openInputStream", "(Landroid/net/Uri;)Ljava/io/InputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI.</param>
        <summary>Open a stream on to the content associated with a content URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a stream on to the content associated with a content URI.  If there
 is no data associated with the URI, FileNotFoundException is thrown.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>android.resource (<c><see cref="F:Android.Content.ContentResolver.SchemeAndroidResource" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para>
          <para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openInputStream(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the provided URI could not be opened.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenOutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenOutputStream (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenOutputStream(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openOutputStream", "(Landroid/net/Uri;)Ljava/io/OutputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Synonym for <c><see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri,System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Synonym for <c><see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openOutputStream(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the provided URI could not be opened.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenOutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenOutputStream (Android.Net.Uri uri, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenOutputStream(class Android.Net.Uri uri, string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openOutputStream", "(Landroid/net/Uri;Ljava/lang/String;)Ljava/io/OutputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI.</param>
        <param name="mode">May be "w", "wa", "rw", or "rwt".</param>
        <summary>Open a stream on to the content associated with a content URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a stream on to the content associated with a content URI.  If there
 is no data associated with the URI, FileNotFoundException is thrown.

 <format type="text/html"><h5>Accepts the following URI schemes:</h5></format><list type="bullet"><item><term>content (<c><see cref="F:Android.Content.ContentResolver.SchemeContent" /></c>)</term></item><item><term>file (<c><see cref="F:Android.Content.ContentResolver.SchemeFile" /></c>)</term></item></list></para>
          <para tool="javadoc-to-mdoc">See <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c> for more information
 on these schemes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openOutputStream(android.net.Uri, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.IO.FileNotFoundException">if the provided URI could not be opened.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenTypedAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor (Android.Net.Uri uri, string mimeType, Android.OS.Bundle opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor(class Android.Net.Uri uri, string mimeType, class Android.OS.Bundle opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openTypedAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mimeType">The desired MIME type of the returned data.  This can
 be a pattern such as *&amp;#47;*, which will allow the content provider to
 select a type, though there is no way for you to determine what type
 it is returning.</param>
        <param name="opts">Additional provider-dependent options.</param>
        <summary>Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.  This interacts with the underlying
 <c><see cref="M:Android.Content.ContentProvider.OpenTypedAssetFile(Android.Net.Uri,System.String,System.String)" /></c> method of the provider
 associated with the given URI, to retrieve retrieve any appropriate
 data stream for the data stored there.

 </para>
          <para tool="javadoc-to-mdoc">Unlike <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, this function only works
 with "content:" URIs, because content providers are the only facility
 with an associated MIME type to ensure that the returned data stream
 is of the desired type.

 </para>
          <para tool="javadoc-to-mdoc">All text/* streams are encoded in UTF-8.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 data of the desired type exists under the URI.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenTypedAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor (Android.Net.Uri uri, string mimeType, Android.OS.Bundle opts, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor(class Android.Net.Uri uri, string mimeType, class Android.OS.Bundle opts, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openTypedAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mimeType">The desired MIME type of the returned data.  This can
 be a pattern such as *&amp;#47;*, which will allow the content provider to
 select a type, though there is no way for you to determine what type
 it is returning.</param>
        <param name="opts">Additional provider-dependent options.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress,
         or null if none. If the operation is canceled, then
         <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</param>
        <summary>Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.  This interacts with the underlying
 <c><see cref="M:Android.Content.ContentProvider.OpenTypedAssetFile(Android.Net.Uri,System.String,System.String)" /></c> method of the provider
 associated with the given URI, to retrieve retrieve any appropriate
 data stream for the data stored there.

 </para>
          <para tool="javadoc-to-mdoc">Unlike <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>, this function only works
 with "content:" URIs, because content providers are the only facility
 with an associated MIME type to ensure that the returned data stream
 is of the desired type.

 </para>
          <para tool="javadoc-to-mdoc">All text/* streams are encoded in UTF-8.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 data of the desired type exists under the URI.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OutgoingPersistedUriPermissions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt; OutgoingPersistedUriPermissions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.UriPermission&gt; OutgoingPersistedUriPermissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOutgoingPersistedUriPermissions", "()Ljava/util/List;", "GetGetOutgoingPersistedUriPermissionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all persisted URI permission grants that are hosted by the
 calling app.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return list of all persisted URI permission grants that are hosted by the
 calling app. That is, the returned permissions have been granted
 <i>from</i> the calling app. Only grants taken with
 <c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c> are returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getOutgoingPersistedUriPermissions()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedUriPermissions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt; PersistedUriPermissions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.UriPermission&gt; PersistedUriPermissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPersistedUriPermissions", "()Ljava/util/List;", "GetGetPersistedUriPermissionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all URI permission grants that have been persisted by the
 calling app.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return list of all URI permission grants that have been persisted by the
 calling app. That is, the returned permissions have been granted
 <i>to</i> the calling app. Only persistable grants taken with
 <c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c> are returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#getPersistedUriPermissions()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
        <altmember cref="M:Android.Content.ContentResolver.ReleasePersistableUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Android.Database.ICursor Query (Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI, using the content:// scheme, for the content to
         retrieve.</param>
        <param name="projection">A list of which columns to return. Passing null will
         return all columns, which is inefficient.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
         SQL WHERE clause (excluding the WHERE itself). Passing null will
         return all rows for the given URI.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
         replaced by the values from selectionArgs, in the order that they
         appear in the selection. The values will be bound as Strings.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL ORDER BY
         clause (excluding the ORDER BY itself). Passing null will use the
         default sort order, which may be unordered.</param>
        <summary>Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set.
 </para>
          <para tool="javadoc-to-mdoc">
 For best performance, the caller should follow these guidelines:
 <list type="bullet"><item><term>Provide an explicit projection, to prevent
 reading data from storage that aren't going to be used.</term></item><item><term>Use question mark parameter markers such as 'phone=?' instead of
 explicit values in the <c>selection</c> parameter, so that queries
 that differ only by those values will be recognized as the same
 for caching purposes.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Android.Database.ICursor Query (Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The URI, using the content:// scheme, for the content to
         retrieve.</param>
        <param name="projection">A list of which columns to return. Passing null will
         return all columns, which is inefficient.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
         SQL WHERE clause (excluding the WHERE itself). Passing null will
         return all rows for the given URI.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
         replaced by the values from selectionArgs, in the order that they
         appear in the selection. The values will be bound as Strings.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL ORDER BY
         clause (excluding the ORDER BY itself). Passing null will use the
         default sort order, which may be unordered.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
 If the operation is canceled, then <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown
 when the query is executed.</param>
        <summary>Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set
 with optional support for cancellation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set
 with optional support for cancellation.
 </para>
          <para tool="javadoc-to-mdoc">
 For best performance, the caller should follow these guidelines:
 <list type="bullet"><item><term>Provide an explicit projection, to prevent
 reading data from storage that aren't going to be used.</term></item><item><term>Use question mark parameter markers such as 'phone=?' instead of
 explicit values in the <c>selection</c> parameter, so that queries
 that differ only by those values will be recognized as the same
 for caching purposes.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="RegisterContentObserver">
      <MemberSignature Language="C#" Value="public void RegisterContentObserver (Android.Net.Uri uri, bool notifyForDescendents, Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContentObserver(class Android.Net.Uri uri, bool notifyForDescendents, class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerContentObserver", "(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="notifyForDescendents" Type="System.Boolean" />
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="uri">The URI to watch for changes. This can be a specific row URI, or a base URI
 for a whole class of content.</param>
        <param name="notifyForDescendents">When false, the observer will be notified whenever a
 change occurs to the exact URI specified by <c>uri</c> or to one of the
 URI's ancestors in the path hierarchy.  When true, the observer will also be notified
 whenever a change occurs to the URI's descendants in the path hierarchy.</param>
        <param name="observer">The object that receives callbacks when changes occur.</param>
        <summary>Register an observer class that gets callbacks when data identified by a
 given content URI changes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register an observer class that gets callbacks when data identified by a
 given content URI changes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#registerContentObserver(android.net.Uri, boolean, android.database.ContentObserver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.UnregisterContentObserver(Android.Database.ContentObserver)" />
      </Docs>
    </Member>
    <Member MemberName="ReleasePersistableUriPermission">
      <MemberSignature Language="C#" Value="public virtual void ReleasePersistableUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleasePersistableUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releasePersistableUriPermission", "(Landroid/net/Uri;I)V", "GetReleasePersistableUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="modeFlags">To be added.</param>
        <summary>Relinquish a persisted URI permission grant.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Relinquish a persisted URI permission grant. The URI must have been
 previously made persistent with
 <c><see cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" /></c>. Any non-persistent
 grants to the calling package will remain intact.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#releasePersistableUriPermission(android.net.Uri, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Content.ContentResolver.PersistedUriPermissions" />
      </Docs>
    </Member>
    <Member MemberName="RemovePeriodicSync">
      <MemberSignature Language="C#" Value="public static void RemovePeriodicSync (Android.Accounts.Account account, string authority, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePeriodicSync(class Android.Accounts.Account account, string authority, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePeriodicSync", "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="account">the account of the periodic sync to remove</param>
        <param name="authority">the provider of the periodic sync to remove</param>
        <param name="extras">the extras of the periodic sync to remove
</param>
        <summary>Remove a periodic sync.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a periodic sync. Has no affect if account, authority and extras don't match
 an existing periodic sync.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RemoveStatusChangeListener">
      <MemberSignature Language="C#" Value="public static void RemoveStatusChangeListener (Java.Lang.Object handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStatusChangeListener(class Java.Lang.Object handle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeStatusChangeListener", "(Ljava/lang/Object;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="handle">the handle that was returned by <c><see cref="M:Android.Content.ContentResolver.AddStatusChangeListener(Android.Content.SyncObserverType,Android.Content.ISyncStatusObserver)" /></c></param>
        <summary>Remove a previously registered status change listener.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a previously registered status change listener.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#removeStatusChangeListener(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="RequestSync">
      <MemberSignature Language="C#" Value="public static void RequestSync (Android.Content.SyncRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestSync(class Android.Content.SyncRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSync", "(Landroid/content/SyncRequest;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Content.SyncRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary tool="true">Register a sync with the SyncManager.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register a sync with the SyncManager. These requests are built using the
 <c><see cref="!:NoType:android/content/SyncRequest$Builder;Href=../../../reference/android/content/SyncRequest.Builder.html" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#requestSync(android.content.SyncRequest)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestSync">
      <MemberSignature Language="C#" Value="public static void RequestSync (Android.Accounts.Account account, string authority, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestSync(class Android.Accounts.Account account, string authority, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSync", "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="account">which account should be synced</param>
        <param name="authority">which authority should be synced</param>
        <param name="extras">any extras to pass to the SyncAdapter.
</param>
        <summary>Start an asynchronous sync operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start an asynchronous sync operation. If you want to monitor the progress
 of the sync you may register a SyncObserver. Only values of the following
 types may be used in the extras bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#requestSync(android.accounts.Account, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SchemeAndroidResource">
      <MemberSignature Language="C#" Value="public const string SchemeAndroidResource;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeAndroidResource" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_ANDROID_RESOURCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SCHEME_ANDROID_RESOURCE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeContent">
      <MemberSignature Language="C#" Value="public const string SchemeContent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeContent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_CONTENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SCHEME_CONTENT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeFile">
      <MemberSignature Language="C#" Value="public const string SchemeFile;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_FILE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SCHEME_FILE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetIsSyncable">
      <MemberSignature Language="C#" Value="public static void SetIsSyncable (Android.Accounts.Account account, string authority, int syncable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsSyncable(class Android.Accounts.Account account, string authority, int32 syncable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIsSyncable", "(Landroid/accounts/Account;Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="syncable" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="account">To be added.</param>
        <param name="authority">To be added.</param>
        <param name="syncable">&gt;0 denotes syncable, 0 means not syncable, &lt;0 means unknown
</param>
        <summary>Set whether this account/provider is syncable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether this account/provider is syncable.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#setIsSyncable(android.accounts.Account, java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetSyncAutomatically">
      <MemberSignature Language="C#" Value="public static void SetSyncAutomatically (Android.Accounts.Account account, string authority, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSyncAutomatically(class Android.Accounts.Account account, string authority, bool sync) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSyncAutomatically", "(Landroid/accounts/Account;Ljava/lang/String;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose behavior is being controlled</param>
        <param name="sync">true if the provider should be synced when tickles are received for it
</param>
        <summary>Set whether or not the provider is synced when it receives a network tickle.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether or not the provider is synced when it receives a network tickle.
 </para>
          <para tool="javadoc-to-mdoc">This method requires the caller to hold the permission
 <c><see cref="F:Android.Manifest.Permission.WriteSyncSettings" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="StartSync">
      <MemberSignature Language="C#" Value="public virtual void StartSync (Android.Net.Uri uri, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartSync(class Android.Net.Uri uri, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startSync", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetStartSync_Landroid_net_Uri_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uri">the uri of the provider to sync or null to sync all providers.</param>
        <param name="extras">any extras to pass to the SyncAdapter.</param>
        <summary>Start an asynchronous sync operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start an asynchronous sync operation. If you want to monitor the progress
 of the sync you may register a SyncObserver. Only values of the following
 types may be used in the extras bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#startSync(android.net.Uri, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasAccount">
      <MemberSignature Language="C#" Value="public const string SyncExtrasAccount;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasAccount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_ACCOUNT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_ACCOUNT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasDiscardLocalDeletions">
      <MemberSignature Language="C#" Value="public const string SyncExtrasDiscardLocalDeletions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasDiscardLocalDeletions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the sync adapter should not proceed with the delete operations,
 if it determines that there are too many.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the sync adapter should not proceed with the delete operations,
 if it determines that there are too many.
 See <c><see cref="P:Android.Content.SyncResult.TooManyDeletions" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasDoNotRetry">
      <MemberSignature Language="C#" Value="public const string SyncExtrasDoNotRetry;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasDoNotRetry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_DO_NOT_RETRY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true then the request will not be retried if it fails.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If this extra is set to true then the request will not be retried if it fails.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_DO_NOT_RETRY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasExpedited">
      <MemberSignature Language="C#" Value="public const string SyncExtrasExpedited;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasExpedited" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_EXPEDITED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true, the sync request will be scheduled
 at the front of the sync request queue and without any delay
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If this extra is set to true, the sync request will be scheduled
 at the front of the sync request queue and without any delay
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_EXPEDITED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasForce">
      <MemberSignature Language="C#" Value="public const string SyncExtrasForce;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasForce" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_FORCE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_FORCE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasIgnoreBackoff">
      <MemberSignature Language="C#" Value="public const string SyncExtrasIgnoreBackoff;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasIgnoreBackoff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_IGNORE_BACKOFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true then any backoffs for the initial attempt (e.g. due to retries)
 are ignored by the sync scheduler.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If this extra is set to true then any backoffs for the initial attempt (e.g. due to retries)
 are ignored by the sync scheduler. If this request fails and gets rescheduled then the
 retries will still honor the backoff.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_IGNORE_BACKOFF" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasIgnoreSettings">
      <MemberSignature Language="C#" Value="public const string SyncExtrasIgnoreSettings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasIgnoreSettings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_IGNORE_SETTINGS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true then the sync settings (like getSyncAutomatically())
 are ignored by the sync scheduler.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If this extra is set to true then the sync settings (like getSyncAutomatically())
 are ignored by the sync scheduler.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_IGNORE_SETTINGS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasInitialize">
      <MemberSignature Language="C#" Value="public const string SyncExtrasInitialize;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasInitialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_INITIALIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set by the SyncManager to request that the SyncAdapter initialize itself for
 the given account/authority pair.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set by the SyncManager to request that the SyncAdapter initialize itself for
 the given account/authority pair. One required initialization step is to
 ensure that <c><see cref="M:Android.Content.ContentResolver.SetIsSyncable(Android.Accounts.Account,System.String,System.String)" /></c> has been
 called with a &gt;= 0 value. When this flag is set the SyncAdapter does not need to
 do a full sync, though it is allowed to do so.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_INITIALIZE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasManual">
      <MemberSignature Language="C#" Value="public const string SyncExtrasManual;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasManual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_MANUAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Setting this extra is the equivalent of setting both <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>
 and <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c></summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Setting this extra is the equivalent of setting both <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>
 and <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_MANUAL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasOverrideTooManyDeletions">
      <MemberSignature Language="C#" Value="public const string SyncExtrasOverrideTooManyDeletions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasOverrideTooManyDeletions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the sync adapter should proceed with the delete operations,
 even if it determines that there are too many.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the sync adapter should proceed with the delete operations,
 even if it determines that there are too many.
 See <c><see cref="P:Android.Content.SyncResult.TooManyDeletions" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasUpload">
      <MemberSignature Language="C#" Value="public const string SyncExtrasUpload;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasUpload" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_UPLOAD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that this sync is intended to only upload local changes to the server.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that this sync is intended to only upload local changes to the server.
 For example, this will be set to true if the sync is initiated by a call to
 <c><see cref="M:Android.Content.ContentResolver.NotifyChange(Android.Net.Uri,Android.Database.ContentObserver,Android.Database.ContentObserver)" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_EXTRAS_UPLOAD" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncObserverTypeActive">
      <MemberSignature Language="C#" Value="public const Android.Content.SyncObserverType SyncObserverTypeActive = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.SyncObserverType SyncObserverTypeActive = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_OBSERVER_TYPE_ACTIVE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.SyncObserverType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncObserverType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_OBSERVER_TYPE_ACTIVE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncObserverTypePending">
      <MemberSignature Language="C#" Value="public const Android.Content.SyncObserverType SyncObserverTypePending = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.SyncObserverType SyncObserverTypePending = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_OBSERVER_TYPE_PENDING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.SyncObserverType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncObserverType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_OBSERVER_TYPE_PENDING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncObserverTypeSettings">
      <MemberSignature Language="C#" Value="public const Android.Content.SyncObserverType SyncObserverTypeSettings = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.SyncObserverType SyncObserverTypeSettings = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_OBSERVER_TYPE_SETTINGS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.SyncObserverType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncObserverType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#SYNC_OBSERVER_TYPE_SETTINGS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TakePersistableUriPermission">
      <MemberSignature Language="C#" Value="public virtual void TakePersistableUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakePersistableUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takePersistableUriPermission", "(Landroid/net/Uri;I)V", "GetTakePersistableUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="modeFlags">To be added.</param>
        <summary>Take a persistable URI permission grant that has been offered.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take a persistable URI permission grant that has been offered. Once
 taken, the permission grant will be remembered across device reboots.
 Only URI permissions granted with
 <c><see cref="!:Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION" /></c> can be persisted. If
 the grant has already been persisted, taking it again will touch
 <c><see cref="P:Android.Content.UriPermission.PersistedTime" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#takePersistableUriPermission(android.net.Uri, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Content.ContentResolver.PersistedUriPermissions" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uncanonicalize">
      <MemberSignature Language="C#" Value="public Android.Net.Uri Uncanonicalize (Android.Net.Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri Uncanonicalize(class Android.Net.Uri url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uncanonicalize", "(Landroid/net/Uri;)Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="url">The canonical <c><see cref="T:Android.Net.Uri" /></c> that is to be convered back to its
 non-canonical form.</param>
        <summary>Given a canonical Uri previously generated by <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c>, convert
 it to its local non-canonical form.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Given a canonical Uri previously generated by <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c>, convert
 it to its local non-canonical form.  This can be useful in some cases where
 you know that you will only be using the Uri in the current environment and
 want to avoid any possible overhead when using it with the content
 provider or want to verify that the referenced data exists at all in the
 new environment.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#uncanonicalize(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterContentObserver">
      <MemberSignature Language="C#" Value="public void UnregisterContentObserver (Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterContentObserver(class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterContentObserver", "(Landroid/database/ContentObserver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="observer">The previously registered observer that is no longer needed.</param>
        <summary>Unregisters a change observer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unregisters a change observer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#unregisterContentObserver(android.database.ContentObserver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri, System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (Android.Net.Uri uri, Android.Content.ContentValues values, string where, string[] selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class Android.Net.Uri uri, class Android.Content.ContentValues values, string where, string[] selectionArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
        <Parameter Name="where" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="uri">The URI to modify.</param>
        <param name="values">The new field values. The key is the column name for the field.
                     A null value will remove an existing field value.</param>
        <param name="where">A filter to apply to rows before updating, formatted as an SQL WHERE clause
                    (excluding the WHERE itself).</param>
        <param name="selectionArgs">To be added.</param>
        <summary>Update row(s) in a content URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Update row(s) in a content URI.

 If the content provider supports transactions the update will be atomic.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if uri or values are null
</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateSyncExtrasBundle">
      <MemberSignature Language="C#" Value="public static void ValidateSyncExtrasBundle (Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateSyncExtrasBundle(class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("validateSyncExtrasBundle", "(Landroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="extras">the Bundle to check
</param>
        <summary tool="true">Check that only values of the following types are in the Bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Check that only values of the following types are in the Bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ContentResolver.html#validateSyncExtrasBundle(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
