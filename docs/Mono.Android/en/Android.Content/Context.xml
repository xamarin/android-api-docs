<Type Name="Context" FullName="Android.Content.Context">
  <TypeSignature Language="C#" Value="public abstract class Context : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Context extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Content.Context" />
  <TypeSignature Language="F#" Value="type Context = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/Context", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Interface to global information about an application environment.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/content/Context" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Context ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Context (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Content.Context : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Content.Context" Usage="new Android.Content.Context (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityService">
      <MemberSignature Language="C#" Value="public const string AccessibilityService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AccessibilityService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.AccessibilityService" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityService : string" Usage="Android.Content.Context.AccessibilityService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACCESSIBILITY_SERVICE", ApiSince=4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Views.Accessibility.AccessibilityManager" /> for giving the user
 feedback for UI events through the registered event listeners.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityManager" />
      </Docs>
    </Member>
    <Member MemberName="AccountService">
      <MemberSignature Language="C#" Value="public const string AccountService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AccountService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.AccountService" />
      <MemberSignature Language="F#" Value="val mutable AccountService : string" Usage="Android.Content.Context.AccountService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACCOUNT_SERVICE", ApiSince=5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Accounts.AccountManager" /> for receiving intents at a
 time of your choosing.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="T:Android.Accounts.AccountManager" />
      </Docs>
    </Member>
    <Member MemberName="ActivityService">
      <MemberSignature Language="C#" Value="public const string ActivityService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActivityService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.ActivityService" />
      <MemberSignature Language="F#" Value="val mutable ActivityService : string" Usage="Android.Content.Context.ActivityService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTIVITY_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.ActivityManager" /> for interacting with the global
 system state.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.ActivityManager" />
      </Docs>
    </Member>
    <Member MemberName="AlarmService">
      <MemberSignature Language="C#" Value="public const string AlarmService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AlarmService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.AlarmService" />
      <MemberSignature Language="F#" Value="val mutable AlarmService : string" Usage="Android.Content.Context.AlarmService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ALARM_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.AlarmManager" /> for receiving intents at a
 time of your choosing.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.AlarmManager" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Context ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ApplicationContext" />
      <MemberSignature Language="F#" Value="member this.ApplicationContext : Android.Content.Context" Usage="Android.Content.Context.ApplicationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getApplicationContext", "()Landroid/content/Context;", "GetGetApplicationContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the context of the single, global Application object of the
 current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ApplicationInfo ApplicationInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.ApplicationInfo ApplicationInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ApplicationInfo" />
      <MemberSignature Language="F#" Value="member this.ApplicationInfo : Android.Content.PM.ApplicationInfo" Usage="Android.Content.Context.ApplicationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getApplicationInfo", "()Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfoHandler", ApiSince=4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full application info for this context's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="AppOpsService">
      <MemberSignature Language="C#" Value="public const string AppOpsService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AppOpsService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.AppOpsService" />
      <MemberSignature Language="F#" Value="val mutable AppOpsService : string" Usage="Android.Content.Context.AppOpsService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("APP_OPS_SERVICE", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.AppOpsManager" /> for tracking application operations
 on the device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.App.AppOpsManager" />
      </Docs>
    </Member>
    <Member MemberName="AppwidgetService">
      <MemberSignature Language="C#" Value="public const string AppwidgetService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AppwidgetService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.AppwidgetService" />
      <MemberSignature Language="F#" Value="val mutable AppwidgetService : string" Usage="Android.Content.Context.AppwidgetService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("APPWIDGET_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Appwidget.AppWidgetManager" /> for accessing AppWidgets.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assets">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Res.AssetManager Assets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.AssetManager Assets" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.Assets" />
      <MemberSignature Language="F#" Value="member this.Assets : Android.Content.Res.AssetManager" Usage="Android.Content.Context.Assets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAssets", "()Landroid/content/res/AssetManager;", "GetGetAssetsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return an AssetManager instance for your application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AudioService">
      <MemberSignature Language="C#" Value="public const string AudioService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AudioService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.AudioService" />
      <MemberSignature Language="F#" Value="val mutable AudioService : string" Usage="Android.Content.Context.AudioService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIO_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Media.AudioManager" /> for handling management of volume,
 ringer modes and audio routing.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Media.AudioManager" />
      </Docs>
    </Member>
    <Member MemberName="BatteryService">
      <MemberSignature Language="C#" Value="public const string BatteryService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string BatteryService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.BatteryService" />
      <MemberSignature Language="F#" Value="val mutable BatteryService : string" Usage="Android.Content.Context.BatteryService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BATTERY_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.OS.BatteryManager" /> for managing battery state.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindService">
      <MemberSignature Language="C#" Value="public abstract bool BindService (Android.Content.Intent service, Android.Content.IServiceConnection conn, Android.Content.Bind flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BindService(class Android.Content.Intent service, class Android.Content.IServiceConnection conn, valuetype Android.Content.Bind flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.Bind)" />
      <MemberSignature Language="F#" Value="abstract member BindService : Android.Content.Intent * Android.Content.IServiceConnection * Android.Content.Bind -&gt; bool" Usage="context.BindService (service, conn, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bindService", "(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z", "GetBindService_Landroid_content_Intent_Landroid_content_ServiceConnection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
        <Parameter Name="conn" Type="Android.Content.IServiceConnection" />
        <Parameter Name="flags" Type="Android.Content.Bind">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="service">Identifies the service to connect to.  The Intent may
      specify either an explicit component name, or a logical
      description (action, category, etc) to match an
      <see cref="T:Android.Content.IntentFilter" /> published by a service.</param>
        <param name="conn">Receives information as the service is started and stopped.
      This must be a valid ServiceConnection object; it must not be null.</param>
        <param name="flags">Operation options for the binding.  May be 0,
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_AUTO_CREATE';scope=Xamarin" title="Android.Content.Context.BIND_AUTO_CREATE">Android.Content.Context.BIND_AUTO_CREATE</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_DEBUG_UNBIND';scope=Xamarin" title="Android.Content.Context.BIND_DEBUG_UNBIND">Android.Content.Context.BIND_DEBUG_UNBIND</a></format>,
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_NOT_FOREGROUND';scope=Xamarin" title="Android.Content.Context.BIND_NOT_FOREGROUND">Android.Content.Context.BIND_NOT_FOREGROUND</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_ABOVE_CLIENT';scope=Xamarin" title="Android.Content.Context.BIND_ABOVE_CLIENT">Android.Content.Context.BIND_ABOVE_CLIENT</a></format>,
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_ALLOW_OOM_MANAGEMENT';scope=Xamarin" title="Android.Content.Context.BIND_ALLOW_OOM_MANAGEMENT">Android.Content.Context.BIND_ALLOW_OOM_MANAGEMENT</a></format>, or
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_WAIVE_PRIORITY';scope=Xamarin" title="Android.Content.Context.BIND_WAIVE_PRIORITY">Android.Content.Context.BIND_WAIVE_PRIORITY</a></format>.</param>
        <summary>Connect to an application service, creating it if needed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException"> </exception>
        <altmember cref="M:Android.Content.Context.UnbindService(Android.Content.IServiceConnection)" />
        <altmember cref="M:Android.Content.Context.StartService(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="BluetoothService">
      <MemberSignature Language="C#" Value="public const string BluetoothService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string BluetoothService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.BluetoothService" />
      <MemberSignature Language="F#" Value="val mutable BluetoothService : string" Usage="Android.Content.Context.BluetoothService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BLUETOOTH_SERVICE", ApiSince=18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Bluetooth.BluetoothManager" /> for using Bluetooth.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CacheDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File CacheDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File CacheDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.CacheDir" />
      <MemberSignature Language="F#" Value="member this.CacheDir : Java.IO.File" Usage="Android.Content.Context.CacheDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCacheDir", "()Ljava/io/File;", "GetGetCacheDirHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the application specific cache directory
 on the filesystem.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.GetFileStreamPath(System.String)" />
        <altmember cref="M:Android.Content.Context.GetDir(System.String, Android.Content.FileCreationMode)" />
      </Docs>
    </Member>
    <Member MemberName="CameraService">
      <MemberSignature Language="C#" Value="public const string CameraService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CameraService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.CameraService" />
      <MemberSignature Language="F#" Value="val mutable CameraService : string" Usage="Android.Content.Context.CameraService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CAMERA_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Hardware.Camera2.CameraManager" /> for interacting with
 camera devices.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Hardware.Camera2.CameraManager" />
      </Docs>
    </Member>
    <Member MemberName="CaptioningService">
      <MemberSignature Language="C#" Value="public const string CaptioningService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CaptioningService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.CaptioningService" />
      <MemberSignature Language="F#" Value="val mutable CaptioningService : string" Usage="Android.Content.Context.CaptioningService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CAPTIONING_SERVICE", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Views.Accessibility.CaptioningManager" /> for obtaining
 captioning properties and listening for changes in captioning
 preferences.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Views.Accessibility.CaptioningManager" />
      </Docs>
    </Member>
    <Member MemberName="CarrierConfigService">
      <MemberSignature Language="C#" Value="public const string CarrierConfigService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CarrierConfigService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.CarrierConfigService" />
      <MemberSignature Language="F#" Value="val mutable CarrierConfigService : string" Usage="Android.Content.Context.CarrierConfigService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CARRIER_CONFIG_SERVICE", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCallingOrSelfPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckCallingOrSelfPermission (string permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckCallingOrSelfPermission(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckCallingOrSelfPermission(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CheckCallingOrSelfPermission : string -&gt; Android.Content.PM.Permission" Usage="context.CheckCallingOrSelfPermission permission" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkCallingOrSelfPermission", "(Ljava/lang/String;)I", "GetCheckCallingOrSelfPermission_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <summary>Determine whether the calling process of an IPC <i>or you</i> have been
 granted a particular permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.PM.PackageManager.CheckPermission(System.String, System.String)" />
        <altmember cref="M:Android.Content.Context.CheckPermission(System.String, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Content.Context.CheckCallingPermission(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingOrSelfUriPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckCallingOrSelfUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckCallingOrSelfUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckCallingOrSelfUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member CheckCallingOrSelfUriPermission : Android.Net.Uri * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="context.CheckCallingOrSelfUriPermission (uri, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkCallingOrSelfUriPermission", "(Landroid/net/Uri;I)I", "GetCheckCallingOrSelfUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Determine whether the calling process of an IPC <i>or you</i> has been granted
 permission to access a specific URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckCallingUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckCallingPermission (string permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckCallingPermission(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckCallingPermission(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CheckCallingPermission : string -&gt; Android.Content.PM.Permission" Usage="context.CheckCallingPermission permission" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkCallingPermission", "(Ljava/lang/String;)I", "GetCheckCallingPermission_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <summary>Determine whether the calling process of an IPC you are handling has been
 granted a particular permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.PM.PackageManager.CheckPermission(System.String, System.String)" />
        <altmember cref="M:Android.Content.Context.CheckPermission(System.String, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Content.Context.CheckCallingOrSelfPermission(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingUriPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckCallingUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckCallingUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckCallingUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member CheckCallingUriPermission : Android.Net.Uri * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="context.CheckCallingUriPermission (uri, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkCallingUriPermission", "(Landroid/net/Uri;I)I", "GetCheckCallingUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Determine whether the calling process and user ID has been
 granted permission to access a specific URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckUriPermission(Android.Net.Uri, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CheckPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckPermission (string permission, int pid, int uid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckPermission(string permission, int32 pid, int32 uid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckPermission(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CheckPermission : string * int * int -&gt; Android.Content.PM.Permission" Usage="context.CheckPermission (permission, pid, uid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkPermission", "(Ljava/lang/String;II)I", "GetCheckPermission_Ljava_lang_String_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <summary>Determine whether the given permission is allowed for a particular
 process and user ID running in the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.PM.PackageManager.CheckPermission(System.String, System.String)" />
        <altmember cref="M:Android.Content.Context.CheckCallingPermission(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CheckSelfPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckSelfPermission (string permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckSelfPermission(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckSelfPermission(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CheckSelfPermission : string -&gt; Android.Content.PM.Permission" Usage="context.CheckSelfPermission permission" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkSelfPermission", "(Ljava/lang/String;)I", "GetCheckSelfPermission_Ljava_lang_String_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUriPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckUriPermission (Android.Net.Uri uri, int pid, int uid, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckUriPermission(class Android.Net.Uri uri, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckUriPermission(Android.Net.Uri,System.Int32,System.Int32,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member CheckUriPermission : Android.Net.Uri * int * int * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="context.CheckUriPermission (uri, pid, uid, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkUriPermission", "(Landroid/net/Uri;III)I", "GetCheckUriPermission_Landroid_net_Uri_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary tool="true">Determine whether a particular process and user ID has been granted
 permission to access a specific URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckCallingUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="CheckUriPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckUriPermission (Android.Net.Uri uri, string readPermission, string writePermission, int pid, int uid, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckUriPermission(class Android.Net.Uri uri, string readPermission, string writePermission, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CheckUriPermission(Android.Net.Uri,System.String,System.String,System.Int32,System.Int32,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member CheckUriPermission : Android.Net.Uri * string * string * int * int * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="context.CheckUriPermission (uri, readPermission, writePermission, pid, uid, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkUriPermission", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I", "GetCheckUriPermission_Landroid_net_Uri_Ljava_lang_String_Ljava_lang_String_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="readPermission" Type="System.String" />
        <Parameter Name="writePermission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The Uri whose permission is to be checked, or null to not
 do this check.</param>
        <param name="readPermission">The permission that provides overall read access,
 or null to not do this check.</param>
        <param name="writePermission">The permission that provides overall write
 access, or null to not do this check.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Check both a Uri and normal permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClassLoader">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ClassLoader ClassLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ClassLoader ClassLoader" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ClassLoader" />
      <MemberSignature Language="F#" Value="member this.ClassLoader : Java.Lang.ClassLoader" Usage="Android.Content.Context.ClassLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClassLoader", "()Ljava/lang/ClassLoader;", "GetGetClassLoaderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ClassLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a class loader you can use to retrieve classes in this package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearWallpaper">
      <MemberSignature Language="C#" Value="public abstract void ClearWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearWallpaper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.ClearWallpaper" />
      <MemberSignature Language="F#" Value="abstract member ClearWallpaper : unit -&gt; unit" Usage="context.ClearWallpaper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearWallpaper", "()V", "GetClearWallpaperHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ClipboardService">
      <MemberSignature Language="C#" Value="public const string ClipboardService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ClipboardService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.ClipboardService" />
      <MemberSignature Language="F#" Value="val mutable ClipboardService : string" Usage="Android.Content.Context.ClipboardService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CLIPBOARD_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Text.ClipboardManager" /> for accessing and modifying
 <see cref="T:Android.Content.ClipboardManager" /> for accessing and modifying
 the contents of the global clipboard.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.ClipboardManager" />
      </Docs>
    </Member>
    <Member MemberName="CodeCacheDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File CodeCacheDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File CodeCacheDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.CodeCacheDir" />
      <MemberSignature Language="F#" Value="member this.CodeCacheDir : Java.IO.File" Usage="Android.Content.Context.CodeCacheDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCodeCacheDir", "()Ljava/io/File;", "GetGetCodeCacheDirHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the application specific cache directory on
 the filesystem designed for storing cached code.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanionDeviceService">
      <MemberSignature Language="C#" Value="public const string CompanionDeviceService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CompanionDeviceService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.CompanionDeviceService" />
      <MemberSignature Language="F#" Value="val mutable CompanionDeviceService : string" Usage="Android.Content.Context.CompanionDeviceService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMPANION_DEVICE_SERVICE", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectivityService">
      <MemberSignature Language="C#" Value="public const string ConnectivityService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ConnectivityService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.ConnectivityService" />
      <MemberSignature Language="F#" Value="val mutable ConnectivityService : string" Usage="Android.Content.Context.ConnectivityService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONNECTIVITY_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Net.ConnectivityManager" /> for handling management of
 network connections.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Net.ConnectivityManager" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerIrService">
      <MemberSignature Language="C#" Value="public const string ConsumerIrService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ConsumerIrService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.ConsumerIrService" />
      <MemberSignature Language="F#" Value="val mutable ConsumerIrService : string" Usage="Android.Content.Context.ConsumerIrService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONSUMER_IR_SERVICE", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Hardware.ConsumerIrManager" /> for transmitting infrared
 signals from the device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Hardware.ConsumerIrManager" />
      </Docs>
    </Member>
    <Member MemberName="ContentResolver">
      <MemberSignature Language="C#" Value="public abstract Android.Content.ContentResolver ContentResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ContentResolver ContentResolver" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ContentResolver" />
      <MemberSignature Language="F#" Value="member this.ContentResolver : Android.Content.ContentResolver" Usage="Android.Content.Context.ContentResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentResolver", "()Landroid/content/ContentResolver;", "GetGetContentResolverHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a ContentResolver instance for your application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateConfigurationContext">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Context CreateConfigurationContext (Android.Content.Res.Configuration overrideConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Context CreateConfigurationContext(class Android.Content.Res.Configuration overrideConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CreateConfigurationContext(Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member CreateConfigurationContext : Android.Content.Res.Configuration -&gt; Android.Content.Context" Usage="context.CreateConfigurationContext overrideConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createConfigurationContext", "(Landroid/content/res/Configuration;)Landroid/content/Context;", "GetCreateConfigurationContext_Landroid_content_res_Configuration_Handler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overrideConfiguration" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="overrideConfiguration">A <see cref="T:Android.Content.Res.Configuration" /> specifying what
 values to modify in the base Configuration of the original Context's
 resources.  If the base configuration changes (such as due to an
 orientation change), the resources of this context will also change except
 for those that have been explicitly overridden with a value here.</param>
        <summary>Return a new Context object for the current Context but whose resources
 are adjusted to match the given Configuration.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreateContextForSplit">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Context CreateContextForSplit (string splitName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Context CreateContextForSplit(string splitName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CreateContextForSplit(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateContextForSplit : string -&gt; Android.Content.Context" Usage="context.CreateContextForSplit splitName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createContextForSplit", "(Ljava/lang/String;)Landroid/content/Context;", "GetCreateContextForSplit_Ljava_lang_String_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="splitName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="splitName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDeviceProtectedStorageContext">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Context CreateDeviceProtectedStorageContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Context CreateDeviceProtectedStorageContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CreateDeviceProtectedStorageContext" />
      <MemberSignature Language="F#" Value="abstract member CreateDeviceProtectedStorageContext : unit -&gt; Android.Content.Context" Usage="context.CreateDeviceProtectedStorageContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createDeviceProtectedStorageContext", "()Landroid/content/Context;", "GetCreateDeviceProtectedStorageContextHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayContext">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Context CreateDisplayContext (Android.Views.Display display);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Context CreateDisplayContext(class Android.Views.Display display) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CreateDisplayContext(Android.Views.Display)" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayContext : Android.Views.Display -&gt; Android.Content.Context" Usage="context.CreateDisplayContext display" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createDisplayContext", "(Landroid/view/Display;)Landroid/content/Context;", "GetCreateDisplayContext_Landroid_view_Display_Handler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Views.Display" />
      </Parameters>
      <Docs>
        <param name="display">A <see cref="T:Android.Views.Display" /> object specifying the display
 for whose metrics the Context's resources should be tailored and upon which
 new windows should be shown.</param>
        <summary>Return a new Context object for the current Context but whose resources
 are adjusted to match the metrics of the given Display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreatePackageContext">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Context CreatePackageContext (string packageName, Android.Content.PackageContextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Context CreatePackageContext(string packageName, valuetype Android.Content.PackageContextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.CreatePackageContext(System.String,Android.Content.PackageContextFlags)" />
      <MemberSignature Language="F#" Value="abstract member CreatePackageContext : string * Android.Content.PackageContextFlags -&gt; Android.Content.Context" Usage="context.CreatePackageContext (packageName, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createPackageContext", "(Ljava/lang/String;I)Landroid/content/Context;", "GetCreatePackageContext_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PackageContextFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">Name of the application's package.</param>
        <param name="flags">Option flags, one of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context CONTEXT_INCLUDE_CODE';scope=Xamarin" title="Android.Content.Context.CONTEXT_INCLUDE_CODE">Android.Content.Context.CONTEXT_INCLUDE_CODE</a></format>
              or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context CONTEXT_IGNORE_SECURITY';scope=Xamarin" title="Android.Content.Context.CONTEXT_IGNORE_SECURITY">Android.Content.Context.CONTEXT_IGNORE_SECURITY</a></format>.</param>
        <summary>Return a new Context object for the given application name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException"> </exception>
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="DatabaseList">
      <MemberSignature Language="C#" Value="public abstract string[] DatabaseList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] DatabaseList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.DatabaseList" />
      <MemberSignature Language="F#" Value="abstract member DatabaseList : unit -&gt; string[]" Usage="context.DatabaseList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("databaseList", "()[Ljava/lang/String;", "GetDatabaseListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of strings naming the private databases associated with
 this Context's application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenOrCreateDatabase(System.String, Android.Content.FileCreationMode, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.DeleteDatabase(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DataDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File DataDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File DataDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.DataDir" />
      <MemberSignature Language="F#" Value="member this.DataDir : Java.IO.File" Usage="Android.Content.Context.DataDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDataDir", "()Ljava/io/File;", "GetGetDataDirHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public abstract bool DeleteDatabase (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteDatabase(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.DeleteDatabase(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDatabase : string -&gt; bool" Usage="context.DeleteDatabase name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteDatabase", "(Ljava/lang/String;)Z", "GetDeleteDatabase_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name (unique in the application package) of the
             database.</param>
        <summary>Delete an existing private SQLiteDatabase associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenOrCreateDatabase(System.String, Android.Content.FileCreationMode, Android.Content.FileCreationMode)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public abstract bool DeleteFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.DeleteFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFile : string -&gt; bool" Usage="context.DeleteFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteFile", "(Ljava/lang/String;)Z", "GetDeleteFile_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the file to delete; can not contain path
             separators.</param>
        <summary>Delete the given private file associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenFileInput(System.String)" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.FileList" />
        <altmember cref="M:Java.IO.File.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSharedPreferences">
      <MemberSignature Language="C#" Value="public abstract bool DeleteSharedPreferences (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteSharedPreferences(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.DeleteSharedPreferences(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSharedPreferences : string -&gt; bool" Usage="context.DeleteSharedPreferences name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteSharedPreferences", "(Ljava/lang/String;)Z", "GetDeleteSharedPreferences_Ljava_lang_String_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DevicePolicyService">
      <MemberSignature Language="C#" Value="public const string DevicePolicyService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DevicePolicyService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.DevicePolicyService" />
      <MemberSignature Language="F#" Value="val mutable DevicePolicyService : string" Usage="Android.Content.Context.DevicePolicyService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEVICE_POLICY_SERVICE", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.Admin.DevicePolicyManager" /> for working with global
 device policy management.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DisplayService">
      <MemberSignature Language="C#" Value="public const string DisplayService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DisplayService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.DisplayService" />
      <MemberSignature Language="F#" Value="val mutable DisplayService : string" Usage="Android.Content.Context.DisplayService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DISPLAY_SERVICE", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Hardware.Display.DisplayManager" /> for interacting with display devices.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="T:Android.Hardware.Display.DisplayManager" />
      </Docs>
    </Member>
    <Member MemberName="DownloadService">
      <MemberSignature Language="C#" Value="public const string DownloadService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DownloadService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.DownloadService" />
      <MemberSignature Language="F#" Value="val mutable DownloadService : string" Usage="Android.Content.Context.DownloadService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DOWNLOAD_SERVICE", ApiSince=9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.DownloadManager" /> for requesting HTTP downloads.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="DropboxService">
      <MemberSignature Language="C#" Value="public const string DropboxService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DropboxService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.DropboxService" />
      <MemberSignature Language="F#" Value="val mutable DropboxService : string" Usage="Android.Content.Context.DropboxService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DROPBOX_SERVICE", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.OS.DropBoxManager" /> instance for recording
 diagnostic logs.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingOrSelfPermission">
      <MemberSignature Language="C#" Value="public abstract void EnforceCallingOrSelfPermission (string permission, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforceCallingOrSelfPermission(string permission, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforceCallingOrSelfPermission(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforceCallingOrSelfPermission : string * string -&gt; unit" Usage="context.EnforceCallingOrSelfPermission (permission, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforceCallingOrSelfPermission", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEnforceCallingOrSelfPermission_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If neither you nor the calling process of an IPC you are
 handling has been granted a particular permission, throw a
 <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckCallingOrSelfPermission(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingOrSelfUriPermission">
      <MemberSignature Language="C#" Value="public abstract void EnforceCallingOrSelfUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforceCallingOrSelfUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforceCallingOrSelfUriPermission(Android.Net.Uri,Android.Content.ActivityFlags,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforceCallingOrSelfUriPermission : Android.Net.Uri * Android.Content.ActivityFlags * string -&gt; unit" Usage="context.EnforceCallingOrSelfUriPermission (uri, modeFlags, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforceCallingOrSelfUriPermission", "(Landroid/net/Uri;ILjava/lang/String;)V", "GetEnforceCallingOrSelfUriPermission_Landroid_net_Uri_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the calling process of an IPC <i>or you</i> has not been
 granted permission to access a specific URI, throw <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckCallingOrSelfUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingPermission">
      <MemberSignature Language="C#" Value="public abstract void EnforceCallingPermission (string permission, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforceCallingPermission(string permission, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforceCallingPermission(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforceCallingPermission : string * string -&gt; unit" Usage="context.EnforceCallingPermission (permission, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforceCallingPermission", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEnforceCallingPermission_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the calling process of an IPC you are handling has not been
 granted a particular permission, throw a <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckCallingPermission(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingUriPermission">
      <MemberSignature Language="C#" Value="public abstract void EnforceCallingUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforceCallingUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforceCallingUriPermission(Android.Net.Uri,Android.Content.ActivityFlags,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforceCallingUriPermission : Android.Net.Uri * Android.Content.ActivityFlags * string -&gt; unit" Usage="context.EnforceCallingUriPermission (uri, modeFlags, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforceCallingUriPermission", "(Landroid/net/Uri;ILjava/lang/String;)V", "GetEnforceCallingUriPermission_Landroid_net_Uri_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the calling process and user ID has not been granted
 permission to access a specific URI, throw <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckCallingUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="EnforcePermission">
      <MemberSignature Language="C#" Value="public abstract void EnforcePermission (string permission, int pid, int uid, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforcePermission(string permission, int32 pid, int32 uid, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforcePermission(System.String,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforcePermission : string * int * int * string -&gt; unit" Usage="context.EnforcePermission (permission, pid, uid, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforcePermission", "(Ljava/lang/String;IILjava/lang/String;)V", "GetEnforcePermission_Ljava_lang_String_IILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the given permission is not allowed for a particular process
 and user ID running in the system, throw a <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckPermission(System.String, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="EnforceUriPermission">
      <MemberSignature Language="C#" Value="public abstract void EnforceUriPermission (Android.Net.Uri uri, int pid, int uid, Android.Content.ActivityFlags modeFlags, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforceUriPermission(class Android.Net.Uri uri, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforceUriPermission(Android.Net.Uri,System.Int32,System.Int32,Android.Content.ActivityFlags,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforceUriPermission : Android.Net.Uri * int * int * Android.Content.ActivityFlags * string -&gt; unit" Usage="context.EnforceUriPermission (uri, pid, uid, modeFlags, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforceUriPermission", "(Landroid/net/Uri;IIILjava/lang/String;)V", "GetEnforceUriPermission_Landroid_net_Uri_IIILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary tool="true">If a particular process and user ID has not been granted
 permission to access a specific URI, throw <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckUriPermission(Android.Net.Uri, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="EnforceUriPermission">
      <MemberSignature Language="C#" Value="public abstract void EnforceUriPermission (Android.Net.Uri uri, string readPermission, string writePermission, int pid, int uid, Android.Content.ActivityFlags modeFlags, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnforceUriPermission(class Android.Net.Uri uri, string readPermission, string writePermission, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.EnforceUriPermission(Android.Net.Uri,System.String,System.String,System.Int32,System.Int32,Android.Content.ActivityFlags,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnforceUriPermission : Android.Net.Uri * string * string * int * int * Android.Content.ActivityFlags * string -&gt; unit" Usage="context.EnforceUriPermission (uri, readPermission, writePermission, pid, uid, modeFlags, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enforceUriPermission", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V", "GetEnforceUriPermission_Landroid_net_Uri_Ljava_lang_String_Ljava_lang_String_IIILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="readPermission" Type="System.String" />
        <Parameter Name="writePermission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The Uri whose permission is to be checked, or null to not
 do this check.</param>
        <param name="readPermission">The permission that provides overall read access,
 or null to not do this check.</param>
        <param name="writePermission">The permission that provides overall write
 access, or null to not do this check.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>Enforce both a Uri and normal permission.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.CheckUriPermission(Android.Net.Uri, System.String, System.String, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExternalCacheDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File ExternalCacheDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File ExternalCacheDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ExternalCacheDir" />
      <MemberSignature Language="F#" Value="member this.ExternalCacheDir : Java.IO.File" Usage="Android.Content.Context.ExternalCacheDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExternalCacheDir", "()Ljava/io/File;", "GetGetExternalCacheDirHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the directory on the primary external filesystem
 (that is somewhere on <see cref="P:Android.OS.Environment.ExternalStorageDirectory" /> where the application can
 place cache files it owns.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Android.Content.Context.CacheDir" />
      </Docs>
    </Member>
    <Member MemberName="FileList">
      <MemberSignature Language="C#" Value="public abstract string[] FileList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FileList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.FileList" />
      <MemberSignature Language="F#" Value="abstract member FileList : unit -&gt; string[]" Usage="context.FileList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fileList", "()[Ljava/lang/String;", "GetFileListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of strings naming the private files associated with
 this Context's application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenFileInput(System.String)" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.DeleteFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FilesDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File FilesDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File FilesDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.FilesDir" />
      <MemberSignature Language="F#" Value="member this.FilesDir : Java.IO.File" Usage="Android.Content.Context.FilesDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilesDir", "()Ljava/io/File;", "GetGetFilesDirHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the directory on the filesystem where
 files created with <see cref="M:Android.Content.Context.OpenFileOutput(System.String,Android.Content.FileCreationMode)" /> are stored.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.GetFileStreamPath(System.String)" />
        <altmember cref="M:Android.Content.Context.GetDir(System.String, Android.Content.FileCreationMode)" />
      </Docs>
    </Member>
    <Member MemberName="FingerprintService">
      <MemberSignature Language="C#" Value="public const string FingerprintService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FingerprintService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.FingerprintService" />
      <MemberSignature Language="F#" Value="val mutable FingerprintService : string" Usage="Android.Content.Context.FingerprintService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FINGERPRINT_SERVICE", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public int GetColor (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetColor(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetColor(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetColor : int -&gt; int" Usage="context.GetColor id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getColor", "(I)I", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorStateList">
      <MemberSignature Language="C#" Value="public Android.Content.Res.ColorStateList GetColorStateList (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.ColorStateList GetColorStateList(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetColorStateList(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetColorStateList : int -&gt; Android.Content.Res.ColorStateList" Usage="context.GetColorStateList id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getColorStateList", "(I)Landroid/content/res/ColorStateList;", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabasePath">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File GetDatabasePath (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File GetDatabasePath(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetDatabasePath(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetDatabasePath : string -&gt; Java.IO.File" Usage="context.GetDatabasePath name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDatabasePath", "(Ljava/lang/String;)Ljava/io/File;", "GetGetDatabasePath_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the database for which you would like to get
          its path.</param>
        <summary>Returns the absolute path on the filesystem where a database created with
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context OpenOrCreateDatabase(System String,Android Content FileCreationMode,Android Content FileCreationMode)';scope=Xamarin" title="M:Android.Content.Context.OpenOrCreateDatabase(System.String,Android.Content.FileCreationMode,Android.Content.FileCreationMode)">M:Android.Content.Context.OpenOrCreateDatabase(System.String,Android.Content.FileCreationMode,Android.Content.FileCreationMode)</a></format> is stored.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenOrCreateDatabase(System.String, Android.Content.FileCreationMode, Android.Content.FileCreationMode)" />
      </Docs>
    </Member>
    <Member MemberName="GetDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File GetDir (string name, Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File GetDir(string name, valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetDir(System.String,Android.Content.FileCreationMode)" />
      <MemberSignature Language="F#" Value="abstract member GetDir : string * Android.Content.FileCreationMode -&gt; Java.IO.File" Usage="context.GetDir (name, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDir", "(Ljava/lang/String;I)Ljava/io/File;", "GetGetDir_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">Name of the directory to retrieve.  This is a directory
 that is created as part of your application data.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
 default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" /> and
 <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.</param>
        <summary>Retrieve, creating if needed, a new directory in which the application
 can place its own custom data files.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawable">
      <MemberSignature Language="C#" Value="public Android.Graphics.Drawables.Drawable GetDrawable (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Drawables.Drawable GetDrawable(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetDrawable(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetDrawable : int -&gt; Android.Graphics.Drawables.Drawable" Usage="context.GetDrawable id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawable", "(I)Landroid/graphics/drawable/Drawable;", "", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The desired resource identifier, as generated by the aapt
           tool. This integer encodes the package, type, and resource
           entry. The value 0 is an invalid identifier.</param>
        <summary>Returns a drawable object associated with a particular resource ID and
 styled for the current theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Content.Res.Resources.NotFoundException">if the given ID
         does not exist.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExternalCacheDirs">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File[] GetExternalCacheDirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] GetExternalCacheDirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetExternalCacheDirs" />
      <MemberSignature Language="F#" Value="abstract member GetExternalCacheDirs : unit -&gt; Java.IO.File[]" Usage="context.GetExternalCacheDirs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalCacheDirs", "()[Ljava/io/File;", "GetGetExternalCacheDirsHandler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application can place cache files it
 owns.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Content.Context.ExternalCacheDir" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalFilesDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File GetExternalFilesDir (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File GetExternalFilesDir(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetExternalFilesDir(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalFilesDir : string -&gt; Java.IO.File" Usage="context.GetExternalFilesDir type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalFilesDir", "(Ljava/lang/String;)Ljava/io/File;", "GetGetExternalFilesDir_Ljava_lang_String_Handler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The type of files directory to return.  May be null for
 the root of the files directory or one of
 the following Environment constants for a subdirectory:
 <see cref="P:Android.OS.Environment.DirectoryMusic" />,
 <see cref="P:Android.OS.Environment.DirectoryPodcasts" />,
 <see cref="P:Android.OS.Environment.DirectoryRingtones" />,
 <see cref="P:Android.OS.Environment.DirectoryAlarms" />,
 <see cref="P:Android.OS.Environment.DirectoryNotifications" />,
 <see cref="P:Android.OS.Environment.DirectoryPictures" />, or
 <see cref="P:Android.OS.Environment.DirectoryMovies" />.</param>
        <summary>Returns the absolute path to the directory on the primary external filesystem
 (that is somewhere on <see cref="P:Android.OS.Environment.ExternalStorageDirectory" />) where the application can
 place persistent files it owns.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Android.Content.Context.FilesDir" />
        <altmember cref="M:Android.OS.Environment.GetExternalStoragePublicDirectory(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalFilesDirs">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File[] GetExternalFilesDirs (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] GetExternalFilesDirs(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetExternalFilesDirs(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalFilesDirs : string -&gt; Java.IO.File[]" Usage="context.GetExternalFilesDirs type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalFilesDirs", "(Ljava/lang/String;)[Ljava/io/File;", "GetGetExternalFilesDirs_Ljava_lang_String_Handler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application can place persistent files
 it owns.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Content.Context.GetExternalFilesDir(System.String)" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalMediaDirs">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File[] GetExternalMediaDirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] GetExternalMediaDirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetExternalMediaDirs" />
      <MemberSignature Language="F#" Value="abstract member GetExternalMediaDirs : unit -&gt; Java.IO.File[]" Usage="context.GetExternalMediaDirs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalMediaDirs", "()[Ljava/io/File;", "GetGetExternalMediaDirsHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application can place media files.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileStreamPath">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File GetFileStreamPath (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File GetFileStreamPath(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetFileStreamPath(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetFileStreamPath : string -&gt; Java.IO.File" Usage="context.GetFileStreamPath name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFileStreamPath", "(Ljava/lang/String;)Ljava/io/File;", "GetGetFileStreamPath_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the file for which you would like to get
          its path.</param>
        <summary>Returns the absolute path on the filesystem where a file created with
 <see cref="M:Android.Content.Context.OpenFileOutput(System.String,Android.Content.FileCreationMode)" /> is stored.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="P:Android.Content.Context.FilesDir" />
        <altmember cref="M:Android.Content.Context.GetDir(System.String, Android.Content.FileCreationMode)" />
      </Docs>
    </Member>
    <Member MemberName="GetObbDirs">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File[] GetObbDirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] GetObbDirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetObbDirs" />
      <MemberSignature Language="F#" Value="abstract member GetObbDirs : unit -&gt; Java.IO.File[]" Usage="context.GetObbDirs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getObbDirs", "()[Ljava/io/File;", "GetGetObbDirsHandler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application's OBB files (if there are
 any) can be found.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Content.Context.ObbDir" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="GetSharedPreferences">
      <MemberSignature Language="C#" Value="public abstract Android.Content.ISharedPreferences GetSharedPreferences (string name, Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ISharedPreferences GetSharedPreferences(string name, valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetSharedPreferences(System.String,Android.Content.FileCreationMode)" />
      <MemberSignature Language="F#" Value="abstract member GetSharedPreferences : string * Android.Content.FileCreationMode -&gt; Android.Content.ISharedPreferences" Usage="context.GetSharedPreferences (name, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSharedPreferences", "(Ljava/lang/String;I)Landroid/content/SharedPreferences;", "GetGetSharedPreferences_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ISharedPreferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">Desired preferences file. If a preferences file by this name
 does not exist, it will be created when you retrieve an
 editor (SharedPreferences.edit()) and then commit changes (Editor.commit()).</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
 default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" />
 and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.</param>
        <summary>Retrieve and hold the contents of the preferences file 'name', returning
 a SharedPreferences through which you can retrieve and modify its
 values.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetString(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetString : int -&gt; string" Usage="context.GetString resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(I)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource id for the string</param>
        <summary>Returns a localized string from the application's package's
 default string table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (int resId, params Java.Lang.Object[] formatArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(int32 resId, class Java.Lang.Object[] formatArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetString(System.Int32,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="member this.GetString : int * Java.Lang.Object[] -&gt; string" Usage="context.GetString (resId, formatArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(I[Ljava/lang/Object;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
        <Parameter Name="formatArgs" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <param name="formatArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemService">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetSystemService (Java.Lang.Class serviceClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetSystemService(class Java.Lang.Class serviceClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetSystemService(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="member this.GetSystemService : Java.Lang.Class -&gt; Java.Lang.Object" Usage="context.GetSystemService serviceClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSystemService", "(Ljava/lang/Class;)Ljava/lang/Object;", "", ApiSince=23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Java.Interop.JavaTypeParameters(new System.String[] { "T" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="serviceClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemService">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetSystemService (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetSystemService(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetSystemService(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetSystemService : string -&gt; Java.Lang.Object" Usage="context.GetSystemService name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSystemService", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetSystemService_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.StringDef(Fields=new System.String[] { "PowerService", "WindowService", "LayoutInflaterService", "AccountService", "ActivityService", "AlarmService", "NotificationService", "AccessibilityService", "CaptioningService", "KeyguardService", "LocationService", "SearchService", "SensorService", "StorageService", "StorageStatsService", "WallpaperService", "VibratorService", "ConnectivityService", "NetworkStatsService", "WifiService", "WifiAwareService", "WifiP2pService", "NsdService", "AudioService", "FingerprintService", "MediaRouterService", "TelephonyService", "TelephonySubscriptionService", "CarrierConfigService", "TelecomService", "ClipboardService", "InputMethodService", "TextServicesManagerService", "TextClassificationService", "AppwidgetService", "DropboxService", "DevicePolicyService", "UiModeService", "DownloadService", "NfcService", "BluetoothService", "UsbService", "LauncherAppsService", "InputService", "DisplayService", "UserService", "RestrictionsService", "AppOpsService", "CameraService", "PrintService", "ConsumerIrService", "TvInputService", "UsageStatsService", "MediaSessionService", "BatteryService", "JobSchedulerService", "MediaProjectionService", "MidiService", "HardwarePropertiesService", "ShortcutService", "SystemHealthService", "CompanionDeviceService" }, Type="Android.Content.Context")</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the desired service.</param>
        <summary>Return the handle to a system-level service by name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Content.Context.WindowService" />
        <altmember cref="T:Android.Views.IWindowManager" />
        <altmember cref="F:Android.Content.Context.LayoutInflaterService" />
        <altmember cref="T:Android.Views.LayoutInflater" />
        <altmember cref="F:Android.Content.Context.ActivityService" />
        <altmember cref="T:Android.App.ActivityManager" />
        <altmember cref="F:Android.Content.Context.PowerService" />
        <altmember cref="T:Android.OS.PowerManager" />
        <altmember cref="F:Android.Content.Context.AlarmService" />
        <altmember cref="T:Android.App.AlarmManager" />
        <altmember cref="F:Android.Content.Context.NotificationService" />
        <altmember cref="T:Android.App.NotificationManager" />
        <altmember cref="F:Android.Content.Context.KeyguardService" />
        <altmember cref="T:Android.App.KeyguardManager" />
        <altmember cref="F:Android.Content.Context.LocationService" />
        <altmember cref="T:Android.Locations.LocationManager" />
        <altmember cref="F:Android.Content.Context.SearchService" />
        <altmember cref="T:Android.App.SearchManager" />
        <altmember cref="F:Android.Content.Context.SensorService" />
        <altmember cref="T:Android.Hardware.SensorManager" />
        <altmember cref="F:Android.Content.Context.StorageService" />
        <altmember cref="T:Android.OS.Storage.StorageManager" />
        <altmember cref="F:Android.Content.Context.VibratorService" />
        <altmember cref="T:Android.OS.Vibrator" />
        <altmember cref="F:Android.Content.Context.ConnectivityService" />
        <altmember cref="T:Android.Net.ConnectivityManager" />
        <altmember cref="F:Android.Content.Context.WifiService" />
        <altmember cref="T:Android.Net.Wifi.WifiManager" />
        <altmember cref="F:Android.Content.Context.AudioService" />
        <altmember cref="T:Android.Media.AudioManager" />
        <altmember cref="F:Android.Content.Context.MediaRouterService" />
        <altmember cref="T:Android.Media.MediaRouter" />
        <altmember cref="F:Android.Content.Context.TelephonyService" />
        <altmember cref="T:Android.Telephony.TelephonyManager" />
        <altmember cref="F:Android.Content.Context.TelephonySubscriptionService" />
        <altmember cref="T:Android.Telephony.SubscriptionManager" />
        <altmember cref="F:Android.Content.Context.CarrierConfigService" />
        <altmember cref="T:Android.Telephony.CarrierConfigManager" />
        <altmember cref="F:Android.Content.Context.InputMethodService" />
        <altmember cref="T:Android.Views.InputMethods.InputMethodManager" />
        <altmember cref="F:Android.Content.Context.UiModeService" />
        <altmember cref="T:Android.App.UiModeManager" />
        <altmember cref="F:Android.Content.Context.DownloadService" />
        <altmember cref="T:Android.App.DownloadManager" />
        <altmember cref="F:Android.Content.Context.BatteryService" />
        <altmember cref="T:Android.OS.BatteryManager" />
        <altmember cref="F:Android.Content.Context.JobSchedulerService" />
        <altmember cref="T:Android.App.Job.JobScheduler" />
        <altmember cref="F:Android.Content.Context.NetworkStatsService" />
        <altmember cref="T:Android.App.Usage.NetworkStatsManager" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemServiceName">
      <MemberSignature Language="C#" Value="public abstract string GetSystemServiceName (Java.Lang.Class serviceClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSystemServiceName(class Java.Lang.Class serviceClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetSystemServiceName(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member GetSystemServiceName : Java.Lang.Class -&gt; string" Usage="context.GetSystemServiceName serviceClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSystemServiceName", "(Ljava/lang/Class;)Ljava/lang/String;", "GetGetSystemServiceName_Ljava_lang_Class_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="serviceClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetText(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetText : int -&gt; string" Usage="context.GetText resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence GetTextFormatted (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence GetTextFormatted(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GetTextFormatted(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetTextFormatted : int -&gt; Java.Lang.ICharSequence" Usage="context.GetTextFormatted resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getText", "(I)Ljava/lang/CharSequence;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource id for the CharSequence text
</param>
        <summary>Return a localized, styled CharSequence from the application's package's
 default string table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GrantUriPermission">
      <MemberSignature Language="C#" Value="public abstract void GrantUriPermission (string toPackage, Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GrantUriPermission(string toPackage, class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.GrantUriPermission(System.String,Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member GrantUriPermission : string * Android.Net.Uri * Android.Content.ActivityFlags -&gt; unit" Usage="context.GrantUriPermission (toPackage, uri, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("grantUriPermission", "(Ljava/lang/String;Landroid/net/Uri;I)V", "GetGrantUriPermission_Ljava_lang_String_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toPackage" Type="System.String" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toPackage">The package you would like to allow to access the Uri.</param>
        <param name="uri">The Uri you would like to grant access to.</param>
        <param name="modeFlags">The desired access modes.  Any combination of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />,
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Intent FLAG_GRANT_PERSISTABLE_URI_PERMISSION';scope=Xamarin" title="Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION">Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION</a></format>, or
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Intent FLAG_GRANT_PREFIX_URI_PERMISSION';scope=Xamarin" title="Android.Content.Intent.FLAG_GRANT_PREFIX_URI_PERMISSION">Android.Content.Intent.FLAG_GRANT_PREFIX_URI_PERMISSION</a></format>.</param>
        <summary>Grant permission to access a specific Uri to another package, regardless
 of whether that package has general permission to access the Uri's
 content provider.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.RevokeUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="HardwarePropertiesService">
      <MemberSignature Language="C#" Value="public const string HardwarePropertiesService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string HardwarePropertiesService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.HardwarePropertiesService" />
      <MemberSignature Language="F#" Value="val mutable HardwarePropertiesService : string" Usage="Android.Content.Context.HardwarePropertiesService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HARDWARE_PROPERTIES_SERVICE", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputMethodService">
      <MemberSignature Language="C#" Value="public const string InputMethodService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string InputMethodService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.InputMethodService" />
      <MemberSignature Language="F#" Value="val mutable InputMethodService : string" Usage="Android.Content.Context.InputMethodService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INPUT_METHOD_SERVICE", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Views.InputMethods.InputMethodManager" /> for accessing input
 methods.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InputService">
      <MemberSignature Language="C#" Value="public const string InputService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string InputService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.InputService" />
      <MemberSignature Language="F#" Value="val mutable InputService : string" Usage="Android.Content.Context.InputService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INPUT_SERVICE", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Hardware.Input.InputManager" /> for interacting with input devices.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Hardware.Input.InputManager" />
      </Docs>
    </Member>
    <Member MemberName="IsDeviceProtectedStorage">
      <MemberSignature Language="C#" Value="public abstract bool IsDeviceProtectedStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeviceProtectedStorage" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.IsDeviceProtectedStorage" />
      <MemberSignature Language="F#" Value="member this.IsDeviceProtectedStorage : bool" Usage="Android.Content.Context.IsDeviceProtectedStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDeviceProtectedStorage", "()Z", "GetIsDeviceProtectedStorageHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRestricted">
      <MemberSignature Language="C#" Value="public virtual bool IsRestricted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestricted" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.IsRestricted" />
      <MemberSignature Language="F#" Value="member this.IsRestricted : bool" Usage="Android.Content.Context.IsRestricted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRestricted", "()Z", "GetIsRestrictedHandler", ApiSince=4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this Context is restricted.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Content.Context.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobSchedulerService">
      <MemberSignature Language="C#" Value="public const string JobSchedulerService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string JobSchedulerService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.JobSchedulerService" />
      <MemberSignature Language="F#" Value="val mutable JobSchedulerService : string" Usage="Android.Content.Context.JobSchedulerService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JOB_SCHEDULER_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.App.Job.JobScheduler" /> instance for managing occasional
 background tasks.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.App.Job.JobScheduler" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardService">
      <MemberSignature Language="C#" Value="public const string KeyguardService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyguardService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.KeyguardService" />
      <MemberSignature Language="F#" Value="val mutable KeyguardService : string" Usage="Android.Content.Context.KeyguardService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.NotificationManager" /> for controlling keyguard.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.KeyguardManager" />
      </Docs>
    </Member>
    <Member MemberName="LauncherAppsService">
      <MemberSignature Language="C#" Value="public const string LauncherAppsService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LauncherAppsService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.LauncherAppsService" />
      <MemberSignature Language="F#" Value="val mutable LauncherAppsService : string" Usage="Android.Content.Context.LauncherAppsService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAUNCHER_APPS_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Content.PM.LauncherApps" /> for querying and monitoring launchable apps across
 profiles of a user.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Content.PM.LauncherApps" />
      </Docs>
    </Member>
    <Member MemberName="LayoutInflaterService">
      <MemberSignature Language="C#" Value="public const string LayoutInflaterService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LayoutInflaterService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.LayoutInflaterService" />
      <MemberSignature Language="F#" Value="val mutable LayoutInflaterService : string" Usage="Android.Content.Context.LayoutInflaterService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_INFLATER_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Views.LayoutInflater" /> for inflating layout resources in this
 context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.LayoutInflater" />
      </Docs>
    </Member>
    <Member MemberName="LocationService">
      <MemberSignature Language="C#" Value="public const string LocationService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string LocationService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.LocationService" />
      <MemberSignature Language="F#" Value="val mutable LocationService : string" Usage="Android.Content.Context.LocationService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LOCATION_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Locations.LocationManager" /> for controlling location
 updates.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Locations.LocationManager" />
      </Docs>
    </Member>
    <Member MemberName="MainLooper">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Looper MainLooper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Looper MainLooper" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.MainLooper" />
      <MemberSignature Language="F#" Value="member this.MainLooper : Android.OS.Looper" Usage="Android.Content.Context.MainLooper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMainLooper", "()Landroid/os/Looper;", "GetGetMainLooperHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Looper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Looper for the main thread of the current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MediaProjectionService">
      <MemberSignature Language="C#" Value="public const string MediaProjectionService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaProjectionService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.MediaProjectionService" />
      <MemberSignature Language="F#" Value="val mutable MediaProjectionService : string" Usage="Android.Content.Context.MediaProjectionService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_PROJECTION_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Media.Projection.MediaProjectionManager" /> instance for managing
 media projection sessions.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Media.Projection.MediaProjectionManager" />
      </Docs>
    </Member>
    <Member MemberName="MediaRouterService">
      <MemberSignature Language="C#" Value="public const string MediaRouterService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaRouterService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.MediaRouterService" />
      <MemberSignature Language="F#" Value="val mutable MediaRouterService : string" Usage="Android.Content.Context.MediaRouterService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_ROUTER_SERVICE", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Media.MediaRouter" /> for controlling and managing
 routing of media.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Media.MediaRouter" />
      </Docs>
    </Member>
    <Member MemberName="MediaSessionService">
      <MemberSignature Language="C#" Value="public const string MediaSessionService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaSessionService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.MediaSessionService" />
      <MemberSignature Language="F#" Value="val mutable MediaSessionService : string" Usage="Android.Content.Context.MediaSessionService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_SESSION_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Media.Session.MediaSessionManager" /> for managing media Sessions.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Media.Session.MediaSessionManager" />
      </Docs>
    </Member>
    <Member MemberName="MidiService">
      <MemberSignature Language="C#" Value="public const string MidiService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MidiService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.MidiService" />
      <MemberSignature Language="F#" Value="val mutable MidiService : string" Usage="Android.Content.Context.MidiService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIDI_SERVICE", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDatabaseFrom">
      <MemberSignature Language="C#" Value="public abstract bool MoveDatabaseFrom (Android.Content.Context sourceContext, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveDatabaseFrom(class Android.Content.Context sourceContext, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.MoveDatabaseFrom(Android.Content.Context,System.String)" />
      <MemberSignature Language="F#" Value="abstract member MoveDatabaseFrom : Android.Content.Context * string -&gt; bool" Usage="context.MoveDatabaseFrom (sourceContext, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("moveDatabaseFrom", "(Landroid/content/Context;Ljava/lang/String;)Z", "GetMoveDatabaseFrom_Landroid_content_Context_Ljava_lang_String_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceContext" Type="Android.Content.Context" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceContext">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveSharedPreferencesFrom">
      <MemberSignature Language="C#" Value="public abstract bool MoveSharedPreferencesFrom (Android.Content.Context sourceContext, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveSharedPreferencesFrom(class Android.Content.Context sourceContext, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.MoveSharedPreferencesFrom(Android.Content.Context,System.String)" />
      <MemberSignature Language="F#" Value="abstract member MoveSharedPreferencesFrom : Android.Content.Context * string -&gt; bool" Usage="context.MoveSharedPreferencesFrom (sourceContext, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("moveSharedPreferencesFrom", "(Landroid/content/Context;Ljava/lang/String;)Z", "GetMoveSharedPreferencesFrom_Landroid_content_Context_Ljava_lang_String_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceContext" Type="Android.Content.Context" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceContext">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkStatsService">
      <MemberSignature Language="C#" Value="public const string NetworkStatsService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NetworkStatsService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.NetworkStatsService" />
      <MemberSignature Language="F#" Value="val mutable NetworkStatsService : string" Usage="Android.Content.Context.NetworkStatsService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NETWORK_STATS_SERVICE", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NfcService">
      <MemberSignature Language="C#" Value="public const string NfcService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NfcService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.NfcService" />
      <MemberSignature Language="F#" Value="val mutable NfcService : string" Usage="Android.Content.Context.NfcService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NFC_SERVICE", ApiSince=10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Nfc.NfcManager" /> for using NFC.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="NoBackupFilesDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File NoBackupFilesDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File NoBackupFilesDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.NoBackupFilesDir" />
      <MemberSignature Language="F#" Value="member this.NoBackupFilesDir : Java.IO.File" Usage="Android.Content.Context.NoBackupFilesDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNoBackupFilesDir", "()Ljava/io/File;", "GetGetNoBackupFilesDirHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the directory on the filesystem similar to
 <see cref="P:Android.Content.Context.FilesDir" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.GetFileStreamPath(System.String)" />
        <altmember cref="M:Android.Content.Context.GetDir(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="T:Android.App.Backup.BackupAgent" />
      </Docs>
    </Member>
    <Member MemberName="NotificationService">
      <MemberSignature Language="C#" Value="public const string NotificationService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NotificationService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.NotificationService" />
      <MemberSignature Language="F#" Value="val mutable NotificationService : string" Usage="Android.Content.Context.NotificationService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NOTIFICATION_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.NotificationManager" /> for informing the user of
 background events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.NotificationManager" />
      </Docs>
    </Member>
    <Member MemberName="NsdService">
      <MemberSignature Language="C#" Value="public const string NsdService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NsdService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.NsdService" />
      <MemberSignature Language="F#" Value="val mutable NsdService : string" Usage="Android.Content.Context.NsdService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NSD_SERVICE", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Net.Nsd.NsdManager" /> for handling management of network service
 discovery</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Net.Nsd.NsdManager" />
      </Docs>
    </Member>
    <Member MemberName="ObbDir">
      <MemberSignature Language="C#" Value="public abstract Java.IO.File ObbDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File ObbDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ObbDir" />
      <MemberSignature Language="F#" Value="member this.ObbDir : Java.IO.File" Usage="Android.Content.Context.ObbDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getObbDir", "()Ljava/io/File;", "GetGetObbDirHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the primary external storage directory where this application's OBB
 files (if there are any) can be found.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (int[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(int32[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.ObtainStyledAttributes(System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.ObtainStyledAttributes : int[] -&gt; Android.Content.Res.TypedArray" Usage="context.ObtainStyledAttributes attrs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "([I)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="attrs">To be added.</param>
        <summary>Retrieve styled attribute information in this Context's theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (Android.Util.IAttributeSet set, int[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(class Android.Util.IAttributeSet set, int32[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.ObtainStyledAttributes(Android.Util.IAttributeSet,System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.ObtainStyledAttributes : Android.Util.IAttributeSet * int[] -&gt; Android.Content.Res.TypedArray" Usage="context.ObtainStyledAttributes (set, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="set" Type="Android.Util.IAttributeSet" />
        <Parameter Name="attrs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="set">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Retrieve styled attribute information in this Context's theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (int resid, int[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(int32 resid, int32[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.ObtainStyledAttributes(System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.ObtainStyledAttributes : int * int[] -&gt; Android.Content.Res.TypedArray" Usage="context.ObtainStyledAttributes (resid, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "(I[I)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="attrs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="resid">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Retrieve styled attribute information in this Context's theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.Res.Resources.NotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="ObtainStyledAttributes">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray ObtainStyledAttributes (Android.Util.IAttributeSet set, int[] attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.TypedArray ObtainStyledAttributes(class Android.Util.IAttributeSet set, int32[] attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.ObtainStyledAttributes(Android.Util.IAttributeSet,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ObtainStyledAttributes : Android.Util.IAttributeSet * int[] * int * int -&gt; Android.Content.Res.TypedArray" Usage="context.ObtainStyledAttributes (set, attrs, defStyleAttr, defStyleRes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtainStyledAttributes", "(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="set" Type="Android.Util.IAttributeSet" />
        <Parameter Name="attrs" Type="System.Int32[]" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="set">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>Retrieve styled attribute information in this Context's theme.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenFileInput">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream OpenFileInput (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenFileInput(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.OpenFileInput(System.String)" />
      <MemberSignature Language="F#" Value="abstract member OpenFileInput : string -&gt; System.IO.Stream" Usage="context.OpenFileInput name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openFileInput", "(Ljava/lang/String;)Ljava/io/FileInputStream;", "GetOpenFileInput_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the file to open; can not contain path
             separators.</param>
        <summary>Open a private file associated with this Context's application package
 for reading.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException" />
        <altmember cref="M:Android.Content.Context.OpenFileOutput(System.String, Android.Content.FileCreationMode)" />
        <altmember cref="M:Android.Content.Context.FileList" />
        <altmember cref="M:Android.Content.Context.DeleteFile(System.String)" />
        <altmember cref="C:Java.IO.FileInputStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenFileOutput">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream OpenFileOutput (string name, Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenFileOutput(string name, valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.OpenFileOutput(System.String,Android.Content.FileCreationMode)" />
      <MemberSignature Language="F#" Value="abstract member OpenFileOutput : string * Android.Content.FileCreationMode -&gt; System.IO.Stream" Usage="context.OpenFileOutput (name, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openFileOutput", "(Ljava/lang/String;I)Ljava/io/FileOutputStream;", "GetOpenFileOutput_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the file to open; can not contain path
             separators.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
 default operation, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context MODE_APPEND';scope=Xamarin" title="Android.Content.Context.MODE_APPEND">Android.Content.Context.MODE_APPEND</a></format> to append to an existing file,
 <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" /> and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control
 permissions.</param>
        <summary>Open a private file associated with this Context's application package
 for writing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException" />
        <altmember cref="M:Android.Content.Context.OpenFileInput(System.String)" />
        <altmember cref="M:Android.Content.Context.FileList" />
        <altmember cref="M:Android.Content.Context.DeleteFile(System.String)" />
        <altmember cref="C:Java.IO.FileOutputStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="C#" Value="public abstract Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase (string name, Android.Content.FileCreationMode mode, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(string name, valuetype Android.Content.FileCreationMode mode, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.OpenOrCreateDatabase(System.String,Android.Content.FileCreationMode,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory)" />
      <MemberSignature Language="F#" Value="abstract member OpenOrCreateDatabase : string * Android.Content.FileCreationMode * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="context.OpenOrCreateDatabase (name, mode, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "GetOpenOrCreateDatabase_Ljava_lang_String_ILandroid_database_sqlite_SQLiteDatabase_CursorFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
      </Parameters>
      <Docs>
        <param name="name">The name (unique in the application package) of the database.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
     default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" />
     and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.
     Use <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context MODE_ENABLE_WRITE_AHEAD_LOGGING';scope=Xamarin" title="Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING">Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING</a></format> to enable write-ahead logging by default.</param>
        <param name="factory">An optional factory class that is called to instantiate a
     cursor when query is called.</param>
        <summary>Open a new private SQLiteDatabase associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Database.Sqlite.SQLiteException">if the database file could not be opened.</exception>
        <altmember cref="M:Android.Content.Context.DeleteDatabase(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="C#" Value="public abstract Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase (string name, Android.Content.FileCreationMode mode, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory factory, Android.Database.IDatabaseErrorHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(string name, valuetype Android.Content.FileCreationMode mode, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory, class Android.Database.IDatabaseErrorHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.OpenOrCreateDatabase(System.String,Android.Content.FileCreationMode,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,Android.Database.IDatabaseErrorHandler)" />
      <MemberSignature Language="F#" Value="abstract member OpenOrCreateDatabase : string * Android.Content.FileCreationMode * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * Android.Database.IDatabaseErrorHandler -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="context.OpenOrCreateDatabase (name, mode, factory, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "GetOpenOrCreateDatabase_Ljava_lang_String_ILandroid_database_sqlite_SQLiteDatabase_CursorFactory_Landroid_database_DatabaseErrorHandler_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="errorHandler" Type="Android.Database.IDatabaseErrorHandler" />
      </Parameters>
      <Docs>
        <param name="name">The name (unique in the application package) of the database.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
     default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" />
     and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.
     Use <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context MODE_ENABLE_WRITE_AHEAD_LOGGING';scope=Xamarin" title="Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING">Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING</a></format> to enable write-ahead logging by default.</param>
        <param name="factory">An optional factory class that is called to instantiate a
     cursor when query is called.</param>
        <param name="errorHandler">the <see cref="T:Android.Database.IDatabaseErrorHandler" /> to be used when sqlite reports database
 corruption. if null, <see cref="T:Android.Database.DefaultDatabaseErrorHandler" /> is assumed.</param>
        <summary>Open a new private SQLiteDatabase associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Android.Database.Sqlite.SQLiteException">if the database file could not be opened.</exception>
        <altmember cref="M:Android.Content.Context.DeleteDatabase(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PackageCodePath">
      <MemberSignature Language="C#" Value="public abstract string PackageCodePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageCodePath" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.PackageCodePath" />
      <MemberSignature Language="F#" Value="member this.PackageCodePath : string" Usage="Android.Content.Context.PackageCodePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackageCodePath", "()Ljava/lang/String;", "GetGetPackageCodePathHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full path to this context's primary Android package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="PackageManager">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.PackageManager PackageManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.PackageManager PackageManager" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.PackageManager" />
      <MemberSignature Language="F#" Value="member this.PackageManager : Android.Content.PM.PackageManager" Usage="Android.Content.Context.PackageManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackageManager", "()Landroid/content/pm/PackageManager;", "GetGetPackageManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return PackageManager instance to find global package information.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackageName">
      <MemberSignature Language="C#" Value="public abstract string PackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageName" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.PackageName" />
      <MemberSignature Language="F#" Value="member this.PackageName : string" Usage="Android.Content.Context.PackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the name of this application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackageResourcePath">
      <MemberSignature Language="C#" Value="public abstract string PackageResourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageResourcePath" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.PackageResourcePath" />
      <MemberSignature Language="F#" Value="member this.PackageResourcePath : string" Usage="Android.Content.Context.PackageResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackageResourcePath", "()Ljava/lang/String;", "GetGetPackageResourcePathHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full path to this context's primary Android package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="PeekWallpaper">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable PeekWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable PeekWallpaper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.PeekWallpaper" />
      <MemberSignature Language="F#" Value="abstract member PeekWallpaper : unit -&gt; Android.Graphics.Drawables.Drawable" Usage="context.PeekWallpaper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekWallpaper", "()Landroid/graphics/drawable/Drawable;", "GetPeekWallpaperHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PowerService">
      <MemberSignature Language="C#" Value="public const string PowerService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PowerService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.PowerService" />
      <MemberSignature Language="F#" Value="val mutable PowerService : string" Usage="Android.Content.Context.PowerService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("POWER_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.OS.PowerManager" /> for controlling power management,
 including "wake locks," which let you keep the device on while
 you're running long tasks.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintService">
      <MemberSignature Language="C#" Value="public const string PrintService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PrintService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.PrintService" />
      <MemberSignature Language="F#" Value="val mutable PrintService : string" Usage="Android.Content.Context.PrintService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRINT_SERVICE", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:Android.Print.PrintManager" /> for printing and managing
 printers and print tasks.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Print.PrintManager" />
      </Docs>
    </Member>
    <Member MemberName="ReceiverVisibleToInstantApps">
      <MemberSignature Language="C#" Value="public const int ReceiverVisibleToInstantApps = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReceiverVisibleToInstantApps = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.ReceiverVisibleToInstantApps" />
      <MemberSignature Language="F#" Value="val mutable ReceiverVisibleToInstantApps : int" Usage="Android.Content.Context.ReceiverVisibleToInstantApps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RECEIVER_VISIBLE_TO_INSTANT_APPS", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterComponentCallbacks">
      <MemberSignature Language="C#" Value="public virtual void RegisterComponentCallbacks (Android.Content.IComponentCallbacks callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterComponentCallbacks(class Android.Content.IComponentCallbacks callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RegisterComponentCallbacks(Android.Content.IComponentCallbacks)" />
      <MemberSignature Language="F#" Value="abstract member RegisterComponentCallbacks : Android.Content.IComponentCallbacks -&gt; unit&#xA;override this.RegisterComponentCallbacks : Android.Content.IComponentCallbacks -&gt; unit" Usage="context.RegisterComponentCallbacks callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerComponentCallbacks", "(Landroid/content/ComponentCallbacks;)V", "GetRegisterComponentCallbacks_Landroid_content_ComponentCallbacks_Handler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.IComponentCallbacks" />
      </Parameters>
      <Docs>
        <param name="callback">The interface to call.  This can be either a
 <see cref="T:Android.Content.IComponentCallbacks" /> or <see cref="T:Android.Content.ComponentCallbacks2" /> interface.
</param>
        <summary>Add a new <see cref="T:Android.Content.IComponentCallbacks" /> to the base application of the
 Context, which will be called at the same times as the ComponentCallbacks
 methods of activities and other components are called.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Intent RegisterReceiver (Android.Content.BroadcastReceiver receiver, Android.Content.IntentFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter)" />
      <MemberSignature Language="F#" Value="abstract member RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter -&gt; Android.Content.Intent" Usage="context.RegisterReceiver (receiver, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to handle the broadcast.</param>
        <param name="filter">Selects the Intent broadcasts to be received.</param>
        <summary>Register a BroadcastReceiver to be run in the main activity thread.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter, Android.Content.IntentFilter, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.UnregisterReceiver(Android.Content.BroadcastReceiver)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Intent RegisterReceiver (Android.Content.BroadcastReceiver receiver, Android.Content.IntentFilter filter, Android.Content.ActivityFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter, valuetype Android.Content.ActivityFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter * Android.Content.ActivityFlags -&gt; Android.Content.Intent" Usage="context.RegisterReceiver (receiver, filter, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;I)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_IHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="flags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="receiver">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Intent RegisterReceiver (Android.Content.BroadcastReceiver receiver, Android.Content.IntentFilter filter, string broadcastPermission, Android.OS.Handler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter, string broadcastPermission, class Android.OS.Handler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter,System.String,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter * string * Android.OS.Handler -&gt; Android.Content.Intent" Usage="context.RegisterReceiver (receiver, filter, broadcastPermission, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Ljava_lang_String_Landroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="broadcastPermission" Type="System.String" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to handle the broadcast.</param>
        <param name="filter">Selects the Intent broadcasts to be received.</param>
        <param name="broadcastPermission">String naming a permissions that a
      broadcaster must hold in order to send an Intent to you.  If null,
      no permission is required.</param>
        <param name="scheduler">Handler identifying the thread that will receive
      the Intent.  If null, the main thread of the process will be used.</param>
        <summary>Register to receive intent broadcasts, to run in the context of
 <format type="text/html"><var>scheduler</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.UnregisterReceiver(Android.Content.BroadcastReceiver)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Intent RegisterReceiver (Android.Content.BroadcastReceiver receiver, Android.Content.IntentFilter filter, string broadcastPermission, Android.OS.Handler scheduler, Android.Content.ActivityFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter, string broadcastPermission, class Android.OS.Handler scheduler, valuetype Android.Content.ActivityFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter,System.String,Android.OS.Handler,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter * string * Android.OS.Handler * Android.Content.ActivityFlags -&gt; Android.Content.Intent" Usage="context.RegisterReceiver (receiver, filter, broadcastPermission, scheduler, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Ljava_lang_String_Landroid_os_Handler_IHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="broadcastPermission" Type="System.String" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="flags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="receiver">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="broadcastPermission">To be added.</param>
        <param name="scheduler">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStickyBroadcast">
      <MemberSignature Language="C#" Value="public abstract void RemoveStickyBroadcast (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveStickyBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RemoveStickyBroadcast(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member RemoveStickyBroadcast : Android.Content.Intent -&gt; unit" Usage="context.RemoveStickyBroadcast intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeStickyBroadcast", "(Landroid/content/Intent;)V", "GetRemoveStickyBroadcast_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.BROADCAST_STICKY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was previously broadcast.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.SendStickyBroadcast(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveStickyBroadcastAsUser">
      <MemberSignature Language="C#" Value="public abstract void RemoveStickyBroadcastAsUser (Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveStickyBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RemoveStickyBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member RemoveStickyBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="context.RemoveStickyBroadcastAsUser (intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeStickyBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetRemoveStickyBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was previously broadcast.</param>
        <param name="user">UserHandle to remove the sticky broadcast from.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Content.Context.SendStickyBroadcastAsUser(Android.Content.Intent, Android.OS.UserHandle)" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Res.Resources Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources Resources" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.Resources" />
      <MemberSignature Language="F#" Value="member this.Resources : Android.Content.Res.Resources" Usage="Android.Content.Context.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a Resources instance for your application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestrictionsService">
      <MemberSignature Language="C#" Value="public const string RestrictionsService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RestrictionsService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.RestrictionsService" />
      <MemberSignature Language="F#" Value="val mutable RestrictionsService : string" Usage="Android.Content.Context.RestrictionsService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RESTRICTIONS_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Content.RestrictionsManager" /> for retrieving application restrictions
 and requesting permissions for restricted operations.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Content.RestrictionsManager" />
      </Docs>
    </Member>
    <Member MemberName="RevokeUriPermission">
      <MemberSignature Language="C#" Value="public abstract void RevokeUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RevokeUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member RevokeUriPermission : Android.Net.Uri * Android.Content.ActivityFlags -&gt; unit" Usage="context.RevokeUriPermission (uri, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("revokeUriPermission", "(Landroid/net/Uri;I)V", "GetRevokeUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The Uri you would like to revoke access to.</param>
        <param name="modeFlags">The desired access modes.  Any combination of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Remove all permissions to access a particular content provider Uri
 that were previously added with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context GrantUriPermission(System String,Android Net Uri,Android Net Uri)';scope=Xamarin" title="M:Android.Content.Context.GrantUriPermission(System.String,Android.Net.Uri,Android.Net.Uri)">M:Android.Content.Context.GrantUriPermission(System.String,Android.Net.Uri,Android.Net.Uri)</a></format>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.GrantUriPermission(System.String, Android.Net.Uri, Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RevokeUriPermission">
      <MemberSignature Language="C#" Value="public abstract void RevokeUriPermission (string toPackage, Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeUriPermission(string toPackage, class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.RevokeUriPermission(System.String,Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberSignature Language="F#" Value="abstract member RevokeUriPermission : string * Android.Net.Uri * Android.Content.ActivityFlags -&gt; unit" Usage="context.RevokeUriPermission (toPackage, uri, modeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("revokeUriPermission", "(Ljava/lang/String;Landroid/net/Uri;I)V", "GetRevokeUriPermission_Ljava_lang_String_Landroid_net_Uri_IHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toPackage" Type="System.String" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toPackage">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="modeFlags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchService">
      <MemberSignature Language="C#" Value="public const string SearchService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SearchService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.SearchService" />
      <MemberSignature Language="F#" Value="val mutable SearchService : string" Usage="Android.Content.Context.SearchService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SEARCH_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.App.SearchManager" /> for handling searches.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.SearchManager" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcast">
      <MemberSignature Language="C#" Value="public abstract void SendBroadcast (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member SendBroadcast : Android.Content.Intent -&gt; unit" Usage="context.SendBroadcast intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendBroadcast", "(Landroid/content/Intent;)V", "GetSendBroadcast_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <summary>Broadcast the given intent to all interested BroadcastReceivers.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.BroadcastReceiver" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String, System.String, System.String, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcast">
      <MemberSignature Language="C#" Value="public abstract void SendBroadcast (Android.Content.Intent intent, string receiverPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendBroadcast(class Android.Content.Intent intent, string receiverPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendBroadcast(Android.Content.Intent,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SendBroadcast : Android.Content.Intent * string -&gt; unit" Usage="context.SendBroadcast (intent, receiverPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendBroadcast", "(Landroid/content/Intent;Ljava/lang/String;)V", "GetSendBroadcast_Landroid_content_Intent_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receiverPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="receiverPermission">(optional) String naming a permission that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <summary>Broadcast the given intent to all interested BroadcastReceivers, allowing
 an optional required permission to be enforced.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.BroadcastReceiver" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String, System.String, System.String, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcastAsUser">
      <MemberSignature Language="C#" Value="public abstract void SendBroadcastAsUser (Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member SendBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="context.SendBroadcastAsUser (intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetSendBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.INTERACT_ACROSS_USERS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to broadcast</param>
        <param name="user">UserHandle to send the intent to.</param>
        <summary>Version of <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" /> that allows you to specify the
 user the broadcast will be sent to.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcastAsUser">
      <MemberSignature Language="C#" Value="public abstract void SendBroadcastAsUser (Android.Content.Intent intent, Android.OS.UserHandle user, string receiverPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user, string receiverPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SendBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle * string -&gt; unit" Usage="context.SendBroadcastAsUser (intent, user, receiverPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V", "GetSendBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Ljava_lang_String_Handler", ApiSince=17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.INTERACT_ACROSS_USERS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="receiverPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <param name="receiverPermission">(optional) String naming a permission that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <summary>Version of <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent,System.String)" /> that allows you to specify the
 user the broadcast will be sent to.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcast">
      <MemberSignature Language="C#" Value="public abstract void SendOrderedBroadcast (Android.Content.Intent intent, string receiverPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendOrderedBroadcast(class Android.Content.Intent intent, string receiverPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SendOrderedBroadcast : Android.Content.Intent * string -&gt; unit" Usage="context.SendOrderedBroadcast (intent, receiverPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendOrderedBroadcast", "(Landroid/content/Intent;Ljava/lang/String;)V", "GetSendOrderedBroadcast_Landroid_content_Intent_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receiverPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="receiverPermission">(optional) String naming a permissions that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <summary>Broadcast the given intent to all interested BroadcastReceivers, delivering
 them one at a time to allow more preferred receivers to consume the
 broadcast before it is delivered to less preferred receivers.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.BroadcastReceiver" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String, System.String, System.String, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcast">
      <MemberSignature Language="C#" Value="public abstract void SendOrderedBroadcast (Android.Content.Intent intent, string receiverPermission, Android.Content.BroadcastReceiver resultReceiver, Android.OS.Handler scheduler, Android.App.Result initialCode, string initialData, Android.OS.Bundle initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendOrderedBroadcast(class Android.Content.Intent intent, string receiverPermission, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent,System.String,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendOrderedBroadcast : Android.Content.Intent * string * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="context.SendOrderedBroadcast (intent, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendOrderedBroadcast", "(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendOrderedBroadcast_Landroid_content_Intent_Ljava_lang_String_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receiverPermission" Type="System.String" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="receiverPermission">String naming a permissions that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>Version of <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" /> that allows you to
 receive data back from the broadcast.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="T:Android.Content.BroadcastReceiver" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcastAsUser">
      <MemberSignature Language="C#" Value="public abstract void SendOrderedBroadcastAsUser (Android.Content.Intent intent, Android.OS.UserHandle user, string receiverPermission, Android.Content.BroadcastReceiver resultReceiver, Android.OS.Handler scheduler, Android.App.Result initialCode, string initialData, Android.OS.Bundle initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendOrderedBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user, string receiverPermission, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendOrderedBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle,System.String,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendOrderedBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle * string * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="context.SendOrderedBroadcastAsUser (intent, user, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendOrderedBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendOrderedBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Ljava_lang_String_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler", ApiSince=17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.INTERACT_ACROSS_USERS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="receiverPermission" Type="System.String" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <param name="receiverPermission">String naming a permissions that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>Version of
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context SendOrderedBroadcast(Android Content Intent,System String,System String,System String,System String,System String,System String)';scope=Xamarin" title="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent,System.String,System.String,System.String,System.String,System.String,System.String)">M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent,System.String,System.String,System.String,System.String,System.String,System.String)</a></format>
 that allows you to specify the
 user the broadcast will be sent to.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String, System.String, System.String, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyBroadcast">
      <MemberSignature Language="C#" Value="public abstract void SendStickyBroadcast (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStickyBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendStickyBroadcast(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member SendStickyBroadcast : Android.Content.Intent -&gt; unit" Usage="context.SendStickyBroadcast intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendStickyBroadcast", "(Landroid/content/Intent;)V", "GetSendStickyBroadcast_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.BROADCAST_STICKY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
 Intent will receive the broadcast, and the Intent will be held to
 be re-broadcast to future receivers.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.SendStickyOrderedBroadcast(Android.Content.Intent, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver)" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyBroadcastAsUser">
      <MemberSignature Language="C#" Value="public abstract void SendStickyBroadcastAsUser (Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStickyBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendStickyBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member SendStickyBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="context.SendStickyBroadcastAsUser (intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendStickyBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetSendStickyBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
 Intent will receive the broadcast, and the Intent will be held to
 be re-broadcast to future receivers.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyOrderedBroadcast">
      <MemberSignature Language="C#" Value="public abstract void SendStickyOrderedBroadcast (Android.Content.Intent intent, Android.Content.BroadcastReceiver resultReceiver, Android.OS.Handler scheduler, Android.App.Result initialCode, string initialData, Android.OS.Bundle initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStickyOrderedBroadcast(class Android.Content.Intent intent, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendStickyOrderedBroadcast(Android.Content.Intent,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendStickyOrderedBroadcast : Android.Content.Intent * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="context.SendStickyOrderedBroadcast (intent, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendStickyOrderedBroadcast", "(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendStickyOrderedBroadcast_Landroid_content_Intent_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler", ApiSince=5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.BROADCAST_STICKY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="M:Android.Content.Context.SendOrderedBroadcast(Android.Content.Intent, System.String)" />
        <altmember cref="M:Android.Content.Context.SendStickyBroadcast(Android.Content.Intent)" />
        <altmember cref="T:Android.Content.BroadcastReceiver" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyOrderedBroadcastAsUser">
      <MemberSignature Language="C#" Value="public abstract void SendStickyOrderedBroadcastAsUser (Android.Content.Intent intent, Android.OS.UserHandle user, Android.Content.BroadcastReceiver resultReceiver, Android.OS.Handler scheduler, Android.App.Result initialCode, string initialData, Android.OS.Bundle initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStickyOrderedBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SendStickyOrderedBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendStickyOrderedBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="context.SendStickyOrderedBroadcastAsUser (intent, user, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendStickyOrderedBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendStickyOrderedBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Content.Context.SendStickyOrderedBroadcast(Android.Content.Intent, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver, Android.Content.BroadcastReceiver)" />
      </Docs>
    </Member>
    <Member MemberName="SensorService">
      <MemberSignature Language="C#" Value="public const string SensorService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SensorService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.SensorService" />
      <MemberSignature Language="F#" Value="val mutable SensorService : string" Usage="Android.Content.Context.SensorService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Hardware.SensorManager" /> for accessing sensors.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Hardware.SensorManager" />
      </Docs>
    </Member>
    <Member MemberName="SetTheme">
      <MemberSignature Language="C#" Value="public abstract void SetTheme (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTheme(int32 resid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SetTheme(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetTheme : int -&gt; unit" Usage="context.SetTheme resid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTheme", "(I)V", "GetSetTheme_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The style resource describing the theme.
</param>
        <summary>Set the base theme for this context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWallpaper">
      <MemberSignature Language="C#" Value="public abstract void SetWallpaper (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWallpaper(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SetWallpaper(Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member SetWallpaper : Android.Graphics.Bitmap -&gt; unit" Usage="context.SetWallpaper bitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWallpaper", "(Landroid/graphics/Bitmap;)V", "GetSetWallpaper_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetWallpaper">
      <MemberSignature Language="C#" Value="public abstract void SetWallpaper (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWallpaper(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.SetWallpaper(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member SetWallpaper : System.IO.Stream -&gt; unit" Usage="context.SetWallpaper data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWallpaper", "(Ljava/io/InputStream;)V", "GetSetWallpaper_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ShortcutService">
      <MemberSignature Language="C#" Value="public const string ShortcutService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ShortcutService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.ShortcutService" />
      <MemberSignature Language="F#" Value="val mutable ShortcutService : string" Usage="Android.Content.Context.ShortcutService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SHORTCUT_SERVICE", ApiSince=25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="C#" Value="public abstract void StartActivities (Android.Content.Intent[] intents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivities(class Android.Content.Intent[] intents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartActivities(Android.Content.Intent[])" />
      <MemberSignature Language="F#" Value="abstract member StartActivities : Android.Content.Intent[] -&gt; unit" Usage="context.StartActivities intents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivities", "([Landroid/content/Intent;)V", "GetStartActivities_arrayLandroid_content_Intent_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intents" Type="Android.Content.Intent[]" />
      </Parameters>
      <Docs>
        <param name="intents">An array of Intents to be started.</param>
        <summary>Same as <see cref="M:Android.Content.Context.StartActivities(Android.Content.Intent[],Android.OS.Bundle)" /> with no options
 specified.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Android.Content.ActivityNotFoundException"> </exception>
        <altmember cref="M:Android.Content.Context.StartActivities(Android.Content.Intent[], Android.OS.Bundle)" />
        <altmember cref="M:Android.Content.PM.PackageManager.ResolveActivity(Android.Content.Intent, Android.Content.PM.PackageInfoFlags)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="C#" Value="public abstract void StartActivities (Android.Content.Intent[] intents, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivities(class Android.Content.Intent[] intents, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartActivities(Android.Content.Intent[],Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivities : Android.Content.Intent[] * Android.OS.Bundle -&gt; unit" Usage="context.StartActivities (intents, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivities", "([Landroid/content/Intent;Landroid/os/Bundle;)V", "GetStartActivities_arrayLandroid_content_Intent_Landroid_os_Bundle_Handler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intents" Type="Android.Content.Intent[]" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intents">An array of Intents to be started.</param>
        <param name="options">Additional options for how the Activity should be started.
 See <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /> for more details.</param>
        <summary>Launch multiple new activities.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.ActivityNotFoundException"> </exception>
        <altmember cref="M:Android.Content.Context.StartActivities(Android.Content.Intent[])" />
        <altmember cref="M:Android.Content.PM.PackageManager.ResolveActivity(Android.Content.Intent, Android.Content.PM.PackageInfoFlags)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public abstract void StartActivity (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivity(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member StartActivity : Android.Content.Intent -&gt; unit" Usage="context.StartActivity intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivity", "(Landroid/content/Intent;)V", "GetStartActivity_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The description of the activity to start.</param>
        <summary>Same as <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /> with no options
 specified.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.ActivityNotFoundException"> 
`</exception>
        <altmember cref="M:Android.Content.Context.StartActivity(Android.Content.Intent, Android.OS.Bundle)" />
        <altmember cref="M:Android.Content.PM.PackageManager.ResolveActivity(Android.Content.Intent, Android.Content.PM.PackageInfoFlags)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public void StartActivity (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartActivity(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartActivity(System.Type)" />
      <MemberSignature Language="F#" Value="member this.StartActivity : Type -&gt; unit" Usage="context.StartActivity type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public abstract void StartActivity (Android.Content.Intent intent, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivity(class Android.Content.Intent intent, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivity : Android.Content.Intent * Android.OS.Bundle -&gt; unit" Usage="context.StartActivity (intent, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)V", "GetStartActivity_Landroid_content_Intent_Landroid_os_Bundle_Handler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The description of the activity to start.</param>
        <param name="options">Additional options for how the Activity should be started.
 May be null if there are no options.  See <see cref="T:Android.App.ActivityOptions" />
 for how to build the Bundle supplied here; there are no supported definitions
 for building it manually.</param>
        <summary>Launch a new activity.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.ActivityNotFoundException"> </exception>
        <altmember cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.PM.PackageManager.ResolveActivity(Android.Content.Intent, Android.Content.PM.PackageInfoFlags)" />
      </Docs>
    </Member>
    <Member MemberName="StartForegroundService">
      <MemberSignature Language="C#" Value="public abstract Android.Content.ComponentName StartForegroundService (Android.Content.Intent service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ComponentName StartForegroundService(class Android.Content.Intent service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartForegroundService(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member StartForegroundService : Android.Content.Intent -&gt; Android.Content.ComponentName" Usage="context.StartForegroundService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startForegroundService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", "GetStartForegroundService_Landroid_content_Intent_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInstrumentation">
      <MemberSignature Language="C#" Value="public abstract bool StartInstrumentation (Android.Content.ComponentName className, string profileFile, Android.OS.Bundle arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartInstrumentation(class Android.Content.ComponentName className, string profileFile, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartInstrumentation(Android.Content.ComponentName,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartInstrumentation : Android.Content.ComponentName * string * Android.OS.Bundle -&gt; bool" Usage="context.StartInstrumentation (className, profileFile, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startInstrumentation", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z", "GetStartInstrumentation_Landroid_content_ComponentName_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="profileFile" Type="System.String" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="className">Name of the Instrumentation component to be run.</param>
        <param name="profileFile">Optional path to write profiling data as the
 instrumentation runs, or null for no profiling.</param>
        <param name="arguments">Additional optional arguments to pass to the
 instrumentation, or null.</param>
        <summary>Start executing an <see cref="T:Android.App.Instrumentation" /> class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSender">
      <MemberSignature Language="C#" Value="public abstract void StartIntentSender (Android.Content.IntentSender intent, Android.Content.Intent fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartIntentSender(class Android.Content.IntentSender intent, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartIntentSender(Android.Content.IntentSender,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartIntentSender : Android.Content.IntentSender * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int -&gt; unit" Usage="context.StartIntentSender (intent, fillInIntent, flagsMask, flagsValues, extraFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startIntentSender", "(Landroid/content/IntentSender;Landroid/content/Intent;III)V", "GetStartIntentSender_Landroid_content_IntentSender_Landroid_content_Intent_IIIHandler", ApiSince=5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">The IntentSender to launch.</param>
        <param name="fillInIntent">If non-null, this will be provided as the
 intent parameter to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content IntentSender SendIntent(Android Content Context,Android App Result,Android App Result,Android App Result,Android App Result)';scope=Xamarin" title="M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)">M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)</a></format>.</param>
        <param name="flagsMask">Intent flags in the original IntentSender that you
 would like to change.</param>
        <param name="flagsValues">Desired values for any bits set in
 <format type="text/html"><var>flagsMask</var></format></param>
        <param name="extraFlags">Always set to 0.</param>
        <summary tool="true">Same as <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context StartIntentSender(Android Content IntentSender,Android Content Intent,Android Content Intent,Android Content Intent,Android Content Intent,Android Content Intent)';scope=Xamarin" title="M:Android.Content.Context.StartIntentSender(Android.Content.IntentSender,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent)">M:Android.Content.Context.StartIntentSender(Android.Content.IntentSender,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent,Android.Content.Intent)</a></format>
 with no options specified.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
        <altmember cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.StartIntentSender(Android.Content.IntentSender, Android.Content.Intent, Android.Content.Intent, Android.Content.Intent, Android.Content.Intent, Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSender">
      <MemberSignature Language="C#" Value="public abstract void StartIntentSender (Android.Content.IntentSender intent, Android.Content.Intent fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartIntentSender(class Android.Content.IntentSender intent, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartIntentSender(Android.Content.IntentSender,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartIntentSender : Android.Content.IntentSender * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int * Android.OS.Bundle -&gt; unit" Usage="context.StartIntentSender (intent, fillInIntent, flagsMask, flagsValues, extraFlags, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startIntentSender", "(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V", "GetStartIntentSender_Landroid_content_IntentSender_Landroid_content_Intent_IIILandroid_os_Bundle_Handler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The IntentSender to launch.</param>
        <param name="fillInIntent">If non-null, this will be provided as the
 intent parameter to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content IntentSender SendIntent(Android Content Context,Android App Result,Android App Result,Android App Result,Android App Result)';scope=Xamarin" title="M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)">M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)</a></format>.</param>
        <param name="flagsMask">Intent flags in the original IntentSender that you
 would like to change.</param>
        <param name="flagsValues">Desired values for any bits set in
 <format type="text/html"><var>flagsMask</var></format></param>
        <param name="extraFlags">Always set to 0.</param>
        <param name="options">Additional options for how the Activity should be started.
 See <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /> for more details.  If options
 have also been supplied by the IntentSender, options given here will
 override any that conflict with those given by the IntentSender.</param>
        <summary>Like <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" />, but taking a IntentSender
 to start.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
        <altmember cref="M:Android.Content.Context.StartActivity(Android.Content.Intent, Android.OS.Bundle)" />
        <altmember cref="M:Android.Content.Context.StartIntentSender(Android.Content.IntentSender, Android.Content.Intent, Android.Content.Intent, Android.Content.Intent, Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="StartService">
      <MemberSignature Language="C#" Value="public abstract Android.Content.ComponentName StartService (Android.Content.Intent service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ComponentName StartService(class Android.Content.Intent service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StartService(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member StartService : Android.Content.Intent -&gt; Android.Content.ComponentName" Usage="context.StartService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", "GetStartService_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="service">Identifies the service to be started.  The Intent must be either
      fully explicit (supplying a component name) or specify a specific package
      name it is targetted to.  Additional values
      may be included in the Intent extras to supply arguments along with
      this specific start call.</param>
        <summary>Request that a given application service be started.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException"> </exception>
        <altmember cref="M:Android.Content.Context.StopService(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.BindService(Android.Content.Intent, Android.Content.IServiceConnection, Android.Content.IServiceConnection)" />
      </Docs>
    </Member>
    <Member MemberName="StopService">
      <MemberSignature Language="C#" Value="public abstract bool StopService (Android.Content.Intent service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StopService(class Android.Content.Intent service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.StopService(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member StopService : Android.Content.Intent -&gt; bool" Usage="context.StopService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopService", "(Landroid/content/Intent;)Z", "GetStopService_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="service">Description of the service to be stopped.  The Intent must be either
      fully explicit (supplying a component name) or specify a specific package
      name it is targetted to.</param>
        <summary>Request that a given application service be stopped.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException"> </exception>
        <altmember cref="M:Android.Content.Context.StartService(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="StorageService">
      <MemberSignature Language="C#" Value="public const string StorageService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string StorageService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.StorageService" />
      <MemberSignature Language="F#" Value="val mutable StorageService : string" Usage="Android.Content.Context.StorageService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STORAGE_SERVICE", ApiSince=9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.OS.Storage.StorageManager" /> for accessing system storage
 functions.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="T:Android.OS.Storage.StorageManager" />
      </Docs>
    </Member>
    <Member MemberName="StorageStatsService">
      <MemberSignature Language="C#" Value="public const string StorageStatsService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string StorageStatsService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.StorageStatsService" />
      <MemberSignature Language="F#" Value="val mutable StorageStatsService : string" Usage="Android.Content.Context.StorageStatsService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STORAGE_STATS_SERVICE", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemHealthService">
      <MemberSignature Language="C#" Value="public const string SystemHealthService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SystemHealthService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.SystemHealthService" />
      <MemberSignature Language="F#" Value="val mutable SystemHealthService : string" Usage="Android.Content.Context.SystemHealthService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_HEALTH_SERVICE", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TelecomService">
      <MemberSignature Language="C#" Value="public const string TelecomService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TelecomService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.TelecomService" />
      <MemberSignature Language="F#" Value="val mutable TelecomService : string" Usage="Android.Content.Context.TelecomService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TELECOM_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Telecom.TelecomManager" /> to manage telecom-related features
 of the device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Telecom.TelecomManager" />
      </Docs>
    </Member>
    <Member MemberName="TelephonyService">
      <MemberSignature Language="C#" Value="public const string TelephonyService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TelephonyService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.TelephonyService" />
      <MemberSignature Language="F#" Value="val mutable TelephonyService : string" Usage="Android.Content.Context.TelephonyService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TELEPHONY_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Telephony.TelephonyManager" /> for handling management the
 telephony features of the device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Telephony.TelephonyManager" />
      </Docs>
    </Member>
    <Member MemberName="TelephonySubscriptionService">
      <MemberSignature Language="C#" Value="public const string TelephonySubscriptionService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TelephonySubscriptionService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.TelephonySubscriptionService" />
      <MemberSignature Language="F#" Value="val mutable TelephonySubscriptionService : string" Usage="Android.Content.Context.TelephonySubscriptionService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TELEPHONY_SUBSCRIPTION_SERVICE", ApiSince=22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextClassificationService">
      <MemberSignature Language="C#" Value="public const string TextClassificationService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TextClassificationService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.TextClassificationService" />
      <MemberSignature Language="F#" Value="val mutable TextClassificationService : string" Usage="Android.Content.Context.TextClassificationService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_CLASSIFICATION_SERVICE", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextServicesManagerService">
      <MemberSignature Language="C#" Value="public const string TextServicesManagerService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TextServicesManagerService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.TextServicesManagerService" />
      <MemberSignature Language="F#" Value="val mutable TextServicesManagerService : string" Usage="Android.Content.Context.TextServicesManagerService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_SERVICES_MANAGER_SERVICE", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Views.TextService.TextServicesManager" /> for accessing
 text services.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Res.Resources.Theme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources/Theme Theme" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.Theme" />
      <MemberSignature Language="F#" Value="member this.Theme : Android.Content.Res.Resources.Theme" Usage="Android.Content.Context.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTheme", "()Landroid/content/res/Resources$Theme;", "GetGetThemeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources+Theme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Theme object associated with this Context.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Content.Context.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Content.Context.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TvInputService">
      <MemberSignature Language="C#" Value="public const string TvInputService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TvInputService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.TvInputService" />
      <MemberSignature Language="F#" Value="val mutable TvInputService : string" Usage="Android.Content.Context.TvInputService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TV_INPUT_SERVICE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Media.TV.TvInputManager" /> for interacting with TV inputs
 on the device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Media.TV.TvInputManager" />
      </Docs>
    </Member>
    <Member MemberName="UiModeService">
      <MemberSignature Language="C#" Value="public const string UiModeService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UiModeService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.UiModeService" />
      <MemberSignature Language="F#" Value="val mutable UiModeService : string" Usage="Android.Content.Context.UiModeService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UI_MODE_SERVICE", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.App.UiModeManager" /> for controlling UI modes.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="UnbindService">
      <MemberSignature Language="C#" Value="public abstract void UnbindService (Android.Content.IServiceConnection conn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnbindService(class Android.Content.IServiceConnection conn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.UnbindService(Android.Content.IServiceConnection)" />
      <MemberSignature Language="F#" Value="abstract member UnbindService : Android.Content.IServiceConnection -&gt; unit" Usage="context.UnbindService conn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unbindService", "(Landroid/content/ServiceConnection;)V", "GetUnbindService_Landroid_content_ServiceConnection_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conn" Type="Android.Content.IServiceConnection" />
      </Parameters>
      <Docs>
        <param name="conn">The connection interface previously supplied to
             bindService().  This parameter must not be null.</param>
        <summary>Disconnect from an application service.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.BindService(Android.Content.Intent, Android.Content.IServiceConnection, Android.Content.IServiceConnection)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterComponentCallbacks">
      <MemberSignature Language="C#" Value="public virtual void UnregisterComponentCallbacks (Android.Content.IComponentCallbacks callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterComponentCallbacks(class Android.Content.IComponentCallbacks callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.UnregisterComponentCallbacks(Android.Content.IComponentCallbacks)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterComponentCallbacks : Android.Content.IComponentCallbacks -&gt; unit&#xA;override this.UnregisterComponentCallbacks : Android.Content.IComponentCallbacks -&gt; unit" Usage="context.UnregisterComponentCallbacks callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterComponentCallbacks", "(Landroid/content/ComponentCallbacks;)V", "GetUnregisterComponentCallbacks_Landroid_content_ComponentCallbacks_Handler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.IComponentCallbacks" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Remove a <see cref="T:Android.Content.IComponentCallbacks" /> object that was previously registered
 with <see cref="M:Android.Content.Context.RegisterComponentCallbacks(Android.Content.IComponentCallbacks)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterReceiver">
      <MemberSignature Language="C#" Value="public abstract void UnregisterReceiver (Android.Content.BroadcastReceiver receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterReceiver(class Android.Content.BroadcastReceiver receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.Context.UnregisterReceiver(Android.Content.BroadcastReceiver)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterReceiver : Android.Content.BroadcastReceiver -&gt; unit" Usage="context.UnregisterReceiver receiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterReceiver", "(Landroid/content/BroadcastReceiver;)V", "GetUnregisterReceiver_Landroid_content_BroadcastReceiver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to unregister.</param>
        <summary>Unregister a previously registered BroadcastReceiver.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
      </Docs>
    </Member>
    <Member MemberName="UsageStatsService">
      <MemberSignature Language="C#" Value="public const string UsageStatsService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UsageStatsService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.UsageStatsService" />
      <MemberSignature Language="F#" Value="val mutable UsageStatsService : string" Usage="Android.Content.Context.UsageStatsService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("USAGE_STATS_SERVICE", ApiSince=22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsbService">
      <MemberSignature Language="C#" Value="public const string UsbService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UsbService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.UsbService" />
      <MemberSignature Language="F#" Value="val mutable UsbService : string" Usage="Android.Content.Context.UsbService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("USB_SERVICE", ApiSince=12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Hardware.Usb.UsbManager" /> for access to USB devices (as a USB host)
 and for controlling this device's behavior as a USB device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="T:Android.Hardware.Usb.UsbManager" />
      </Docs>
    </Member>
    <Member MemberName="UserService">
      <MemberSignature Language="C#" Value="public const string UserService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UserService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.UserService" />
      <MemberSignature Language="F#" Value="val mutable UserService : string" Usage="Android.Content.Context.UserService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("USER_SERVICE", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.OS.UserManager" /> for managing users on devices that support multiple users.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="T:Android.OS.UserManager" />
      </Docs>
    </Member>
    <Member MemberName="VibratorService">
      <MemberSignature Language="C#" Value="public const string VibratorService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VibratorService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.VibratorService" />
      <MemberSignature Language="F#" Value="val mutable VibratorService : string" Usage="Android.Content.Context.VibratorService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VIBRATOR_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.OS.Vibrator" /> for interacting with the vibration hardware.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.OS.Vibrator" />
      </Docs>
    </Member>
    <Member MemberName="Wallpaper">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable Wallpaper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Wallpaper" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.Wallpaper" />
      <MemberSignature Language="F#" Value="member this.Wallpaper : Android.Graphics.Drawables.Drawable" Usage="Android.Content.Context.Wallpaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWallpaper", "()Landroid/graphics/drawable/Drawable;", "GetGetWallpaperHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperDesiredMinimumHeight">
      <MemberSignature Language="C#" Value="public abstract int WallpaperDesiredMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WallpaperDesiredMinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.WallpaperDesiredMinimumHeight" />
      <MemberSignature Language="F#" Value="member this.WallpaperDesiredMinimumHeight : int" Usage="Android.Content.Context.WallpaperDesiredMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWallpaperDesiredMinimumHeight", "()I", "GetGetWallpaperDesiredMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperDesiredMinimumWidth">
      <MemberSignature Language="C#" Value="public abstract int WallpaperDesiredMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WallpaperDesiredMinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Content.Context.WallpaperDesiredMinimumWidth" />
      <MemberSignature Language="F#" Value="member this.WallpaperDesiredMinimumWidth : int" Usage="Android.Content.Context.WallpaperDesiredMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWallpaperDesiredMinimumWidth", "()I", "GetGetWallpaperDesiredMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperService">
      <MemberSignature Language="C#" Value="public const string WallpaperService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WallpaperService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.WallpaperService" />
      <MemberSignature Language="F#" Value="val mutable WallpaperService : string" Usage="Android.Content.Context.WallpaperService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WALLPAPER_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 com.android.server.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WifiAwareService">
      <MemberSignature Language="C#" Value="public const string WifiAwareService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiAwareService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.WifiAwareService" />
      <MemberSignature Language="F#" Value="val mutable WifiAwareService : string" Usage="Android.Content.Context.WifiAwareService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_AWARE_SERVICE", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiP2pService">
      <MemberSignature Language="C#" Value="public const string WifiP2pService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiP2pService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.WifiP2pService" />
      <MemberSignature Language="F#" Value="val mutable WifiP2pService : string" Usage="Android.Content.Context.WifiP2pService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_P2P_SERVICE", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Net.Wifi.P2p.WifiP2pManager" /> for handling management of
 Wi-Fi peer-to-peer connections.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="T:Android.Net.Wifi.P2p.WifiP2pManager" />
      </Docs>
    </Member>
    <Member MemberName="WifiService">
      <MemberSignature Language="C#" Value="public const string WifiService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WifiService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.WifiService" />
      <MemberSignature Language="F#" Value="val mutable WifiService : string" Usage="Android.Content.Context.WifiService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIFI_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a <see cref="T:Android.Net.Wifi.WifiManager" /> for handling management of
 Wi-Fi access.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Net.Wifi.WifiManager" />
      </Docs>
    </Member>
    <Member MemberName="WindowService">
      <MemberSignature Language="C#" Value="public const string WindowService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WindowService" />
      <MemberSignature Language="DocId" Value="F:Android.Content.Context.WindowService" />
      <MemberSignature Language="F#" Value="val mutable WindowService : string" Usage="Android.Content.Context.WindowService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WINDOW_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Use with <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /> to retrieve a
 <see cref="T:Android.Views.IWindowManager" /> for accessing the system's window
 manager.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.IWindowManager" />
      </Docs>
    </Member>
  </Members>
</Type>
