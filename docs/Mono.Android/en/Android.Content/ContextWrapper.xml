<Type Name="ContextWrapper" FullName="Android.Content.ContextWrapper">
  <TypeSignature Language="F#" Value="type ContextWrapper = class&#xA;    inherit Context" />
  <TypeSignature Language="C#" Value="public class ContextWrapper : Android.Content.Context" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextWrapper extends Android.Content.Context" />
  <TypeSignature Language="DocId" Value="T:Android.Content.ContextWrapper" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.Context</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/content/ContextWrapper", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Proxying implementation of Context that simply delegates all of its calls to
            another Context.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/content/ContextWrapper" title="Reference documentation">Java documentation for <code>android.content.ContextWrapper</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Content.ContextWrapper : Android.Content.Context -&gt; Android.Content.ContextWrapper" Usage="new Android.Content.ContextWrapper base" />
      <MemberSignature Language="C#" Value="public ContextWrapper (Android.Content.Context? base);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context base) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.#ctor(Android.Content.Context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Content.ContextWrapper : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Content.ContextWrapper" Usage="new Android.Content.ContextWrapper (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected ContextWrapper (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="F#" Value="member this.ApplicationContext : Android.Content.Context" Usage="Android.Content.ContextWrapper.ApplicationContext" />
      <MemberSignature Language="C#" Value="public override Android.Content.Context? ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ApplicationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getApplicationContext", "()Landroid/content/Context;", "GetGetApplicationContextHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the context of the single, global Application object of the
 current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationInfo">
      <MemberSignature Language="F#" Value="member this.ApplicationInfo : Android.Content.PM.ApplicationInfo" Usage="Android.Content.ContextWrapper.ApplicationInfo" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ApplicationInfo? ApplicationInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.ApplicationInfo ApplicationInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ApplicationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getApplicationInfo", "()Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfoHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full application info for this context's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Assets">
      <MemberSignature Language="F#" Value="member this.Assets : Android.Content.Res.AssetManager" Usage="Android.Content.ContextWrapper.Assets" />
      <MemberSignature Language="C#" Value="public override Android.Content.Res.AssetManager? Assets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.AssetManager Assets" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.Assets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAssets", "()Landroid/content/res/AssetManager;", "GetGetAssetsHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return an AssetManager instance for your application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AttachBaseContext">
      <MemberSignature Language="F#" Value="abstract member AttachBaseContext : Android.Content.Context -&gt; unit&#xA;override this.AttachBaseContext : Android.Content.Context -&gt; unit" Usage="contextWrapper.AttachBaseContext base" />
      <MemberSignature Language="C#" Value="protected virtual void AttachBaseContext (Android.Content.Context? base);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AttachBaseContext(class Android.Content.Context base) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.AttachBaseContext(Android.Content.Context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("attachBaseContext", "(Landroid/content/Context;)V", "GetAttachBaseContext_Landroid_content_Context_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="base">The new base context for this wrapper.</param>
        <summary>Set the base context for this ContextWrapper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ContextWrapper#attachBaseContext(android.content.Context)" title="Reference documentation">Java documentation for <code>android.content.ContextWrapper.attachBaseContext(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BaseContext">
      <MemberSignature Language="F#" Value="member this.BaseContext : Android.Content.Context" Usage="Android.Content.ContextWrapper.BaseContext" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context? BaseContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context BaseContext" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.BaseContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBaseContext", "()Landroid/content/Context;", "GetGetBaseContextHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>the base context as set by the constructor or setBaseContext</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ContextWrapper#getBaseContext()" title="Reference documentation">Java documentation for <code>android.content.ContextWrapper.getBaseContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BindService">
      <MemberSignature Language="F#" Value="override this.BindService : Android.Content.Intent * Android.Content.IServiceConnection * Android.Content.Bind -&gt; bool" Usage="contextWrapper.BindService (service, conn, flags)" />
      <MemberSignature Language="C#" Value="public override bool BindService (Android.Content.Intent? service, Android.Content.IServiceConnection? conn, Android.Content.Bind flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool BindService(class Android.Content.Intent service, class Android.Content.IServiceConnection conn, valuetype Android.Content.Bind flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.BindService(Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.Bind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bindService", "(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z", "GetBindService_Landroid_content_Intent_Landroid_content_ServiceConnection_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
        <Parameter Name="conn" Type="Android.Content.IServiceConnection" />
        <Parameter Name="flags" Type="Android.Content.Bind">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="service">Identifies the service to connect to.  The Intent may
      specify either an explicit component name, or a logical
      description (action, category, etc) to match an
      <see cref="T:Android.Content.IntentFilter" /> published by a service.</param>
        <param name="conn">Receives information as the service is started and stopped.
      This must be a valid ServiceConnection object; it must not be null.</param>
        <param name="flags">Operation options for the binding.  May be 0,
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_AUTO_CREATE';scope=Xamarin" title="Android.Content.Context.BIND_AUTO_CREATE">Android.Content.Context.BIND_AUTO_CREATE</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_DEBUG_UNBIND';scope=Xamarin" title="Android.Content.Context.BIND_DEBUG_UNBIND">Android.Content.Context.BIND_DEBUG_UNBIND</a></format>,
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_NOT_FOREGROUND';scope=Xamarin" title="Android.Content.Context.BIND_NOT_FOREGROUND">Android.Content.Context.BIND_NOT_FOREGROUND</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_ABOVE_CLIENT';scope=Xamarin" title="Android.Content.Context.BIND_ABOVE_CLIENT">Android.Content.Context.BIND_ABOVE_CLIENT</a></format>,
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_ALLOW_OOM_MANAGEMENT';scope=Xamarin" title="Android.Content.Context.BIND_ALLOW_OOM_MANAGEMENT">Android.Content.Context.BIND_ALLOW_OOM_MANAGEMENT</a></format>, or
          <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context BIND_WAIVE_PRIORITY';scope=Xamarin" title="Android.Content.Context.BIND_WAIVE_PRIORITY">Android.Content.Context.BIND_WAIVE_PRIORITY</a></format>.</param>
        <summary>Connect to an application service, creating it if needed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CacheDir">
      <MemberSignature Language="F#" Value="member this.CacheDir : Java.IO.File" Usage="Android.Content.ContextWrapper.CacheDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? CacheDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File CacheDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.CacheDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCacheDir", "()Ljava/io/File;", "GetGetCacheDirHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the application specific cache directory
 on the filesystem.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingOrSelfPermission">
      <MemberSignature Language="F#" Value="override this.CheckCallingOrSelfPermission : string -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckCallingOrSelfPermission permission" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckCallingOrSelfPermission (string? permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckCallingOrSelfPermission(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckCallingOrSelfPermission(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkCallingOrSelfPermission", "(Ljava/lang/String;)I", "GetCheckCallingOrSelfPermission_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <summary>Determine whether the calling process of an IPC <i>or you</i> have been
 granted a particular permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingOrSelfUriPermission">
      <MemberSignature Language="F#" Value="override this.CheckCallingOrSelfUriPermission : Android.Net.Uri * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckCallingOrSelfUriPermission (uri, modeFlags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckCallingOrSelfUriPermission (Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckCallingOrSelfUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckCallingOrSelfUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkCallingOrSelfUriPermission", "(Landroid/net/Uri;I)I", "GetCheckCallingOrSelfUriPermission_Landroid_net_Uri_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Determine whether the calling process of an IPC <i>or you</i> has been granted
 permission to access a specific URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingPermission">
      <MemberSignature Language="F#" Value="override this.CheckCallingPermission : string -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckCallingPermission permission" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckCallingPermission (string? permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckCallingPermission(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckCallingPermission(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkCallingPermission", "(Ljava/lang/String;)I", "GetCheckCallingPermission_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <summary>Determine whether the calling process of an IPC you are handling has been
 granted a particular permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckCallingUriPermission">
      <MemberSignature Language="F#" Value="override this.CheckCallingUriPermission : Android.Net.Uri * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckCallingUriPermission (uri, modeFlags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckCallingUriPermission (Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckCallingUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckCallingUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkCallingUriPermission", "(Landroid/net/Uri;I)I", "GetCheckCallingUriPermission_Landroid_net_Uri_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Determine whether the calling process and user ID has been
 granted permission to access a specific URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckPermission">
      <MemberSignature Language="F#" Value="override this.CheckPermission : string * int * int -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckPermission (permission, pid, uid)" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckPermission (string? permission, int pid, int uid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckPermission(string permission, int32 pid, int32 uid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckPermission(System.String,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkPermission", "(Ljava/lang/String;II)I", "GetCheckPermission_Ljava_lang_String_IIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <summary>Determine whether the given permission is allowed for a particular
 process and user ID running in the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckSelfPermission">
      <MemberSignature Language="F#" Value="override this.CheckSelfPermission : string -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckSelfPermission permission" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckSelfPermission (string? permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckSelfPermission(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckSelfPermission(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkSelfPermission", "(Ljava/lang/String;)I", "GetCheckSelfPermission_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUriPermission">
      <MemberSignature Language="F#" Value="override this.CheckUriPermission : Android.Net.Uri * int * int * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckUriPermission (uri, pid, uid, modeFlags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckUriPermission (Android.Net.Uri? uri, int pid, int uid, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckUriPermission(class Android.Net.Uri uri, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckUriPermission(Android.Net.Uri,System.Int32,System.Int32,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkUriPermission", "(Landroid/net/Uri;III)I", "GetCheckUriPermission_Landroid_net_Uri_IIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary tool="true">Determine whether a particular process and user ID has been granted
 permission to access a specific URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckUriPermission">
      <MemberSignature Language="F#" Value="override this.CheckUriPermission : Android.Net.Uri * string * string * int * int * Android.Content.ActivityFlags -&gt; Android.Content.PM.Permission" Usage="contextWrapper.CheckUriPermission (uri, readPermission, writePermission, pid, uid, modeFlags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckUriPermission (Android.Net.Uri? uri, string? readPermission, string? writePermission, int pid, int uid, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckUriPermission(class Android.Net.Uri uri, string readPermission, string writePermission, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CheckUriPermission(Android.Net.Uri,System.String,System.String,System.Int32,System.Int32,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkUriPermission", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I", "GetCheckUriPermission_Landroid_net_Uri_Ljava_lang_String_Ljava_lang_String_IIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="readPermission" Type="System.String" />
        <Parameter Name="writePermission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The Uri whose permission is to be checked, or null to not
 do this check.</param>
        <param name="readPermission">The permission that provides overall read access,
 or null to not do this check.</param>
        <param name="writePermission">The permission that provides overall write
 access, or null to not do this check.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Check both a Uri and normal permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClassLoader">
      <MemberSignature Language="F#" Value="member this.ClassLoader : Java.Lang.ClassLoader" Usage="Android.Content.ContextWrapper.ClassLoader" />
      <MemberSignature Language="C#" Value="public override Java.Lang.ClassLoader? ClassLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ClassLoader ClassLoader" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ClassLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getClassLoader", "()Ljava/lang/ClassLoader;", "GetGetClassLoaderHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ClassLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a class loader you can use to retrieve classes in this package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearWallpaper">
      <MemberSignature Language="F#" Value="override this.ClearWallpaper : unit -&gt; unit" Usage="contextWrapper.ClearWallpaper " />
      <MemberSignature Language="C#" Value="public override void ClearWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ClearWallpaper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.ClearWallpaper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearWallpaper", "()V", "GetClearWallpaperHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CodeCacheDir">
      <MemberSignature Language="F#" Value="member this.CodeCacheDir : Java.IO.File" Usage="Android.Content.ContextWrapper.CodeCacheDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? CodeCacheDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File CodeCacheDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.CodeCacheDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCodeCacheDir", "()Ljava/io/File;", "GetGetCodeCacheDirHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the application specific cache directory on
 the filesystem designed for storing cached code.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentResolver">
      <MemberSignature Language="F#" Value="member this.ContentResolver : Android.Content.ContentResolver" Usage="Android.Content.ContextWrapper.ContentResolver" />
      <MemberSignature Language="C#" Value="public override Android.Content.ContentResolver? ContentResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ContentResolver ContentResolver" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ContentResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentResolver", "()Landroid/content/ContentResolver;", "GetGetContentResolverHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a ContentResolver instance for your application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateConfigurationContext">
      <MemberSignature Language="F#" Value="override this.CreateConfigurationContext : Android.Content.Res.Configuration -&gt; Android.Content.Context" Usage="contextWrapper.CreateConfigurationContext overrideConfiguration" />
      <MemberSignature Language="C#" Value="public override Android.Content.Context? CreateConfigurationContext (Android.Content.Res.Configuration? overrideConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Context CreateConfigurationContext(class Android.Content.Res.Configuration overrideConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CreateConfigurationContext(Android.Content.Res.Configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createConfigurationContext", "(Landroid/content/res/Configuration;)Landroid/content/Context;", "GetCreateConfigurationContext_Landroid_content_res_Configuration_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overrideConfiguration" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="overrideConfiguration">A <see cref="T:Android.Content.Res.Configuration" /> specifying what
 values to modify in the base Configuration of the original Context's
 resources.  If the base configuration changes (such as due to an
 orientation change), the resources of this context will also change except
 for those that have been explicitly overridden with a value here.</param>
        <summary>Return a new Context object for the current Context but whose resources
 are adjusted to match the given Configuration.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreateContextForSplit">
      <MemberSignature Language="F#" Value="override this.CreateContextForSplit : string -&gt; Android.Content.Context" Usage="contextWrapper.CreateContextForSplit splitName" />
      <MemberSignature Language="C#" Value="public override Android.Content.Context? CreateContextForSplit (string? splitName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Context CreateContextForSplit(string splitName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CreateContextForSplit(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createContextForSplit", "(Ljava/lang/String;)Landroid/content/Context;", "GetCreateContextForSplit_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="splitName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="splitName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDeviceProtectedStorageContext">
      <MemberSignature Language="F#" Value="override this.CreateDeviceProtectedStorageContext : unit -&gt; Android.Content.Context" Usage="contextWrapper.CreateDeviceProtectedStorageContext " />
      <MemberSignature Language="C#" Value="public override Android.Content.Context? CreateDeviceProtectedStorageContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Context CreateDeviceProtectedStorageContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CreateDeviceProtectedStorageContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createDeviceProtectedStorageContext", "()Landroid/content/Context;", "GetCreateDeviceProtectedStorageContextHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayContext">
      <MemberSignature Language="F#" Value="override this.CreateDisplayContext : Android.Views.Display -&gt; Android.Content.Context" Usage="contextWrapper.CreateDisplayContext display" />
      <MemberSignature Language="C#" Value="public override Android.Content.Context? CreateDisplayContext (Android.Views.Display? display);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Context CreateDisplayContext(class Android.Views.Display display) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CreateDisplayContext(Android.Views.Display)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createDisplayContext", "(Landroid/view/Display;)Landroid/content/Context;", "GetCreateDisplayContext_Landroid_view_Display_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Views.Display" />
      </Parameters>
      <Docs>
        <param name="display">A <see cref="T:Android.Views.Display" /> object specifying the display
 for whose metrics the Context's resources should be tailored and upon which
 new windows should be shown.</param>
        <summary>Return a new Context object for the current Context but whose resources
 are adjusted to match the metrics of the given Display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreatePackageContext">
      <MemberSignature Language="F#" Value="override this.CreatePackageContext : string * Android.Content.PackageContextFlags -&gt; Android.Content.Context" Usage="contextWrapper.CreatePackageContext (packageName, flags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.Context? CreatePackageContext (string? packageName, Android.Content.PackageContextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Context CreatePackageContext(string packageName, valuetype Android.Content.PackageContextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.CreatePackageContext(System.String,Android.Content.PackageContextFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createPackageContext", "(Ljava/lang/String;I)Landroid/content/Context;", "GetCreatePackageContext_Ljava_lang_String_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PackageContextFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">Name of the application's package.</param>
        <param name="flags">Option flags, one of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context CONTEXT_INCLUDE_CODE';scope=Xamarin" title="Android.Content.Context.CONTEXT_INCLUDE_CODE">Android.Content.Context.CONTEXT_INCLUDE_CODE</a></format>
              or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context CONTEXT_IGNORE_SECURITY';scope=Xamarin" title="Android.Content.Context.CONTEXT_IGNORE_SECURITY">Android.Content.Context.CONTEXT_IGNORE_SECURITY</a></format>.</param>
        <summary>Return a new Context object for the given application name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="DatabaseList">
      <MemberSignature Language="F#" Value="override this.DatabaseList : unit -&gt; string[]" Usage="contextWrapper.DatabaseList " />
      <MemberSignature Language="C#" Value="public override string[]? DatabaseList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] DatabaseList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.DatabaseList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("databaseList", "()[Ljava/lang/String;", "GetDatabaseListHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of strings naming the private databases associated with
 this Context's application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DataDir">
      <MemberSignature Language="F#" Value="member this.DataDir : Java.IO.File" Usage="Android.Content.ContextWrapper.DataDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? DataDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File DataDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.DataDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDataDir", "()Ljava/io/File;", "GetGetDataDirHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="F#" Value="override this.DeleteDatabase : string -&gt; bool" Usage="contextWrapper.DeleteDatabase name" />
      <MemberSignature Language="C#" Value="public override bool DeleteDatabase (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteDatabase(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.DeleteDatabase(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteDatabase", "(Ljava/lang/String;)Z", "GetDeleteDatabase_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name (unique in the application package) of the
             database.</param>
        <summary>Delete an existing private SQLiteDatabase associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="F#" Value="override this.DeleteFile : string -&gt; bool" Usage="contextWrapper.DeleteFile name" />
      <MemberSignature Language="C#" Value="public override bool DeleteFile (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.DeleteFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteFile", "(Ljava/lang/String;)Z", "GetDeleteFile_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the file to delete; can not contain path
             separators.</param>
        <summary>Delete the given private file associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSharedPreferences">
      <MemberSignature Language="F#" Value="override this.DeleteSharedPreferences : string -&gt; bool" Usage="contextWrapper.DeleteSharedPreferences name" />
      <MemberSignature Language="C#" Value="public override bool DeleteSharedPreferences (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteSharedPreferences(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.DeleteSharedPreferences(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteSharedPreferences", "(Ljava/lang/String;)Z", "GetDeleteSharedPreferences_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingOrSelfPermission">
      <MemberSignature Language="F#" Value="override this.EnforceCallingOrSelfPermission : string * string -&gt; unit" Usage="contextWrapper.EnforceCallingOrSelfPermission (permission, message)" />
      <MemberSignature Language="C#" Value="public override void EnforceCallingOrSelfPermission (string? permission, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforceCallingOrSelfPermission(string permission, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforceCallingOrSelfPermission(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforceCallingOrSelfPermission", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEnforceCallingOrSelfPermission_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If neither you nor the calling process of an IPC you are
 handling has been granted a particular permission, throw a
 <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingOrSelfUriPermission">
      <MemberSignature Language="F#" Value="override this.EnforceCallingOrSelfUriPermission : Android.Net.Uri * Android.Content.ActivityFlags * string -&gt; unit" Usage="contextWrapper.EnforceCallingOrSelfUriPermission (uri, modeFlags, message)" />
      <MemberSignature Language="C#" Value="public override void EnforceCallingOrSelfUriPermission (Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforceCallingOrSelfUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforceCallingOrSelfUriPermission(Android.Net.Uri,Android.Content.ActivityFlags,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforceCallingOrSelfUriPermission", "(Landroid/net/Uri;ILjava/lang/String;)V", "GetEnforceCallingOrSelfUriPermission_Landroid_net_Uri_ILjava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the calling process of an IPC <i>or you</i> has not been
 granted permission to access a specific URI, throw <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingPermission">
      <MemberSignature Language="F#" Value="override this.EnforceCallingPermission : string * string -&gt; unit" Usage="contextWrapper.EnforceCallingPermission (permission, message)" />
      <MemberSignature Language="C#" Value="public override void EnforceCallingPermission (string? permission, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforceCallingPermission(string permission, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforceCallingPermission(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforceCallingPermission", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEnforceCallingPermission_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the calling process of an IPC you are handling has not been
 granted a particular permission, throw a <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnforceCallingUriPermission">
      <MemberSignature Language="F#" Value="override this.EnforceCallingUriPermission : Android.Net.Uri * Android.Content.ActivityFlags * string -&gt; unit" Usage="contextWrapper.EnforceCallingUriPermission (uri, modeFlags, message)" />
      <MemberSignature Language="C#" Value="public override void EnforceCallingUriPermission (Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforceCallingUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforceCallingUriPermission(Android.Net.Uri,Android.Content.ActivityFlags,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforceCallingUriPermission", "(Landroid/net/Uri;ILjava/lang/String;)V", "GetEnforceCallingUriPermission_Landroid_net_Uri_ILjava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the calling process and user ID has not been granted
 permission to access a specific URI, throw <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnforcePermission">
      <MemberSignature Language="F#" Value="override this.EnforcePermission : string * int * int * string -&gt; unit" Usage="contextWrapper.EnforcePermission (permission, pid, uid, message)" />
      <MemberSignature Language="C#" Value="public override void EnforcePermission (string? permission, int pid, int uid, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforcePermission(string permission, int32 pid, int32 uid, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforcePermission(System.String,System.Int32,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforcePermission", "(Ljava/lang/String;IILjava/lang/String;)V", "GetEnforcePermission_Ljava_lang_String_IILjava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">The name of the permission being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>If the given permission is not allowed for a particular process
 and user ID running in the system, throw a <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnforceUriPermission">
      <MemberSignature Language="F#" Value="override this.EnforceUriPermission : Android.Net.Uri * int * int * Android.Content.ActivityFlags * string -&gt; unit" Usage="contextWrapper.EnforceUriPermission (uri, pid, uid, modeFlags, message)" />
      <MemberSignature Language="C#" Value="public override void EnforceUriPermission (Android.Net.Uri? uri, int pid, int uid, Android.Content.ActivityFlags modeFlags, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforceUriPermission(class Android.Net.Uri uri, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforceUriPermission(Android.Net.Uri,System.Int32,System.Int32,Android.Content.ActivityFlags,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforceUriPermission", "(Landroid/net/Uri;IIILjava/lang/String;)V", "GetEnforceUriPermission_Landroid_net_Uri_IIILjava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The uri that is being checked.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary tool="true">If a particular process and user ID has not been granted
 permission to access a specific URI, throw <see cref="T:Java.Lang.SecurityException" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnforceUriPermission">
      <MemberSignature Language="F#" Value="override this.EnforceUriPermission : Android.Net.Uri * string * string * int * int * Android.Content.ActivityFlags * string -&gt; unit" Usage="contextWrapper.EnforceUriPermission (uri, readPermission, writePermission, pid, uid, modeFlags, message)" />
      <MemberSignature Language="C#" Value="public override void EnforceUriPermission (Android.Net.Uri? uri, string? readPermission, string? writePermission, int pid, int uid, Android.Content.ActivityFlags modeFlags, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnforceUriPermission(class Android.Net.Uri uri, string readPermission, string writePermission, int32 pid, int32 uid, valuetype Android.Content.ActivityFlags modeFlags, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.EnforceUriPermission(Android.Net.Uri,System.String,System.String,System.Int32,System.Int32,Android.Content.ActivityFlags,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enforceUriPermission", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V", "GetEnforceUriPermission_Landroid_net_Uri_Ljava_lang_String_Ljava_lang_String_IIILjava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="readPermission" Type="System.String" />
        <Parameter Name="writePermission" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The Uri whose permission is to be checked, or null to not
 do this check.</param>
        <param name="readPermission">The permission that provides overall read access,
 or null to not do this check.</param>
        <param name="writePermission">The permission that provides overall write
 access, or null to not do this check.</param>
        <param name="pid">The process ID being checked against.  Must be &gt; 0.</param>
        <param name="uid">The user ID being checked against.  A uid of 0 is the root
 user, which will pass every permission check.</param>
        <param name="modeFlags">The type of access to grant.  May be one or both of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <param name="message">A message to include in the exception if it is thrown.</param>
        <summary>Enforce both a Uri and normal permission.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExternalCacheDir">
      <MemberSignature Language="F#" Value="member this.ExternalCacheDir : Java.IO.File" Usage="Android.Content.ContextWrapper.ExternalCacheDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? ExternalCacheDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File ExternalCacheDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ExternalCacheDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExternalCacheDir", "()Ljava/io/File;", "GetGetExternalCacheDirHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the directory on the primary external filesystem
 (that is somewhere on <see cref="P:Android.OS.Environment.ExternalStorageDirectory" /> where the application can
 place cache files it owns.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FileList">
      <MemberSignature Language="F#" Value="override this.FileList : unit -&gt; string[]" Usage="contextWrapper.FileList " />
      <MemberSignature Language="C#" Value="public override string[]? FileList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FileList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.FileList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fileList", "()[Ljava/lang/String;", "GetFileListHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of strings naming the private files associated with
 this Context's application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FilesDir">
      <MemberSignature Language="F#" Value="member this.FilesDir : Java.IO.File" Usage="Android.Content.ContextWrapper.FilesDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? FilesDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File FilesDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.FilesDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFilesDir", "()Ljava/io/File;", "GetGetFilesDirHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the directory on the filesystem where
 files created with <see cref="M:Android.Content.Context.OpenFileOutput(System.String,Android.Content.FileCreationMode)" /> are stored.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDatabasePath">
      <MemberSignature Language="F#" Value="override this.GetDatabasePath : string -&gt; Java.IO.File" Usage="contextWrapper.GetDatabasePath name" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? GetDatabasePath (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File GetDatabasePath(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetDatabasePath(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDatabasePath", "(Ljava/lang/String;)Ljava/io/File;", "GetGetDatabasePath_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the database for which you would like to get
          its path.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDir">
      <MemberSignature Language="F#" Value="override this.GetDir : string * Android.Content.FileCreationMode -&gt; Java.IO.File" Usage="contextWrapper.GetDir (name, mode)" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? GetDir (string? name, Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File GetDir(string name, valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetDir(System.String,Android.Content.FileCreationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDir", "(Ljava/lang/String;I)Ljava/io/File;", "GetGetDir_Ljava_lang_String_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">Name of the directory to retrieve.  This is a directory
 that is created as part of your application data.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
 default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" /> and
 <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.</param>
        <summary>Retrieve, creating if needed, a new directory in which the application
 can place its own custom data files.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalCacheDirs">
      <MemberSignature Language="F#" Value="override this.GetExternalCacheDirs : unit -&gt; Java.IO.File[]" Usage="contextWrapper.GetExternalCacheDirs " />
      <MemberSignature Language="C#" Value="public override Java.IO.File[]? GetExternalCacheDirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File[] GetExternalCacheDirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetExternalCacheDirs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExternalCacheDirs", "()[Ljava/io/File;", "GetGetExternalCacheDirsHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application can place cache files it
 owns.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalFilesDir">
      <MemberSignature Language="F#" Value="override this.GetExternalFilesDir : string -&gt; Java.IO.File" Usage="contextWrapper.GetExternalFilesDir type" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? GetExternalFilesDir (string? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File GetExternalFilesDir(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetExternalFilesDir(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExternalFilesDir", "(Ljava/lang/String;)Ljava/io/File;", "GetGetExternalFilesDir_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The type of files directory to return.  May be null for
 the root of the files directory or one of
 the following Environment constants for a subdirectory:
 <see cref="P:Android.OS.Environment.DirectoryMusic" />,
 <see cref="P:Android.OS.Environment.DirectoryPodcasts" />,
 <see cref="P:Android.OS.Environment.DirectoryRingtones" />,
 <see cref="P:Android.OS.Environment.DirectoryAlarms" />,
 <see cref="P:Android.OS.Environment.DirectoryNotifications" />,
 <see cref="P:Android.OS.Environment.DirectoryPictures" />, or
 <see cref="P:Android.OS.Environment.DirectoryMovies" />.</param>
        <summary>Returns the absolute path to the directory on the primary external filesystem
 (that is somewhere on <see cref="P:Android.OS.Environment.ExternalStorageDirectory" />) where the application can
 place persistent files it owns.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalFilesDirs">
      <MemberSignature Language="F#" Value="override this.GetExternalFilesDirs : string -&gt; Java.IO.File[]" Usage="contextWrapper.GetExternalFilesDirs type" />
      <MemberSignature Language="C#" Value="public override Java.IO.File[]? GetExternalFilesDirs (string? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File[] GetExternalFilesDirs(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetExternalFilesDirs(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExternalFilesDirs", "(Ljava/lang/String;)[Ljava/io/File;", "GetGetExternalFilesDirs_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application can place persistent files
 it owns.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalMediaDirs">
      <MemberSignature Language="F#" Value="override this.GetExternalMediaDirs : unit -&gt; Java.IO.File[]" Usage="contextWrapper.GetExternalMediaDirs " />
      <MemberSignature Language="C#" Value="public override Java.IO.File[]? GetExternalMediaDirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File[] GetExternalMediaDirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetExternalMediaDirs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExternalMediaDirs", "()[Ljava/io/File;", "GetGetExternalMediaDirsHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application can place media files.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileStreamPath">
      <MemberSignature Language="F#" Value="override this.GetFileStreamPath : string -&gt; Java.IO.File" Usage="contextWrapper.GetFileStreamPath name" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? GetFileStreamPath (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File GetFileStreamPath(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetFileStreamPath(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFileStreamPath", "(Ljava/lang/String;)Ljava/io/File;", "GetGetFileStreamPath_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the file for which you would like to get
          its path.</param>
        <summary>Returns the absolute path on the filesystem where a file created with
 <see cref="M:Android.Content.Context.OpenFileOutput(System.String,Android.Content.FileCreationMode)" /> is stored.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetObbDirs">
      <MemberSignature Language="F#" Value="override this.GetObbDirs : unit -&gt; Java.IO.File[]" Usage="contextWrapper.GetObbDirs " />
      <MemberSignature Language="C#" Value="public override Java.IO.File[]? GetObbDirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.IO.File[] GetObbDirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetObbDirs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getObbDirs", "()[Ljava/io/File;", "GetGetObbDirsHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns absolute paths to application-specific directories on all
 external storage devices where the application's OBB files (if there are
 any) can be found.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSharedPreferences">
      <MemberSignature Language="F#" Value="override this.GetSharedPreferences : string * Android.Content.FileCreationMode -&gt; Android.Content.ISharedPreferences" Usage="contextWrapper.GetSharedPreferences (name, mode)" />
      <MemberSignature Language="C#" Value="public override Android.Content.ISharedPreferences? GetSharedPreferences (string? name, Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.ISharedPreferences GetSharedPreferences(string name, valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetSharedPreferences(System.String,Android.Content.FileCreationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSharedPreferences", "(Ljava/lang/String;I)Landroid/content/SharedPreferences;", "GetGetSharedPreferences_Ljava_lang_String_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ISharedPreferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">Desired preferences file. If a preferences file by this name
 does not exist, it will be created when you retrieve an
 editor (SharedPreferences.edit()) and then commit changes (Editor.commit()).</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
 default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" />
 and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.</param>
        <summary>Retrieve and hold the contents of the preferences file 'name', returning
 a SharedPreferences through which you can retrieve and modify its
 values.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemService">
      <MemberSignature Language="F#" Value="override this.GetSystemService : string -&gt; Java.Lang.Object" Usage="contextWrapper.GetSystemService name" />
      <MemberSignature Language="C#" Value="public override Java.Lang.Object? GetSystemService (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object GetSystemService(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetSystemService(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemService", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetSystemService_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "PowerService", "WindowService", "LayoutInflaterService", "AccountService", "ActivityService", "AlarmService", "NotificationService", "AccessibilityService", "CaptioningService", "KeyguardService", "LocationService", "SearchService", "SensorService", "StorageService", "StorageStatsService", "WallpaperService", "VibratorManagerService", "VibratorService", "ConnectivityService", "IpsecService", "VpnManagementService", "NetworkStatsService", "WifiService", "WifiAwareService", "WifiP2pService", "WifiRttRangingService", "NsdService", "AudioService", "FingerprintService", "BiometricService", "MediaRouterService", "TelephonyService", "TelephonySubscriptionService", "CarrierConfigService", "EuiccService", "TelecomService", "ClipboardService", "InputMethodService", "TextServicesManagerService", "TextClassificationService", "AppwidgetService", "DropboxService", "DevicePolicyService", "UiModeService", "DownloadService", "NfcService", "BluetoothService", "UsbService", "LauncherAppsService", "InputService", "DisplayService", "UserService", "RestrictionsService", "AppOpsService", "RoleService", "CameraService", "PrintService", "ConsumerIrService", "TvInputService", "UsageStatsService", "MediaSessionService", "MediaCommunicationService", "BatteryService", "JobSchedulerService", "MediaProjectionService", "MidiService", "HardwarePropertiesService", "ShortcutService", "SystemHealthService", "CompanionDeviceService", "CrossProfileAppsService", "MediaMetricsService" }, Type="Android.Content.Context")]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the desired service.</param>
        <summary>Return the handle to a system-level service by name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemServiceName">
      <MemberSignature Language="F#" Value="override this.GetSystemServiceName : Java.Lang.Class -&gt; string" Usage="contextWrapper.GetSystemServiceName serviceClass" />
      <MemberSignature Language="C#" Value="public override string? GetSystemServiceName (Java.Lang.Class? serviceClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetSystemServiceName(class Java.Lang.Class serviceClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GetSystemServiceName(Java.Lang.Class)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemServiceName", "(Ljava/lang/Class;)Ljava/lang/String;", "GetGetSystemServiceName_Ljava_lang_Class_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="serviceClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantUriPermission">
      <MemberSignature Language="F#" Value="override this.GrantUriPermission : string * Android.Net.Uri * Android.Content.ActivityFlags -&gt; unit" Usage="contextWrapper.GrantUriPermission (toPackage, uri, modeFlags)" />
      <MemberSignature Language="C#" Value="public override void GrantUriPermission (string? toPackage, Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GrantUriPermission(string toPackage, class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.GrantUriPermission(System.String,Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("grantUriPermission", "(Ljava/lang/String;Landroid/net/Uri;I)V", "GetGrantUriPermission_Ljava_lang_String_Landroid_net_Uri_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toPackage" Type="System.String" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toPackage">The package you would like to allow to access the Uri.</param>
        <param name="uri">The Uri you would like to grant access to.</param>
        <param name="modeFlags">The desired access modes.  Any combination of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />,
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Intent FLAG_GRANT_PERSISTABLE_URI_PERMISSION';scope=Xamarin" title="Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION">Android.Content.Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION</a></format>, or
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Intent FLAG_GRANT_PREFIX_URI_PERMISSION';scope=Xamarin" title="Android.Content.Intent.FLAG_GRANT_PREFIX_URI_PERMISSION">Android.Content.Intent.FLAG_GRANT_PREFIX_URI_PERMISSION</a></format>.</param>
        <summary>Grant permission to access a specific Uri to another package, regardless
 of whether that package has general permission to access the Uri's
 content provider.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDeviceProtectedStorage">
      <MemberSignature Language="F#" Value="member this.IsDeviceProtectedStorage : bool" Usage="Android.Content.ContextWrapper.IsDeviceProtectedStorage" />
      <MemberSignature Language="C#" Value="public override bool IsDeviceProtectedStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeviceProtectedStorage" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.IsDeviceProtectedStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDeviceProtectedStorage", "()Z", "GetIsDeviceProtectedStorageHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Content.ContextWrapper.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainLooper">
      <MemberSignature Language="F#" Value="member this.MainLooper : Android.OS.Looper" Usage="Android.Content.ContextWrapper.MainLooper" />
      <MemberSignature Language="C#" Value="public override Android.OS.Looper? MainLooper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Looper MainLooper" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.MainLooper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMainLooper", "()Landroid/os/Looper;", "GetGetMainLooperHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Looper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Looper for the main thread of the current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MoveDatabaseFrom">
      <MemberSignature Language="F#" Value="override this.MoveDatabaseFrom : Android.Content.Context * string -&gt; bool" Usage="contextWrapper.MoveDatabaseFrom (sourceContext, name)" />
      <MemberSignature Language="C#" Value="public override bool MoveDatabaseFrom (Android.Content.Context? sourceContext, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveDatabaseFrom(class Android.Content.Context sourceContext, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.MoveDatabaseFrom(Android.Content.Context,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("moveDatabaseFrom", "(Landroid/content/Context;Ljava/lang/String;)Z", "GetMoveDatabaseFrom_Landroid_content_Context_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceContext" Type="Android.Content.Context" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceContext">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveSharedPreferencesFrom">
      <MemberSignature Language="F#" Value="override this.MoveSharedPreferencesFrom : Android.Content.Context * string -&gt; bool" Usage="contextWrapper.MoveSharedPreferencesFrom (sourceContext, name)" />
      <MemberSignature Language="C#" Value="public override bool MoveSharedPreferencesFrom (Android.Content.Context? sourceContext, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveSharedPreferencesFrom(class Android.Content.Context sourceContext, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.MoveSharedPreferencesFrom(Android.Content.Context,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("moveSharedPreferencesFrom", "(Landroid/content/Context;Ljava/lang/String;)Z", "GetMoveSharedPreferencesFrom_Landroid_content_Context_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceContext" Type="Android.Content.Context" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceContext">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoBackupFilesDir">
      <MemberSignature Language="F#" Value="member this.NoBackupFilesDir : Java.IO.File" Usage="Android.Content.ContextWrapper.NoBackupFilesDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? NoBackupFilesDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File NoBackupFilesDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.NoBackupFilesDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNoBackupFilesDir", "()Ljava/io/File;", "GetGetNoBackupFilesDirHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path to the directory on the filesystem similar to
 <see cref="P:Android.Content.Context.FilesDir" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObbDir">
      <MemberSignature Language="F#" Value="member this.ObbDir : Java.IO.File" Usage="Android.Content.ContextWrapper.ObbDir" />
      <MemberSignature Language="C#" Value="public override Java.IO.File? ObbDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File ObbDir" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ObbDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getObbDir", "()Ljava/io/File;", "GetGetObbDirHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the primary external storage directory where this application's OBB
 files (if there are any) can be found.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OpenFileInput">
      <MemberSignature Language="F#" Value="override this.OpenFileInput : string -&gt; System.IO.Stream" Usage="contextWrapper.OpenFileInput name" />
      <MemberSignature Language="C#" Value="public override System.IO.Stream? OpenFileInput (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream OpenFileInput(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.OpenFileInput(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openFileInput", "(Ljava/lang/String;)Ljava/io/FileInputStream;", "GetOpenFileInput_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the file to open; can not contain path
             separators.</param>
        <summary>Open a private file associated with this Context's application package
 for reading.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OpenFileOutput">
      <MemberSignature Language="F#" Value="override this.OpenFileOutput : string * Android.Content.FileCreationMode -&gt; System.IO.Stream" Usage="contextWrapper.OpenFileOutput (name, mode)" />
      <MemberSignature Language="C#" Value="public override System.IO.Stream? OpenFileOutput (string? name, Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream OpenFileOutput(string name, valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.OpenFileOutput(System.String,Android.Content.FileCreationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openFileOutput", "(Ljava/lang/String;I)Ljava/io/FileOutputStream;", "GetOpenFileOutput_Ljava_lang_String_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the file to open; can not contain path
             separators.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
 default operation, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context MODE_APPEND';scope=Xamarin" title="Android.Content.Context.MODE_APPEND">Android.Content.Context.MODE_APPEND</a></format> to append to an existing file,
 <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" /> and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control
 permissions.</param>
        <summary>Open a private file associated with this Context's application package
 for writing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="F#" Value="override this.OpenOrCreateDatabase : string * Android.Content.FileCreationMode * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="contextWrapper.OpenOrCreateDatabase (name, mode, factory)" />
      <MemberSignature Language="C#" Value="public override Android.Database.Sqlite.SQLiteDatabase? OpenOrCreateDatabase (string? name, Android.Content.FileCreationMode mode, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(string name, valuetype Android.Content.FileCreationMode mode, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.OpenOrCreateDatabase(System.String,Android.Content.FileCreationMode,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "GetOpenOrCreateDatabase_Ljava_lang_String_ILandroid_database_sqlite_SQLiteDatabase_CursorFactory_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
      </Parameters>
      <Docs>
        <param name="name">The name (unique in the application package) of the database.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
     default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" />
     and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.
     Use <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context MODE_ENABLE_WRITE_AHEAD_LOGGING';scope=Xamarin" title="Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING">Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING</a></format> to enable write-ahead logging by default.</param>
        <param name="factory">An optional factory class that is called to instantiate a
     cursor when query is called.</param>
        <summary>Open a new private SQLiteDatabase associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreateDatabase">
      <MemberSignature Language="F#" Value="override this.OpenOrCreateDatabase : string * Android.Content.FileCreationMode * Android.Database.Sqlite.SQLiteDatabase.ICursorFactory * Android.Database.IDatabaseErrorHandler -&gt; Android.Database.Sqlite.SQLiteDatabase" Usage="contextWrapper.OpenOrCreateDatabase (name, mode, factory, errorHandler)" />
      <MemberSignature Language="C#" Value="public override Android.Database.Sqlite.SQLiteDatabase? OpenOrCreateDatabase (string? name, Android.Content.FileCreationMode mode, Android.Database.Sqlite.SQLiteDatabase.ICursorFactory? factory, Android.Database.IDatabaseErrorHandler? errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Database.Sqlite.SQLiteDatabase OpenOrCreateDatabase(string name, valuetype Android.Content.FileCreationMode mode, class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory, class Android.Database.IDatabaseErrorHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.OpenOrCreateDatabase(System.String,Android.Content.FileCreationMode,Android.Database.Sqlite.SQLiteDatabase.ICursorFactory,Android.Database.IDatabaseErrorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openOrCreateDatabase", "(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "GetOpenOrCreateDatabase_Ljava_lang_String_ILandroid_database_sqlite_SQLiteDatabase_CursorFactory_Landroid_database_DatabaseErrorHandler_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.Sqlite.SQLiteDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
        <Parameter Name="errorHandler" Type="Android.Database.IDatabaseErrorHandler" />
      </Parameters>
      <Docs>
        <param name="name">The name (unique in the application package) of the database.</param>
        <param name="mode">Operating mode.  Use 0 or <see cref="F:Android.Content.FileCreationMode.Private" tool="ReplaceLinkValue" /> for the
     default operation, <see cref="F:Android.Content.FileCreationMode.WorldReadable" tool="ReplaceLinkValue" />
     and <see cref="F:Android.Content.FileCreationMode.WorldWriteable" tool="ReplaceLinkValue" /> to control permissions.
     Use <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content Context MODE_ENABLE_WRITE_AHEAD_LOGGING';scope=Xamarin" title="Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING">Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING</a></format> to enable write-ahead logging by default.</param>
        <param name="factory">An optional factory class that is called to instantiate a
     cursor when query is called.</param>
        <param name="errorHandler">the <see cref="T:Android.Database.IDatabaseErrorHandler" /> to be used when sqlite reports database
 corruption. if null, <see cref="T:Android.Database.DefaultDatabaseErrorHandler" /> is assumed.</param>
        <summary>Open a new private SQLiteDatabase associated with this Context's
 application package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PackageCodePath">
      <MemberSignature Language="F#" Value="member this.PackageCodePath : string" Usage="Android.Content.ContextWrapper.PackageCodePath" />
      <MemberSignature Language="C#" Value="public override string? PackageCodePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageCodePath" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.PackageCodePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageCodePath", "()Ljava/lang/String;", "GetGetPackageCodePathHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full path to this context's primary Android package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackageManager">
      <MemberSignature Language="F#" Value="member this.PackageManager : Android.Content.PM.PackageManager" Usage="Android.Content.ContextWrapper.PackageManager" />
      <MemberSignature Language="C#" Value="public override Android.Content.PM.PackageManager? PackageManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.PackageManager PackageManager" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.PackageManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageManager", "()Landroid/content/pm/PackageManager;", "GetGetPackageManagerHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return PackageManager instance to find global package information.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackageName">
      <MemberSignature Language="F#" Value="member this.PackageName : string" Usage="Android.Content.ContextWrapper.PackageName" />
      <MemberSignature Language="C#" Value="public override string? PackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageName" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.PackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the name of this application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PackageResourcePath">
      <MemberSignature Language="F#" Value="member this.PackageResourcePath : string" Usage="Android.Content.ContextWrapper.PackageResourcePath" />
      <MemberSignature Language="C#" Value="public override string? PackageResourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageResourcePath" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.PackageResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageResourcePath", "()Ljava/lang/String;", "GetGetPackageResourcePathHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full path to this context's primary Android package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeekWallpaper">
      <MemberSignature Language="F#" Value="override this.PeekWallpaper : unit -&gt; Android.Graphics.Drawables.Drawable" Usage="contextWrapper.PeekWallpaper " />
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? PeekWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable PeekWallpaper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.PeekWallpaper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("peekWallpaper", "()Landroid/graphics/drawable/Drawable;", "GetPeekWallpaperHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="F#" Value="override this.RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter -&gt; Android.Content.Intent" Usage="contextWrapper.RegisterReceiver (receiver, filter)" />
      <MemberSignature Language="C#" Value="public override Android.Content.Intent? RegisterReceiver (Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to handle the broadcast.</param>
        <param name="filter">Selects the Intent broadcasts to be received.</param>
        <summary>Register a BroadcastReceiver to be run in the main activity thread.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="F#" Value="override this.RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter * Android.Content.ActivityFlags -&gt; Android.Content.Intent" Usage="contextWrapper.RegisterReceiver (receiver, filter, flags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.Intent? RegisterReceiver (Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, Android.Content.ActivityFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter, valuetype Android.Content.ActivityFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;I)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_IHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="flags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="receiver">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="F#" Value="override this.RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter * string * Android.OS.Handler -&gt; Android.Content.Intent" Usage="contextWrapper.RegisterReceiver (receiver, filter, broadcastPermission, scheduler)" />
      <MemberSignature Language="C#" Value="public override Android.Content.Intent? RegisterReceiver (Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, string? broadcastPermission, Android.OS.Handler? scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter, string broadcastPermission, class Android.OS.Handler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter,System.String,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Ljava_lang_String_Landroid_os_Handler_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="broadcastPermission" Type="System.String" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to handle the broadcast.</param>
        <param name="filter">Selects the Intent broadcasts to be received.</param>
        <param name="broadcastPermission">String naming a permissions that a
      broadcaster must hold in order to send an Intent to you.  If null,
      no permission is required.</param>
        <param name="scheduler">Handler identifying the thread that will receive
      the Intent.  If null, the main thread of the process will be used.</param>
        <summary>Register to receive intent broadcasts, to run in the context of
 <format type="text/html"><var>scheduler</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="F#" Value="override this.RegisterReceiver : Android.Content.BroadcastReceiver * Android.Content.IntentFilter * string * Android.OS.Handler * Android.Content.ActivityFlags -&gt; Android.Content.Intent" Usage="contextWrapper.RegisterReceiver (receiver, filter, broadcastPermission, scheduler, flags)" />
      <MemberSignature Language="C#" Value="public override Android.Content.Intent? RegisterReceiver (Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, string? broadcastPermission, Android.OS.Handler? scheduler, Android.Content.ActivityFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Intent RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter, string broadcastPermission, class Android.OS.Handler scheduler, valuetype Android.Content.ActivityFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RegisterReceiver(Android.Content.BroadcastReceiver,Android.Content.IntentFilter,System.String,Android.OS.Handler,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Ljava_lang_String_Landroid_os_Handler_IHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="broadcastPermission" Type="System.String" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="flags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="receiver">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="broadcastPermission">To be added.</param>
        <param name="scheduler">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStickyBroadcast">
      <MemberSignature Language="F#" Value="override this.RemoveStickyBroadcast : Android.Content.Intent -&gt; unit" Usage="contextWrapper.RemoveStickyBroadcast intent" />
      <MemberSignature Language="C#" Value="public override void RemoveStickyBroadcast (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveStickyBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RemoveStickyBroadcast(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeStickyBroadcast", "(Landroid/content/Intent;)V", "GetRemoveStickyBroadcast_Landroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was previously broadcast.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveStickyBroadcastAsUser">
      <MemberSignature Language="F#" Value="override this.RemoveStickyBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="contextWrapper.RemoveStickyBroadcastAsUser (intent, user)" />
      <MemberSignature Language="C#" Value="public override void RemoveStickyBroadcastAsUser (Android.Content.Intent? intent, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveStickyBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RemoveStickyBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeStickyBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetRemoveStickyBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was previously broadcast.</param>
        <param name="user">UserHandle to remove the sticky broadcast from.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="F#" Value="member this.Resources : Android.Content.Res.Resources" Usage="Android.Content.ContextWrapper.Resources" />
      <MemberSignature Language="C#" Value="public override Android.Content.Res.Resources? Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources Resources" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a Resources instance for your application's package.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RevokeUriPermission">
      <MemberSignature Language="F#" Value="override this.RevokeUriPermission : Android.Net.Uri * Android.Content.ActivityFlags -&gt; unit" Usage="contextWrapper.RevokeUriPermission (uri, modeFlags)" />
      <MemberSignature Language="C#" Value="public override void RevokeUriPermission (Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RevokeUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RevokeUriPermission(Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("revokeUriPermission", "(Landroid/net/Uri;I)V", "GetRevokeUriPermission_Landroid_net_Uri_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">The Uri you would like to revoke access to.</param>
        <param name="modeFlags">The desired access modes.  Any combination of
 <see cref="F:Android.Content.ActivityFlags.GrantReadUriPermission" tool="ReplaceLinkValue" /> or
 <see cref="F:Android.Content.ActivityFlags.GrantWriteUriPermission" tool="ReplaceLinkValue" />.</param>
        <summary>Remove all permissions to access a particular content provider Uri
 that were previously added with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content Context GrantUriPermission(System String,Android Net Uri,Android Net Uri)';scope=Xamarin" title="M:Android.Content.Context.GrantUriPermission(System.String,Android.Net.Uri,Android.Net.Uri)">M:Android.Content.Context.GrantUriPermission(System.String,Android.Net.Uri,Android.Net.Uri)</a></format>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RevokeUriPermission">
      <MemberSignature Language="F#" Value="override this.RevokeUriPermission : string * Android.Net.Uri * Android.Content.ActivityFlags -&gt; unit" Usage="contextWrapper.RevokeUriPermission (targetPackage, uri, modeFlags)" />
      <MemberSignature Language="C#" Value="public override void RevokeUriPermission (string? targetPackage, Android.Net.Uri? uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RevokeUriPermission(string targetPackage, class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.RevokeUriPermission(System.String,Android.Net.Uri,Android.Content.ActivityFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("revokeUriPermission", "(Ljava/lang/String;Landroid/net/Uri;I)V", "GetRevokeUriPermission_Ljava_lang_String_Landroid_net_Uri_IHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetPackage" Type="System.String" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetPackage">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="modeFlags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendBroadcast">
      <MemberSignature Language="F#" Value="override this.SendBroadcast : Android.Content.Intent -&gt; unit" Usage="contextWrapper.SendBroadcast intent" />
      <MemberSignature Language="C#" Value="public override void SendBroadcast (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendBroadcast(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendBroadcast", "(Landroid/content/Intent;)V", "GetSendBroadcast_Landroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <summary>Broadcast the given intent to all interested BroadcastReceivers.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcast">
      <MemberSignature Language="F#" Value="override this.SendBroadcast : Android.Content.Intent * string -&gt; unit" Usage="contextWrapper.SendBroadcast (intent, receiverPermission)" />
      <MemberSignature Language="C#" Value="public override void SendBroadcast (Android.Content.Intent? intent, string? receiverPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendBroadcast(class Android.Content.Intent intent, string receiverPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendBroadcast(Android.Content.Intent,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendBroadcast", "(Landroid/content/Intent;Ljava/lang/String;)V", "GetSendBroadcast_Landroid_content_Intent_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receiverPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="receiverPermission">(optional) String naming a permission that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <summary>Broadcast the given intent to all interested BroadcastReceivers, allowing
 an optional required permission to be enforced.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcastAsUser">
      <MemberSignature Language="F#" Value="override this.SendBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="contextWrapper.SendBroadcastAsUser (intent, user)" />
      <MemberSignature Language="C#" Value="public override void SendBroadcastAsUser (Android.Content.Intent? intent, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetSendBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to broadcast</param>
        <param name="user">UserHandle to send the intent to.</param>
        <summary>Version of <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" /> that allows you to specify the
 user the broadcast will be sent to.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcastAsUser">
      <MemberSignature Language="F#" Value="override this.SendBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle * string -&gt; unit" Usage="contextWrapper.SendBroadcastAsUser (intent, user, receiverPermission)" />
      <MemberSignature Language="C#" Value="public override void SendBroadcastAsUser (Android.Content.Intent? intent, Android.OS.UserHandle? user, string? receiverPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user, string receiverPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V", "GetSendBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="receiverPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <param name="receiverPermission">(optional) String naming a permission that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <summary>Version of <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent,System.String)" /> that allows you to specify the
 user the broadcast will be sent to.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcast">
      <MemberSignature Language="F#" Value="override this.SendOrderedBroadcast : Android.Content.Intent * string -&gt; unit" Usage="contextWrapper.SendOrderedBroadcast (intent, receiverPermission)" />
      <MemberSignature Language="C#" Value="public override void SendOrderedBroadcast (Android.Content.Intent? intent, string? receiverPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendOrderedBroadcast(class Android.Content.Intent intent, string receiverPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendOrderedBroadcast(Android.Content.Intent,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendOrderedBroadcast", "(Landroid/content/Intent;Ljava/lang/String;)V", "GetSendOrderedBroadcast_Landroid_content_Intent_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receiverPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="receiverPermission">(optional) String naming a permissions that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcast">
      <MemberSignature Language="F#" Value="override this.SendOrderedBroadcast : Android.Content.Intent * string * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.SendOrderedBroadcast (intent, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberSignature Language="C#" Value="public override void SendOrderedBroadcast (Android.Content.Intent? intent, string? receiverPermission, Android.Content.BroadcastReceiver? resultReceiver, Android.OS.Handler? scheduler, Android.App.Result initialCode, string? initialData, Android.OS.Bundle? initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendOrderedBroadcast(class Android.Content.Intent intent, string receiverPermission, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendOrderedBroadcast(Android.Content.Intent,System.String,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendOrderedBroadcast", "(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendOrderedBroadcast_Landroid_content_Intent_Ljava_lang_String_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receiverPermission" Type="System.String" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="receiverPermission">String naming a permissions that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>Version of <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" /> that allows you to
 receive data back from the broadcast.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcast">
      <MemberSignature Language="C#" Value="public virtual void SendOrderedBroadcast (Android.Content.Intent intent, int initialCode, string? receiverPermission, string? receiverAppOp, Android.Content.BroadcastReceiver? resultReceiver, Android.OS.Handler? scheduler, string? initialData, Android.OS.Bundle? initialExtras, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendOrderedBroadcast(class Android.Content.Intent intent, int32 initialCode, string receiverPermission, string receiverAppOp, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, string initialData, class Android.OS.Bundle initialExtras, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendOrderedBroadcast(Android.Content.Intent,System.Int32,System.String,System.String,Android.Content.BroadcastReceiver,Android.OS.Handler,System.String,Android.OS.Bundle,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendOrderedBroadcast", "(Landroid/content/Intent;ILjava/lang/String;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;Ljava/lang/String;Landroid/os/Bundle;Landroid/os/Bundle;)V", "GetSendOrderedBroadcast_Landroid_content_Intent_ILjava_lang_String_Ljava_lang_String_Landroid_content_BroadcastReceiver_Landroid_os_Handler_Ljava_lang_String_Landroid_os_Bundle_Landroid_os_Bundle_Handler", ApiSince=30)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="initialCode" Type="System.Int32" />
        <Parameter Name="receiverPermission" Type="System.String" />
        <Parameter Name="receiverAppOp" Type="System.String" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <param name="initialCode">To be added.</param>
        <param name="receiverPermission">To be added.</param>
        <param name="receiverAppOp">To be added.</param>
        <param name="resultReceiver">To be added.</param>
        <param name="scheduler">To be added.</param>
        <param name="initialData">To be added.</param>
        <param name="initialExtras">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendOrderedBroadcastAsUser">
      <MemberSignature Language="F#" Value="override this.SendOrderedBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle * string * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.SendOrderedBroadcastAsUser (intent, user, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberSignature Language="C#" Value="public override void SendOrderedBroadcastAsUser (Android.Content.Intent? intent, Android.OS.UserHandle? user, string? receiverPermission, Android.Content.BroadcastReceiver? resultReceiver, Android.OS.Handler? scheduler, Android.App.Result initialCode, string? initialData, Android.OS.Bundle? initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendOrderedBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user, string receiverPermission, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendOrderedBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle,System.String,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendOrderedBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendOrderedBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Ljava_lang_String_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="receiverPermission" Type="System.String" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <param name="receiverPermission">String naming a permissions that
               a receiver must hold in order to receive your broadcast.
               If null, no permission is required.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyBroadcast">
      <MemberSignature Language="F#" Value="override this.SendStickyBroadcast : Android.Content.Intent -&gt; unit" Usage="contextWrapper.SendStickyBroadcast intent" />
      <MemberSignature Language="C#" Value="public override void SendStickyBroadcast (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendStickyBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendStickyBroadcast(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendStickyBroadcast", "(Landroid/content/Intent;)V", "GetSendStickyBroadcast_Landroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
            Intent will receive the broadcast, and the Intent will be held to
            be re-broadcast to future receivers.</param>
        <param name="options">(optional) Additional sending options, generated from a
            <c>android.app.BroadcastOptions</c>.</param>
        <summary>Perform a <c>#sendBroadcast(Intent)</c> that is "sticky," meaning the
            Intent you are sending stays around after the broadcast is complete,
            so that others can quickly retrieve that data through the return
            value of <c>#registerReceiver(BroadcastReceiver, IntentFilter)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ContextWrapper#sendStickyBroadcast(android.content.Intent,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyBroadcastAsUser">
      <MemberSignature Language="F#" Value="override this.SendStickyBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="contextWrapper.SendStickyBroadcastAsUser (intent, user)" />
      <MemberSignature Language="C#" Value="public override void SendStickyBroadcastAsUser (Android.Content.Intent? intent, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendStickyBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendStickyBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendStickyBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetSendStickyBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
 Intent will receive the broadcast, and the Intent will be held to
 be re-broadcast to future receivers.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyOrderedBroadcast">
      <MemberSignature Language="F#" Value="override this.SendStickyOrderedBroadcast : Android.Content.Intent * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.SendStickyOrderedBroadcast (intent, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberSignature Language="C#" Value="public override void SendStickyOrderedBroadcast (Android.Content.Intent? intent, Android.Content.BroadcastReceiver? resultReceiver, Android.OS.Handler? scheduler, Android.App.Result initialCode, string? initialData, Android.OS.Bundle? initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendStickyOrderedBroadcast(class Android.Content.Intent intent, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendStickyOrderedBroadcast(Android.Content.Intent,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendStickyOrderedBroadcast", "(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendStickyOrderedBroadcast_Landroid_content_Intent_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SendStickyOrderedBroadcastAsUser">
      <MemberSignature Language="F#" Value="override this.SendStickyOrderedBroadcastAsUser : Android.Content.Intent * Android.OS.UserHandle * Android.Content.BroadcastReceiver * Android.OS.Handler * Android.App.Result * string * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.SendStickyOrderedBroadcastAsUser (intent, user, resultReceiver, scheduler, initialCode, initialData, initialExtras)" />
      <MemberSignature Language="C#" Value="public override void SendStickyOrderedBroadcastAsUser (Android.Content.Intent? intent, Android.OS.UserHandle? user, Android.Content.BroadcastReceiver? resultReceiver, Android.OS.Handler? scheduler, Android.App.Result initialCode, string? initialData, Android.OS.Bundle? initialExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SendStickyOrderedBroadcastAsUser(class Android.Content.Intent intent, class Android.OS.UserHandle user, class Android.Content.BroadcastReceiver resultReceiver, class Android.OS.Handler scheduler, valuetype Android.App.Result initialCode, string initialData, class Android.OS.Bundle initialExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SendStickyOrderedBroadcastAsUser(Android.Content.Intent,Android.OS.UserHandle,Android.Content.BroadcastReceiver,Android.OS.Handler,Android.App.Result,System.String,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendStickyOrderedBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "GetSendStickyOrderedBroadcastAsUser_Landroid_content_Intent_Landroid_os_UserHandle_Landroid_content_BroadcastReceiver_Landroid_os_Handler_ILjava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="resultReceiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="scheduler" Type="Android.OS.Handler" />
        <Parameter Name="initialCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="initialData" Type="System.String" />
        <Parameter Name="initialExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
               Intent will receive the broadcast.</param>
        <param name="user">UserHandle to send the intent to.</param>
        <param name="resultReceiver">Your own BroadcastReceiver to treat as the final
                       receiver of the broadcast.</param>
        <param name="scheduler">A custom Handler with which to schedule the
                  resultReceiver callback; if null it will be
                  scheduled in the Context's main thread.</param>
        <param name="initialCode">An initial value for the result code.  Often
                    Activity.RESULT_OK.</param>
        <param name="initialData">An initial value for the result data.  Often
                    null.</param>
        <param name="initialExtras">An initial value for the result extras.  Often
                      null.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetTheme">
      <MemberSignature Language="F#" Value="override this.SetTheme : int -&gt; unit" Usage="contextWrapper.SetTheme resid" />
      <MemberSignature Language="C#" Value="public override void SetTheme (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetTheme(int32 resid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SetTheme(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTheme", "(I)V", "GetSetTheme_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The style resource describing the theme.
</param>
        <summary>Set the base theme for this context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWallpaper">
      <MemberSignature Language="F#" Value="override this.SetWallpaper : Android.Graphics.Bitmap -&gt; unit" Usage="contextWrapper.SetWallpaper bitmap" />
      <MemberSignature Language="C#" Value="public override void SetWallpaper (Android.Graphics.Bitmap? bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetWallpaper(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SetWallpaper(Android.Graphics.Bitmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWallpaper", "(Landroid/graphics/Bitmap;)V", "GetSetWallpaper_Landroid_graphics_Bitmap_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetWallpaper">
      <MemberSignature Language="F#" Value="override this.SetWallpaper : System.IO.Stream -&gt; unit" Usage="contextWrapper.SetWallpaper data" />
      <MemberSignature Language="C#" Value="public override void SetWallpaper (System.IO.Stream? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetWallpaper(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.SetWallpaper(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWallpaper", "(Ljava/io/InputStream;)V", "GetSetWallpaper_Ljava_io_InputStream_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="F#" Value="override this.StartActivities : Android.Content.Intent[] -&gt; unit" Usage="contextWrapper.StartActivities intents" />
      <MemberSignature Language="C#" Value="public override void StartActivities (Android.Content.Intent[]? intents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartActivities(class Android.Content.Intent[] intents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartActivities(Android.Content.Intent[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivities", "([Landroid/content/Intent;)V", "GetStartActivities_arrayLandroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intents" Type="Android.Content.Intent[]" />
      </Parameters>
      <Docs>
        <param name="intents">An array of Intents to be started.</param>
        <summary>Same as <see cref="M:Android.Content.Context.StartActivities(Android.Content.Intent[],Android.OS.Bundle)" /> with no options
 specified.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="F#" Value="override this.StartActivities : Android.Content.Intent[] * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.StartActivities (intents, options)" />
      <MemberSignature Language="C#" Value="public override void StartActivities (Android.Content.Intent[]? intents, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartActivities(class Android.Content.Intent[] intents, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartActivities(Android.Content.Intent[],Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivities", "([Landroid/content/Intent;Landroid/os/Bundle;)V", "GetStartActivities_arrayLandroid_content_Intent_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intents" Type="Android.Content.Intent[]" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intents">An array of Intents to be started.</param>
        <param name="options">Additional options for how the Activity should be started.
 See <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /> for more details.</param>
        <summary>Launch multiple new activities.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="F#" Value="override this.StartActivity : Android.Content.Intent -&gt; unit" Usage="contextWrapper.StartActivity intent" />
      <MemberSignature Language="C#" Value="public override void StartActivity (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartActivity(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartActivity(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivity", "(Landroid/content/Intent;)V", "GetStartActivity_Landroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The description of the activity to start.</param>
        <summary>Same as <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /> with no options
 specified.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="F#" Value="override this.StartActivity : Android.Content.Intent * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.StartActivity (intent, options)" />
      <MemberSignature Language="C#" Value="public override void StartActivity (Android.Content.Intent? intent, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartActivity(class Android.Content.Intent intent, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartActivity(Android.Content.Intent,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)V", "GetStartActivity_Landroid_content_Intent_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The description of the activity to start.</param>
        <param name="options">Additional options for how the Activity should be started.
 May be null if there are no options.  See <see cref="T:Android.App.ActivityOptions" />
 for how to build the Bundle supplied here; there are no supported definitions
 for building it manually.</param>
        <summary>Launch a new activity.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartForegroundService">
      <MemberSignature Language="F#" Value="override this.StartForegroundService : Android.Content.Intent -&gt; Android.Content.ComponentName" Usage="contextWrapper.StartForegroundService service" />
      <MemberSignature Language="C#" Value="public override Android.Content.ComponentName? StartForegroundService (Android.Content.Intent? service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.ComponentName StartForegroundService(class Android.Content.Intent service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartForegroundService(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startForegroundService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", "GetStartForegroundService_Landroid_content_Intent_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInstrumentation">
      <MemberSignature Language="F#" Value="override this.StartInstrumentation : Android.Content.ComponentName * string * Android.OS.Bundle -&gt; bool" Usage="contextWrapper.StartInstrumentation (className, profileFile, arguments)" />
      <MemberSignature Language="C#" Value="public override bool StartInstrumentation (Android.Content.ComponentName? className, string? profileFile, Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool StartInstrumentation(class Android.Content.ComponentName className, string profileFile, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartInstrumentation(Android.Content.ComponentName,System.String,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startInstrumentation", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z", "GetStartInstrumentation_Landroid_content_ComponentName_Ljava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="profileFile" Type="System.String" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="className">Name of the Instrumentation component to be run.</param>
        <param name="profileFile">Optional path to write profiling data as the
 instrumentation runs, or null for no profiling.</param>
        <param name="arguments">Additional optional arguments to pass to the
 instrumentation, or null.</param>
        <summary>Start executing an <see cref="T:Android.App.Instrumentation" /> class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSender">
      <MemberSignature Language="F#" Value="override this.StartIntentSender : Android.Content.IntentSender * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int -&gt; unit" Usage="contextWrapper.StartIntentSender (intent, fillInIntent, flagsMask, flagsValues, extraFlags)" />
      <MemberSignature Language="C#" Value="public override void StartIntentSender (Android.Content.IntentSender? intent, Android.Content.Intent? fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartIntentSender(class Android.Content.IntentSender intent, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartIntentSender(Android.Content.IntentSender,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startIntentSender", "(Landroid/content/IntentSender;Landroid/content/Intent;III)V", "GetStartIntentSender_Landroid_content_IntentSender_Landroid_content_Intent_IIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">The IntentSender to launch.</param>
        <param name="fillInIntent">If non-null, this will be provided as the
 intent parameter to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content IntentSender SendIntent(Android Content Context,Android App Result,Android App Result,Android App Result,Android App Result)';scope=Xamarin" title="M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)">M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)</a></format>.</param>
        <param name="flagsMask">Intent flags in the original IntentSender that you
 would like to change.</param>
        <param name="flagsValues">Desired values for any bits set in
 <format type="text/html"><var>flagsMask</var></format></param>
        <param name="extraFlags">Always set to 0.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSender">
      <MemberSignature Language="F#" Value="override this.StartIntentSender : Android.Content.IntentSender * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int * Android.OS.Bundle -&gt; unit" Usage="contextWrapper.StartIntentSender (intent, fillInIntent, flagsMask, flagsValues, extraFlags, options)" />
      <MemberSignature Language="C#" Value="public override void StartIntentSender (Android.Content.IntentSender? intent, Android.Content.Intent? fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartIntentSender(class Android.Content.IntentSender intent, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartIntentSender(Android.Content.IntentSender,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startIntentSender", "(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V", "GetStartIntentSender_Landroid_content_IntentSender_Landroid_content_Intent_IIILandroid_os_Bundle_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The IntentSender to launch.</param>
        <param name="fillInIntent">If non-null, this will be provided as the
 intent parameter to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Content IntentSender SendIntent(Android Content Context,Android App Result,Android App Result,Android App Result,Android App Result)';scope=Xamarin" title="M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)">M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.App.Result,Android.App.Result,Android.App.Result)</a></format>.</param>
        <param name="flagsMask">Intent flags in the original IntentSender that you
 would like to change.</param>
        <param name="flagsValues">Desired values for any bits set in
 <format type="text/html"><var>flagsMask</var></format></param>
        <param name="extraFlags">Always set to 0.</param>
        <param name="options">Additional options for how the Activity should be started.
 See <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /> for more details.  If options
 have also been supplied by the IntentSender, options given here will
 override any that conflict with those given by the IntentSender.</param>
        <summary>Like <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" />, but taking a IntentSender
 to start.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
      </Docs>
    </Member>
    <Member MemberName="StartService">
      <MemberSignature Language="F#" Value="override this.StartService : Android.Content.Intent -&gt; Android.Content.ComponentName" Usage="contextWrapper.StartService service" />
      <MemberSignature Language="C#" Value="public override Android.Content.ComponentName? StartService (Android.Content.Intent? service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.ComponentName StartService(class Android.Content.Intent service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StartService(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", "GetStartService_Landroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="service">Identifies the service to be started.  The Intent must be either
      fully explicit (supplying a component name) or specify a specific package
      name it is targetted to.  Additional values
      may be included in the Intent extras to supply arguments along with
      this specific start call.</param>
        <summary>Request that a given application service be started.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopService">
      <MemberSignature Language="F#" Value="override this.StopService : Android.Content.Intent -&gt; bool" Usage="contextWrapper.StopService name" />
      <MemberSignature Language="C#" Value="public override bool StopService (Android.Content.Intent? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool StopService(class Android.Content.Intent name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.StopService(Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopService", "(Landroid/content/Intent;)Z", "GetStopService_Landroid_content_Intent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="name">Description of the service to be stopped.  The Intent must be either
      fully explicit (supplying a component name) or specify a specific package
      name it is targetted to.</param>
        <summary>Request that a given application service be stopped.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="F#" Value="member this.Theme : Android.Content.Res.Resources.Theme" Usage="Android.Content.ContextWrapper.Theme" />
      <MemberSignature Language="C#" Value="public override Android.Content.Res.Resources.Theme? Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources/Theme Theme" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTheme", "()Landroid/content/res/Resources$Theme;", "GetGetThemeHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources+Theme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Theme object associated with this Context.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Content.ContextWrapper.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Content.ContextWrapper.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbindService">
      <MemberSignature Language="F#" Value="override this.UnbindService : Android.Content.IServiceConnection -&gt; unit" Usage="contextWrapper.UnbindService conn" />
      <MemberSignature Language="C#" Value="public override void UnbindService (Android.Content.IServiceConnection? conn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UnbindService(class Android.Content.IServiceConnection conn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.UnbindService(Android.Content.IServiceConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unbindService", "(Landroid/content/ServiceConnection;)V", "GetUnbindService_Landroid_content_ServiceConnection_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conn" Type="Android.Content.IServiceConnection" />
      </Parameters>
      <Docs>
        <param name="conn">The connection interface previously supplied to
             bindService().  This parameter must not be null.</param>
        <summary>Disconnect from an application service.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterReceiver">
      <MemberSignature Language="F#" Value="override this.UnregisterReceiver : Android.Content.BroadcastReceiver -&gt; unit" Usage="contextWrapper.UnregisterReceiver receiver" />
      <MemberSignature Language="C#" Value="public override void UnregisterReceiver (Android.Content.BroadcastReceiver? receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UnregisterReceiver(class Android.Content.BroadcastReceiver receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ContextWrapper.UnregisterReceiver(Android.Content.BroadcastReceiver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterReceiver", "(Landroid/content/BroadcastReceiver;)V", "GetUnregisterReceiver_Landroid_content_BroadcastReceiver_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to unregister.</param>
        <summary>Unregister a previously registered BroadcastReceiver.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wallpaper">
      <MemberSignature Language="F#" Value="member this.Wallpaper : Android.Graphics.Drawables.Drawable" Usage="Android.Content.ContextWrapper.Wallpaper" />
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? Wallpaper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Wallpaper" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.Wallpaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWallpaper", "()Landroid/graphics/drawable/Drawable;", "GetGetWallpaperHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperDesiredMinimumHeight">
      <MemberSignature Language="F#" Value="member this.WallpaperDesiredMinimumHeight : int" Usage="Android.Content.ContextWrapper.WallpaperDesiredMinimumHeight" />
      <MemberSignature Language="C#" Value="public override int WallpaperDesiredMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WallpaperDesiredMinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.WallpaperDesiredMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWallpaperDesiredMinimumHeight", "()I", "GetGetWallpaperDesiredMinimumHeightHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperDesiredMinimumWidth">
      <MemberSignature Language="F#" Value="member this.WallpaperDesiredMinimumWidth : int" Usage="Android.Content.ContextWrapper.WallpaperDesiredMinimumWidth" />
      <MemberSignature Language="C#" Value="public override int WallpaperDesiredMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WallpaperDesiredMinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ContextWrapper.WallpaperDesiredMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWallpaperDesiredMinimumWidth", "()I", "GetGetWallpaperDesiredMinimumWidthHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
