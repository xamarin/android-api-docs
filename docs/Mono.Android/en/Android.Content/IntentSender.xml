<Type Name="IntentSender" FullName="Android.Content.IntentSender">
  <TypeSignature Language="C#" Value="public class IntentSender : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntentSender extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Content.IntentSender" />
  <TypeSignature Language="F#" Value="type IntentSender = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/content/IntentSender", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/content/IntentSender", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="4">
    <summary>A description of an Intent and target action to perform with it.</summary>
    <remarks>
      <para>A description of an Intent and target action to perform with it.
            The returned object can be
            handed to other applications so that they can perform the action you
            described on your behalf at a later time.</para>
      <para>By giving a IntentSender to another application,
            you are granting it the right to perform the operation you have specified
            as if the other application was yourself (with the same permissions and
            identity).  As such, you should be careful about how you build the IntentSender:
            often, for example, the base Intent you supply will have the component
            name explicitly set to one of your own components, to ensure it is ultimately
            sent there and nowhere else.</para>
      <para>A IntentSender itself is simply a reference to a token maintained by
            the system describing the original data used to retrieve it.  This means
            that, even if its owning application's process is killed, the
            IntentSender itself will remain usable from other processes that
            have been given it.  If the creating application later re-retrieves the
            same kind of IntentSender (same operation, same Intent action, data,
            categories, and components, and same flags), it will receive a IntentSender
            representing the same token if that is still valid.</para>
      <para>Instances of this class can not be made directly, but rather must be
            created from an existing <c>android.app.PendingIntent</c> with
            <c>android.app.PendingIntent#getIntentSender() PendingIntent.getIntentSender()</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/content/IntentSender" title="Reference documentation">Java documentation for <code>android.content.IntentSender</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IntentSender (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Content.IntentSender : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Content.IntentSender" Usage="new Android.Content.IntentSender (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.Creator" />
      <MemberSignature Language="F#" Value="static member Creator : Android.OS.IParcelableCreator" Usage="Android.Content.IntentSender.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="CreatorPackage">
      <MemberSignature Language="C#" Value="public virtual string? CreatorPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreatorPackage" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.CreatorPackage" />
      <MemberSignature Language="F#" Value="member this.CreatorPackage : string" Usage="Android.Content.IntentSender.CreatorPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCreatorPackage", "()Ljava/lang/String;", "GetGetCreatorPackageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCreatorPackage", "()Ljava/lang/String;", "GetGetCreatorPackageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the package name of the application that created this
            IntentSender, that is the identity under which you will actually be
            sending the Intent.</summary>
        <value>The package name of the PendingIntent, or null if there is
            none associated with it.</value>
        <remarks>
          <para>Return the package name of the application that created this
            IntentSender, that is the identity under which you will actually be
            sending the Intent.  The returned string is supplied by the system, so
            that an application can not spoof its package.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#getCreatorPackage()" title="Reference documentation">Java documentation for <code>android.content.IntentSender.getCreatorPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreatorUid">
      <MemberSignature Language="C#" Value="public virtual int CreatorUid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CreatorUid" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.CreatorUid" />
      <MemberSignature Language="F#" Value="member this.CreatorUid : int" Usage="Android.Content.IntentSender.CreatorUid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCreatorUid", "()I", "GetGetCreatorUidHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCreatorUid", "()I", "GetGetCreatorUidHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the uid of the application that created this
            PendingIntent, that is the identity under which you will actually be
            sending the Intent.</summary>
        <value>The uid of the PendingIntent, or -1 if there is
            none associated with it.</value>
        <remarks>
          <para>Return the uid of the application that created this
            PendingIntent, that is the identity under which you will actually be
            sending the Intent.  The returned integer is supplied by the system, so
            that an application can not spoof its uid.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#getCreatorUid()" title="Reference documentation">Java documentation for <code>android.content.IntentSender.getCreatorUid()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreatorUserHandle">
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserHandle? CreatorUserHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.UserHandle CreatorUserHandle" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.CreatorUserHandle" />
      <MemberSignature Language="F#" Value="member this.CreatorUserHandle : Android.OS.UserHandle" Usage="Android.Content.IntentSender.CreatorUserHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCreatorUserHandle", "()Landroid/os/UserHandle;", "GetGetCreatorUserHandleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCreatorUserHandle", "()Landroid/os/UserHandle;", "GetGetCreatorUserHandleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the user handle of the application that created this
            PendingIntent, that is the user under which you will actually be
            sending the Intent.</summary>
        <value>The user handle of the PendingIntent, or null if there is
            none associated with it.</value>
        <remarks>
          <para>Return the user handle of the application that created this
            PendingIntent, that is the user under which you will actually be
            sending the Intent.  The returned UserHandle is supplied by the system, so
            that an application can not spoof its user.  See
            <c>android.os.Process#myUserHandle() Process.myUserHandle()</c> for
            more explanation of user handles.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#getCreatorUserHandle()" title="Reference documentation">Java documentation for <code>android.content.IntentSender.getCreatorUserHandle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="intentSender.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Content.IntentSender.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadIntentSenderOrNullFromParcel">
      <MemberSignature Language="C#" Value="public static Android.Content.IntentSender? ReadIntentSenderOrNullFromParcel (Android.OS.Parcel? in);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.IntentSender ReadIntentSenderOrNullFromParcel(class Android.OS.Parcel in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.ReadIntentSenderOrNullFromParcel(Android.OS.Parcel)" />
      <MemberSignature Language="F#" Value="static member ReadIntentSenderOrNullFromParcel : Android.OS.Parcel -&gt; Android.Content.IntentSender" Usage="Android.Content.IntentSender.ReadIntentSenderOrNullFromParcel in" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readIntentSenderOrNullFromParcel", "(Landroid/os/Parcel;)Landroid/content/IntentSender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readIntentSenderOrNullFromParcel", "(Landroid/os/Parcel;)Landroid/content/IntentSender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.IntentSender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Android.OS.Parcel" />
      </Parameters>
      <Docs>
        <param name="in">The Parcel containing the written Messenger.</param>
        <summary>Convenience function for reading either a Messenger or null pointer from
            a Parcel.</summary>
        <returns>Returns the Messenger read from the Parcel, or null if null had
            been written.</returns>
        <remarks>
          <para>Convenience function for reading either a Messenger or null pointer from
            a Parcel.  You must have previously written the Messenger with
            <c>#writeIntentSenderOrNullToParcel</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#readIntentSenderOrNullFromParcel(android.os.Parcel)" title="Reference documentation">Java documentation for <code>android.content.IntentSender.readIntentSenderOrNullFromParcel(android.os.Parcel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="SendIntent">
      <MemberSignature Language="C#" Value="public virtual void SendIntent (Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent, Android.Content.IntentSender.IOnFinished? onFinished, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendIntent(class Android.Content.Context context, valuetype Android.App.Result code, class Android.Content.Intent intent, class Android.Content.IntentSender/IOnFinished onFinished, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.Content.Intent,Android.Content.IntentSender.IOnFinished,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SendIntent : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.Content.IntentSender.IOnFinished * Android.OS.Handler -&gt; unit&#xA;override this.SendIntent : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.Content.IntentSender.IOnFinished * Android.OS.Handler -&gt; unit" Usage="intentSender.SendIntent (context, code, intent, onFinished, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendIntent", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;)V", "GetSendIntent_Landroid_content_Context_ILandroid_content_Intent_Landroid_content_IntentSender_OnFinished_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendIntent", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;)V", "GetSendIntent_Landroid_content_Context_ILandroid_content_Intent_Landroid_content_IntentSender_OnFinished_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="onFinished" Type="Android.Content.IntentSender+IOnFinished" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="context">The Context of the caller.  This may be null if
            &lt;var&gt;intent&lt;/var&gt; is also null.</param>
        <param name="code">Result code to supply back to the IntentSender's target.</param>
        <param name="intent">Additional Intent data.  See <c>Intent#fillIn
            Intent.fillIn()</c> for information on how this is applied to the
            original Intent.  Use null to not modify the original Intent.</param>
        <param name="onFinished">The object to call back on when the send has
            completed, or null for no callback.</param>
        <param name="handler">Handler identifying the thread on which the callback
            should happen.  If null, the callback will happen from the thread
            pool of the process.</param>
        <summary>Perform the operation associated with this IntentSender, allowing the
            caller to specify information about the Intent to use and be notified
            when the send has completed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#sendIntent(android.content.Context,%20int,%20android.content.Intent,%20android.content.OnFinished,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.content.IntentSender.sendIntent(android.content.Context, int, android.content.Intent, android.content.OnFinished, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException">Throws CanceledIntentException if the IntentSender
 is no longer allowing more intents to be sent through it.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendIntent">
      <MemberSignature Language="C#" Value="public virtual void SendIntent (Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent, Android.Content.IntentSender.IOnFinished? onFinished, Android.OS.Handler? handler, string? requiredPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendIntent(class Android.Content.Context context, valuetype Android.App.Result code, class Android.Content.Intent intent, class Android.Content.IntentSender/IOnFinished onFinished, class Android.OS.Handler handler, string requiredPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.SendIntent(Android.Content.Context,Android.App.Result,Android.Content.Intent,Android.Content.IntentSender.IOnFinished,Android.OS.Handler,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SendIntent : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.Content.IntentSender.IOnFinished * Android.OS.Handler * string -&gt; unit&#xA;override this.SendIntent : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.Content.IntentSender.IOnFinished * Android.OS.Handler * string -&gt; unit" Usage="intentSender.SendIntent (context, code, intent, onFinished, handler, requiredPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendIntent", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;Ljava/lang/String;)V", "GetSendIntent_Landroid_content_Context_ILandroid_content_Intent_Landroid_content_IntentSender_OnFinished_Landroid_os_Handler_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendIntent", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/content/IntentSender$OnFinished;Landroid/os/Handler;Ljava/lang/String;)V", "GetSendIntent_Landroid_content_Context_ILandroid_content_Intent_Landroid_content_IntentSender_OnFinished_Landroid_os_Handler_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="onFinished" Type="Android.Content.IntentSender+IOnFinished" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
        <Parameter Name="requiredPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The Context of the caller.  This may be null if
            &lt;var&gt;intent&lt;/var&gt; is also null.</param>
        <param name="code">Result code to supply back to the IntentSender's target.</param>
        <param name="intent">Additional Intent data.  See <c>Intent#fillIn
            Intent.fillIn()</c> for information on how this is applied to the
            original Intent.  Use null to not modify the original Intent.</param>
        <param name="onFinished">The object to call back on when the send has
            completed, or null for no callback.</param>
        <param name="handler">Handler identifying the thread on which the callback
            should happen.  If null, the callback will happen from the thread
            pool of the process.</param>
        <param name="requiredPermission">Name of permission that a recipient of the PendingIntent
 is required to hold.  This is only valid for broadcast intents, and
 corresponds to the permission argument in
 <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent,System.String)" />.
 If null, no permission is required.</param>
        <summary>Perform the operation associated with this IntentSender, allowing the
            caller to specify information about the Intent to use and be notified
            when the send has completed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#sendIntent(android.content.Context,%20int,%20android.content.Intent,%20android.content.OnFinished,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.content.IntentSender.sendIntent(android.content.Context, int, android.content.Intent, android.content.OnFinished, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException">Throws CanceledIntentException if the IntentSender
 is no longer allowing more intents to be sent through it.
</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetPackage">
      <MemberSignature Language="C#" Value="public virtual string? TargetPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPackage" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.TargetPackage" />
      <MemberSignature Language="F#" Value="member this.TargetPackage : string" Usage="Android.Content.IntentSender.TargetPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTargetPackage", "()Ljava/lang/String;", "GetGetTargetPackageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTargetPackage", "()Ljava/lang/String;", "GetGetTargetPackageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. Renamed to <c>#getCreatorPackage()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#getTargetPackage()" title="Reference documentation">Java documentation for <code>android.content.IntentSender.getTargetPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Content.IntentSender.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Content.IntentSender.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Content.IntentSender.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteIntentSenderOrNullToParcel">
      <MemberSignature Language="C#" Value="public static void WriteIntentSenderOrNullToParcel (Android.Content.IntentSender? sender, Android.OS.Parcel? out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntentSenderOrNullToParcel(class Android.Content.IntentSender sender, class Android.OS.Parcel out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.WriteIntentSenderOrNullToParcel(Android.Content.IntentSender,Android.OS.Parcel)" />
      <MemberSignature Language="F#" Value="static member WriteIntentSenderOrNullToParcel : Android.Content.IntentSender * Android.OS.Parcel -&gt; unit" Usage="Android.Content.IntentSender.WriteIntentSenderOrNullToParcel (sender, out)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeIntentSenderOrNullToParcel", "(Landroid/content/IntentSender;Landroid/os/Parcel;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeIntentSenderOrNullToParcel", "(Landroid/content/IntentSender;Landroid/os/Parcel;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Android.Content.IntentSender" />
        <Parameter Name="out" Type="Android.OS.Parcel" />
      </Parameters>
      <Docs>
        <param name="sender">The IntentSender to write, or null.</param>
        <param name="out">Where to write the IntentSender.</param>
        <summary>Convenience function for writing either a IntentSender or null pointer to
            a Parcel.</summary>
        <remarks>
          <para>Convenience function for writing either a IntentSender or null pointer to
            a Parcel.  You must use this with <c>#readIntentSenderOrNullFromParcel</c>
            for later reading it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/IntentSender#writeIntentSenderOrNullToParcel(android.content.IntentSender,%20android.os.Parcel)" title="Reference documentation">Java documentation for <code>android.content.IntentSender.writeIntentSenderOrNullToParcel(android.content.IntentSender, android.os.Parcel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel? out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.IntentSender.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="intentSender.WriteToParcel (out, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="out">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
  </Members>
</Type>
