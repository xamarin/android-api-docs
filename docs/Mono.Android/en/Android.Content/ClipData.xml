<Type Name="ClipData" FullName="Android.Content.ClipData">
  <TypeSignature Language="VB.NET" Value="Public Class ClipData&#xA;Inherits Object&#xA;Implements IDisposable, IJavaPeerable, IParcelable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClipData : Java::Lang::Object, Android::OS::IParcelable, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class ClipData : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClipData extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Content.ClipData" />
  <TypeSignature Language="F#" Value="type ClipData = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/content/ClipData", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/content/ClipData", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>Representation of a clipped data on the clipboard.</summary>
    <remarks>
      <para>Representation of a clipped data on the clipboard.</para>
      <para>ClipData is a complex type containing one or more Item instances,
            each of which can hold one or more representations of an item of data.
            For display to the user, it also has a label.</para>
      <para>A ClipData contains a <c>ClipDescription</c>, which describes
            important meta-data about the clip.  In particular, its
            <c>ClipDescription#getMimeType(int) getDescription().getMimeType(int)</c>
            must return correct MIME type(s) describing the data in the clip.  For help
            in correctly constructing a clip with the correct MIME type, use
            <c>#newPlainText(CharSequence, CharSequence)</c>,
            <c>#newUri(ContentResolver, CharSequence, Uri)</c>, and
            <c>#newIntent(CharSequence, Intent)</c>.</para>
      <para>Each Item instance can be one of three main classes of data: a simple
            CharSequence of text, a single Intent object, or a Uri.  See <c>Item</c>
            for more details.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about using the clipboard framework, read the
            <see href="https://developer.android.com/guide/topics/clipboard/copy-paste.html">Copy and Paste</see>
            developer guide.</para>
      <para>&lt;/div&gt;
            
            "ImplementingPaste"&gt;&lt;h3&gt;Implementing Paste or Drop&lt;/h3&gt;</para>
      <para>To implement a paste or drop of a ClipData object into an application,
            the application must correctly interpret the data for its use.  If the <c>Item</c>
            it contains is simple text or an Intent, there is little to be done: text
            can only be interpreted as text, and an Intent will typically be used for
            creating shortcuts (such as placing icons on the home screen) or other
            actions.</para>
      <para>If all you want is the textual representation of the clipped data, you
            can use the convenience method <c>Item#coerceToText Item.coerceToText</c>.
            In this case there is generally no need to worry about the MIME types
            reported by <c>ClipDescription#getMimeType(int) getDescription().getMimeType(int)</c>,
            since any clip item can always be converted to a string.</para>
      <para>More complicated exchanges will be done through URIs, in particular
            "content:" URIs.  A content URI allows the recipient of a ClipData item
            to interact closely with the ContentProvider holding the data in order to
            negotiate the transfer of that data.  The clip must also be filled in with
            the available MIME types; <c>#newUri(ContentResolver, CharSequence, Uri)</c>
            will take care of correctly doing this.</para>
      <para>For example, here is the paste function of a simple NotePad application.
            When retrieving the data from the clipboard, it can do either two things:
            if the clipboard contains a URI reference to an existing note, it copies
            the entire structure of the note into a new note; otherwise, it simply
            coerces the clip into text and uses that as the new note's contents.
            
            {</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/content/ClipData" title="Reference documentation">Java documentation for <code>android.content.ClipData</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As ClipData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClipData(Android::Content::ClipData ^ other);" />
      <MemberSignature Language="C#" Value="public ClipData (Android.Content.ClipData? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.ClipData other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.#ctor(Android.Content.ClipData)" />
      <MemberSignature Language="F#" Value="new Android.Content.ClipData : Android.Content.ClipData -&gt; Android.Content.ClipData" Usage="new Android.Content.ClipData other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/ClipData;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/ClipData;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="other" Type="Android.Content.ClipData" />
      </Parameters>
      <Docs>
        <param name="other">The existing ClipData that is to be copied.</param>
        <summary>Create a new clip that is a copy of another clip.</summary>
        <remarks>
          <para>Create a new clip that is a copy of another clip.  This does a deep-copy
            of all items in the clip.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#ClipData(android.content.ClipData)" title="Reference documentation">Java documentation for <code>android.content.ClipData.ClipData(android.content.ClipData)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (description As ClipDescription, item As ClipData.Item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClipData(Android::Content::ClipDescription ^ description, Android::Content::ClipData::Item ^ item);" />
      <MemberSignature Language="C#" Value="public ClipData (Android.Content.ClipDescription? description, Android.Content.ClipData.Item? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.ClipDescription description, class Android.Content.ClipData/Item item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.#ctor(Android.Content.ClipDescription,Android.Content.ClipData.Item)" />
      <MemberSignature Language="F#" Value="new Android.Content.ClipData : Android.Content.ClipDescription * Android.Content.ClipData.Item -&gt; Android.Content.ClipData" Usage="new Android.Content.ClipData (description, item)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/ClipDescription;Landroid/content/ClipData$Item;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/ClipDescription;Landroid/content/ClipData$Item;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="description" Type="Android.Content.ClipDescription" />
        <Parameter Name="item" Type="Android.Content.ClipData+Item" />
      </Parameters>
      <Docs>
        <param name="description">To be added.</param>
        <param name="item">To be added.</param>
        <summary>Create a new clip that is a copy of another clip.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#ClipData(android.content.ClipData)" title="Reference documentation">Java documentation for <code>android.content.ClipData.ClipData(android.content.ClipData)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClipData(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ClipData (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Content.ClipData : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Content.ClipData" Usage="new Android.Content.ClipData (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (label As ICharSequence, mimeTypes As String(), item As ClipData.Item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClipData(Java::Lang::ICharSequence ^ label, cli::array &lt;System::String ^&gt; ^ mimeTypes, Android::Content::ClipData::Item ^ item);" />
      <MemberSignature Language="C#" Value="public ClipData (Java.Lang.ICharSequence? label, string[]? mimeTypes, Android.Content.ClipData.Item? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence label, string[] mimeTypes, class Android.Content.ClipData/Item item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.#ctor(Java.Lang.ICharSequence,System.String[],Android.Content.ClipData.Item)" />
      <MemberSignature Language="F#" Value="new Android.Content.ClipData : Java.Lang.ICharSequence * string[] * Android.Content.ClipData.Item -&gt; Android.Content.ClipData" Usage="new Android.Content.ClipData (label, mimeTypes, item)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;[Ljava/lang/String;Landroid/content/ClipData$Item;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;[Ljava/lang/String;Landroid/content/ClipData$Item;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="mimeTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="item" Type="Android.Content.ClipData+Item" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="mimeTypes">To be added.</param>
        <param name="item">To be added.</param>
        <summary>Create a new clip that is a copy of another clip.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#ClipData(android.content.ClipData)" title="Reference documentation">Java documentation for <code>android.content.ClipData.ClipData(android.content.ClipData)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (label As String, mimeTypes As String(), item As ClipData.Item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClipData(System::String ^ label, cli::array &lt;System::String ^&gt; ^ mimeTypes, Android::Content::ClipData::Item ^ item);" />
      <MemberSignature Language="C#" Value="public ClipData (string? label, string[]? mimeTypes, Android.Content.ClipData.Item? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string label, string[] mimeTypes, class Android.Content.ClipData/Item item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.#ctor(System.String,System.String[],Android.Content.ClipData.Item)" />
      <MemberSignature Language="F#" Value="new Android.Content.ClipData : string * string[] * Android.Content.ClipData.Item -&gt; Android.Content.ClipData" Usage="new Android.Content.ClipData (label, mimeTypes, item)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;[Ljava/lang/String;Landroid/content/ClipData$Item;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;[Ljava/lang/String;Landroid/content/ClipData$Item;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="mimeTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="item" Type="Android.Content.ClipData+Item" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="mimeTypes">To be added.</param>
        <param name="item">To be added.</param>
        <summary>Create a new clip.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddItem (item As ClipData.Item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddItem(Android::Content::ClipData::Item ^ item);" />
      <MemberSignature Language="C#" Value="public virtual void AddItem (Android.Content.ClipData.Item? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddItem(class Android.Content.ClipData/Item item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.AddItem(Android.Content.ClipData.Item)" />
      <MemberSignature Language="F#" Value="abstract member AddItem : Android.Content.ClipData.Item -&gt; unit&#xA;override this.AddItem : Android.Content.ClipData.Item -&gt; unit" Usage="clipData.AddItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addItem", "(Landroid/content/ClipData$Item;)V", "GetAddItem_Landroid_content_ClipData_Item_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addItem", "(Landroid/content/ClipData$Item;)V", "GetAddItem_Landroid_content_ClipData_Item_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Android.Content.ClipData+Item" />
      </Parameters>
      <Docs>
        <param name="item">Item to be added.</param>
        <summary>Add a new Item to the overall ClipData container.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#addItem(android.content.ContentResolver,%20android.content.Item)" title="Reference documentation">Java documentation for <code>android.content.ClipData.addItem(android.content.ContentResolver, android.content.Item)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddItem (resolver As ContentResolver, item As ClipData.Item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddItem(Android::Content::ContentResolver ^ resolver, Android::Content::ClipData::Item ^ item);" />
      <MemberSignature Language="C#" Value="public virtual void AddItem (Android.Content.ContentResolver? resolver, Android.Content.ClipData.Item? item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddItem(class Android.Content.ContentResolver resolver, class Android.Content.ClipData/Item item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.AddItem(Android.Content.ContentResolver,Android.Content.ClipData.Item)" />
      <MemberSignature Language="F#" Value="abstract member AddItem : Android.Content.ContentResolver * Android.Content.ClipData.Item -&gt; unit&#xA;override this.AddItem : Android.Content.ContentResolver * Android.Content.ClipData.Item -&gt; unit" Usage="clipData.AddItem (resolver, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addItem", "(Landroid/content/ContentResolver;Landroid/content/ClipData$Item;)V", "GetAddItem_Landroid_content_ContentResolver_Landroid_content_ClipData_Item_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addItem", "(Landroid/content/ContentResolver;Landroid/content/ClipData$Item;)V", "GetAddItem_Landroid_content_ContentResolver_Landroid_content_ClipData_Item_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="item" Type="Android.Content.ClipData+Item" />
      </Parameters>
      <Docs>
        <param name="resolver">ContentResolver used to get information about the URI possibly contained in
            the item.</param>
        <param name="item">Item to be added.</param>
        <summary>Add a new Item to the overall ClipData container.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#addItem(android.content.ContentResolver,%20android.content.Item)" title="Reference documentation">Java documentation for <code>android.content.ClipData.addItem(android.content.ContentResolver, android.content.Item)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Creator As IParcelableCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::OS::IParcelableCreator ^ Creator { Android::OS::IParcelableCreator ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ClipData.Creator" />
      <MemberSignature Language="F#" Value="member this.Creator : Android.OS.IParcelableCreator" Usage="Android.Content.ClipData.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DescribeContents () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int DescribeContents();" />
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="clipData.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As ClipDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::ClipDescription ^ Description { Android::Content::ClipDescription ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.ClipDescription? Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ClipDescription Description" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ClipData.Description" />
      <MemberSignature Language="F#" Value="member this.Description : Android.Content.ClipDescription" Usage="Android.Content.ClipData.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDescription", "()Landroid/content/ClipDescription;", "GetGetDescriptionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDescription", "()Landroid/content/ClipDescription;", "GetGetDescriptionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the <c>ClipDescription</c> associated with this data, describing
            what it contains.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the <c>ClipDescription</c> associated with this data, describing
            what it contains.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#getDescription()" title="Reference documentation">Java documentation for <code>android.content.ClipData.getDescription()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemAt (index As Integer) As ClipData.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Content::ClipData::Item ^ GetItemAt(int index);" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.ClipData.Item? GetItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ClipData/Item GetItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.GetItemAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetItemAt : int -&gt; Android.Content.ClipData.Item&#xA;override this.GetItemAt : int -&gt; Android.Content.ClipData.Item" Usage="clipData.GetItemAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getItemAt", "(I)Landroid/content/ClipData$Item;", "GetGetItemAt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getItemAt", "(I)Landroid/content/ClipData$Item;", "GetGetItemAt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData+Item</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Return a single item inside of the clip data.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#getItemAt(int)" title="Reference documentation">Java documentation for <code>android.content.ClipData.getItemAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ItemCount">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ItemCount { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int ItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemCount" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ClipData.ItemCount" />
      <MemberSignature Language="F#" Value="member this.ItemCount : int" Usage="Android.Content.ClipData.ItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getItemCount", "()I", "GetGetItemCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getItemCount", "()I", "GetGetItemCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of items in the clip data.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the number of items in the clip data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#getItemCount()" title="Reference documentation">Java documentation for <code>android.content.ClipData.getItemCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ClipData.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Content.ClipData.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewHtmlText">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewHtmlText (label As ICharSequence, text As ICharSequence, htmlText As String) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewHtmlText(Java::Lang::ICharSequence ^ label, Java::Lang::ICharSequence ^ text, System::String ^ htmlText);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewHtmlText (Java.Lang.ICharSequence? label, Java.Lang.ICharSequence? text, string? htmlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewHtmlText(class Java.Lang.ICharSequence label, class Java.Lang.ICharSequence text, string htmlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewHtmlText(Java.Lang.ICharSequence,Java.Lang.ICharSequence,System.String)" />
      <MemberSignature Language="F#" Value="static member NewHtmlText : Java.Lang.ICharSequence * Java.Lang.ICharSequence * string -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewHtmlText (label, text, htmlText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newHtmlText", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Landroid/content/ClipData;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newHtmlText", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Landroid/content/ClipData;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="htmlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="text">The text of clip as plain text, for receivers that don't
            handle HTML.  This is required.</param>
        <param name="htmlText">The actual HTML text in the clip.</param>
        <summary>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_HTML</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_HTML</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newHtmlText(java.lang.CharSequence,%20java.lang.CharSequence,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newHtmlText(java.lang.CharSequence, java.lang.CharSequence, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="NewHtmlText">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewHtmlText (label As String, text As String, htmlText As String) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewHtmlText(System::String ^ label, System::String ^ text, System::String ^ htmlText);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewHtmlText (string? label, string? text, string? htmlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewHtmlText(string label, string text, string htmlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewHtmlText(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member NewHtmlText : string * string * string -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewHtmlText (label, text, htmlText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="htmlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="text">The text of clip as plain text, for receivers that don't
            handle HTML.  This is required.</param>
        <param name="htmlText">The actual HTML text in the clip.</param>
        <summary>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_HTML</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_HTML</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newHtmlText(java.lang.CharSequence,%20java.lang.CharSequence,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newHtmlText(java.lang.CharSequence, java.lang.CharSequence, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewIntent">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewIntent (label As ICharSequence, intent As Intent) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewIntent(Java::Lang::ICharSequence ^ label, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewIntent (Java.Lang.ICharSequence? label, Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewIntent(class Java.Lang.ICharSequence label, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewIntent(Java.Lang.ICharSequence,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="static member NewIntent : Java.Lang.ICharSequence * Android.Content.Intent -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewIntent (label, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newIntent", "(Ljava/lang/CharSequence;Landroid/content/Intent;)Landroid/content/ClipData;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newIntent", "(Ljava/lang/CharSequence;Landroid/content/Intent;)Landroid/content/ClipData;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="intent">The actual Intent in the clip.</param>
        <summary>Create a new ClipData holding an Intent with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_INTENT</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding an Intent with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_INTENT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newIntent(java.lang.CharSequence,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newIntent(java.lang.CharSequence, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NewIntent">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewIntent (label As String, intent As Intent) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewIntent(System::String ^ label, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewIntent (string? label, Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewIntent(string label, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewIntent(System.String,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="static member NewIntent : string * Android.Content.Intent -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewIntent (label, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="intent">The actual Intent in the clip.</param>
        <summary>Create a new ClipData holding an Intent with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_INTENT</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding an Intent with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_INTENT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newIntent(java.lang.CharSequence,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newIntent(java.lang.CharSequence, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewPlainText">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewPlainText (label As ICharSequence, text As ICharSequence) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewPlainText(Java::Lang::ICharSequence ^ label, Java::Lang::ICharSequence ^ text);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewPlainText (Java.Lang.ICharSequence? label, Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewPlainText(class Java.Lang.ICharSequence label, class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewPlainText(Java.Lang.ICharSequence,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member NewPlainText : Java.Lang.ICharSequence * Java.Lang.ICharSequence -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewPlainText (label, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newPlainText", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Landroid/content/ClipData;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newPlainText", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Landroid/content/ClipData;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="text">The actual text in the clip.</param>
        <summary>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_PLAIN</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_PLAIN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newPlainText(java.lang.CharSequence,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newPlainText(java.lang.CharSequence, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NewPlainText">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewPlainText (label As String, text As String) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewPlainText(System::String ^ label, System::String ^ text);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewPlainText (string? label, string? text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewPlainText(string label, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewPlainText(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member NewPlainText : string * string -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewPlainText (label, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="text">The actual text in the clip.</param>
        <summary>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_PLAIN</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding data of the type
            <c>ClipDescription#MIMETYPE_TEXT_PLAIN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newPlainText(java.lang.CharSequence,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newPlainText(java.lang.CharSequence, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRawUri">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewRawUri (label As ICharSequence, uri As Uri) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewRawUri(Java::Lang::ICharSequence ^ label, Android::Net::Uri ^ uri);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewRawUri (Java.Lang.ICharSequence? label, Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewRawUri(class Java.Lang.ICharSequence label, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewRawUri(Java.Lang.ICharSequence,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member NewRawUri : Java.Lang.ICharSequence * Android.Net.Uri -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewRawUri (label, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newRawUri", "(Ljava/lang/CharSequence;Landroid/net/Uri;)Landroid/content/ClipData;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newRawUri", "(Ljava/lang/CharSequence;Landroid/net/Uri;)Landroid/content/ClipData;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="uri">The URI in the clip.</param>
        <summary>Create a new ClipData holding an URI with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_URILIST</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding an URI with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_URILIST</c>.
            Unlike <c>#newUri(ContentResolver, CharSequence, Uri)</c>, nothing
            is inferred about the URI -- if it is a content: URI holding a bitmap,
            the reported type will still be uri-list.  Use this with care!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newRawUri(java.lang.CharSequence,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newRawUri(java.lang.CharSequence, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NewRawUri">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewRawUri (label As String, uri As Uri) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewRawUri(System::String ^ label, Android::Net::Uri ^ uri);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewRawUri (string? label, Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewRawUri(string label, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewRawUri(System.String,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member NewRawUri : string * Android.Net.Uri -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewRawUri (label, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="label">User-visible label for the clip data.</param>
        <param name="uri">The URI in the clip.</param>
        <summary>Create a new ClipData holding an URI with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_URILIST</c>.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding an URI with MIME type
            <c>ClipDescription#MIMETYPE_TEXT_URILIST</c>.
            Unlike <c>#newUri(ContentResolver, CharSequence, Uri)</c>, nothing
            is inferred about the URI -- if it is a content: URI holding a bitmap,
            the reported type will still be uri-list.  Use this with care!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newRawUri(java.lang.CharSequence,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newRawUri(java.lang.CharSequence, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewUri">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewUri (resolver As ContentResolver, label As ICharSequence, uri As Uri) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewUri(Android::Content::ContentResolver ^ resolver, Java::Lang::ICharSequence ^ label, Android::Net::Uri ^ uri);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewUri (Android.Content.ContentResolver? resolver, Java.Lang.ICharSequence? label, Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewUri(class Android.Content.ContentResolver resolver, class Java.Lang.ICharSequence label, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewUri(Android.Content.ContentResolver,Java.Lang.ICharSequence,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member NewUri : Android.Content.ContentResolver * Java.Lang.ICharSequence * Android.Net.Uri -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewUri (resolver, label, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newUri", "(Landroid/content/ContentResolver;Ljava/lang/CharSequence;Landroid/net/Uri;)Landroid/content/ClipData;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newUri", "(Landroid/content/ContentResolver;Ljava/lang/CharSequence;Landroid/net/Uri;)Landroid/content/ClipData;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="resolver">ContentResolver used to get information about the URI.</param>
        <param name="label">User-visible label for the clip data.</param>
        <param name="uri">The URI in the clip.</param>
        <summary>Create a new ClipData holding a URI.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding a URI.  If the URI is a content: URI,
            this will query the content provider for the MIME type of its data and
            use that as the MIME type.  Otherwise, it will use the MIME type
            <c>ClipDescription#MIMETYPE_TEXT_URILIST</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newUri(android.content.ContentResolver,%20java.lang.CharSequence,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newUri(android.content.ContentResolver, java.lang.CharSequence, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NewUri">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewUri (resolver As ContentResolver, label As String, uri As Uri) As ClipData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Content::ClipData ^ NewUri(Android::Content::ContentResolver ^ resolver, System::String ^ label, Android::Net::Uri ^ uri);" />
      <MemberSignature Language="C#" Value="public static Android.Content.ClipData? NewUri (Android.Content.ContentResolver? resolver, string? label, Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.ClipData NewUri(class Android.Content.ContentResolver resolver, string label, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.NewUri(Android.Content.ContentResolver,System.String,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member NewUri : Android.Content.ContentResolver * string * Android.Net.Uri -&gt; Android.Content.ClipData" Usage="Android.Content.ClipData.NewUri (resolver, label, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="resolver">ContentResolver used to get information about the URI.</param>
        <param name="label">User-visible label for the clip data.</param>
        <param name="uri">The URI in the clip.</param>
        <summary>Create a new ClipData holding a URI.</summary>
        <returns>Returns a new ClipData containing the specified data.</returns>
        <remarks>
          <para>Create a new ClipData holding a URI.  If the URI is a content: URI,
            this will query the content provider for the MIME type of its data and
            use that as the MIME type.  Otherwise, it will use the MIME type
            <c>ClipDescription#MIMETYPE_TEXT_URILIST</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/ClipData#newUri(android.content.ContentResolver,%20java.lang.CharSequence,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.content.ClipData.newUri(android.content.ContentResolver, java.lang.CharSequence, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ClipData.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Content.ClipData.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Content.ClipData.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Content.ClipData.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToParcel (dest As Parcel, flags As ParcelableWriteFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToParcel(Android::OS::Parcel ^ dest, Android::OS::ParcelableWriteFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel dest, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.ClipData.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="clipData.WriteToParcel (dest, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dest">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
