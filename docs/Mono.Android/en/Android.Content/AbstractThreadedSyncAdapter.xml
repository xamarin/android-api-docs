<Type Name="AbstractThreadedSyncAdapter" FullName="Android.Content.AbstractThreadedSyncAdapter">
  <TypeSignature Language="C#" Value="public abstract class AbstractThreadedSyncAdapter : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractThreadedSyncAdapter extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/AbstractThreadedSyncAdapter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation.
 If a sync operation is already in progress when a sync request is received, an error will be
 returned to the new request and the existing request will be allowed to continue.
 However if there is no sync in progress then a thread will be spawned and <c><see cref="M:Android.Content.AbstractThreadedSyncAdapter.OnPerformSync(Android.Accounts.Account,Android.OS.Bundle,Android.OS.Bundle,Android.OS.Bundle,Android.OS.Bundle)" /></c>
 will be invoked on that thread.
 </para>
      <para tool="javadoc-to-mdoc">
 Syncs can be cancelled at any time by the framework. For example a sync that was not
 user-initiated and lasts longer than 30 minutes will be considered timed-out and cancelled.
 Similarly the framework will attempt to determine whether or not an adapter is making progress
 by monitoring its network activity over the course of a minute. If the network traffic over this
 window is close enough to zero the sync will be cancelled. You can also request the sync be
 cancelled via <c><see cref="M:Android.Content.ContentResolver.CancelSync(Android.Accounts.Account,System.String)" /></c> or
 <c><see cref="M:Android.Content.ContentResolver.CancelSync(Android.Content.SyncRequest)" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 A sync is cancelled by issuing a <c><see cref="M:Java.Lang.Thread.Interrupt" /></c> on the syncing thread. <i>Either
 your code in <c><see cref="M:Android.Content.AbstractThreadedSyncAdapter.OnPerformSync(Android.Accounts.Account,Android.OS.Bundle,Android.OS.Bundle,Android.OS.Bundle,Android.OS.Bundle)" /></c>
 must check <c><see cref="M:Java.Lang.Thread.Interrupted" /></c>, or you you must override one of
 <c><see cref="M:Android.Content.AbstractThreadedSyncAdapter.OnSyncCanceled(Java.Lang.Thread)" /></c>/<c><see cref="M:Android.Content.AbstractThreadedSyncAdapter.OnSyncCanceled" /></c></i> (depending on whether or not
 your adapter supports syncing of multiple accounts in parallel). If your adapter does not
 respect the cancel issued by the framework you run the risk of your app's entire process being
 killed.
 </para>
      <para tool="javadoc-to-mdoc">
 In order to be a sync adapter one must extend this class, provide implementations for the
 abstract methods and write a service that returns the result of <c><see cref="P:Android.Content.AbstractThreadedSyncAdapter.SyncAdapterBinder" /></c>
 in the service's <c><see cref="M:Android.App.Service.OnBind(Android.Content.Intent)" /></c> when invoked
 with an intent with action <c>android.content.SyncAdapter</c>. This service
 must specify the following intent filter and metadata tags in its AndroidManifest.xml file
 <example><code lang="xml">
   &lt;intent-filter&gt;
     &lt;action android:name="android.content.SyncAdapter" /&gt;
   &lt;/intent-filter&gt;
   &lt;meta-data android:name="android.content.SyncAdapter"
             android:resource="@xml/syncadapter" /&gt;
 </code></example>
 The <c>android:resource</c> attribute must point to a resource that looks like:
 <example><code lang="xml">
 &lt;sync-adapter xmlns:android="http://schemas.android.com/apk/res/android"
    android:contentAuthority="authority"
    android:accountType="accountType"
    android:userVisible="true|false"
    android:supportsUploading="true|false"
    android:allowParallelSyncs="true|false"
    android:isAlwaysSyncable="true|false"
    android:syncAdapterSettingsAction="ACTION_OF_SETTINGS_ACTIVITY"
 /&gt;
 </code></example><list type="bullet"><item><term>The <c>android:contentAuthority</c> and <c>android:accountType</c> attributes
 indicate which content authority and for which account types this sync adapter serves.
 </term></item><item><term><c>android:userVisible</c> defaults to true and controls whether or not this sync
 adapter shows up in the Sync Settings screen.
 </term></item><item><term><c>android:supportsUploading</c> defaults
 to true and if true an upload-only sync will be requested for all syncadapters associated
 with an authority whenever that authority's content provider does a
 <c><see cref="M:Android.Content.ContentResolver.NotifyChange(Android.Net.Uri,Android.Database.ContentObserver,Android.Database.ContentObserver)" /></c>
 with syncToNetwork set to true.
 </term></item><item><term><c>android:allowParallelSyncs</c> defaults to false and if true indicates that
 the sync adapter can handle syncs for multiple accounts at the same time. Otherwise
 the SyncManager will wait until the sync adapter is not in use before requesting that
 it sync an account's data.
 </term></item><item><term><c>android:isAlwaysSyncable</c> defaults to false and if true tells the SyncManager
 to intialize the isSyncable state to 1 for that sync adapter for each account that is added.
 </term></item><item><term><c>android:syncAdapterSettingsAction</c> defaults to null and if supplied it
 specifies an Intent action of an activity that can be used to adjust the sync adapter's
 sync settings. The activity must live in the same package as the sync adapter.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbstractThreadedSyncAdapter (Android.Content.Context context, bool autoInitialize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, bool autoInitialize) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="autoInitialize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="autoInitialize">To be added.</param>
        <summary>Creates an <c><see cref="T:Android.Content.AbstractThreadedSyncAdapter" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an <c><see cref="T:Android.Content.AbstractThreadedSyncAdapter" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#AbstractThreadedSyncAdapter(android.content.Context, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractThreadedSyncAdapter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbstractThreadedSyncAdapter (Android.Content.Context context, bool autoInitialize, bool allowParallelSyncs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, bool autoInitialize, bool allowParallelSyncs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;ZZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="autoInitialize" Type="System.Boolean" />
        <Parameter Name="allowParallelSyncs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="autoInitialize">To be added.</param>
        <param name="allowParallelSyncs">To be added.</param>
        <summary>Creates an <c><see cref="T:Android.Content.AbstractThreadedSyncAdapter" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an <c><see cref="T:Android.Content.AbstractThreadedSyncAdapter" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#AbstractThreadedSyncAdapter(android.content.Context, boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#getContext()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="LogSyncDetails">
      <MemberSignature Language="C#" Value="public const int LogSyncDetails = 2743;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LogSyncDetails = (2743)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LOG_SYNC_DETAILS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2743</MemberValue>
      <Docs>
        <summary>Kernel event log tag.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Kernel event log tag.  Also listed in data/etc/event-log-tags.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#LOG_SYNC_DETAILS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnPerformSync">
      <MemberSignature Language="C#" Value="public abstract void OnPerformSync (Android.Accounts.Account account, Android.OS.Bundle extras, string authority, Android.Content.ContentProviderClient provider, Android.Content.SyncResult syncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPerformSync(class Android.Accounts.Account account, class Android.OS.Bundle extras, string authority, class Android.Content.ContentProviderClient provider, class Android.Content.SyncResult syncResult) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPerformSync", "(Landroid/accounts/Account;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/ContentProviderClient;Landroid/content/SyncResult;)V", "GetOnPerformSync_Landroid_accounts_Account_Landroid_os_Bundle_Ljava_lang_String_Landroid_content_ContentProviderClient_Landroid_content_SyncResult_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="provider" Type="Android.Content.ContentProviderClient" />
        <Parameter Name="syncResult" Type="Android.Content.SyncResult" />
      </Parameters>
      <Docs>
        <param name="account">the account that should be synced</param>
        <param name="extras">SyncAdapter-specific parameters</param>
        <param name="authority">the authority of this sync request</param>
        <param name="provider">a ContentProviderClient that points to the ContentProvider for this
   authority</param>
        <param name="syncResult">SyncAdapter-specific parameters
</param>
        <summary>Perform a sync for this account.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Perform a sync for this account. SyncAdapter-specific parameters may
 be specified in extras, which is guaranteed to not be null. Invocations
 of this method are guaranteed to be serialized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#onPerformSync(android.accounts.Account, android.os.Bundle, java.lang.String, android.content.ContentProviderClient, android.content.SyncResult)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnSyncCanceled">
      <MemberSignature Language="C#" Value="public virtual void OnSyncCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSyncCanceled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSyncCanceled", "()V", "GetOnSyncCanceledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates that a sync operation has been canceled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a sync operation has been canceled. This will be invoked on a separate
 thread than the sync thread and so you must consider the multi-threaded implications
 of the work that you do in this method.
 </para>
          <para tool="javadoc-to-mdoc">
 This will only be invoked when the SyncAdapter indicates that it doesn't support
 parallel syncs.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#onSyncCanceled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnSyncCanceled">
      <MemberSignature Language="C#" Value="public virtual void OnSyncCanceled (Java.Lang.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSyncCanceled(class Java.Lang.Thread thread) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSyncCanceled", "(Ljava/lang/Thread;)V", "GetOnSyncCanceled_Ljava_lang_Thread_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="Java.Lang.Thread" />
      </Parameters>
      <Docs>
        <param name="thread">the Thread of the sync that is to be canceled.
</param>
        <summary>Indicates that a sync operation has been canceled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a sync operation has been canceled. This will be invoked on a separate
 thread than the sync thread and so you must consider the multi-threaded implications
 of the work that you do in this method.
 </para>
          <para tool="javadoc-to-mdoc">
 This will only be invoked when the SyncAdapter indicates that it does support
 parallel syncs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#onSyncCanceled(java.lang.Thread)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SyncAdapterBinder">
      <MemberSignature Language="C#" Value="public Android.OS.IBinder SyncAdapterBinder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.IBinder SyncAdapterBinder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSyncAdapterBinder", "()Landroid/os/IBinder;", "GetGetSyncAdapterBinderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html#getSyncAdapterBinder()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
