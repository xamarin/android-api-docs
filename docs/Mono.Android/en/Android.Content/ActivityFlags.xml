<Type Name="ActivityFlags" FullName="Android.Content.ActivityFlags">
  <TypeSignature Language="C#" Value="public enum ActivityFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ActivityFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Android.Content.ActivityFlags" />
  <TypeSignature Language="F#" Value="type ActivityFlags = " />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of  several types.</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BroughtToFront">
      <MemberSignature Language="C#" Value="BroughtToFront" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags BroughtToFront = int32(4194304)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.BroughtToFront" />
      <MemberSignature Language="F#" Value="BroughtToFront = 4194304" Usage="Android.Content.ActivityFlags.BroughtToFront" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4194304</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This flag is not normally set by application code, but set for you by
 the system as described in the
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=R styleable AndroidManifestActivity_launchMode;scope=Xamarin" title="R styleable AndroidManifestActivity_launchMode">R styleable AndroidManifestActivity_launchMode</a></format> documentation for the singleTask mode.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearTask">
      <MemberSignature Language="C#" Value="ClearTask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ClearTask = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ClearTask" />
      <MemberSignature Language="F#" Value="ClearTask = 32768" Usage="Android.Content.ActivityFlags.ClearTask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_CLEAR_TASK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set in an Intent passed to <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />,
 this flag will cause any existing task that would be associated with the
 activity to be cleared before the activity is started.  That is, the activity
 becomes the new root of an otherwise empty task, and any old activities
 are finished.  This can only be used in conjunction with <see cref="F:Android.Content.ActivityFlags.NewTask" />.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearTop">
      <MemberSignature Language="C#" Value="ClearTop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ClearTop = int32(67108864)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ClearTop" />
      <MemberSignature Language="F#" Value="ClearTop = 67108864" Usage="Android.Content.ActivityFlags.ClearTop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_CLEAR_TOP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>67108864</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <see cref="F:Android.Content.ActivityFlags.SingleTop" />
            <see cref="F:Android.Content.ActivityFlags.SingleTop" />
          </para>
          <para tool="javadoc-to-mdoc">
            <see cref="F:Android.Content.ActivityFlags.NewTask" />
          </para>
          <para tool="javadoc-to-mdoc">See
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
 Stack</a></format> for more information about tasks.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearWhenTaskReset">
      <MemberSignature Language="C#" Value="ClearWhenTaskReset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ClearWhenTaskReset = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ClearWhenTaskReset" />
      <MemberSignature Language="F#" Value="ClearWhenTaskReset = 524288" Usage="Android.Content.ActivityFlags.ClearWhenTaskReset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <see cref="F:Android.Content.ActivityFlags.ResetTaskIfNeeded" />
          </para>
          <para tool="javadoc-to-mdoc">This is useful for cases where you have a logical break in your
 application.  For example, an e-mail application may have a command
 to view an attachment, which launches an image view activity to
 display it.  This activity should be part of the e-mail application's
 task, since it is a part of the task the user is involved in.  However,
 if the user leaves that task, and later selects the e-mail app from
 home, we may like them to return to the conversation they were
 viewing, not the picture attachment, since that is confusing.  By
 setting this flag when launching the image viewer, that viewer and
 any activities it starts will be removed the next time the user returns
 to mail.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugLogResolution">
      <MemberSignature Language="C#" Value="DebugLogResolution" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags DebugLogResolution = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.DebugLogResolution" />
      <MemberSignature Language="F#" Value="DebugLogResolution = 8" Usage="Android.Content.ActivityFlags.DebugLogResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_DEBUG_LOG_RESOLUTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">A flag you can enable for debugging: when set, log messages will be
 printed during the resolution of this intent to show you what has
 been found to create the final resolved list.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeFromRecents">
      <MemberSignature Language="C#" Value="ExcludeFromRecents" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ExcludeFromRecents = int32(8388608)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ExcludeFromRecents" />
      <MemberSignature Language="F#" Value="ExcludeFromRecents = 8388608" Usage="Android.Content.ActivityFlags.ExcludeFromRecents" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8388608</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, the new activity is not kept in the list of recently launched
 activities.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeStoppedPackages">
      <MemberSignature Language="C#" Value="ExcludeStoppedPackages" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ExcludeStoppedPackages = int32(16)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ExcludeStoppedPackages" />
      <MemberSignature Language="F#" Value="ExcludeStoppedPackages = 16" Usage="Android.Content.ActivityFlags.ExcludeStoppedPackages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_EXCLUDE_STOPPED_PACKAGES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, this intent will not match any components in packages that
 are currently stopped.  If this is not set, then the default behavior
 is to include such applications in the result.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardResult">
      <MemberSignature Language="C#" Value="ForwardResult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ForwardResult = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ForwardResult" />
      <MemberSignature Language="F#" Value="ForwardResult = 33554432" Usage="Android.Content.ActivityFlags.ForwardResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_FORWARD_RESULT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set and this intent is being used to launch a new activity from an
 existing one, then the reply target of the existing activity will be
 transfered to the new activity.  This way the new activity can call
 <see cref="M:Android.App.Activity.SetResult(Android.App.Result)" /> and have that result sent back to
 the reply target of the original activity.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBackground">
      <MemberSignature Language="C#" Value="FromBackground" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags FromBackground = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.FromBackground" />
      <MemberSignature Language="F#" Value="FromBackground = 4" Usage="Android.Content.ActivityFlags.FromBackground" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_FROM_BACKGROUND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Can be set by the caller to indicate that this Intent is coming from
 a background operation, not from direct user interaction.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantPersistableUriPermission">
      <MemberSignature Language="C#" Value="GrantPersistableUriPermission" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags GrantPersistableUriPermission = int32(64)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.GrantPersistableUriPermission" />
      <MemberSignature Language="F#" Value="GrantPersistableUriPermission = 64" Usage="Android.Content.ActivityFlags.GrantPersistableUriPermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantPrefixUriPermission">
      <MemberSignature Language="C#" Value="GrantPrefixUriPermission" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags GrantPrefixUriPermission = int32(128)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.GrantPrefixUriPermission" />
      <MemberSignature Language="F#" Value="GrantPrefixUriPermission = 128" Usage="Android.Content.ActivityFlags.GrantPrefixUriPermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_GRANT_PREFIX_URI_PERMISSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantReadUriPermission">
      <MemberSignature Language="C#" Value="GrantReadUriPermission" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags GrantReadUriPermission = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.GrantReadUriPermission" />
      <MemberSignature Language="F#" Value="GrantReadUriPermission = 1" Usage="Android.Content.ActivityFlags.GrantReadUriPermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_GRANT_READ_URI_PERMISSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, the recipient of this Intent will be granted permission to
 perform read operations on the Uri in the Intent's data and any URIs
 specified in its ClipData.  When applying to an Intent's ClipData,
 all URIs as well as recursive traversals through data or other ClipData
 in Intent items will be granted; only the grant flags of the top-level
 Intent are used.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantWriteUriPermission">
      <MemberSignature Language="C#" Value="GrantWriteUriPermission" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags GrantWriteUriPermission = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.GrantWriteUriPermission" />
      <MemberSignature Language="F#" Value="GrantWriteUriPermission = 2" Usage="Android.Content.ActivityFlags.GrantWriteUriPermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_GRANT_WRITE_URI_PERMISSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, the recipient of this Intent will be granted permission to
 perform write operations on the Uri in the Intent's data and any URIs
 specified in its ClipData.  When applying to an Intent's ClipData,
 all URIs as well as recursive traversals through data or other ClipData
 in Intent items will be granted; only the grant flags of the top-level
 Intent are used.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeStoppedPackages">
      <MemberSignature Language="C#" Value="IncludeStoppedPackages" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags IncludeStoppedPackages = int32(32)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.IncludeStoppedPackages" />
      <MemberSignature Language="F#" Value="IncludeStoppedPackages = 32" Usage="Android.Content.ActivityFlags.IncludeStoppedPackages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_INCLUDE_STOPPED_PACKAGES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, this intent will always match any components in packages that
 are currently stopped.  This is the default behavior when
 <see cref="F:Android.Content.ActivityFlags.ExcludeStoppedPackages" /> is not set.  If both of these
 flags are set, this one wins (it allows overriding of exclude for
 places where the framework may automatically set the exclude flag).
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LaunchAdjacent">
      <MemberSignature Language="C#" Value="LaunchAdjacent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags LaunchAdjacent = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.LaunchAdjacent" />
      <MemberSignature Language="F#" Value="LaunchAdjacent = 4096" Usage="Android.Content.ActivityFlags.LaunchAdjacent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LaunchedFromHistory">
      <MemberSignature Language="C#" Value="LaunchedFromHistory" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags LaunchedFromHistory = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.LaunchedFromHistory" />
      <MemberSignature Language="F#" Value="LaunchedFromHistory = 1048576" Usage="Android.Content.ActivityFlags.LaunchedFromHistory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This flag is not normally set by application code, but set for you by
 the system if this activity is being launched from history
 (longpress home key).
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleTask">
      <MemberSignature Language="C#" Value="MultipleTask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags MultipleTask = int32(134217728)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.MultipleTask" />
      <MemberSignature Language="F#" Value="MultipleTask = 134217728" Usage="Android.Content.ActivityFlags.MultipleTask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_MULTIPLE_TASK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>134217728</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <i>Do not use this flag unless you are implementing your own
 top-level application launcher.</i>
            <see cref="F:Android.Content.ActivityFlags.NewTask" />
            <i>always</i>
          </para>
          <para tool="javadoc-to-mdoc">
            <i>Because the default system does not include graphical task management,
 you should not use this flag unless you provide some way for a user to
 return back to the tasks you have launched.</i>
          </para>
          <para tool="javadoc-to-mdoc">
            <see cref="F:Android.Content.ActivityFlags.NewTask" />
          </para>
          <para tool="javadoc-to-mdoc">See
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
 Stack</a></format> for more information about tasks.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewDocument">
      <MemberSignature Language="C#" Value="NewDocument" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags NewDocument = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.NewDocument" />
      <MemberSignature Language="F#" Value="NewDocument = 524288" Usage="Android.Content.ActivityFlags.NewDocument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_NEW_DOCUMENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewTask">
      <MemberSignature Language="C#" Value="NewTask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags NewTask = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.NewTask" />
      <MemberSignature Language="F#" Value="NewTask = 268435456" Usage="Android.Content.ActivityFlags.NewTask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_NEW_TASK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/../guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
 Stack</a>
            </format>
          </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <see cref="F:Android.Content.ActivityFlags.MultipleTask" />
          </para>
          <para tool="javadoc-to-mdoc">This flag can not be used when the caller is requesting a result from
 the activity being launched.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAnimation">
      <MemberSignature Language="C#" Value="NoAnimation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags NoAnimation = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.NoAnimation" />
      <MemberSignature Language="F#" Value="NoAnimation = 65536" Usage="Android.Content.ActivityFlags.NoAnimation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_NO_ANIMATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set in an Intent passed to <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />,
 this flag will prevent the system from applying an activity transition
 animation to go to the next activity state.  This doesn't mean an
 animation will never run -- if another activity change happens that doesn't
 specify this flag before the activity started here is displayed, then
 that transition will be used.  This flag can be put to good use
 when you are going to do a series of activity operations but the
 animation seen by the user shouldn't be driven by the first activity
 change but rather a later one.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoHistory">
      <MemberSignature Language="C#" Value="NoHistory" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags NoHistory = int32(1073741824)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.NoHistory" />
      <MemberSignature Language="F#" Value="NoHistory = 1073741824" Usage="Android.Content.ActivityFlags.NoHistory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_NO_HISTORY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1073741824</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, the new activity is not kept in the history stack.  As soon as
 the user navigates away from it, the activity is finished.  This may also
 be set with the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=R styleable AndroidManifestActivity_noHistory;scope=Xamarin" title="R styleable AndroidManifestActivity_noHistory">R styleable AndroidManifestActivity_noHistory</a></format> attribute.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoUserAction">
      <MemberSignature Language="C#" Value="NoUserAction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags NoUserAction = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.NoUserAction" />
      <MemberSignature Language="F#" Value="NoUserAction = 262144" Usage="Android.Content.ActivityFlags.NoUserAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_NO_USER_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <see cref="M:Android.App.Activity.OnUserLeaveHint" />
          </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">If an activity is ever started via any non-user-driven events such as
 phone-call receipt or an alarm handler, this flag should be passed to <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />, ensuring that the pausing
 activity does not think the user has acknowledged its notification.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousIsTop">
      <MemberSignature Language="C#" Value="PreviousIsTop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags PreviousIsTop = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.PreviousIsTop" />
      <MemberSignature Language="F#" Value="PreviousIsTop = 16777216" Usage="Android.Content.ActivityFlags.PreviousIsTop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set and this intent is being used to launch a new activity from an
 existing one, the current activity will not be counted as the top
 activity for deciding whether the new intent should be delivered to
 the top instead of starting a new one.  The previous activity will
 be used as the top, with the assumption being that the current activity
 will finish itself immediately.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverForeground">
      <MemberSignature Language="C#" Value="ReceiverForeground" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ReceiverForeground = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ReceiverForeground" />
      <MemberSignature Language="F#" Value="ReceiverForeground = 268435456" Usage="Android.Content.ActivityFlags.ReceiverForeground" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_RECEIVER_FOREGROUND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, when sending a broadcast the recipient is allowed to run at
 foreground priority, with a shorter timeout interval.  During normal
 broadcasts the receivers are not automatically hoisted out of the
 background priority class.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverNoAbort">
      <MemberSignature Language="C#" Value="ReceiverNoAbort" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ReceiverNoAbort = int32(134217728)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ReceiverNoAbort" />
      <MemberSignature Language="F#" Value="ReceiverNoAbort = 134217728" Usage="Android.Content.ActivityFlags.ReceiverNoAbort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_RECEIVER_NO_ABORT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>134217728</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverRegisteredOnly">
      <MemberSignature Language="C#" Value="ReceiverRegisteredOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ReceiverRegisteredOnly = int32(1073741824)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ReceiverRegisteredOnly" />
      <MemberSignature Language="F#" Value="ReceiverRegisteredOnly = 1073741824" Usage="Android.Content.ActivityFlags.ReceiverRegisteredOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_RECEIVER_REGISTERED_ONLY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1073741824</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, when sending a broadcast only registered receivers will be
 called -- no BroadcastReceiver components will be launched.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverReplacePending">
      <MemberSignature Language="C#" Value="ReceiverReplacePending" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ReceiverReplacePending = int32(536870912)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ReceiverReplacePending" />
      <MemberSignature Language="F#" Value="ReceiverReplacePending = 536870912" Usage="Android.Content.ActivityFlags.ReceiverReplacePending" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_RECEIVER_REPLACE_PENDING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>536870912</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <see cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
          </para>
          <para tool="javadoc-to-mdoc">This flag is most typically used with sticky broadcasts, which
 only care about delivering the most recent values of the broadcast
 to their receivers.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverVisibleToInstantApps">
      <MemberSignature Language="C#" Value="ReceiverVisibleToInstantApps" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ReceiverVisibleToInstantApps = int32(2097152)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ReceiverVisibleToInstantApps" />
      <MemberSignature Language="F#" Value="ReceiverVisibleToInstantApps = 2097152" Usage="Android.Content.ActivityFlags.ReceiverVisibleToInstantApps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2097152</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderToFront">
      <MemberSignature Language="C#" Value="ReorderToFront" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ReorderToFront = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ReorderToFront" />
      <MemberSignature Language="F#" Value="ReorderToFront = 131072" Usage="Android.Content.ActivityFlags.ReorderToFront" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_REORDER_TO_FRONT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />
          </para>
          <para tool="javadoc-to-mdoc">For example, consider a task consisting of four activities: A, B, C, D.
 If D calls startActivity() with an Intent that resolves to the component
 of activity B, then B will be brought to the front of the history stack,
 with this resulting order:  A, C, D, B.

 This flag will be ignored if <see cref="F:Android.Content.ActivityFlags.ClearTop" /> is also
 specified.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTaskIfNeeded">
      <MemberSignature Language="C#" Value="ResetTaskIfNeeded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags ResetTaskIfNeeded = int32(2097152)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.ResetTaskIfNeeded" />
      <MemberSignature Language="F#" Value="ResetTaskIfNeeded = 2097152" Usage="Android.Content.ActivityFlags.ResetTaskIfNeeded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2097152</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, and this activity is either being started in a new task or
 bringing to the top an existing task, then it will be launched as
 the front door of the task.  This will result in the application of
 any affinities needed to have that task in the proper state (either
 moving activities to or from it), or simply resetting that task to
 its initial state if needed.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetainInRecents">
      <MemberSignature Language="C#" Value="RetainInRecents" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags RetainInRecents = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.RetainInRecents" />
      <MemberSignature Language="F#" Value="RetainInRecents = 8192" Usage="Android.Content.ActivityFlags.RetainInRecents" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_RETAIN_IN_RECENTS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleTop">
      <MemberSignature Language="C#" Value="SingleTop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags SingleTop = int32(536870912)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.SingleTop" />
      <MemberSignature Language="F#" Value="SingleTop = 536870912" Usage="Android.Content.ActivityFlags.SingleTop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_SINGLE_TOP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>536870912</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set, the activity will not be launched if it is already running
 at the top of the history stack.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskOnHome">
      <MemberSignature Language="C#" Value="TaskOnHome" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.ActivityFlags TaskOnHome = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:Android.Content.ActivityFlags.TaskOnHome" />
      <MemberSignature Language="F#" Value="TaskOnHome = 16384" Usage="Android.Content.ActivityFlags.TaskOnHome" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/content/Intent.FLAG_ACTIVITY_TASK_ON_HOME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ActivityFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">If set in an Intent passed to <see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />,
 this flag will cause a newly launching task to be placed on top of the current
 home activity task (if there is one).  That is, pressing back from the task
 will always return the user to home even if that was not the last activity they
 saw.   This can only be used in conjunction with <see cref="F:Android.Content.ActivityFlags.NewTask" />.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
