<Type Name="Cleaner" FullName="Java.Lang.Ref.Cleaner">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cleaner&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cleaner sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class Cleaner : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cleaner extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Ref.Cleaner" />
  <TypeSignature Language="F#" Value="type Cleaner = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/ref/Cleaner", ApiSince=33, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/ref/Cleaner", ApiSince=33, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <c>Cleaner</c> manages a set of object references and corresponding cleaning actions.</summary>
    <remarks>
      <para>
        <c>Cleaner</c> manages a set of object references and corresponding cleaning actions.</para>
      <para>Cleaning actions are <c>#register(Object object, Runnable action) registered</c>
            to run after the cleaner is notified that the object has become
            phantom reachable.
            The cleaner uses <c>PhantomReference</c> and <c>ReferenceQueue</c> to be
            notified when the reachability
            changes.</para>
      <para>Each cleaner operates independently, managing the pending cleaning actions
            and handling threading and termination when the cleaner is no longer in use.
            Registering an object reference and corresponding cleaning action returns
            a <c>Cleanable Cleanable</c>. The most efficient use is to explicitly invoke
            the <c>Cleanable#clean clean</c> method when the object is closed or
            no longer needed.
            The cleaning action is a <c>Runnable</c> to be invoked at most once when
            the object has become phantom reachable unless it has already been explicitly cleaned.
            Note that the cleaning action must not refer to the object being registered.
            If so, the object will not become phantom reachable and the cleaning action
            will not be invoked automatically.</para>
      <para>The execution of the cleaning action is performed
            by a thread associated with the cleaner.
            All exceptions thrown by the cleaning action are ignored.
            The cleaner and other cleaning actions are not affected by
            exceptions in a cleaning action.
            The thread runs until all registered cleaning actions have
            completed and the cleaner itself is reclaimed by the garbage collector.</para>
      <para>The behavior of cleaners during <c>System#exit(int) System.exit</c>
            is implementation specific. No guarantees are made relating
            to whether cleaning actions are invoked or not.</para>
      <para>Unless otherwise noted, passing a <c>null</c> argument to a constructor or
            method in this class will cause a
            <c>java.lang.NullPointerException NullPointerException</c> to be thrown.</para>
      <para>Added in 9.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/ref/Cleaner" title="Reference documentation">Java documentation for <code>java.lang.ref.Cleaner</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As Cleaner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Lang::Ref::Cleaner ^ Create();" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Ref.Cleaner? Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Ref.Cleaner Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Ref.Cleaner.Create" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; Java.Lang.Ref.Cleaner" Usage="Java.Lang.Ref.Cleaner.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("create", "()Ljava/lang/ref/Cleaner;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("create", "()Ljava/lang/ref/Cleaner;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Ref.Cleaner</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>Cleaner</c>.</summary>
        <returns>a new <c>Cleaner</c></returns>
        <remarks>
          <para>Returns a new <c>Cleaner</c>.</para>
          <para>The cleaner creates a <c>Thread#setDaemon(boolean) daemon thread</c>
            to process the phantom reachable objects and to invoke cleaning actions.
            The java.lang.Thread#getContextClassLoader context class loader
            of the thread is set to the
            <c>ClassLoader#getSystemClassLoader() system class loader</c>.
            The thread has no permissions, enforced only if a
            <c>java.lang.System#setSecurityManager(SecurityManager) SecurityManager is set</c>.</para>
          <para>The cleaner terminates when it is phantom reachable and all of the
            registered cleaning actions are complete.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ref/Cleaner#create()" title="Reference documentation">Java documentation for <code>java.lang.ref.Cleaner.create()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (threadFactory As IThreadFactory) As Cleaner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Lang::Ref::Cleaner ^ Create(Java::Util::Concurrent::IThreadFactory ^ threadFactory);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Ref.Cleaner? Create (Java.Util.Concurrent.IThreadFactory? threadFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Ref.Cleaner Create(class Java.Util.Concurrent.IThreadFactory threadFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Ref.Cleaner.Create(Java.Util.Concurrent.IThreadFactory)" />
      <MemberSignature Language="F#" Value="static member Create : Java.Util.Concurrent.IThreadFactory -&gt; Java.Lang.Ref.Cleaner" Usage="Java.Lang.Ref.Cleaner.Create threadFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("create", "(Ljava/util/concurrent/ThreadFactory;)Ljava/lang/ref/Cleaner;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("create", "(Ljava/util/concurrent/ThreadFactory;)Ljava/lang/ref/Cleaner;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Ref.Cleaner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadFactory" Type="Java.Util.Concurrent.IThreadFactory" />
      </Parameters>
      <Docs>
        <param name="threadFactory">a <c>ThreadFactory</c> to return a new <c>Thread</c>
                                 to process cleaning actions</param>
        <summary>Returns a new <c>Cleaner</c> using a <c>Thread</c> from the <c>ThreadFactory</c>.</summary>
        <returns>a new <c>Cleaner</c></returns>
        <remarks>
          <para>Returns a new <c>Cleaner</c> using a <c>Thread</c> from the <c>ThreadFactory</c>.</para>
          <para>A thread from the thread factory's <c>ThreadFactory#newThread(Runnable) newThread</c>
            method is set to be a <c>Thread#setDaemon(boolean) daemon thread</c>
            and started to process phantom reachable objects and invoke cleaning actions.
            On each call the <c>ThreadFactory#newThread(Runnable) thread factory</c>
            must provide a Thread that is suitable for performing the cleaning actions.</para>
          <para>The cleaner terminates when it is phantom reachable and all of the
            registered cleaning actions are complete.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/ref/Cleaner#create(java.util.concurrent.ThreadFactory)" title="Reference documentation">Java documentation for <code>java.lang.ref.Cleaner.create(java.util.concurrent.ThreadFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Ref.Cleaner.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Ref.Cleaner.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="VB.NET" Value="Public Function Register (obj As Object, action As IRunnable) As Cleaner.ICleanable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Ref::Cleaner::ICleanable ^ Register(Java::Lang::Object ^ obj, Java::Lang::IRunnable ^ action);" />
      <MemberSignature Language="C#" Value="public Java.Lang.Ref.Cleaner.ICleanable? Register (Java.Lang.Object? obj, Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Ref.Cleaner/ICleanable Register(class Java.Lang.Object obj, class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Ref.Cleaner.Register(Java.Lang.Object,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="member this.Register : Java.Lang.Object * Java.Lang.IRunnable -&gt; Java.Lang.Ref.Cleaner.ICleanable" Usage="cleaner.Register (obj, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("register", "(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/ref/Cleaner$Cleanable;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("register", "(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/ref/Cleaner$Cleanable;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Ref.Cleaner+ICleanable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Ref.Cleaner.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Ref.Cleaner.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Ref.Cleaner.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Ref.Cleaner.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
