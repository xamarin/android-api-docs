<Type Name="GLSurfaceView" FullName="Android.Opengl.GLSurfaceView">
  <TypeSignature Language="VB.NET" Value="Public Class GLSurfaceView&#xA;Inherits SurfaceView&#xA;Implements IDisposable, IJavaPeerable, ISurfaceHolderCallback2" />
  <TypeSignature Language="C++ CLI" Value="public ref class GLSurfaceView : Android::Views::SurfaceView, Android::Views::ISurfaceHolderCallback2, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class GLSurfaceView : Android.Views.SurfaceView, Android.Views.ISurfaceHolderCallback2, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GLSurfaceView extends Android.Views.SurfaceView implements class Android.Runtime.IJavaObject, class Android.Views.ISurfaceHolderCallback, class Android.Views.ISurfaceHolderCallback2, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Opengl.GLSurfaceView" />
  <TypeSignature Language="F#" Value="type GLSurfaceView = class&#xA;    inherit SurfaceView&#xA;    interface ISurfaceHolderCallback&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ISurfaceHolderCallback2" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.SurfaceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.ISurfaceHolderCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.ISurfaceHolderCallback2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/opengl/GLSurfaceView", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/opengl/GLSurfaceView", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>An implementation of SurfaceView that uses the dedicated surface for
            displaying OpenGL rendering.</summary>
    <remarks>
      <para>An implementation of SurfaceView that uses the dedicated surface for
            displaying OpenGL rendering.</para>
      <para>A GLSurfaceView provides the following features:</para>
      <para>&lt;ul&gt;
            &lt;li&gt;Manages a surface, which is a special piece of memory that can be
            composited into the Android view system.
            &lt;li&gt;Manages an EGL display, which enables OpenGL to render into a surface.
            &lt;li&gt;Accepts a user-provided Renderer object that does the actual rendering.
            &lt;li&gt;Renders on a dedicated thread to decouple rendering performance from the
            UI thread.
            &lt;li&gt;Supports both on-demand and continuous rendering.
            &lt;li&gt;Optionally wraps, traces, and/or error-checks the renderer's OpenGL calls.
            &lt;/ul&gt;
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about how to use OpenGL, read the
            <see href="https://developer.android.com/guide/topics/graphics/opengl.html">OpenGL</see> developer guide.</para>
      <para>&lt;/div&gt;
            
            &lt;h3&gt;Using GLSurfaceView&lt;/h3&gt;</para>
      <para>Typically you use GLSurfaceView by subclassing it and overriding one or more of the
            View system input event methods. If your application does not need to override event
            methods then GLSurfaceView can be used as-is. For the most part
            GLSurfaceView behavior is customized by calling "set" methods rather than by subclassing.
            For example, unlike a regular View, drawing is delegated to a separate Renderer object which
            is registered with the GLSurfaceView
            using the <c>#setRenderer(Renderer)</c> call.</para>
      <para>&lt;h3&gt;Initializing GLSurfaceView&lt;/h3&gt;
            All you have to do to initialize a GLSurfaceView is call <c>#setRenderer(Renderer)</c>.
            However, if desired, you can modify the default behavior of GLSurfaceView by calling one or
            more of these methods before calling setRenderer:
            &lt;ul&gt;
            &lt;li&gt;<c>#setDebugFlags(int)</c>&lt;li&gt;<c>#setEGLConfigChooser(boolean)</c>&lt;li&gt;<c>#setEGLConfigChooser(EGLConfigChooser)</c>&lt;li&gt;<c>#setEGLConfigChooser(int, int, int, int, int, int)</c>&lt;li&gt;<c>#setGLWrapper(GLWrapper)</c>&lt;/ul&gt;</para>
      <para>&lt;h4&gt;Specifying the android.view.Surface&lt;/h4&gt;
            By default GLSurfaceView will create a PixelFormat.RGB_888 format surface. If a translucent
            surface is required, call getHolder().setFormat(PixelFormat.TRANSLUCENT).
            The exact format of a TRANSLUCENT surface is device dependent, but it will be
            a 32-bit-per-pixel surface with 8 bits per component.</para>
      <para>&lt;h4&gt;Choosing an EGL Configuration&lt;/h4&gt;
            A given Android device may support multiple EGLConfig rendering configurations.
            The available configurations may differ in how many channels of data are present, as
            well as how many bits are allocated to each channel. Therefore, the first thing
            GLSurfaceView has to do when starting to render is choose what EGLConfig to use.</para>
      <para>By default GLSurfaceView chooses a EGLConfig that has an RGB_888 pixel format,
            with at least a 16-bit depth buffer and no stencil.</para>
      <para>If you would prefer a different EGLConfig
            you can override the default behavior by calling one of the
            setEGLConfigChooser methods.</para>
      <para>&lt;h4&gt;Debug Behavior&lt;/h4&gt;
            You can optionally modify the behavior of GLSurfaceView by calling
            one or more of the debugging methods <c>#setDebugFlags(int)</c>,
            and <c>#setGLWrapper</c>. These methods may be called before and/or after setRenderer, but
            typically they are called before setRenderer so that they take effect immediately.</para>
      <para>&lt;h4&gt;Setting a Renderer&lt;/h4&gt;
            Finally, you must call <c>#setRenderer</c> to register a <c>Renderer</c>.
            The renderer is
            responsible for doing the actual OpenGL rendering.</para>
      <para>&lt;h3&gt;Rendering Mode&lt;/h3&gt;
            Once the renderer is set, you can control whether the renderer draws
            continuously or on-demand by calling
            <c>#setRenderMode</c>. The default is continuous rendering.</para>
      <para>&lt;h3&gt;Activity Life-cycle&lt;/h3&gt;
            A GLSurfaceView must be notified when to pause and resume rendering. GLSurfaceView clients
            are required to call <c>#onPause()</c> when the activity stops and
            <c>#onResume()</c> when the activity starts. These calls allow GLSurfaceView to
            pause and resume the rendering thread, and also allow GLSurfaceView to release and recreate
            the OpenGL display.</para>
      <para>&lt;h3&gt;Handling events&lt;/h3&gt;</para>
      <para>To handle an event you will typically subclass GLSurfaceView and override the
            appropriate method, just as you would with any other View. However, when handling
            the event, you may need to communicate with the Renderer object
            that's running in the rendering thread. You can do this using any
            standard Java cross-thread communication mechanism. In addition,
            one relatively easy way to communicate with your renderer is
            to call
            <c>#queueEvent(Runnable)</c>. For example:</para>
      <code lang="text/java">class MyGLSurfaceView extends GLSurfaceView {
            
                private MyRenderer mMyRenderer;
            
                public void start() {
                    mMyRenderer = ...;
                    setRenderer(mMyRenderer);
                }
            
                public boolean onKeyDown(int keyCode, KeyEvent event) {
                    if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
                        queueEvent(new Runnable() {
                            // This method will be called on the rendering
                            // thread:
                            public void run() {
                                mMyRenderer.handleDpadCenter();
                            }});
                        return true;
                    }
                    return super.onKeyDown(keyCode, event);
                }
            }
            </code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GLSurfaceView(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public GLSurfaceView (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Opengl.GLSurfaceView : Android.Content.Context -&gt; Android.Opengl.GLSurfaceView" Usage="new Android.Opengl.GLSurfaceView context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Standard View constructor.</summary>
        <remarks>
          <para>Standard View constructor. In order to render something, you
            must call <c>#setRenderer</c> to register a renderer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#GLSurfaceView(android.content.Context)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.GLSurfaceView(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, attrs As IAttributeSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GLSurfaceView(Android::Content::Context ^ context, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public GLSurfaceView (Android.Content.Context? context, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Opengl.GLSurfaceView : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Opengl.GLSurfaceView" Usage="new Android.Opengl.GLSurfaceView (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Standard View constructor.</summary>
        <remarks>
          <para>Standard View constructor. In order to render something, you
            must call <c>#setRenderer</c> to register a renderer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#GLSurfaceView(android.content.Context,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.GLSurfaceView(android.content.Context, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; GLSurfaceView(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected GLSurfaceView (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Opengl.GLSurfaceView : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Opengl.GLSurfaceView" Usage="new Android.Opengl.GLSurfaceView (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugCheckGlError">
      <MemberSignature Language="VB.NET" Value="Public Const DebugCheckGlError As DebugFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Opengl::DebugFlags DebugCheckGlError = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Opengl.DebugFlags DebugCheckGlError = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.DebugFlags DebugCheckGlError = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Opengl.GLSurfaceView.DebugCheckGlError" />
      <MemberSignature Language="F#" Value="val mutable DebugCheckGlError : Android.Opengl.DebugFlags" Usage="Android.Opengl.GLSurfaceView.DebugCheckGlError" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2.cb_surfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEBUG_CHECK_GL_ERROR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEBUG_CHECK_GL_ERROR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.DebugFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.DebugFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Check glError() after every GL call and throw an exception if glError indicates
            that an error has occurred.</summary>
        <remarks>
          <para>Check glError() after every GL call and throw an exception if glError indicates
            that an error has occurred. This can be used to help track down which OpenGL ES call
            is causing an error.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#DEBUG_CHECK_GL_ERROR" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.DEBUG_CHECK_GL_ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.DebugFlags" />
      </Docs>
    </Member>
    <Member MemberName="DebugFlags">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DebugFlags As DebugFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Opengl::DebugFlags DebugFlags { Android::Opengl::DebugFlags get(); void set(Android::Opengl::DebugFlags value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Opengl.DebugFlags DebugFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Opengl.DebugFlags DebugFlags" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.GLSurfaceView.DebugFlags" />
      <MemberSignature Language="F#" Value="member this.DebugFlags : Android.Opengl.DebugFlags with get, set" Usage="Android.Opengl.GLSurfaceView.DebugFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDebugFlags", "()I", "GetGetDebugFlagsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDebugFlags", "()I", "GetGetDebugFlagsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDebugFlags", "(I)V", "GetSetDebugFlags_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDebugFlags", "(I)V", "GetSetDebugFlags_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="debugFlags">the new debug flags</param>
        <summary>Get the current value of the debug flags. -or- Set the debug flags to a new value.</summary>
        <value>the current value of the debug flags.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the current value of the debug flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#getDebugFlags()" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.getDebugFlags()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the debug flags to a new value. The value is
            constructed by OR-together zero or more
            of the DEBUG_CHECK_* constants. The debug flags take effect
            whenever a surface is created. The default value is zero.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setDebugFlags(int)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setDebugFlags(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.DebugCheckGlError" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.DebugLogGlCalls" />
      </Docs>
    </Member>
    <Member MemberName="DebugLogGlCalls">
      <MemberSignature Language="VB.NET" Value="Public Const DebugLogGlCalls As DebugFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Opengl::DebugFlags DebugLogGlCalls = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Opengl.DebugFlags DebugLogGlCalls = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.DebugFlags DebugLogGlCalls = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Opengl.GLSurfaceView.DebugLogGlCalls" />
      <MemberSignature Language="F#" Value="val mutable DebugLogGlCalls : Android.Opengl.DebugFlags" Usage="Android.Opengl.GLSurfaceView.DebugLogGlCalls" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2.cb_surfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEBUG_LOG_GL_CALLS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEBUG_LOG_GL_CALLS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.DebugFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.DebugFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Log GL calls to the system log at "verbose" level with tag "GLSurfaceView".</summary>
        <remarks>
          <para>Log GL calls to the system log at "verbose" level with tag "GLSurfaceView".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#DEBUG_LOG_GL_CALLS" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.DEBUG_LOG_GL_CALLS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.DebugFlags" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.GLSurfaceView.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Opengl.GLSurfaceView.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPause();" />
      <MemberSignature Language="C#" Value="public virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.OnPause" />
      <MemberSignature Language="F#" Value="abstract member OnPause : unit -&gt; unit&#xA;override this.OnPause : unit -&gt; unit" Usage="gLSurfaceView.OnPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pause the rendering thread, optionally tearing down the EGL context
            depending upon the value of <c>#setPreserveEGLContextOnPause(boolean)</c>.</summary>
        <remarks>
          <para>Pause the rendering thread, optionally tearing down the EGL context
            depending upon the value of <c>#setPreserveEGLContextOnPause(boolean)</c>.
            
            This method should be called when it is no longer desirable for the
            GLSurfaceView to continue rendering, such as in response to
            <c>android.app.Activity#onStop Activity.onStop</c>.
            
            Must not be called before a renderer has been set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#onPause()" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.onPause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnResume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnResume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResume();" />
      <MemberSignature Language="C#" Value="public virtual void OnResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.OnResume" />
      <MemberSignature Language="F#" Value="abstract member OnResume : unit -&gt; unit&#xA;override this.OnResume : unit -&gt; unit" Usage="gLSurfaceView.OnResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes the rendering thread, re-creating the OpenGL context if necessary.</summary>
        <remarks>
          <para>Resumes the rendering thread, re-creating the OpenGL context if necessary. It
            is the counterpart to <c>#onPause()</c>.
            
            This method should typically be called in
            <c>android.app.Activity#onStart Activity.onStart</c>.
            
            Must not be called before a renderer has been set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#onResume()" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.onResume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PreserveEGLContextOnPause">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreserveEGLContextOnPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreserveEGLContextOnPause { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool PreserveEGLContextOnPause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveEGLContextOnPause" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.GLSurfaceView.PreserveEGLContextOnPause" />
      <MemberSignature Language="F#" Value="member this.PreserveEGLContextOnPause : bool with get, set" Usage="Android.Opengl.GLSurfaceView.PreserveEGLContextOnPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreserveEGLContextOnPause", "()Z", "GetGetPreserveEGLContextOnPauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreserveEGLContextOnPause", "()Z", "GetGetPreserveEGLContextOnPauseHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPreserveEGLContextOnPause", "(Z)V", "GetSetPreserveEGLContextOnPause_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPreserveEGLContextOnPause", "(Z)V", "GetSetPreserveEGLContextOnPause_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="preserveOnPause">preserve the EGL context when paused</param>
        <summary>Control whether the EGL context is preserved when the GLSurfaceView is paused and
            resumed.</summary>
        <value>true if the EGL context will be preserved when paused</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#getPreserveEGLContextOnPause()" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.getPreserveEGLContextOnPause()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Control whether the EGL context is preserved when the GLSurfaceView is paused and
            resumed.</para>
          <para>If set to true, then the EGL context may be preserved when the GLSurfaceView is paused.</para>
          <para>Prior to API level 11, whether the EGL context is actually preserved or not
            depends upon whether the Android device can support an arbitrary number of
            EGL contexts or not. Devices that can only support a limited number of EGL
            contexts must release the EGL context in order to allow multiple applications
            to share the GPU.</para>
          <para>If set to false, the EGL context will be released when the GLSurfaceView is paused,
            and recreated when the GLSurfaceView is resumed.</para>
          <para>The default is false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setPreserveEGLContextOnPause(boolean)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setPreserveEGLContextOnPause(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="QueueEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueueEvent (r As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueueEvent(Java::Lang::IRunnable ^ r);" />
      <MemberSignature Language="C#" Value="public virtual void QueueEvent (Java.Lang.IRunnable? r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueueEvent(class Java.Lang.IRunnable r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.QueueEvent(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member QueueEvent : Java.Lang.IRunnable -&gt; unit&#xA;override this.QueueEvent : Java.Lang.IRunnable -&gt; unit" Usage="gLSurfaceView.QueueEvent r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queueEvent", "(Ljava/lang/Runnable;)V", "GetQueueEvent_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queueEvent", "(Ljava/lang/Runnable;)V", "GetQueueEvent_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="r">the runnable to be run on the GL rendering thread.</param>
        <summary>Queue a runnable to be run on the GL rendering thread.</summary>
        <remarks>
          <para>Queue a runnable to be run on the GL rendering thread. This can be used
            to communicate with the Renderer on the rendering thread.
            Must not be called before a renderer has been set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#queueEvent(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.queueEvent(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="QueueEvent">
      <MemberSignature Language="VB.NET" Value="Public Sub QueueEvent (r As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueueEvent(Action ^ r);" />
      <MemberSignature Language="C#" Value="public void QueueEvent (Action r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueEvent(class System.Action r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.QueueEvent(System.Action)" />
      <MemberSignature Language="F#" Value="member this.QueueEvent : Action -&gt; unit" Usage="gLSurfaceView.QueueEvent r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderMode As Rendermode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Opengl::Rendermode RenderMode { Android::Opengl::Rendermode get(); void set(Android::Opengl::Rendermode value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Opengl.Rendermode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Opengl.Rendermode RenderMode" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.GLSurfaceView.RenderMode" />
      <MemberSignature Language="F#" Value="member this.RenderMode : Android.Opengl.Rendermode with get, set" Usage="Android.Opengl.GLSurfaceView.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRenderMode", "()I", "GetGetRenderModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRenderMode", "()I", "GetGetRenderModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRenderMode", "(I)V", "GetSetRenderMode_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRenderMode", "(I)V", "GetSetRenderMode_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="renderMode">one of the RENDERMODE_X constants</param>
        <summary>Get the current rendering mode. -or- Set the rendering mode.</summary>
        <value>the current rendering mode.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the current rendering mode. May be called
            from any thread. Must not be called before a renderer has been set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#getRenderMode()" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.getRenderMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the rendering mode. When renderMode is
            RENDERMODE_CONTINUOUSLY, the renderer is called
            repeatedly to re-render the scene. When renderMode
            is RENDERMODE_WHEN_DIRTY, the renderer only rendered when the surface
            is created, or when <c>#requestRender</c> is called. Defaults to RENDERMODE_CONTINUOUSLY.</para>
          <para>Using RENDERMODE_WHEN_DIRTY can improve battery life and overall system performance
            by allowing the GPU and CPU to idle when the view does not need to be updated.</para>
          <para>This method can only be called after <c>#setRenderer(Renderer)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setRenderMode(int)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setRenderMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.RendermodeContinuously" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.RendermodeWhenDirty" />
      </Docs>
    </Member>
    <Member MemberName="RendermodeContinuously">
      <MemberSignature Language="VB.NET" Value="Public Const RendermodeContinuously As Rendermode  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Opengl::Rendermode RendermodeContinuously = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Opengl.Rendermode RendermodeContinuously = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.Rendermode RendermodeContinuously = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Opengl.GLSurfaceView.RendermodeContinuously" />
      <MemberSignature Language="F#" Value="val mutable RendermodeContinuously : Android.Opengl.Rendermode" Usage="Android.Opengl.GLSurfaceView.RendermodeContinuously" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2.cb_surfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RENDERMODE_CONTINUOUSLY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RENDERMODE_CONTINUOUSLY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.Rendermode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.Rendermode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The renderer is called
            continuously to re-render the scene.</summary>
        <remarks>
          <para>The renderer is called
            continuously to re-render the scene.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#RENDERMODE_CONTINUOUSLY" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.RENDERMODE_CONTINUOUSLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.RenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RendermodeWhenDirty">
      <MemberSignature Language="VB.NET" Value="Public Const RendermodeWhenDirty As Rendermode  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Opengl::Rendermode RendermodeWhenDirty = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Opengl.Rendermode RendermodeWhenDirty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.Rendermode RendermodeWhenDirty = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Opengl.GLSurfaceView.RendermodeWhenDirty" />
      <MemberSignature Language="F#" Value="val mutable RendermodeWhenDirty : Android.Opengl.Rendermode" Usage="Android.Opengl.GLSurfaceView.RendermodeWhenDirty" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2.cb_surfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RENDERMODE_WHEN_DIRTY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RENDERMODE_WHEN_DIRTY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.Rendermode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.Rendermode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The renderer only renders
            when the surface is created, or when <c>#requestRender</c> is called.</summary>
        <remarks>
          <para>The renderer only renders
            when the surface is created, or when <c>#requestRender</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#RENDERMODE_WHEN_DIRTY" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.RENDERMODE_WHEN_DIRTY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.RenderMode" />
        <altmember cref="M:Android.Opengl.GLSurfaceView.RequestRender" />
      </Docs>
    </Member>
    <Member MemberName="RequestRender">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequestRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequestRender();" />
      <MemberSignature Language="C#" Value="public virtual void RequestRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.RequestRender" />
      <MemberSignature Language="F#" Value="abstract member RequestRender : unit -&gt; unit&#xA;override this.RequestRender : unit -&gt; unit" Usage="gLSurfaceView.RequestRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestRender", "()V", "GetRequestRenderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestRender", "()V", "GetRequestRenderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request that the renderer render a frame.</summary>
        <remarks>
          <para>Request that the renderer render a frame.
            This method is typically used when the render mode has been set to
            <c>#RENDERMODE_WHEN_DIRTY</c>, so that frames are only rendered on demand.
            May be called
            from any thread. Must not be called before a renderer has been set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#requestRender()" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.requestRender()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEGLConfigChooser (configChooser As GLSurfaceView.IEGLConfigChooser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEGLConfigChooser(Android::Opengl::GLSurfaceView::IEGLConfigChooser ^ configChooser);" />
      <MemberSignature Language="C#" Value="public virtual void SetEGLConfigChooser (Android.Opengl.GLSurfaceView.IEGLConfigChooser? configChooser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLConfigChooser(class Android.Opengl.GLSurfaceView/IEGLConfigChooser configChooser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetEGLConfigChooser(Android.Opengl.GLSurfaceView.IEGLConfigChooser)" />
      <MemberSignature Language="F#" Value="abstract member SetEGLConfigChooser : Android.Opengl.GLSurfaceView.IEGLConfigChooser -&gt; unit&#xA;override this.SetEGLConfigChooser : Android.Opengl.GLSurfaceView.IEGLConfigChooser -&gt; unit" Usage="gLSurfaceView.SetEGLConfigChooser configChooser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEGLConfigChooser", "(Landroid/opengl/GLSurfaceView$EGLConfigChooser;)V", "GetSetEGLConfigChooser_Landroid_opengl_GLSurfaceView_EGLConfigChooser_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEGLConfigChooser", "(Landroid/opengl/GLSurfaceView$EGLConfigChooser;)V", "GetSetEGLConfigChooser_Landroid_opengl_GLSurfaceView_EGLConfigChooser_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configChooser" Type="Android.Opengl.GLSurfaceView+IEGLConfigChooser" />
      </Parameters>
      <Docs>
        <param name="configChooser">To be added.</param>
        <summary>Install a config chooser which will choose a config
            with at least the specified depthSize and stencilSize,
            and exactly the specified redSize, greenSize, blueSize and alphaSize.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setEGLConfigChooser(int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setEGLConfigChooser(int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEGLConfigChooser (needDepth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEGLConfigChooser(bool needDepth);" />
      <MemberSignature Language="C#" Value="public virtual void SetEGLConfigChooser (bool needDepth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLConfigChooser(bool needDepth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetEGLConfigChooser(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetEGLConfigChooser : bool -&gt; unit&#xA;override this.SetEGLConfigChooser : bool -&gt; unit" Usage="gLSurfaceView.SetEGLConfigChooser needDepth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEGLConfigChooser", "(Z)V", "GetSetEGLConfigChooser_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEGLConfigChooser", "(Z)V", "GetSetEGLConfigChooser_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="needDepth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="needDepth">needDepth</param>
        <summary>Install a config chooser which will choose a config
            as close to 16-bit RGB as possible, with or without an optional depth
            buffer as close to 16-bits as possible.</summary>
        <remarks>
          <para>Install a config chooser which will choose a config
            as close to 16-bit RGB as possible, with or without an optional depth
            buffer as close to 16-bits as possible.</para>
          <para>If this method is
            called, it must be called before <c>#setRenderer(Renderer)</c>
            is called.</para>
          <para>If no setEGLConfigChooser method is called, then by default the
            view will choose an RGB_888 surface with a depth buffer depth of
            at least 16 bits.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setEGLConfigChooser(boolean)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setEGLConfigChooser(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEGLConfigChooser (redSize As Integer, greenSize As Integer, blueSize As Integer, alphaSize As Integer, depthSize As Integer, stencilSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEGLConfigChooser(int redSize, int greenSize, int blueSize, int alphaSize, int depthSize, int stencilSize);" />
      <MemberSignature Language="C#" Value="public virtual void SetEGLConfigChooser (int redSize, int greenSize, int blueSize, int alphaSize, int depthSize, int stencilSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLConfigChooser(int32 redSize, int32 greenSize, int32 blueSize, int32 alphaSize, int32 depthSize, int32 stencilSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetEGLConfigChooser(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetEGLConfigChooser : int * int * int * int * int * int -&gt; unit&#xA;override this.SetEGLConfigChooser : int * int * int * int * int * int -&gt; unit" Usage="gLSurfaceView.SetEGLConfigChooser (redSize, greenSize, blueSize, alphaSize, depthSize, stencilSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEGLConfigChooser", "(IIIIII)V", "GetSetEGLConfigChooser_IIIIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEGLConfigChooser", "(IIIIII)V", "GetSetEGLConfigChooser_IIIIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redSize" Type="System.Int32" />
        <Parameter Name="greenSize" Type="System.Int32" />
        <Parameter Name="blueSize" Type="System.Int32" />
        <Parameter Name="alphaSize" Type="System.Int32" />
        <Parameter Name="depthSize" Type="System.Int32" />
        <Parameter Name="stencilSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="redSize">To be added.</param>
        <param name="greenSize">To be added.</param>
        <param name="blueSize">To be added.</param>
        <param name="alphaSize">To be added.</param>
        <param name="depthSize">To be added.</param>
        <param name="stencilSize">To be added.</param>
        <summary>Install a config chooser which will choose a config
            with at least the specified depthSize and stencilSize,
            and exactly the specified redSize, greenSize, blueSize and alphaSize.</summary>
        <remarks>
          <para>Install a config chooser which will choose a config
            with at least the specified depthSize and stencilSize,
            and exactly the specified redSize, greenSize, blueSize and alphaSize.</para>
          <para>If this method is
            called, it must be called before <c>#setRenderer(Renderer)</c>
            is called.</para>
          <para>If no setEGLConfigChooser method is called, then by default the
            view will choose an RGB_888 surface with a depth buffer depth of
            at least 16 bits.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setEGLConfigChooser(int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setEGLConfigChooser(int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLContextClientVersion">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEGLContextClientVersion (version As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEGLContextClientVersion(int version);" />
      <MemberSignature Language="C#" Value="public virtual void SetEGLContextClientVersion (int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLContextClientVersion(int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetEGLContextClientVersion(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetEGLContextClientVersion : int -&gt; unit&#xA;override this.SetEGLContextClientVersion : int -&gt; unit" Usage="gLSurfaceView.SetEGLContextClientVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEGLContextClientVersion", "(I)V", "GetSetEGLContextClientVersion_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEGLContextClientVersion", "(I)V", "GetSetEGLContextClientVersion_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="version">The EGLContext client version to choose. Use 2 for OpenGL ES 2.0</param>
        <summary>Inform the default EGLContextFactory and default EGLConfigChooser
            which EGLContext client version to pick.</summary>
        <remarks>
          <para>Inform the default EGLContextFactory and default EGLConfigChooser
            which EGLContext client version to pick.</para>
          <para>Use this method to create an OpenGL ES 2.0-compatible context.
            Example:</para>
          <code lang="text/java">public MyView(Context context) {
                    super(context);
                    setEGLContextClientVersion(2); // Pick an OpenGL ES 2.0 context.
                    setRenderer(new MyRenderer());
                }
            </code>
          <para>Note: Activities which require OpenGL ES 2.0 should indicate this by
            setting</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setEGLContextClientVersion(int)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setEGLContextClientVersion(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLContextFactory">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEGLContextFactory (factory As GLSurfaceView.IEGLContextFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEGLContextFactory(Android::Opengl::GLSurfaceView::IEGLContextFactory ^ factory);" />
      <MemberSignature Language="C#" Value="public virtual void SetEGLContextFactory (Android.Opengl.GLSurfaceView.IEGLContextFactory? factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLContextFactory(class Android.Opengl.GLSurfaceView/IEGLContextFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetEGLContextFactory(Android.Opengl.GLSurfaceView.IEGLContextFactory)" />
      <MemberSignature Language="F#" Value="abstract member SetEGLContextFactory : Android.Opengl.GLSurfaceView.IEGLContextFactory -&gt; unit&#xA;override this.SetEGLContextFactory : Android.Opengl.GLSurfaceView.IEGLContextFactory -&gt; unit" Usage="gLSurfaceView.SetEGLContextFactory factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEGLContextFactory", "(Landroid/opengl/GLSurfaceView$EGLContextFactory;)V", "GetSetEGLContextFactory_Landroid_opengl_GLSurfaceView_EGLContextFactory_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEGLContextFactory", "(Landroid/opengl/GLSurfaceView$EGLContextFactory;)V", "GetSetEGLContextFactory_Landroid_opengl_GLSurfaceView_EGLContextFactory_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Opengl.GLSurfaceView+IEGLContextFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>Install a custom EGLContextFactory.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setEGLContextFactory(android.opengl.EGLContextFactory)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setEGLContextFactory(android.opengl.EGLContextFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLWindowSurfaceFactory">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEGLWindowSurfaceFactory (factory As GLSurfaceView.IEGLWindowSurfaceFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEGLWindowSurfaceFactory(Android::Opengl::GLSurfaceView::IEGLWindowSurfaceFactory ^ factory);" />
      <MemberSignature Language="C#" Value="public virtual void SetEGLWindowSurfaceFactory (Android.Opengl.GLSurfaceView.IEGLWindowSurfaceFactory? factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLWindowSurfaceFactory(class Android.Opengl.GLSurfaceView/IEGLWindowSurfaceFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetEGLWindowSurfaceFactory(Android.Opengl.GLSurfaceView.IEGLWindowSurfaceFactory)" />
      <MemberSignature Language="F#" Value="abstract member SetEGLWindowSurfaceFactory : Android.Opengl.GLSurfaceView.IEGLWindowSurfaceFactory -&gt; unit&#xA;override this.SetEGLWindowSurfaceFactory : Android.Opengl.GLSurfaceView.IEGLWindowSurfaceFactory -&gt; unit" Usage="gLSurfaceView.SetEGLWindowSurfaceFactory factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEGLWindowSurfaceFactory", "(Landroid/opengl/GLSurfaceView$EGLWindowSurfaceFactory;)V", "GetSetEGLWindowSurfaceFactory_Landroid_opengl_GLSurfaceView_EGLWindowSurfaceFactory_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEGLWindowSurfaceFactory", "(Landroid/opengl/GLSurfaceView$EGLWindowSurfaceFactory;)V", "GetSetEGLWindowSurfaceFactory_Landroid_opengl_GLSurfaceView_EGLWindowSurfaceFactory_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Opengl.GLSurfaceView+IEGLWindowSurfaceFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>Install a custom EGLWindowSurfaceFactory.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setEGLWindowSurfaceFactory(android.opengl.EGLWindowSurfaceFactory)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setEGLWindowSurfaceFactory(android.opengl.EGLWindowSurfaceFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetGLWrapper">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetGLWrapper (glWrapper As GLSurfaceView.IGLWrapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetGLWrapper(Android::Opengl::GLSurfaceView::IGLWrapper ^ glWrapper);" />
      <MemberSignature Language="C#" Value="public virtual void SetGLWrapper (Android.Opengl.GLSurfaceView.IGLWrapper? glWrapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGLWrapper(class Android.Opengl.GLSurfaceView/IGLWrapper glWrapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetGLWrapper(Android.Opengl.GLSurfaceView.IGLWrapper)" />
      <MemberSignature Language="F#" Value="abstract member SetGLWrapper : Android.Opengl.GLSurfaceView.IGLWrapper -&gt; unit&#xA;override this.SetGLWrapper : Android.Opengl.GLSurfaceView.IGLWrapper -&gt; unit" Usage="gLSurfaceView.SetGLWrapper glWrapper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGLWrapper", "(Landroid/opengl/GLSurfaceView$GLWrapper;)V", "GetSetGLWrapper_Landroid_opengl_GLSurfaceView_GLWrapper_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGLWrapper", "(Landroid/opengl/GLSurfaceView$GLWrapper;)V", "GetSetGLWrapper_Landroid_opengl_GLSurfaceView_GLWrapper_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glWrapper" Type="Android.Opengl.GLSurfaceView+IGLWrapper" />
      </Parameters>
      <Docs>
        <param name="glWrapper">the new GLWrapper</param>
        <summary>Set the glWrapper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setGLWrapper(android.opengl.GLWrapper)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setGLWrapper(android.opengl.GLWrapper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetRenderer">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRenderer (renderer As GLSurfaceView.IRenderer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRenderer(Android::Opengl::GLSurfaceView::IRenderer ^ renderer);" />
      <MemberSignature Language="C#" Value="public virtual void SetRenderer (Android.Opengl.GLSurfaceView.IRenderer? renderer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRenderer(class Android.Opengl.GLSurfaceView/IRenderer renderer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SetRenderer(Android.Opengl.GLSurfaceView.IRenderer)" />
      <MemberSignature Language="F#" Value="abstract member SetRenderer : Android.Opengl.GLSurfaceView.IRenderer -&gt; unit&#xA;override this.SetRenderer : Android.Opengl.GLSurfaceView.IRenderer -&gt; unit" Usage="gLSurfaceView.SetRenderer renderer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRenderer", "(Landroid/opengl/GLSurfaceView$Renderer;)V", "GetSetRenderer_Landroid_opengl_GLSurfaceView_Renderer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRenderer", "(Landroid/opengl/GLSurfaceView$Renderer;)V", "GetSetRenderer_Landroid_opengl_GLSurfaceView_Renderer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="Android.Opengl.GLSurfaceView+IRenderer" />
      </Parameters>
      <Docs>
        <param name="renderer">the renderer to use to perform OpenGL drawing.</param>
        <summary>Set the renderer associated with this view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#setRenderer(android.opengl.Renderer)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.setRenderer(android.opengl.Renderer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceChanged (holder As ISurfaceHolder, format As Format, w As Integer, h As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceChanged(Android::Views::ISurfaceHolder ^ holder, Android::Graphics::Format format, int w, int h);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceChanged (Android.Views.ISurfaceHolder? holder, Android.Graphics.Format format, int w, int h);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceChanged(class Android.Views.ISurfaceHolder holder, valuetype Android.Graphics.Format format, int32 w, int32 h) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceChanged : Android.Views.ISurfaceHolder * Android.Graphics.Format * int * int -&gt; unit&#xA;override this.SurfaceChanged : Android.Views.ISurfaceHolder * Android.Graphics.Format * int * int -&gt; unit" Usage="gLSurfaceView.SurfaceChanged (holder, format, w, h)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback.SurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="format" Type="Android.Graphics.Format">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface has changed.</param>
        <param name="format">The new PixelFormat of the surface.</param>
        <param name="w">The new width of the surface.</param>
        <param name="h">The new height of the surface.
</param>
        <summary>This method is part of the SurfaceHolder.</summary>
        <remarks>
          <para>This method is part of the SurfaceHolder.Callback interface, and is
            not normally called or subclassed by clients of GLSurfaceView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#surfaceChanged(android.view.SurfaceHolder,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.surfaceChanged(android.view.SurfaceHolder, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceCreated">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceCreated (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceCreated(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceCreated (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceCreated(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SurfaceCreated(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceCreated : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SurfaceCreated : Android.Views.ISurfaceHolder -&gt; unit" Usage="gLSurfaceView.SurfaceCreated holder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback.SurfaceCreated(Android.Views.ISurfaceHolder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceCreated_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceCreated_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface is being created.
</param>
        <summary>This method is part of the SurfaceHolder.</summary>
        <remarks>
          <para>This method is part of the SurfaceHolder.Callback interface, and is
            not normally called or subclassed by clients of GLSurfaceView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#surfaceCreated(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.surfaceCreated(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceDestroyed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceDestroyed (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceDestroyed(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceDestroyed (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceDestroyed(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SurfaceDestroyed(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceDestroyed : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SurfaceDestroyed : Android.Views.ISurfaceHolder -&gt; unit" Usage="gLSurfaceView.SurfaceDestroyed holder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback.SurfaceDestroyed(Android.Views.ISurfaceHolder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface is being destroyed.
</param>
        <summary>This method is part of the SurfaceHolder.</summary>
        <remarks>
          <para>This method is part of the SurfaceHolder.Callback interface, and is
            not normally called or subclassed by clients of GLSurfaceView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#surfaceDestroyed(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.surfaceDestroyed(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceRedrawNeeded">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceRedrawNeeded (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceRedrawNeeded(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceRedrawNeeded (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceRedrawNeeded(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SurfaceRedrawNeeded(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceRedrawNeeded : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SurfaceRedrawNeeded : Android.Views.ISurfaceHolder -&gt; unit" Usage="gLSurfaceView.SurfaceRedrawNeeded holder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback2.SurfaceRedrawNeeded(Android.Views.ISurfaceHolder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>This method is part of the SurfaceHolder.</summary>
        <remarks>
          <para>This method is part of the SurfaceHolder.Callback2 interface, and is
            not normally called or subclassed by clients of GLSurfaceView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#surfaceRedrawNeeded(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.surfaceRedrawNeeded(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceRedrawNeededAsync">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceRedrawNeededAsync (holder As ISurfaceHolder, finishDrawing As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceRedrawNeededAsync(Android::Views::ISurfaceHolder ^ holder, Java::Lang::IRunnable ^ finishDrawing);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceRedrawNeededAsync (Android.Views.ISurfaceHolder? holder, Java.Lang.IRunnable? finishDrawing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceRedrawNeededAsync(class Android.Views.ISurfaceHolder holder, class Java.Lang.IRunnable finishDrawing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.GLSurfaceView.SurfaceRedrawNeededAsync(Android.Views.ISurfaceHolder,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceRedrawNeededAsync : Android.Views.ISurfaceHolder * Java.Lang.IRunnable -&gt; unit&#xA;override this.SurfaceRedrawNeededAsync : Android.Views.ISurfaceHolder * Java.Lang.IRunnable -&gt; unit" Usage="gLSurfaceView.SurfaceRedrawNeededAsync (holder, finishDrawing)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback2.SurfaceRedrawNeededAsync(Android.Views.ISurfaceHolder,Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceRedrawNeededAsync", "(Landroid/view/SurfaceHolder;Ljava/lang/Runnable;)V", "GetSurfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceRedrawNeededAsync", "(Landroid/view/SurfaceHolder;Ljava/lang/Runnable;)V", "GetSurfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="finishDrawing" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <param name="finishDrawing">To be added.</param>
        <summary>This method is part of the SurfaceHolder.</summary>
        <remarks>
          <para>This method is part of the SurfaceHolder.Callback2 interface, and is
            not normally called or subclassed by clients of GLSurfaceView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/GLSurfaceView#surfaceRedrawNeededAsync(android.view.SurfaceHolder,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.opengl.GLSurfaceView.surfaceRedrawNeededAsync(android.view.SurfaceHolder, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.GLSurfaceView.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Opengl.GLSurfaceView.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.GLSurfaceView.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Opengl.GLSurfaceView.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
