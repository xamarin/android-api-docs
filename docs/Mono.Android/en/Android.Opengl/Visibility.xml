<Type Name="Visibility" FullName="Android.Opengl.Visibility">
  <TypeSignature Language="C#" Value="public class Visibility : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Visibility extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Opengl.Visibility" />
  <TypeSignature Language="F#" Value="type Visibility = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/Visibility", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>A collection of utility methods for computing the visibility of triangle
            meshes.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/opengl/Visibility" title="Reference documentation">Java documentation for <code>android.opengl.Visibility</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Visibility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.Visibility.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visibility (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.Visibility.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Opengl.Visibility : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Opengl.Visibility" Usage="new Android.Opengl.Visibility (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeBoundingSphere">
      <MemberSignature Language="C#" Value="public static void ComputeBoundingSphere (float[] positions, int positionsOffset, int positionsCount, float[] sphere, int sphereOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComputeBoundingSphere(float32[] positions, int32 positionsOffset, int32 positionsCount, float32[] sphere, int32 sphereOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.Visibility.ComputeBoundingSphere(System.Single[],System.Int32,System.Int32,System.Single[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member ComputeBoundingSphere : single[] * int * int * single[] * int -&gt; unit" Usage="Android.Opengl.Visibility.ComputeBoundingSphere (positions, positionsOffset, positionsCount, sphere, sphereOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeBoundingSphere", "([FII[FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="positions" Type="System.Single[]" />
        <Parameter Name="positionsOffset" Type="System.Int32" />
        <Parameter Name="positionsCount" Type="System.Int32" />
        <Parameter Name="sphere" Type="System.Single[]" />
        <Parameter Name="sphereOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="positions">positions in x, y, z triples</param>
        <param name="positionsOffset">offset into positions array</param>
        <param name="positionsCount">number of position triples to process</param>
        <param name="sphere">array containing the output as (x, y, z, r)</param>
        <param name="sphereOffset">offset where the sphere data will be written</param>
        <summary>Compute a bounding sphere for a set of points.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/Visibility#computeBoundingSphere(float[],%20int,%20int,%20float[],%20int)" title="Reference documentation">Java documentation for <code>android.opengl.Visibility.computeBoundingSphere(float[], int, int, float[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if positions is null,
 positionsOffset  positions.length - positionsCount,
 sphere is null, sphereOffset  sphere.length - 4.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FrustumCullSpheres">
      <MemberSignature Language="C#" Value="public static int FrustumCullSpheres (float[] mvp, int mvpOffset, float[] spheres, int spheresOffset, int spheresCount, int[] results, int resultsOffset, int resultsCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FrustumCullSpheres(float32[] mvp, int32 mvpOffset, float32[] spheres, int32 spheresOffset, int32 spheresCount, int32[] results, int32 resultsOffset, int32 resultsCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.Visibility.FrustumCullSpheres(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FrustumCullSpheres : single[] * int * single[] * int * int * int[] * int * int -&gt; int" Usage="Android.Opengl.Visibility.FrustumCullSpheres (mvp, mvpOffset, spheres, spheresOffset, spheresCount, results, resultsOffset, resultsCapacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("frustumCullSpheres", "([FI[FII[III)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mvp" Type="System.Single[]" />
        <Parameter Name="mvpOffset" Type="System.Int32" />
        <Parameter Name="spheres" Type="System.Single[]" />
        <Parameter Name="spheresOffset" Type="System.Int32" />
        <Parameter Name="spheresCount" Type="System.Int32" />
        <Parameter Name="results" Type="System.Int32[]" />
        <Parameter Name="resultsOffset" Type="System.Int32" />
        <Parameter Name="resultsCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mvp">a float array containing the mode-view-projection matrix</param>
        <param name="mvpOffset">The offset of the mvp data within the mvp array.</param>
        <param name="spheres">a float array containing the sphere data.</param>
        <param name="spheresOffset">an offset into the sphere array where the sphere
                   data starts</param>
        <param name="spheresCount">the number of spheres to cull.</param>
        <param name="results">an integer array containing the indices of the spheres
            that are either contained entirely within or intersect the frustum.</param>
        <param name="resultsOffset">an offset into the results array where the results
                   start.</param>
        <param name="resultsCapacity">the number of array elements available for storing
                   results.</param>
        <summary>Given an OpenGL ES ModelView-Projection matrix (which implicitly
            describes a frustum) and a list of spheres, determine which spheres
            intersect the frustum.</summary>
        <returns>the number of spheres that intersected the frustum. Can be
            larger than resultsCapacity, in which case only the first resultsCapacity
            results are written into the results array.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/Visibility#frustumCullSpheres(float[],%20int,%20float[],%20int,%20int,%20int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.opengl.Visibility.frustumCullSpheres(float[], int, float[], int, int, int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if mvp is null, mvpOffset  mvp.length - 16, spheres is null, spheresOffset  spheres.length - sphereCount,
 results is null, resultsOffset  results.length -
 resultsCapacity.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.Visibility.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Opengl.Visibility.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.Visibility.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Opengl.Visibility.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Opengl.Visibility.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Opengl.Visibility.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibilityTest">
      <MemberSignature Language="C#" Value="public static int VisibilityTest (float[] ws, int wsOffset, float[] positions, int positionsOffset, char[] indices, int indicesOffset, int indexCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 VisibilityTest(float32[] ws, int32 wsOffset, float32[] positions, int32 positionsOffset, char[] indices, int32 indicesOffset, int32 indexCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Opengl.Visibility.VisibilityTest(System.Single[],System.Int32,System.Single[],System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member VisibilityTest : single[] * int * single[] * int * char[] * int * int -&gt; int" Usage="Android.Opengl.Visibility.VisibilityTest (ws, wsOffset, positions, positionsOffset, indices, indicesOffset, indexCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("visibilityTest", "([FI[FI[CII)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.Single[]" />
        <Parameter Name="wsOffset" Type="System.Int32" />
        <Parameter Name="positions" Type="System.Single[]" />
        <Parameter Name="positionsOffset" Type="System.Int32" />
        <Parameter Name="indices" Type="System.Char[]" />
        <Parameter Name="indicesOffset" Type="System.Int32" />
        <Parameter Name="indexCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ws">the world space to screen space transform matrix, as an OpenGL
            column matrix.</param>
        <param name="wsOffset">an index into the ws array where the data starts.</param>
        <param name="positions">the vertex positions (x, y, z).</param>
        <param name="positionsOffset">the index in the positions array where the data
                   starts.</param>
        <param name="indices">the indices of the triangle list. The indices are
            expressed as chars because they are unsigned 16-bit values.</param>
        <param name="indicesOffset">the index in the indices array where the index data
                   starts.</param>
        <param name="indexCount">the number of indices in use. Typically a multiple of
            three. If not a multiple of three, the remaining one or two indices will
            be ignored.</param>
        <summary>Test whether a given triangle mesh is visible on the screen.</summary>
        <returns>2 if all of the mesh is visible, 1 if some part of the mesh is
                    visible, 0 if no part is visible.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/opengl/Visibility#visibilityTest(float[],%20int,%20float[],%20int,%20char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.opengl.Visibility.visibilityTest(float[], int, float[], int, char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if ws is null, wsOffset  indices.length - indexCount
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
