<Type Name="X509ExtendedTrustManager" FullName="Javax.Net.Ssl.X509ExtendedTrustManager">
  <TypeSignature Language="C#" Value="public abstract class X509ExtendedTrustManager : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Javax.Net.Ssl.IX509TrustManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit X509ExtendedTrustManager extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Javax.Net.Ssl.ITrustManager, class Javax.Net.Ssl.IX509TrustManager, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.Ssl.X509ExtendedTrustManager" />
  <TypeSignature Language="F#" Value="type X509ExtendedTrustManager = class&#xA;    inherit Object&#xA;    interface IX509TrustManager&#xA;    interface ITrustManager&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Javax.Net.Ssl.ITrustManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Javax.Net.Ssl.IX509TrustManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/ssl/X509ExtendedTrustManager", ApiSince=24, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/ssl/X509ExtendedTrustManager", ApiSince=24, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Extensions to the <c>X509TrustManager</c> interface to support
            SSL/TLS connection sensitive trust management.</summary>
    <remarks>
      <para>Extensions to the <c>X509TrustManager</c> interface to support
            SSL/TLS connection sensitive trust management.</para>
      <para>To prevent man-in-the-middle attacks, hostname checks can be done
            to verify that the hostname in an end-entity certificate matches the
            targeted hostname.  TLS does not require such checks, but some protocols
            over TLS (such as HTTPS) do.  In earlier versions of the JDK, the
            certificate chain checks were done at the SSL/TLS layer, and the hostname
            verification checks were done at the layer over TLS.  This class allows
            for the checking to be done during a single call to this class.</para>
      <para>RFC 2830 defines the server identification specification for the "LDAPS"
            algorithm. RFC 2818 defines both the server identification and the
            client identification specification for the "HTTPS" algorithm.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedTrustManager" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedTrustManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509ExtendedTrustManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509ExtendedTrustManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.X509ExtendedTrustManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.Ssl.X509ExtendedTrustManager" Usage="new Javax.Net.Ssl.X509ExtendedTrustManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckClientTrusted">
      <MemberSignature Language="C#" Value="public abstract void CheckClientTrusted (Java.Security.Cert.X509Certificate[]? chain, string? authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckClientTrusted(class Java.Security.Cert.X509Certificate[] chain, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.CheckClientTrusted(Java.Security.Cert.X509Certificate[],System.String)" />
      <MemberSignature Language="F#" Value="abstract member CheckClientTrusted : Java.Security.Cert.X509Certificate[] * string -&gt; unit" Usage="x509ExtendedTrustManager.CheckClientTrusted (chain, authType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509TrustManager.CheckClientTrusted(Java.Security.Cert.X509Certificate[],System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V", "GetCheckClientTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V", "GetCheckClientTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chain" Type="Java.Security.Cert.X509Certificate[]" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chain">the peer certificate chain</param>
        <param name="authType">the authentication type based on the client certificate</param>
        <summary>Given the partial or complete certificate chain provided by the
            peer, build a certificate path to a trusted root and return if
            it can be validated and is trusted for client SSL
            authentication based on the authentication type.</summary>
        <remarks>
          <para>Given the partial or complete certificate chain provided by the
            peer, build a certificate path to a trusted root and return if
            it can be validated and is trusted for client SSL
            authentication based on the authentication type.</para>
          <para>The authentication type is determined by the actual certificate
            used. For instance, if RSAPublicKey is used, the authType
            should be "RSA". Checking is case-sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509TrustManager#checkClientTrusted(java.security.cert.X509Certificate[],%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509TrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckClientTrusted">
      <MemberSignature Language="C#" Value="public abstract void CheckClientTrusted (Java.Security.Cert.X509Certificate[]? chain, string? authType, Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckClientTrusted(class Java.Security.Cert.X509Certificate[] chain, string authType, class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.CheckClientTrusted(Java.Security.Cert.X509Certificate[],System.String,Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member CheckClientTrusted : Java.Security.Cert.X509Certificate[] * string * Java.Net.Socket -&gt; unit" Usage="x509ExtendedTrustManager.CheckClientTrusted (chain, authType, socket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V", "GetCheckClientTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljava_net_Socket_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V", "GetCheckClientTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljava_net_Socket_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chain" Type="Java.Security.Cert.X509Certificate[]" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="chain">the peer certificate chain</param>
        <param name="authType">the key exchange algorithm used</param>
        <param name="socket">the socket used for this connection. This parameter
                   can be null, which indicates that implementations need not check
                   the ssl parameters</param>
        <summary>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</summary>
        <remarks>
          <para>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</para>
          <para>The authentication type is determined by the actual certificate
            used. For instance, if RSAPublicKey is used, the authType
            should be "RSA". Checking is case-sensitive.</para>
          <para>If the <c>socket</c> parameter is an instance of
            <c>javax.net.ssl.SSLSocket</c>, and the endpoint identification
            algorithm of the <c>SSLParameters</c> is non-empty, to prevent
            man-in-the-middle attacks, the address that the <c>socket</c>
            connected to should be checked against the peer's identity presented
            in the end-entity X509 certificate, as specified in the endpoint
            identification algorithm.</para>
          <para>If the <c>socket</c> parameter is an instance of
            <c>javax.net.ssl.SSLSocket</c>, and the algorithm constraints of the
            <c>SSLParameters</c> is non-null, for every certificate in the
            certification path, fields such as subject public key, the signature
            algorithm, key usage, extended key usage, etc. need to conform to the
            algorithm constraints in place on this socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedTrustManager#checkClientTrusted(java.security.cert.X509Certificate[],%20java.lang.String,%20java.net.Socket)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckClientTrusted">
      <MemberSignature Language="C#" Value="public abstract void CheckClientTrusted (Java.Security.Cert.X509Certificate[]? chain, string? authType, Javax.Net.Ssl.SSLEngine? engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckClientTrusted(class Java.Security.Cert.X509Certificate[] chain, string authType, class Javax.Net.Ssl.SSLEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.CheckClientTrusted(Java.Security.Cert.X509Certificate[],System.String,Javax.Net.Ssl.SSLEngine)" />
      <MemberSignature Language="F#" Value="abstract member CheckClientTrusted : Java.Security.Cert.X509Certificate[] * string * Javax.Net.Ssl.SSLEngine -&gt; unit" Usage="x509ExtendedTrustManager.CheckClientTrusted (chain, authType, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V", "GetCheckClientTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljavax_net_ssl_SSLEngine_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V", "GetCheckClientTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljavax_net_ssl_SSLEngine_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chain" Type="Java.Security.Cert.X509Certificate[]" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="engine" Type="Javax.Net.Ssl.SSLEngine" />
      </Parameters>
      <Docs>
        <param name="chain">the peer certificate chain</param>
        <param name="authType">the key exchange algorithm used</param>
        <param name="engine">the engine used for this connection. This parameter
                   can be null, which indicates that implementations need not check
                   the ssl parameters</param>
        <summary>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</summary>
        <remarks>
          <para>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</para>
          <para>The authentication type is determined by the actual certificate
            used. For instance, if RSAPublicKey is used, the authType
            should be "RSA". Checking is case-sensitive.</para>
          <para>If the <c>engine</c> parameter is available, and the endpoint
            identification algorithm of the <c>SSLParameters</c> is
            non-empty, to prevent man-in-the-middle attacks, the address that
            the <c>engine</c> connected to should be checked against
            the peer's identity presented in the end-entity X509 certificate,
            as specified in the endpoint identification algorithm.</para>
          <para>If the <c>engine</c> parameter is available, and the algorithm
            constraints of the <c>SSLParameters</c> is non-null, for every
            certificate in the certification path, fields such as subject public
            key, the signature algorithm, key usage, extended key usage, etc.
            need to conform to the algorithm constraints in place on this engine.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedTrustManager#checkClientTrusted(java.security.cert.X509Certificate[],%20java.lang.String,%20javax.net.ssl.SSLEngine)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckServerTrusted">
      <MemberSignature Language="C#" Value="public abstract void CheckServerTrusted (Java.Security.Cert.X509Certificate[]? chain, string? authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckServerTrusted(class Java.Security.Cert.X509Certificate[] chain, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.CheckServerTrusted(Java.Security.Cert.X509Certificate[],System.String)" />
      <MemberSignature Language="F#" Value="abstract member CheckServerTrusted : Java.Security.Cert.X509Certificate[] * string -&gt; unit" Usage="x509ExtendedTrustManager.CheckServerTrusted (chain, authType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509TrustManager.CheckServerTrusted(Java.Security.Cert.X509Certificate[],System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkServerTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V", "GetCheckServerTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkServerTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V", "GetCheckServerTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chain" Type="Java.Security.Cert.X509Certificate[]" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chain">the peer certificate chain</param>
        <param name="authType">the key exchange algorithm used</param>
        <summary>Given the partial or complete certificate chain provided by the
            peer, build a certificate path to a trusted root and return if
            it can be validated and is trusted for server SSL
            authentication based on the authentication type.</summary>
        <remarks>
          <para>Given the partial or complete certificate chain provided by the
            peer, build a certificate path to a trusted root and return if
            it can be validated and is trusted for server SSL
            authentication based on the authentication type.</para>
          <para>The authentication type is the key exchange algorithm portion
            of the cipher suites represented as a String, such as "RSA",
            "DHE_DSS". Note: for some exportable cipher suites, the key
            exchange algorithm is determined at run time during the
            handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5,
            the authType should be RSA_EXPORT when an ephemeral RSA key is
            used for the key exchange, and RSA when the key from the server
            certificate is used. Checking is case-sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509TrustManager#checkServerTrusted(java.security.cert.X509Certificate[],%20java.lang.String)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509TrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckServerTrusted">
      <MemberSignature Language="C#" Value="public abstract void CheckServerTrusted (Java.Security.Cert.X509Certificate[]? chain, string? authType, Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckServerTrusted(class Java.Security.Cert.X509Certificate[] chain, string authType, class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.CheckServerTrusted(Java.Security.Cert.X509Certificate[],System.String,Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member CheckServerTrusted : Java.Security.Cert.X509Certificate[] * string * Java.Net.Socket -&gt; unit" Usage="x509ExtendedTrustManager.CheckServerTrusted (chain, authType, socket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkServerTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V", "GetCheckServerTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljava_net_Socket_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkServerTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V", "GetCheckServerTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljava_net_Socket_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chain" Type="Java.Security.Cert.X509Certificate[]" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="chain">the peer certificate chain</param>
        <param name="authType">the key exchange algorithm used</param>
        <param name="socket">the socket used for this connection. This parameter
                   can be null, which indicates that implementations need not check
                   the ssl parameters</param>
        <summary>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</summary>
        <remarks>
          <para>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</para>
          <para>The authentication type is the key exchange algorithm portion
            of the cipher suites represented as a String, such as "RSA",
            "DHE_DSS". Note: for some exportable cipher suites, the key
            exchange algorithm is determined at run time during the
            handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5,
            the authType should be RSA_EXPORT when an ephemeral RSA key is
            used for the key exchange, and RSA when the key from the server
            certificate is used. Checking is case-sensitive.</para>
          <para>If the <c>socket</c> parameter is an instance of
            <c>javax.net.ssl.SSLSocket</c>, and the endpoint identification
            algorithm of the <c>SSLParameters</c> is non-empty, to prevent
            man-in-the-middle attacks, the address that the <c>socket</c>
            connected to should be checked against the peer's identity presented
            in the end-entity X509 certificate, as specified in the endpoint
            identification algorithm.</para>
          <para>If the <c>socket</c> parameter is an instance of
            <c>javax.net.ssl.SSLSocket</c>, and the algorithm constraints of the
             <c>SSLParameters</c> is non-null, for every certificate in the
            certification path, fields such as subject public key, the signature
            algorithm, key usage, extended key usage, etc. need to conform to the
            algorithm constraints in place on this socket.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedTrustManager#checkServerTrusted(java.security.cert.X509Certificate[],%20java.lang.String,%20java.net.Socket)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckServerTrusted">
      <MemberSignature Language="C#" Value="public abstract void CheckServerTrusted (Java.Security.Cert.X509Certificate[]? chain, string? authType, Javax.Net.Ssl.SSLEngine? engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckServerTrusted(class Java.Security.Cert.X509Certificate[] chain, string authType, class Javax.Net.Ssl.SSLEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.CheckServerTrusted(Java.Security.Cert.X509Certificate[],System.String,Javax.Net.Ssl.SSLEngine)" />
      <MemberSignature Language="F#" Value="abstract member CheckServerTrusted : Java.Security.Cert.X509Certificate[] * string * Javax.Net.Ssl.SSLEngine -&gt; unit" Usage="x509ExtendedTrustManager.CheckServerTrusted (chain, authType, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkServerTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V", "GetCheckServerTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljavax_net_ssl_SSLEngine_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkServerTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V", "GetCheckServerTrusted_arrayLjava_security_cert_X509Certificate_Ljava_lang_String_Ljavax_net_ssl_SSLEngine_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chain" Type="Java.Security.Cert.X509Certificate[]" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="engine" Type="Javax.Net.Ssl.SSLEngine" />
      </Parameters>
      <Docs>
        <param name="chain">the peer certificate chain</param>
        <param name="authType">the key exchange algorithm used</param>
        <param name="engine">the engine used for this connection. This parameter
                   can be null, which indicates that implementations need not check
                   the ssl parameters</param>
        <summary>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</summary>
        <remarks>
          <para>Given the partial or complete certificate chain provided by the
            peer, build and validate the certificate path based on the
            authentication type and ssl parameters.</para>
          <para>The authentication type is the key exchange algorithm portion
            of the cipher suites represented as a String, such as "RSA",
            "DHE_DSS". Note: for some exportable cipher suites, the key
            exchange algorithm is determined at run time during the
            handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5,
            the authType should be RSA_EXPORT when an ephemeral RSA key is
            used for the key exchange, and RSA when the key from the server
            certificate is used. Checking is case-sensitive.</para>
          <para>If the <c>engine</c> parameter is available, and the endpoint
            identification algorithm of the <c>SSLParameters</c> is
            non-empty, to prevent man-in-the-middle attacks, the address that
            the <c>engine</c> connected to should be checked against
            the peer's identity presented in the end-entity X509 certificate,
            as specified in the endpoint identification algorithm.</para>
          <para>If the <c>engine</c> parameter is available, and the algorithm
            constraints of the <c>SSLParameters</c> is non-null, for every
            certificate in the certification path, fields such as subject public
            key, the signature algorithm, key usage, extended key usage, etc.
            need to conform to the algorithm constraints in place on this engine.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedTrustManager#checkServerTrusted(java.security.cert.X509Certificate[],%20java.lang.String,%20javax.net.ssl.SSLEngine)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLEngine)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAcceptedIssuers">
      <MemberSignature Language="C#" Value="public abstract Java.Security.Cert.X509Certificate[]? GetAcceptedIssuers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.X509Certificate[] GetAcceptedIssuers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedTrustManager.GetAcceptedIssuers" />
      <MemberSignature Language="F#" Value="abstract member GetAcceptedIssuers : unit -&gt; Java.Security.Cert.X509Certificate[]" Usage="x509ExtendedTrustManager.GetAcceptedIssuers " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509TrustManager.GetAcceptedIssuers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAcceptedIssuers", "()[Ljava/security/cert/X509Certificate;", "GetGetAcceptedIssuersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAcceptedIssuers", "()[Ljava/security/cert/X509Certificate;", "GetGetAcceptedIssuersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.X509Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an array of certificate authority certificates
            which are trusted for authenticating peers.</summary>
        <returns>a non-null (possibly empty) array of acceptable
                     CA issuer certificates.</returns>
        <remarks>
          <para>Return an array of certificate authority certificates
            which are trusted for authenticating peers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509TrustManager#getAcceptedIssuers()" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509TrustManager.getAcceptedIssuers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.X509ExtendedTrustManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.Ssl.X509ExtendedTrustManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.X509ExtendedTrustManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.Ssl.X509ExtendedTrustManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.X509ExtendedTrustManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.Ssl.X509ExtendedTrustManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
