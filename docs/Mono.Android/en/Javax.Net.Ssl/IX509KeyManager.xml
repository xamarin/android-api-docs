<Type Name="IX509KeyManager" FullName="Javax.Net.Ssl.IX509KeyManager">
  <TypeSignature Language="C#" Value="public interface IX509KeyManager : IDisposable, Java.Interop.IJavaPeerable, Javax.Net.Ssl.IKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IX509KeyManager implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Javax.Net.Ssl.IKeyManager, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.Ssl.IX509KeyManager" />
  <TypeSignature Language="F#" Value="type IX509KeyManager = interface&#xA;    interface IKeyManager&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Javax.Net.Ssl.IKeyManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/ssl/X509KeyManager", "", "Javax.Net.Ssl.IX509KeyManagerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/ssl/X509KeyManager", "", "Javax.Net.Ssl.IX509KeyManagerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Instances of this interface manage which X509 certificate-based
            key pairs are used to authenticate the local side of a secure
            socket.</summary>
    <remarks>
      <para>Instances of this interface manage which X509 certificate-based
            key pairs are used to authenticate the local side of a secure
            socket.</para>
      <para>During secure socket negotiations, implentations
            call methods in this interface to:
            &lt;UL&gt;
            &lt;LI&gt; determine the set of aliases that are available for negotiations
                 based on the criteria presented,
            &lt;LI&gt; select the <i> best alias</i> based on
                 the criteria presented, and
            &lt;LI&gt; obtain the corresponding key material for given aliases.
            &lt;/UL&gt;</para>
      <para>Note: the X509ExtendedKeyManager should be used in favor of this
            class.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ChooseClientAlias">
      <MemberSignature Language="C#" Value="public string? ChooseClientAlias (string[]? keyType, Java.Security.IPrincipal[]? issuers, Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ChooseClientAlias(string[] keyType, class Java.Security.IPrincipal[] issuers, class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.IX509KeyManager.ChooseClientAlias(System.String[],Java.Security.IPrincipal[],Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member ChooseClientAlias : string[] * Java.Security.IPrincipal[] * Java.Net.Socket -&gt; string" Usage="iX509KeyManager.ChooseClientAlias (keyType, issuers, socket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseClientAlias", "([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseClientAlias_arrayLjava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("chooseClientAlias", "([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseClientAlias_arrayLjava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String[]" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]" />
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name(s), ordered
                     with the most-preferred key type first.</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                      or null if it does not matter which issuers are used.</param>
        <param name="socket">the socket to be used for this connection.  This
                     parameter can be null, which indicates that
                     implementations are free to select an alias applicable
                     to any socket.</param>
        <summary>Choose an alias to authenticate the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>the alias name for the desired key, or null if there
                     are no matches.</returns>
        <remarks>
          <para>Choose an alias to authenticate the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#chooseClientAlias(java.lang.String[],%20java.security.Principal[],%20java.net.Socket)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChooseServerAlias">
      <MemberSignature Language="C#" Value="public string? ChooseServerAlias (string? keyType, Java.Security.IPrincipal[]? issuers, Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ChooseServerAlias(string keyType, class Java.Security.IPrincipal[] issuers, class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.IX509KeyManager.ChooseServerAlias(System.String,Java.Security.IPrincipal[],Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member ChooseServerAlias : string * Java.Security.IPrincipal[] * Java.Net.Socket -&gt; string" Usage="iX509KeyManager.ChooseServerAlias (keyType, issuers, socket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseServerAlias", "(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseServerAlias_Ljava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("chooseServerAlias", "(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseServerAlias_Ljava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]" />
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name.</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                     or null if it does not matter which issuers are used.</param>
        <param name="socket">the socket to be used for this connection.  This
                     parameter can be null, which indicates that
                     implementations are free to select an alias applicable
                     to any socket.</param>
        <summary>Choose an alias to authenticate the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>the alias name for the desired key, or null if there
                     are no matches.</returns>
        <remarks>
          <para>Choose an alias to authenticate the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#chooseServerAlias(java.lang.String,%20java.security.Principal[],%20java.net.Socket)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCertificateChain">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.X509Certificate[]? GetCertificateChain (string? alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.X509Certificate[] GetCertificateChain(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.IX509KeyManager.GetCertificateChain(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateChain : string -&gt; Java.Security.Cert.X509Certificate[]" Usage="iX509KeyManager.GetCertificateChain alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCertificateChain", "(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;", "GetGetCertificateChain_Ljava_lang_String_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCertificateChain", "(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;", "GetGetCertificateChain_Ljava_lang_String_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.X509Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">the alias name</param>
        <summary>Returns the certificate chain associated with the given alias.</summary>
        <returns>the certificate chain (ordered with the user's certificate first
                     and the root certificate authority last), or null
                     if the alias can't be found.</returns>
        <remarks>
          <para>Returns the certificate chain associated with the given alias.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getCertificateChain(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getCertificateChain(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetClientAliases">
      <MemberSignature Language="C#" Value="public string[]? GetClientAliases (string? keyType, Java.Security.IPrincipal[]? issuers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetClientAliases(string keyType, class Java.Security.IPrincipal[] issuers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.IX509KeyManager.GetClientAliases(System.String,Java.Security.IPrincipal[])" />
      <MemberSignature Language="F#" Value="abstract member GetClientAliases : string * Java.Security.IPrincipal[] -&gt; string[]" Usage="iX509KeyManager.GetClientAliases (keyType, issuers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getClientAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetClientAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getClientAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetClientAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name</param>
        <param name="issuers">the list of acceptable CA issuer subject names,
                     or null if it does not matter which issuers are used.</param>
        <summary>Get the matching aliases for authenticating the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>an array of the matching alias names, or null if there
                     were no matches.</returns>
        <remarks>
          <para>Get the matching aliases for authenticating the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getClientAliases(java.lang.String,%20java.security.Principal[])" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getClientAliases(java.lang.String, java.security.Principal[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPrivateKey">
      <MemberSignature Language="C#" Value="public Java.Security.IPrivateKey? GetPrivateKey (string? alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.IPrivateKey GetPrivateKey(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.IX509KeyManager.GetPrivateKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateKey : string -&gt; Java.Security.IPrivateKey" Usage="iX509KeyManager.GetPrivateKey alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPrivateKey", "(Ljava/lang/String;)Ljava/security/PrivateKey;", "GetGetPrivateKey_Ljava_lang_String_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPrivateKey", "(Ljava/lang/String;)Ljava/security/PrivateKey;", "GetGetPrivateKey_Ljava_lang_String_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrivateKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">the alias name</param>
        <summary>Returns the key associated with the given alias.</summary>
        <returns>the requested key, or null if the alias can't be found.</returns>
        <remarks>
          <para>Returns the key associated with the given alias.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getPrivateKey(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getPrivateKey(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetServerAliases">
      <MemberSignature Language="C#" Value="public string[]? GetServerAliases (string? keyType, Java.Security.IPrincipal[]? issuers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetServerAliases(string keyType, class Java.Security.IPrincipal[] issuers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.IX509KeyManager.GetServerAliases(System.String,Java.Security.IPrincipal[])" />
      <MemberSignature Language="F#" Value="abstract member GetServerAliases : string * Java.Security.IPrincipal[] -&gt; string[]" Usage="iX509KeyManager.GetServerAliases (keyType, issuers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getServerAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetServerAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getServerAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetServerAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler:Javax.Net.Ssl.IX509KeyManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                     or null if it does not matter which issuers are used.</param>
        <summary>Get the matching aliases for authenticating the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>an array of the matching alias names, or null
                     if there were no matches.</returns>
        <remarks>
          <para>Get the matching aliases for authenticating the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getServerAliases(java.lang.String,%20java.security.Principal[])" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getServerAliases(java.lang.String, java.security.Principal[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
