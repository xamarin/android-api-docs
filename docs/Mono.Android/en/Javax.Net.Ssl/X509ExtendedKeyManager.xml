<Type Name="X509ExtendedKeyManager" FullName="Javax.Net.Ssl.X509ExtendedKeyManager">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class X509ExtendedKeyManager&#xA;Inherits Object&#xA;Implements IDisposable, IJavaPeerable, IX509KeyManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509ExtendedKeyManager abstract : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Javax::Net::Ssl::IX509KeyManager" />
  <TypeSignature Language="C#" Value="public abstract class X509ExtendedKeyManager : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Javax.Net.Ssl.IX509KeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit X509ExtendedKeyManager extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Javax.Net.Ssl.IKeyManager, class Javax.Net.Ssl.IX509KeyManager, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.Ssl.X509ExtendedKeyManager" />
  <TypeSignature Language="F#" Value="type X509ExtendedKeyManager = class&#xA;    inherit Object&#xA;    interface IX509KeyManager&#xA;    interface IKeyManager&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Javax.Net.Ssl.IKeyManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Javax.Net.Ssl.IX509KeyManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/ssl/X509ExtendedKeyManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/ssl/X509ExtendedKeyManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Abstract class that provides for extension of the X509KeyManager
            interface.</summary>
    <remarks>
      <para>Abstract class that provides for extension of the X509KeyManager
            interface.</para>
      <para>Methods in this class should be overriden to provide actual
            implementations.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedKeyManager" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedKeyManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509ExtendedKeyManager();" />
      <MemberSignature Language="C#" Value="protected X509ExtendedKeyManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor used by subclasses only.</summary>
        <remarks>
          <para>Constructor used by subclasses only.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedKeyManager#X509ExtendedKeyManager()" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedKeyManager.X509ExtendedKeyManager()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509ExtendedKeyManager(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected X509ExtendedKeyManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.X509ExtendedKeyManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.Ssl.X509ExtendedKeyManager" Usage="new Javax.Net.Ssl.X509ExtendedKeyManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChooseClientAlias">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChooseClientAlias (keyType As String(), issuers As IPrincipal(), socket As Socket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ChooseClientAlias(cli::array &lt;System::String ^&gt; ^ keyType, cli::array &lt;Java::Security::IPrincipal ^&gt; ^ issuers, Java::Net::Socket ^ socket);" />
      <MemberSignature Language="C#" Value="public abstract string? ChooseClientAlias (string[]? keyType, Java.Security.IPrincipal[]? issuers, Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ChooseClientAlias(string[] keyType, class Java.Security.IPrincipal[] issuers, class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.ChooseClientAlias(System.String[],Java.Security.IPrincipal[],Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member ChooseClientAlias : string[] * Java.Security.IPrincipal[] * Java.Net.Socket -&gt; string" Usage="x509ExtendedKeyManager.ChooseClientAlias (keyType, issuers, socket)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509KeyManager.ChooseClientAlias(System.String[],Java.Security.IPrincipal[],Java.Net.Socket)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseClientAlias", "([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseClientAlias_arrayLjava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("chooseClientAlias", "([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseClientAlias_arrayLjava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name(s), ordered
                     with the most-preferred key type first.</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                      or null if it does not matter which issuers are used.</param>
        <param name="socket">the socket to be used for this connection.  This
                     parameter can be null, which indicates that
                     implementations are free to select an alias applicable
                     to any socket.</param>
        <summary>Choose an alias to authenticate the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>the alias name for the desired key, or null if there
                     are no matches.</returns>
        <remarks>
          <para>Choose an alias to authenticate the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#chooseClientAlias(java.lang.String[],%20java.security.Principal[],%20java.net.Socket)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChooseEngineClientAlias">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChooseEngineClientAlias (keyType As String(), issuers As IPrincipal(), engine As SSLEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ChooseEngineClientAlias(cli::array &lt;System::String ^&gt; ^ keyType, cli::array &lt;Java::Security::IPrincipal ^&gt; ^ issuers, Javax::Net::Ssl::SSLEngine ^ engine);" />
      <MemberSignature Language="C#" Value="public virtual string? ChooseEngineClientAlias (string[]? keyType, Java.Security.IPrincipal[]? issuers, Javax.Net.Ssl.SSLEngine? engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ChooseEngineClientAlias(string[] keyType, class Java.Security.IPrincipal[] issuers, class Javax.Net.Ssl.SSLEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.ChooseEngineClientAlias(System.String[],Java.Security.IPrincipal[],Javax.Net.Ssl.SSLEngine)" />
      <MemberSignature Language="F#" Value="abstract member ChooseEngineClientAlias : string[] * Java.Security.IPrincipal[] * Javax.Net.Ssl.SSLEngine -&gt; string&#xA;override this.ChooseEngineClientAlias : string[] * Java.Security.IPrincipal[] * Javax.Net.Ssl.SSLEngine -&gt; string" Usage="x509ExtendedKeyManager.ChooseEngineClientAlias (keyType, issuers, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseEngineClientAlias", "([Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;", "GetChooseEngineClientAlias_arrayLjava_lang_String_arrayLjava_security_Principal_Ljavax_net_ssl_SSLEngine_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("chooseEngineClientAlias", "([Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;", "GetChooseEngineClientAlias_arrayLjava_lang_String_arrayLjava_security_Principal_Ljavax_net_ssl_SSLEngine_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="engine" Type="Javax.Net.Ssl.SSLEngine" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name(s), ordered
                     with the most-preferred key type first.</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                     or null if it does not matter which issuers are used.</param>
        <param name="engine">the <c>SSLEngine</c> to be used for this
                     connection.  This parameter can be null, which indicates
                     that implementations of this interface are free to
                     select an alias applicable to any engine.</param>
        <summary>Choose an alias to authenticate the client side of an
            <c>SSLEngine</c> connection given the public key type
            and the list of certificate issuer authorities recognized by
            the peer (if any).</summary>
        <returns>the alias name for the desired key, or null if there
                     are no matches.</returns>
        <remarks>
          <para>Choose an alias to authenticate the client side of an
            <c>SSLEngine</c> connection given the public key type
            and the list of certificate issuer authorities recognized by
            the peer (if any).</para>
          <para>The default implementation returns null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedKeyManager#chooseEngineClientAlias(java.lang.String[],%20java.security.Principal[],%20javax.net.ssl.SSLEngine)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChooseEngineServerAlias">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChooseEngineServerAlias (keyType As String, issuers As IPrincipal(), engine As SSLEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ChooseEngineServerAlias(System::String ^ keyType, cli::array &lt;Java::Security::IPrincipal ^&gt; ^ issuers, Javax::Net::Ssl::SSLEngine ^ engine);" />
      <MemberSignature Language="C#" Value="public virtual string? ChooseEngineServerAlias (string? keyType, Java.Security.IPrincipal[]? issuers, Javax.Net.Ssl.SSLEngine? engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ChooseEngineServerAlias(string keyType, class Java.Security.IPrincipal[] issuers, class Javax.Net.Ssl.SSLEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.ChooseEngineServerAlias(System.String,Java.Security.IPrincipal[],Javax.Net.Ssl.SSLEngine)" />
      <MemberSignature Language="F#" Value="abstract member ChooseEngineServerAlias : string * Java.Security.IPrincipal[] * Javax.Net.Ssl.SSLEngine -&gt; string&#xA;override this.ChooseEngineServerAlias : string * Java.Security.IPrincipal[] * Javax.Net.Ssl.SSLEngine -&gt; string" Usage="x509ExtendedKeyManager.ChooseEngineServerAlias (keyType, issuers, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseEngineServerAlias", "(Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;", "GetChooseEngineServerAlias_Ljava_lang_String_arrayLjava_security_Principal_Ljavax_net_ssl_SSLEngine_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("chooseEngineServerAlias", "(Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;", "GetChooseEngineServerAlias_Ljava_lang_String_arrayLjava_security_Principal_Ljavax_net_ssl_SSLEngine_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="engine" Type="Javax.Net.Ssl.SSLEngine" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name.</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                     or null if it does not matter which issuers are used.</param>
        <param name="engine">the <c>SSLEngine</c> to be used for this
                     connection.  This parameter can be null, which indicates
                     that implementations of this interface are free to
                     select an alias applicable to any engine.</param>
        <summary>Choose an alias to authenticate the server side of an
            <c>SSLEngine</c> connection given the public key type
            and the list of certificate issuer authorities recognized by
            the peer (if any).</summary>
        <returns>the alias name for the desired key, or null if there
                     are no matches.</returns>
        <remarks>
          <para>Choose an alias to authenticate the server side of an
            <c>SSLEngine</c> connection given the public key type
            and the list of certificate issuer authorities recognized by
            the peer (if any).</para>
          <para>The default implementation returns null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509ExtendedKeyManager#chooseEngineServerAlias(java.lang.String,%20java.security.Principal[],%20javax.net.ssl.SSLEngine)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChooseServerAlias">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChooseServerAlias (keyType As String, issuers As IPrincipal(), socket As Socket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ChooseServerAlias(System::String ^ keyType, cli::array &lt;Java::Security::IPrincipal ^&gt; ^ issuers, Java::Net::Socket ^ socket);" />
      <MemberSignature Language="C#" Value="public abstract string? ChooseServerAlias (string? keyType, Java.Security.IPrincipal[]? issuers, Java.Net.Socket? socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ChooseServerAlias(string keyType, class Java.Security.IPrincipal[] issuers, class Java.Net.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.ChooseServerAlias(System.String,Java.Security.IPrincipal[],Java.Net.Socket)" />
      <MemberSignature Language="F#" Value="abstract member ChooseServerAlias : string * Java.Security.IPrincipal[] * Java.Net.Socket -&gt; string" Usage="x509ExtendedKeyManager.ChooseServerAlias (keyType, issuers, socket)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509KeyManager.ChooseServerAlias(System.String,Java.Security.IPrincipal[],Java.Net.Socket)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("chooseServerAlias", "(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseServerAlias_Ljava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("chooseServerAlias", "(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;", "GetChooseServerAlias_Ljava_lang_String_arrayLjava_security_Principal_Ljava_net_Socket_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name.</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                     or null if it does not matter which issuers are used.</param>
        <param name="socket">the socket to be used for this connection.  This
                     parameter can be null, which indicates that
                     implementations are free to select an alias applicable
                     to any socket.</param>
        <summary>Choose an alias to authenticate the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>the alias name for the desired key, or null if there
                     are no matches.</returns>
        <remarks>
          <para>Choose an alias to authenticate the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#chooseServerAlias(java.lang.String,%20java.security.Principal[],%20java.net.Socket)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateChain">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCertificateChain (alias As String) As X509Certificate()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;Java::Security::Cert::X509Certificate ^&gt; ^ GetCertificateChain(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public abstract Java.Security.Cert.X509Certificate[]? GetCertificateChain (string? alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.X509Certificate[] GetCertificateChain(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.GetCertificateChain(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateChain : string -&gt; Java.Security.Cert.X509Certificate[]" Usage="x509ExtendedKeyManager.GetCertificateChain alias" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509KeyManager.GetCertificateChain(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCertificateChain", "(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;", "GetGetCertificateChain_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCertificateChain", "(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;", "GetGetCertificateChain_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.X509Certificate[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">the alias name</param>
        <summary>Returns the certificate chain associated with the given alias.</summary>
        <returns>the certificate chain (ordered with the user's certificate first
                     and the root certificate authority last), or null
                     if the alias can't be found.</returns>
        <remarks>
          <para>Returns the certificate chain associated with the given alias.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getCertificateChain(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getCertificateChain(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientAliases">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetClientAliases (keyType As String, issuers As IPrincipal()) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetClientAliases(System::String ^ keyType, cli::array &lt;Java::Security::IPrincipal ^&gt; ^ issuers);" />
      <MemberSignature Language="C#" Value="public abstract string[]? GetClientAliases (string? keyType, Java.Security.IPrincipal[]? issuers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetClientAliases(string keyType, class Java.Security.IPrincipal[] issuers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.GetClientAliases(System.String,Java.Security.IPrincipal[])" />
      <MemberSignature Language="F#" Value="abstract member GetClientAliases : string * Java.Security.IPrincipal[] -&gt; string[]" Usage="x509ExtendedKeyManager.GetClientAliases (keyType, issuers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509KeyManager.GetClientAliases(System.String,Java.Security.IPrincipal[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getClientAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetClientAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getClientAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetClientAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name</param>
        <param name="issuers">the list of acceptable CA issuer subject names,
                     or null if it does not matter which issuers are used.</param>
        <summary>Get the matching aliases for authenticating the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>an array of the matching alias names, or null if there
                     were no matches.</returns>
        <remarks>
          <para>Get the matching aliases for authenticating the client side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getClientAliases(java.lang.String,%20java.security.Principal[])" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getClientAliases(java.lang.String, java.security.Principal[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateKey">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrivateKey (alias As String) As IPrivateKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Security::IPrivateKey ^ GetPrivateKey(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public abstract Java.Security.IPrivateKey? GetPrivateKey (string? alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.IPrivateKey GetPrivateKey(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.GetPrivateKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateKey : string -&gt; Java.Security.IPrivateKey" Usage="x509ExtendedKeyManager.GetPrivateKey alias" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509KeyManager.GetPrivateKey(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPrivateKey", "(Ljava/lang/String;)Ljava/security/PrivateKey;", "GetGetPrivateKey_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPrivateKey", "(Ljava/lang/String;)Ljava/security/PrivateKey;", "GetGetPrivateKey_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrivateKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">the alias name</param>
        <summary>Returns the key associated with the given alias.</summary>
        <returns>the requested key, or null if the alias can't be found.</returns>
        <remarks>
          <para>Returns the key associated with the given alias.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getPrivateKey(java.lang.String)" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getPrivateKey(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerAliases">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetServerAliases (keyType As String, issuers As IPrincipal()) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetServerAliases(System::String ^ keyType, cli::array &lt;Java::Security::IPrincipal ^&gt; ^ issuers);" />
      <MemberSignature Language="C#" Value="public abstract string[]? GetServerAliases (string? keyType, Java.Security.IPrincipal[]? issuers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetServerAliases(string keyType, class Java.Security.IPrincipal[] issuers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.X509ExtendedKeyManager.GetServerAliases(System.String,Java.Security.IPrincipal[])" />
      <MemberSignature Language="F#" Value="abstract member GetServerAliases : string * Java.Security.IPrincipal[] -&gt; string[]" Usage="x509ExtendedKeyManager.GetServerAliases (keyType, issuers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Javax.Net.Ssl.IX509KeyManager.GetServerAliases(System.String,Java.Security.IPrincipal[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getServerAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetServerAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getServerAliases", "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;", "GetGetServerAliases_Ljava_lang_String_arrayLjava_security_Principal_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyType" Type="System.String" />
        <Parameter Name="issuers" Type="Java.Security.IPrincipal[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyType">the key algorithm type name</param>
        <param name="issuers">the list of acceptable CA issuer subject names
                     or null if it does not matter which issuers are used.</param>
        <summary>Get the matching aliases for authenticating the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</summary>
        <returns>an array of the matching alias names, or null
                     if there were no matches.</returns>
        <remarks>
          <para>Get the matching aliases for authenticating the server side of a secure
            socket given the public key type and the list of
            certificate issuer authorities recognized by the peer (if any).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/X509KeyManager#getServerAliases(java.lang.String,%20java.security.Principal[])" title="Reference documentation">Java documentation for <code>javax.net.ssl.X509KeyManager.getServerAliases(java.lang.String, java.security.Principal[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.X509ExtendedKeyManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.Ssl.X509ExtendedKeyManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.X509ExtendedKeyManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.Ssl.X509ExtendedKeyManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.X509ExtendedKeyManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.Ssl.X509ExtendedKeyManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
