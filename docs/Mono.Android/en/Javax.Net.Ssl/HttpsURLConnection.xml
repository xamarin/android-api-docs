<Type Name="HttpsURLConnection" FullName="Javax.Net.Ssl.HttpsURLConnection">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpsURLConnection&#xA;Inherits HttpURLConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpsURLConnection abstract : Java::Net::HttpURLConnection" />
  <TypeSignature Language="C#" Value="public abstract class HttpsURLConnection : Java.Net.HttpURLConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpsURLConnection extends Java.Net.HttpURLConnection" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.Ssl.HttpsURLConnection" />
  <TypeSignature Language="F#" Value="type HttpsURLConnection = class&#xA;    inherit HttpURLConnection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Net.HttpURLConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/ssl/HttpsURLConnection", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/ssl/HttpsURLConnection", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>HttpsURLConnection</c> extends <c>HttpURLConnection</c>
            with support for https-specific features.</summary>
    <remarks>
      <para>
        <c>HttpsURLConnection</c> extends <c>HttpURLConnection</c>
            with support for https-specific features.</para>
      <para>See <see href="http://www.w3.org/pub/WWW/Protocols/">
            http://www.w3.org/pub/WWW/Protocols/</see> and
            <see href="http://www.ietf.org/"> RFC 2818 </see>
            for more details on the
            https specification.</para>
      <para>This class uses <c>HostnameVerifier</c> and
            <c>SSLSocketFactory</c>.
            There are default implementations defined for both classes.
            However, the implementations can be replaced on a per-class (static) or
            per-instance basis.  All new <c>HttpsURLConnection</c>s instances
            will be assigned
            the "default" static values at instance creation, but they can be overriden
            by calling the appropriate per-instance set method(s) before
            <c>connect</c>ing.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (url As URL)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpsURLConnection(Java::Net::URL ^ url);" />
      <MemberSignature Language="C#" Value="protected HttpsURLConnection (Java.Net.URL? url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Net.URL url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.#ctor(Java.Net.URL)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.HttpsURLConnection : Java.Net.URL -&gt; Javax.Net.Ssl.HttpsURLConnection" Usage="new Javax.Net.Ssl.HttpsURLConnection url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/net/URL;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/net/URL;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="Java.Net.URL" />
      </Parameters>
      <Docs>
        <param name="url">the URL</param>
        <summary>Creates an <c>HttpsURLConnection</c> using the
            URL specified.</summary>
        <remarks>
          <para>Creates an <c>HttpsURLConnection</c> using the
            URL specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#HttpsURLConnection(java.net.URL)" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.HttpsURLConnection(java.net.URL)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpsURLConnection(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected HttpsURLConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.HttpsURLConnection : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.Ssl.HttpsURLConnection" Usage="new Javax.Net.Ssl.HttpsURLConnection (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherSuite">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CipherSuite As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ CipherSuite { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract string? CipherSuite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CipherSuite" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.CipherSuite" />
      <MemberSignature Language="F#" Value="member this.CipherSuite : string" Usage="Javax.Net.Ssl.HttpsURLConnection.CipherSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCipherSuite", "()Ljava/lang/String;", "GetGetCipherSuiteHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCipherSuite", "()Ljava/lang/String;", "GetGetCipherSuiteHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the cipher suite negotiated during the SSL handshake.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultHostnameVerifier">
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultHostnameVerifier As IHostnameVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Javax::Net::Ssl::IHostnameVerifier ^ DefaultHostnameVerifier { Javax::Net::Ssl::IHostnameVerifier ^ get(); void set(Javax::Net::Ssl::IHostnameVerifier ^ value); };" />
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.IHostnameVerifier? DefaultHostnameVerifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.Ssl.IHostnameVerifier DefaultHostnameVerifier" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.DefaultHostnameVerifier" />
      <MemberSignature Language="F#" Value="member this.DefaultHostnameVerifier : Javax.Net.Ssl.IHostnameVerifier with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.DefaultHostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefaultHostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefaultHostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDefaultHostnameVerifier", "(Ljavax/net/ssl/HostnameVerifier;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDefaultHostnameVerifier", "(Ljavax/net/ssl/HostnameVerifier;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.IHostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="v">the default host name verifier</param>
        <summary>Gets the default <c>HostnameVerifier</c> that is inherited
            by new instances of this class. -or- Sets the default <c>HostnameVerifier</c> inherited by a
            new instance of this class.</summary>
        <value>the default host name verifier</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the default <c>HostnameVerifier</c> that is inherited
            by new instances of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getDefaultHostnameVerifier()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getDefaultHostnameVerifier()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the default <c>HostnameVerifier</c> inherited by a
            new instance of this class.</para>
          <para>Developers are &lt;em&gt;strongly&lt;/em&gt; discouraged from changing the default
            <c>HostnameVerifier</c> as <c>#getDefaultHostnameVerifier()</c> is used by several
            classes for hostname verification on Android.
            &lt;table&gt;
                &lt;tr&gt;
                    &lt;th&gt;User&lt;/th&gt;
                    &lt;th&gt;Effect&lt;/th&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;Android's default <c>TrustManager</c>, as used with Android's default
                    <c>SSLContext</c>, <c>SSLSocketFactory</c> and <c>SSLSocket</c> implementations.
                    &lt;/td&gt;
                    &lt;td&gt;The <c>HostnameVerifier</c> is used to verify the peer's
                    certificate hostname after connecting if <c>SSLParameters.setEndpointIdentificationAlgorithm("HTTPS")</c> has been called.
                    Instances use the &lt;em&gt;current&lt;/em&gt; default <c>HostnameVerifier</c> at verification
                    time.&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>android.net.SSLCertificateSocketFactory</c>&lt;/td&gt;
                    &lt;td&gt;The current default <c>HostnameVerifier</c> is used from various <c>createSocket</c> methods. See <c>android.net.SSLCertificateSocketFactory</c> for
                    details; for example <c>android.net.SSLCertificateSocketFactory#createSocket(String, int)</c>.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;Android's default <c>HttpsURLConnection</c> implementation.&lt;/td&gt;
                    &lt;td&gt;The <c>HostnameVerifier</c> is used after a successful TLS handshake to verify
                    the URI host against the TLS session server. Instances use the default <c>HostnameVerifier</c> set &lt;em&gt;when they were created&lt;/em&gt; unless overridden with <c>#setHostnameVerifier(HostnameVerifier)</c>.
                    Android's <c>HttpsURLConnection</c> relies on the <c>HostnameVerifier</c>
                    for the &lt;em&gt;entire&lt;/em&gt; hostname verification step.&lt;/td&gt;
                &lt;/tr&gt;
            &lt;/table&gt;</para>
          <para>If this method is not called, the default <c>HostnameVerifier</c> will check the
            hostname according to RFC 2818.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSSLSocketFactory">
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultSSLSocketFactory As SSLSocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Javax::Net::Ssl::SSLSocketFactory ^ DefaultSSLSocketFactory { Javax::Net::Ssl::SSLSocketFactory ^ get(); void set(Javax::Net::Ssl::SSLSocketFactory ^ value); };" />
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory? DefaultSSLSocketFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.Ssl.SSLSocketFactory DefaultSSLSocketFactory" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.DefaultSSLSocketFactory" />
      <MemberSignature Language="F#" Value="member this.DefaultSSLSocketFactory : Javax.Net.Ssl.SSLSocketFactory with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.DefaultSSLSocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefaultSSLSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefaultSSLSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDefaultSSLSocketFactory", "(Ljavax/net/ssl/SSLSocketFactory;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDefaultSSLSocketFactory", "(Ljavax/net/ssl/SSLSocketFactory;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="sf">the default SSL socket factory</param>
        <summary>Gets the default static <c>SSLSocketFactory</c> that is
            inherited by new instances of this class. -or- Sets the default <c>SSLSocketFactory</c> inherited by new
            instances of this class.</summary>
        <value>the default <c>SSLSocketFactory</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the default static <c>SSLSocketFactory</c> that is
            inherited by new instances of this class.</para>
          <para>The socket factories are used when creating sockets for secure
            https URL connections.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getDefaultSSLSocketFactory()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the default <c>SSLSocketFactory</c> inherited by new
            instances of this class.</para>
          <para>The socket factories are used when creating sockets for secure
            https URL connections.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalCertificates">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLocalCertificates () As Certificate()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;Java::Security::Cert::Certificate ^&gt; ^ GetLocalCertificates();" />
      <MemberSignature Language="C#" Value="public abstract Java.Security.Cert.Certificate[]? GetLocalCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.Certificate[] GetLocalCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.GetLocalCertificates" />
      <MemberSignature Language="F#" Value="abstract member GetLocalCertificates : unit -&gt; Java.Security.Cert.Certificate[]" Usage="httpsURLConnection.GetLocalCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocalCertificates", "()[Ljava/security/cert/Certificate;", "GetGetLocalCertificatesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocalCertificates", "()[Ljava/security/cert/Certificate;", "GetGetLocalCertificatesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the certificate(s) that were sent to the server during
            handshaking.</summary>
        <returns>an ordered array of certificates,
                     with the client's own certificate first followed by any
                     certificate authorities.  If no certificates were sent,
                     then null is returned.</returns>
        <remarks>
          <para>Returns the certificate(s) that were sent to the server during
            handshaking.</para>
          <para>Note: This method is useful only when using certificate-based
            cipher suites.</para>
          <para>When multiple certificates are available for use in a
            handshake, the implementation chooses what it considers the
            "best" certificate chain available, and transmits that to
            the other side.  This method allows the caller to know
            which certificate chain was actually sent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getLocalCertificates()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getLocalCertificates()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerCertificates">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetServerCertificates () As Certificate()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;Java::Security::Cert::Certificate ^&gt; ^ GetServerCertificates();" />
      <MemberSignature Language="C#" Value="public abstract Java.Security.Cert.Certificate[]? GetServerCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.Certificate[] GetServerCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.GetServerCertificates" />
      <MemberSignature Language="F#" Value="abstract member GetServerCertificates : unit -&gt; Java.Security.Cert.Certificate[]" Usage="httpsURLConnection.GetServerCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getServerCertificates", "()[Ljava/security/cert/Certificate;", "GetGetServerCertificatesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getServerCertificates", "()[Ljava/security/cert/Certificate;", "GetGetServerCertificatesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the server's certificate chain which was established
            as part of defining the session.</summary>
        <returns>an ordered array of server certificates,
                     with the peer's own certificate first followed by
                     any certificate authorities.</returns>
        <remarks>
          <para>Returns the server's certificate chain which was established
            as part of defining the session.</para>
          <para>Note: This method can be used only when using certificate-based
            cipher suites; using it with non-certificate-based cipher suites,
            such as Kerberos, will throw an SSLPeerUnverifiedException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getServerCertificates()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getServerCertificates()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified..</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HostnameVerifier">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HostnameVerifier As IHostnameVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Javax::Net::Ssl::IHostnameVerifier ^ HostnameVerifier { Javax::Net::Ssl::IHostnameVerifier ^ get(); void set(Javax::Net::Ssl::IHostnameVerifier ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.IHostnameVerifier? HostnameVerifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.IHostnameVerifier HostnameVerifier" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.HostnameVerifier" />
      <MemberSignature Language="F#" Value="member this.HostnameVerifier : Javax.Net.Ssl.IHostnameVerifier with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.HostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "GetGetHostnameVerifierHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "GetGetHostnameVerifierHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHostnameVerifier", "(Ljavax/net/ssl/HostnameVerifier;)V", "GetSetHostnameVerifier_Ljavax_net_ssl_HostnameVerifier_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHostnameVerifier", "(Ljavax/net/ssl/HostnameVerifier;)V", "GetSetHostnameVerifier_Ljavax_net_ssl_HostnameVerifier_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.IHostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="v">the host name verifier</param>
        <summary>Gets the <c>HostnameVerifier</c> in place on this instance. -or- Sets the <c>HostnameVerifier</c> for this instance.</summary>
        <value>the host name verifier</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the <c>HostnameVerifier</c> in place on this instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getHostnameVerifier()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getHostnameVerifier()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>HostnameVerifier</c> for this instance.</para>
          <para>New instances of this class inherit the default static hostname
            verifier set by <c>#setDefaultHostnameVerifier(HostnameVerifier)
            setDefaultHostnameVerifier</c>.  Calls to this method replace
            this object's <c>HostnameVerifier</c>.</para>
          <para>Android's <c>HttpsURLConnection</c> relies on the <c>HostnameVerifier</c>
            for the &lt;em&gt;entire&lt;/em&gt; hostname verification step.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#setHostnameVerifier(javax.net.ssl.HostnameVerifier)" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.Ssl.HttpsURLConnection.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalPrincipal">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Security::IPrincipal ^ LocalPrincipal { Java::Security::IPrincipal ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Security.IPrincipal? LocalPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal LocalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.LocalPrincipal" />
      <MemberSignature Language="F#" Value="member this.LocalPrincipal : Java.Security.IPrincipal" Usage="Javax.Net.Ssl.HttpsURLConnection.LocalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalPrincipal", "()Ljava/security/Principal;", "GetGetLocalPrincipalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalPrincipal", "()Ljava/security/Principal;", "GetGetLocalPrincipalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the principal that was sent to the server during handshaking.</summary>
        <value>the principal sent to the server. Returns an X500Principal
            of the end-entity certificate for X509-based cipher suites, and
            KerberosPrincipal for Kerberos cipher suites. If no principal was
            sent, then null is returned.</value>
        <remarks>
          <para>Returns the principal that was sent to the server during handshaking.</para>
          <para>Note: Subclasses should override this method. If not overridden, it
            will default to returning the X500Principal of the end-entity certificate
            that was sent to the server for certificate-based ciphersuites or,
            return null for non-certificate based ciphersuites, such as Kerberos.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getLocalPrincipal()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getLocalPrincipal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PeerPrincipal">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PeerPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Security::IPrincipal ^ PeerPrincipal { Java::Security::IPrincipal ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Security.IPrincipal? PeerPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal PeerPrincipal" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.PeerPrincipal" />
      <MemberSignature Language="F#" Value="member this.PeerPrincipal : Java.Security.IPrincipal" Usage="Javax.Net.Ssl.HttpsURLConnection.PeerPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPeerPrincipal", "()Ljava/security/Principal;", "GetGetPeerPrincipalHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPeerPrincipal", "()Ljava/security/Principal;", "GetGetPeerPrincipalHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the server's principal which was established as part of
            defining the session.</summary>
        <value>the server's principal. Returns an X500Principal of the
            end-entity certiticate for X509-based cipher suites, and
            KerberosPrincipal for Kerberos cipher suites.</value>
        <remarks>
          <para>Returns the server's principal which was established as part of
            defining the session.</para>
          <para>Note: Subclasses should override this method. If not overridden, it
            will default to returning the X500Principal of the server's end-entity
            certificate for certificate-based ciphersuites, or throw an
            SSLPeerUnverifiedException for non-certificate based ciphersuites,
            such as Kerberos.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getPeerPrincipal()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getPeerPrincipal()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SSLSocketFactory">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SSLSocketFactory As SSLSocketFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Javax::Net::Ssl::SSLSocketFactory ^ SSLSocketFactory { Javax::Net::Ssl::SSLSocketFactory ^ get(); void set(Javax::Net::Ssl::SSLSocketFactory ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLSocketFactory? SSLSocketFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLSocketFactory SSLSocketFactory" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.SSLSocketFactory" />
      <MemberSignature Language="F#" Value="member this.SSLSocketFactory : Javax.Net.Ssl.SSLSocketFactory with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.SSLSocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSSLSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "GetGetSSLSocketFactoryHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSSLSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "GetGetSSLSocketFactoryHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSSLSocketFactory", "(Ljavax/net/ssl/SSLSocketFactory;)V", "GetSetSSLSocketFactory_Ljavax_net_ssl_SSLSocketFactory_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSSLSocketFactory", "(Ljavax/net/ssl/SSLSocketFactory;)V", "GetSetSSLSocketFactory_Ljavax_net_ssl_SSLSocketFactory_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="sf">the SSL socket factory</param>
        <summary>Gets the SSL socket factory to be used when creating sockets
            for secure https URL connections. -or- Sets the <c>SSLSocketFactory</c> to be used when this instance
            creates sockets for secure https URL connections.</summary>
        <value>the <c>SSLSocketFactory</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the SSL socket factory to be used when creating sockets
            for secure https URL connections.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#getSSLSocketFactory()" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.getSSLSocketFactory()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>SSLSocketFactory</c> to be used when this instance
            creates sockets for secure https URL connections.</para>
          <para>New instances of this class inherit the default static
            <c>SSLSocketFactory</c> set by
            <c>#setDefaultSSLSocketFactory(SSLSocketFactory)
            setDefaultSSLSocketFactory</c>.  Calls to this method replace
            this object's <c>SSLSocketFactory</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection#setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)" title="Reference documentation">Java documentation for <code>javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.Ssl.HttpsURLConnection.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.Ssl.HttpsURLConnection.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
