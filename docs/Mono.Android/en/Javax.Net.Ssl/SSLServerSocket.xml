<Type Name="SSLServerSocket" FullName="Javax.Net.Ssl.SSLServerSocket">
  <TypeSignature Language="C#" Value="public abstract class SSLServerSocket : Java.Net.ServerSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SSLServerSocket extends Java.Net.ServerSocket" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.Ssl.SSLServerSocket" />
  <TypeSignature Language="F#" Value="type SSLServerSocket = class&#xA;    inherit ServerSocket" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Net.ServerSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/net/ssl/SSLServerSocket", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/net/ssl/SSLServerSocket", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class extends <c>ServerSocket</c>s and
            provides secure server sockets using protocols such as the Secure
            Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</summary>
    <remarks>
      <para>This class extends <c>ServerSocket</c>s and
            provides secure server sockets using protocols such as the Secure
            Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</para>
      <para>Instances of this class are generally created using a
            <c>SSLServerSocketFactory</c>.  The primary function
            of <c>SSLServerSocket</c>s
            is to create <c>SSLSocket</c>s by <c>accept</c>ing
            connections.</para>
      <para>
        <c>SSLServerSocket</c>s contain several pieces of state data
            which are inherited by the <c>SSLSocket</c> at
            socket creation.  These include the enabled cipher
            suites and protocols, whether client
            authentication is necessary, and whether created sockets should
            begin handshaking in client or server mode.  The state
            inherited by the created <c>SSLSocket</c> can be
            overriden by calling the appropriate methods.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLServerSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Used only by subclasses.</summary>
        <remarks>
          <para>Used only by subclasses.</para>
          <para>Create an unbound TCP server socket using the default authentication
            context.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#SSLServerSocket()" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.SSLServerSocket()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if creating the socket fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLServerSocket (int port);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.SSLServerSocket : int -&gt; Javax.Net.Ssl.SSLServerSocket" Usage="new Javax.Net.Ssl.SSLServerSocket port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">the port on which to listen</param>
        <summary>Used only by subclasses.</summary>
        <remarks>
          <para>Used only by subclasses.</para>
          <para>Create a TCP server socket on a port, using the default
            authentication context.  The connection backlog defaults to
            fifty connections queued up before the system starts to
            reject new connection requests.</para>
          <para>A port number of <c>0</c> creates a socket on any free port.</para>
          <para>If there is a security manager, its <c>checkListen</c>
            method is called with the <c>port</c> argument as its
            argument to ensure the operation is allowed. This could result
            in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#SSLServerSocket(int)" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.SSLServerSocket(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if creating the socket fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLServerSocket (int port, int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 port, int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.SSLServerSocket : int * int -&gt; Javax.Net.Ssl.SSLServerSocket" Usage="new Javax.Net.Ssl.SSLServerSocket (port, backlog)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">the port on which to listen</param>
        <param name="backlog">requested maximum length of the queue of incoming
                             connections.</param>
        <summary>Used only by subclasses.</summary>
        <remarks>
          <para>Used only by subclasses.</para>
          <para>Create a TCP server socket on a port, using the default
            authentication context and a specified backlog of connections.</para>
          <para>A port number of <c>0</c> creates a socket on any free port.</para>
          <para>The <c>backlog</c> argument is the requested maximum number of
            pending connections on the socket. Its exact semantics are implementation
            specific. In particular, an implementation may impose a maximum length
            or may choose to ignore the parameter altogther. The value provided
            should be greater than <c>0</c>. If it is less than or equal to
            <c>0</c>, then an implementation specific default will be used.</para>
          <para>If there is a security manager, its <c>checkListen</c>
            method is called with the <c>port</c> argument as its
            argument to ensure the operation is allowed. This could result
            in a SecurityException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#SSLServerSocket(int,%20int)" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.SSLServerSocket(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if creating the socket fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLServerSocket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.SSLServerSocket : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.Ssl.SSLServerSocket" Usage="new Javax.Net.Ssl.SSLServerSocket (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLServerSocket (int port, int backlog, Java.Net.InetAddress? address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 port, int32 backlog, class Java.Net.InetAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.#ctor(System.Int32,System.Int32,Java.Net.InetAddress)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.SSLServerSocket : int * int * Java.Net.InetAddress -&gt; Javax.Net.Ssl.SSLServerSocket" Usage="new Javax.Net.Ssl.SSLServerSocket (port, backlog, address)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IILjava/net/InetAddress;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IILjava/net/InetAddress;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
        <Parameter Name="address" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="port">the port on which to listen</param>
        <param name="backlog">requested maximum length of the queue of incoming
                             connections.</param>
        <param name="address">the address of the network interface through
                     which connections will be accepted</param>
        <summary>Used only by subclasses.</summary>
        <remarks>
          <para>Used only by subclasses.</para>
          <para>Create a TCP server socket on a port, using the default
            authentication context and a specified backlog of connections
            as well as a particular specified network interface.  This
            constructor is used on multihomed hosts, such as those used
            for firewalls or as routers, to control through which interface
            a network service is provided.</para>
          <para>If there is a security manager, its <c>checkListen</c>
            method is called with the <c>port</c> argument as its
            argument to ensure the operation is allowed. This could result
            in a SecurityException.</para>
          <para>A port number of <c>0</c> creates a socket on any free port.</para>
          <para>The <c>backlog</c> argument is the requested maximum number of
            pending connections on the socket. Its exact semantics are implementation
            specific. In particular, an implementation may impose a maximum length
            or may choose to ignore the parameter altogther. The value provided
            should be greater than <c>0</c>. If it is less than or equal to
            <c>0</c>, then an implementation specific default will be used.</para>
          <para>If <i>address</i> is null, it will default accepting connections
            on any/all local addresses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#SSLServerSocket(int,%20int,%20java.net.InetAddress)" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.SSLServerSocket(int, int, java.net.InetAddress)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if creating the socket fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSessionCreation">
      <MemberSignature Language="C#" Value="public abstract bool EnableSessionCreation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSessionCreation" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.EnableSessionCreation" />
      <MemberSignature Language="F#" Value="member this.EnableSessionCreation : bool with get, set" Usage="Javax.Net.Ssl.SSLServerSocket.EnableSessionCreation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnableSessionCreation", "()Z", "GetGetEnableSessionCreationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnableSessionCreation", "()Z", "GetGetEnableSessionCreationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setEnableSessionCreation", "(Z)V", "GetSetEnableSessionCreation_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setEnableSessionCreation", "(Z)V", "GetSetEnableSessionCreation_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether new SSL sessions may be established for new connections.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabledCipherSuites">
      <MemberSignature Language="C#" Value="public abstract string[]? GetEnabledCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetEnabledCipherSuites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.GetEnabledCipherSuites" />
      <MemberSignature Language="F#" Value="abstract member GetEnabledCipherSuites : unit -&gt; string[]" Usage="sSLServerSocket.GetEnabledCipherSuites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEnabledCipherSuites", "()[Ljava/lang/String;", "GetGetEnabledCipherSuitesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEnabledCipherSuites", "()[Ljava/lang/String;", "GetGetEnabledCipherSuitesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of cipher suites which are currently enabled
            for use by newly accepted connections.</summary>
        <returns>an array of cipher suites enabled</returns>
        <remarks>
          <para>Returns the list of cipher suites which are currently enabled
            for use by newly accepted connections.</para>
          <para>If this list has not been explicitly modified, a system-provided
            default guarantees a minimum quality of service in all enabled
            cipher suites.</para>
          <para>There are several reasons why an enabled cipher suite might
            not actually be used.  For example:  the server socket might
            not have appropriate private keys available to it or the cipher
            suite might be anonymous, precluding the use of client authentication,
            while the server socket has been told to require that sort of
            authentication.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#getEnabledCipherSuites()" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.getEnabledCipherSuites()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabledProtocols">
      <MemberSignature Language="C#" Value="public abstract string[]? GetEnabledProtocols ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetEnabledProtocols() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.GetEnabledProtocols" />
      <MemberSignature Language="F#" Value="abstract member GetEnabledProtocols : unit -&gt; string[]" Usage="sSLServerSocket.GetEnabledProtocols " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEnabledProtocols", "()[Ljava/lang/String;", "GetGetEnabledProtocolsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEnabledProtocols", "()[Ljava/lang/String;", "GetGetEnabledProtocolsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the protocols which are currently
            enabled for use by the newly accepted connections.</summary>
        <returns>an array of protocol names</returns>
        <remarks>
          <para>Returns the names of the protocols which are currently
            enabled for use by the newly accepted connections.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#getEnabledProtocols()" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.getEnabledProtocols()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedCipherSuites">
      <MemberSignature Language="C#" Value="public abstract string[]? GetSupportedCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSupportedCipherSuites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.GetSupportedCipherSuites" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedCipherSuites : unit -&gt; string[]" Usage="sSLServerSocket.GetSupportedCipherSuites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites which could be enabled for use
            on an SSL connection.</summary>
        <returns>an array of cipher suite names</returns>
        <remarks>
          <para>Returns the names of the cipher suites which could be enabled for use
            on an SSL connection.</para>
          <para>Normally, only a subset of these will actually
            be enabled by default, since this list may include cipher suites which
            do not meet quality of service requirements for those defaults.  Such
            cipher suites are useful in specialized applications.
            
            &lt;p class="caution"&gt;Applications should not blindly enable all supported
            cipher suites.  The supported cipher suites can include signaling cipher suite
            values that can cause connection problems if enabled inappropriately.</para>
          <para>The proper way to use this method is to either check if a specific cipher
            suite is supported via <c>Arrays.asList(getSupportedCipherSuites()).contains(...)</c>
            or to filter a desired list of cipher suites to only the supported ones via
            <c>desiredSuiteSet.retainAll(Arrays.asList(getSupportedCipherSuites()))</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#getSupportedCipherSuites()" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.getSupportedCipherSuites()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProtocols">
      <MemberSignature Language="C#" Value="public abstract string[]? GetSupportedProtocols ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSupportedProtocols() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.GetSupportedProtocols" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedProtocols : unit -&gt; string[]" Usage="sSLServerSocket.GetSupportedProtocols " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedProtocols", "()[Ljava/lang/String;", "GetGetSupportedProtocolsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedProtocols", "()[Ljava/lang/String;", "GetGetSupportedProtocolsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the protocols which could be enabled for use.</summary>
        <returns>an array of protocol names supported</returns>
        <remarks>
          <para>Returns the names of the protocols which could be enabled for use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#getSupportedProtocols()" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.getSupportedProtocols()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.Ssl.SSLServerSocket.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedClientAuth">
      <MemberSignature Language="C#" Value="public abstract bool NeedClientAuth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedClientAuth" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.NeedClientAuth" />
      <MemberSignature Language="F#" Value="member this.NeedClientAuth : bool with get, set" Usage="Javax.Net.Ssl.SSLServerSocket.NeedClientAuth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNeedClientAuth", "()Z", "GetGetNeedClientAuthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNeedClientAuth", "()Z", "GetGetNeedClientAuthHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNeedClientAuth", "(Z)V", "GetSetNeedClientAuth_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNeedClientAuth", "(Z)V", "GetSetNeedClientAuth_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether server-mode connections will be configured to require
 client authentication.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetEnabledCipherSuites">
      <MemberSignature Language="C#" Value="public abstract void SetEnabledCipherSuites (string[]? suites);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEnabledCipherSuites(string[] suites) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.SetEnabledCipherSuites(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member SetEnabledCipherSuites : string[] -&gt; unit" Usage="sSLServerSocket.SetEnabledCipherSuites suites" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEnabledCipherSuites", "([Ljava/lang/String;)V", "GetSetEnabledCipherSuites_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEnabledCipherSuites", "([Ljava/lang/String;)V", "GetSetEnabledCipherSuites_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suites" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="suites">Names of all the cipher suites to enable</param>
        <summary>Sets the cipher suites enabled for use by accepted connections.</summary>
        <remarks>
          <para>Sets the cipher suites enabled for use by accepted connections.</para>
          <para>The cipher suites must have been listed by getSupportedCipherSuites()
            as being supported.  Following a successful call to this method,
            only suites listed in the <c>suites</c> parameter are enabled
            for use.</para>
          <para>Suites that require authentication information which is not available
            in this ServerSocket's authentication context will not be used
            in any case, even if they are enabled.</para>
          <para>
            <c>SSLSocket</c>s returned from <c>accept()</c>
            inherit this setting.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#setEnabledCipherSuites(java.lang.String[])" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.setEnabledCipherSuites(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if one of the cipher suite names is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledProtocols">
      <MemberSignature Language="C#" Value="public abstract void SetEnabledProtocols (string[]? protocols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEnabledProtocols(string[] protocols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.SSLServerSocket.SetEnabledProtocols(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member SetEnabledProtocols : string[] -&gt; unit" Usage="sSLServerSocket.SetEnabledProtocols protocols" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEnabledProtocols", "([Ljava/lang/String;)V", "GetSetEnabledProtocols_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEnabledProtocols", "([Ljava/lang/String;)V", "GetSetEnabledProtocols_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocols" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="protocols">Names of all the protocols to enable.</param>
        <summary>Controls which particular protocols are enabled for use by
            accepted connections.</summary>
        <remarks>
          <para>Controls which particular protocols are enabled for use by
            accepted connections.</para>
          <para>The protocols must have been listed by
            getSupportedProtocols() as being supported.
            Following a successful call to this method, only protocols listed
            in the <c>protocols</c> parameter are enabled for use.</para>
          <para>Because of the way the protocol version is negotiated, connections
            will only be able to use a member of the lowest set of contiguous
            enabled protocol versions.  For example, enabling TLSv1.2 and TLSv1
            will result in connections only being able to use TLSv1.</para>
          <para>
            <c>SSLSocket</c>s returned from <c>accept()</c>
            inherit this setting.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#setEnabledProtocols(java.lang.String[])" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.setEnabledProtocols(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if one of the protocols is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SSLParameters">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLParameters? SSLParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLParameters SSLParameters" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.SSLParameters" />
      <MemberSignature Language="F#" Value="member this.SSLParameters : Javax.Net.Ssl.SSLParameters with get, set" Usage="Javax.Net.Ssl.SSLServerSocket.SSLParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSSLParameters", "()Ljavax/net/ssl/SSLParameters;", "GetGetSSLParametersHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSSLParameters", "()Ljavax/net/ssl/SSLParameters;", "GetGetSSLParametersHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSSLParameters", "(Ljavax/net/ssl/SSLParameters;)V", "GetSetSSLParameters_Ljavax_net_ssl_SSLParameters_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSSLParameters", "(Ljavax/net/ssl/SSLParameters;)V", "GetSetSSLParameters_Ljavax_net_ssl_SSLParameters_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="params">the parameters</param>
        <summary>Returns the SSLParameters in effect for newly accepted connections. -or- Applies SSLParameters to newly accepted connections.</summary>
        <value>the SSLParameters in effect for newly accepted connections</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the SSLParameters in effect for newly accepted connections.
            The ciphersuites and protocols of the returned SSLParameters
            are always non-null.</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#getSSLParameters()" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.getSSLParameters()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Applies SSLParameters to newly accepted connections.</para>
          <para>This means:
            &lt;ul&gt;
            &lt;li&gt;If <c>params.getCipherSuites()</c> is non-null,
              <c>setEnabledCipherSuites()</c> is called with that value.&lt;/li&gt;
            &lt;li&gt;If <c>params.getProtocols()</c> is non-null,
              <c>setEnabledProtocols()</c> is called with that value.&lt;/li&gt;
            &lt;li&gt;If <c>params.getNeedClientAuth()</c> or
              <c>params.getWantClientAuth()</c> return <c>true</c>,
              <c>setNeedClientAuth(true)</c> and
              <c>setWantClientAuth(true)</c> are called, respectively;
              otherwise <c>setWantClientAuth(false)</c> is called.&lt;/li&gt;
            &lt;li&gt;If <c>params.getServerNames()</c> is non-null, the socket will
              configure its server names with that value.&lt;/li&gt;
            &lt;li&gt;If <c>params.getSNIMatchers()</c> is non-null, the socket will
              configure its SNI matchers with that value.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Added in 1.7.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/net/ssl/SSLServerSocket#setSSLParameters(javax.net.ssl.SSLParameters)" title="Reference documentation">Java documentation for <code>javax.net.ssl.SSLServerSocket.setSSLParameters(javax.net.ssl.SSLParameters)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.Ssl.SSLServerSocket.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.Ssl.SSLServerSocket.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClientMode">
      <MemberSignature Language="C#" Value="public abstract bool UseClientMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClientMode" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.UseClientMode" />
      <MemberSignature Language="F#" Value="member this.UseClientMode : bool with get, set" Usage="Javax.Net.Ssl.SSLServerSocket.UseClientMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUseClientMode", "()Z", "GetGetUseClientModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUseClientMode", "()Z", "GetGetUseClientModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setUseClientMode", "(Z)V", "GetSetUseClientMode_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setUseClientMode", "(Z)V", "GetSetUseClientMode_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether new connection will act in client mode when handshaking.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WantClientAuth">
      <MemberSignature Language="C#" Value="public abstract bool WantClientAuth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WantClientAuth" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.SSLServerSocket.WantClientAuth" />
      <MemberSignature Language="F#" Value="member this.WantClientAuth : bool with get, set" Usage="Javax.Net.Ssl.SSLServerSocket.WantClientAuth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWantClientAuth", "()Z", "GetGetWantClientAuthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWantClientAuth", "()Z", "GetGetWantClientAuthHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWantClientAuth", "(Z)V", "GetSetWantClientAuth_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setWantClientAuth", "(Z)V", "GetSetWantClientAuth_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether server-mode connections will be configured to request
 client authentication.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
