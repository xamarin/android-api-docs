<Type Name="NdefRecord" FullName="Android.Nfc.NdefRecord">
  <TypeSignature Language="C#" Value="public sealed class NdefRecord : Java.Lang.Object, Android.OS.IParcelable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NdefRecord extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/nfc/NdefRecord", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>Represents an immutable NDEF Record.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Represents an immutable NDEF Record.
 </para>
      <para tool="javadoc-to-mdoc">
 NDEF (NFC Data Exchange Format) is a light-weight binary format,
 used to encapsulate typed data. It is specified by the NFC Forum,
 for transmission and storage with NFC, however it is transport agnostic.
 </para>
      <para tool="javadoc-to-mdoc">
 NDEF defines messages and records. An NDEF Record contains
 typed data, such as MIME-type media, a URI, or a custom
 application payload. An NDEF Message is a container for
 one or more NDEF Records.
 </para>
      <para tool="javadoc-to-mdoc">
 This class represents logical (complete) NDEF Records, and can not be
 used to represent chunked (partial) NDEF Records. However
 <c><see cref="C:Android.Nfc.NdefMessage(System.Byte[])" /></c> can be used to parse a message
 containing chunked records, and will return a message with unchunked
 (complete) records.
 </para>
      <para tool="javadoc-to-mdoc">
 A logical NDEF Record always contains a 3-bit TNF (Type Name Field)
 that provides high level typing for the rest of the record. The
 remaining fields are variable length and not always present:
 <list type="bullet"><item><term><i>type</i>: detailed typing for the payload</term></item><item><term><i>id</i>: identifier meta-data, not commonly used</term></item><item><term><i>payload</i>: the actual payload</term></item></list></para>
      <para tool="javadoc-to-mdoc">
 Helpers such as <c><see cref="M:Android.Nfc.NdefRecord.CreateUri(Android.Net.Uri)" /></c>, <c><see cref="M:Android.Nfc.NdefRecord.CreateMime(System.String,System.Byte[])" /></c>
 and <c><see cref="M:Android.Nfc.NdefRecord.CreateExternal(System.String,System.String,System.String)" /></c> are included to create well-formatted
 NDEF Records with correctly set tnf, type, id and payload fields, please
 use these helpers whenever possible.
 </para>
      <para tool="javadoc-to-mdoc">
 Use the constructor <c><see cref="C:Android.Nfc.NdefRecord(System.Int16,System.Byte[],System.Byte[],System.Byte[])" /></c>
 if you know what you are doing and what to set the fields individually.
 Only basic validation is performed with this constructor, so it is possible
 to create records that do not confirm to the strict NFC Forum
 specifications.
 </para>
      <para tool="javadoc-to-mdoc">
 The binary representation of an NDEF Record includes additional flags to
 indicate location with an NDEF message, provide support for chunking of
 NDEF records, and to pack optional fields. This class does not expose
 those details. To write an NDEF Record as binary you must first put it
 into an <c><see cref="T:Android.Nfc.NdefMessage" /></c>, then call <c><see cref="M:Android.Nfc.NdefMessage.ToByteArray" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <c>
          <see cref="T:Android.Nfc.NdefMessage" />
        </c> and <c><see cref="T:Android.Nfc.NdefRecord" /></c> implementations are
 always available, even on Android devices that do not have NFC hardware.
 </para>
      <para tool="javadoc-to-mdoc">
        <c>
          <see cref="T:Android.Nfc.NdefRecord" />
        </c>s are intended to be immutable (and thread-safe),
 however they may contain mutable fields. So take care not to modify
 mutable fields passed into constructors, or modify mutable fields
 obtained by getter methods, unless such modification is explicitly
 marked as safe.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="F:Android.Nfc.NfcAdapter.ActionNdefDiscovered" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Nfc.NdefMessage" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NdefRecord (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>Construct an NDEF Record from raw bytes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Construct an NDEF Record from raw bytes.</para>
          <para tool="javadoc-to-mdoc">
 This method is deprecated, use <c><see cref="C:Android.Nfc.NdefMessage(System.Byte[])" /></c>
 instead. This is because it does not make sense to parse a record:
 the NDEF binary format is only defined for a message, and the
 record flags MB and ME do not make sense outside of the context of
 an entire message.</para>
          <para tool="javadoc-to-mdoc">
 This implementation will attempt to parse a single record by ignoring
 the MB and ME flags, and otherwise following the rules of
 <c><see cref="C:Android.Nfc.NdefMessage(System.Byte[])" /></c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#NdefRecord(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Nfc.FormatException">if the data cannot be parsed into a valid record</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NdefRecord (short tnf, byte[] type, byte[] id, byte[] payload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 tnf, unsigned int8[] type, unsigned int8[] id, unsigned int8[] payload) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(S[B[B[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tnf" Type="System.Int16" />
        <Parameter Name="type" Type="System.Byte[]" />
        <Parameter Name="id" Type="System.Byte[]" />
        <Parameter Name="payload" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="tnf">To be added.</param>
        <param name="type">To be added.</param>
        <param name="id">To be added.</param>
        <param name="payload">To be added.</param>
        <summary>Construct an NDEF Record from its component fields.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Construct an NDEF Record from its component fields.</para>
          <para tool="javadoc-to-mdoc">
 Recommend to use helpers such as {#createUri} or
 {<c><see cref="M:Android.Nfc.NdefRecord.CreateExternal(System.String,System.String,System.String)" /></c> where possible, since they perform
 stricter validation that the record is correctly formatted
 as per NDEF specifications. However if you know what you are
 doing then this constructor offers the most flexibility.</para>
          <para tool="javadoc-to-mdoc">
 An <c><see cref="T:Android.Nfc.NdefRecord" /></c> represents a logical (complete)
 record, and cannot represent NDEF Record chunks.</para>
          <para tool="javadoc-to-mdoc">
 Basic validation of the tnf, type, id and payload is performed
 as per the following rules:
 <list type="bullet"><item><term>The tnf paramter must be a 3-bit value.</term></item><item><term>Records with a tnf of <c><see cref="F:Android.Nfc.NdefRecord.TnfEmpty" /></c> cannot have a type,
 id or payload.</term></item><item><term>Records with a tnf of <c><see cref="F:Android.Nfc.NdefRecord.TnfUnknown" /></c> or 0x07
 cannot have a type.</term></item><item><term>Records with a tnf of <c><see cref="F:Android.Nfc.NdefRecord.TnfUnchanged" /></c> are not allowed
 since this class only represents complete (unchunked) records.</term></item></list>
 This minimal validation is specified by
 NFCForum-TS-NDEF_1.0 section 3.2.6 (Type Name Format).</para>
          <para tool="javadoc-to-mdoc">
 If any of the above validation
 steps fail then <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
 Deep inspection of the type, id and payload fields is not
 performed, so it is possible to create NDEF Records
 that conform to section 3.2.6
 but fail other more strict NDEF specification requirements. For
 example, the payload may be invalid given the tnf and type.
 </para>
          <para tool="javadoc-to-mdoc">
 To omit a type, id or payload field, set the parameter to an
 empty byte array or null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#NdefRecord(short, byte[], byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="!:NoType:if a valid record cannot be created" />
      </Docs>
    </Member>
    <Member MemberName="CreateApplicationRecord">
      <MemberSignature Language="C#" Value="public static Android.Nfc.NdefRecord CreateApplicationRecord (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.NdefRecord CreateApplicationRecord(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createApplicationRecord", "(Ljava/lang/String;)Landroid/nfc/NdefRecord;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.NdefRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Android package name</param>
        <summary>Create a new Android Application Record (AAR).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new Android Application Record (AAR).
 </para>
          <para tool="javadoc-to-mdoc">
 This record indicates to other Android devices the package
 that should be used to handle the entire NDEF message.
 You can embed this record anywhere into your message
 to ensure that the intended package receives the message.
 </para>
          <para tool="javadoc-to-mdoc">
 When an Android device dispatches an <c><see cref="T:Android.Nfc.NdefMessage" /></c>
 containing one or more Android application records,
 the applications contained in those records will be the
 preferred target for the <c><see cref="F:Android.Nfc.NfcAdapter.ActionNdefDiscovered" /></c>
 intent, in the order in which they appear in the message.
 This dispatch behavior was first added to Android in
 Ice Cream Sandwich.
 </para>
          <para tool="javadoc-to-mdoc">
 If none of the applications have a are installed on the device,
 a Market link will be opened to the first application.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that Android application records do not overrule
 applications that have called
 <c><see cref="M:Android.Nfc.NfcAdapter.EnableForegroundDispatch(Android.App.Activity,Android.App.PendingIntent,Android.App.PendingIntent,Android.App.PendingIntent)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createApplicationRecord(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CreateExternal">
      <MemberSignature Language="C#" Value="public static Android.Nfc.NdefRecord CreateExternal (string domain, string type, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.NdefRecord CreateExternal(string domain, string type, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createExternal", "(Ljava/lang/String;Ljava/lang/String;[B)Landroid/nfc/NdefRecord;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.NdefRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="domain">domain-name of issuing organization</param>
        <param name="type">domain-specific type of data</param>
        <param name="data">payload as bytes</param>
        <summary>Create a new NDEF Record containing external (application-specific) data.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new NDEF Record containing external (application-specific) data.</para>
          <para tool="javadoc-to-mdoc">
 Use this method to encode application specific data into an NDEF Record.
 The data is typed by a domain name (usually your Android package name) and
 a domain-specific type. This data is packaged into a "NFC Forum External
 Type" NDEF Record.</para>
          <para tool="javadoc-to-mdoc">
 NFC Forum requires that the domain and type used in an external record
 are treated as case insensitive, however Android intent filtering is
 always case sensitive. So this method will force the domain and type to
 lower-case before creating the NDEF Record.</para>
          <para tool="javadoc-to-mdoc">
 The unchecked exception <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> will be thrown
 if the domain and type have serious problems, for example if either field
 is empty, so always catch this
 exception if you are passing user-generated data into this method.</para>
          <para tool="javadoc-to-mdoc">
 There are no such restrictions on the payload data.</para>
          <para tool="javadoc-to-mdoc">
 For efficiency, This method might not make an internal copy of the
 data byte array, so take care not
 to modify the data byte array while still using the returned
 NdefRecord.

 Reference specification: NFCForum-TS-RTD_1.0</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createExternal(java.lang.String, java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="!:NoType:if either domain or type are empty or invalid" />
      </Docs>
    </Member>
    <Member MemberName="CreateMime">
      <MemberSignature Language="C#" Value="public static Android.Nfc.NdefRecord CreateMime (string mimeType, byte[] mimeData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.NdefRecord CreateMime(string mimeType, unsigned int8[] mimeData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createMime", "(Ljava/lang/String;[B)Landroid/nfc/NdefRecord;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.NdefRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="mimeData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="mimeType">a valid MIME type</param>
        <param name="mimeData">MIME data as bytes</param>
        <summary>Create a new NDEF Record containing MIME data.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new NDEF Record containing MIME data.</para>
          <para tool="javadoc-to-mdoc">
 Use this method to encode MIME-typed data into an NDEF Record,
 such as "text/plain", or "image/jpeg".</para>
          <para tool="javadoc-to-mdoc">
 The mimeType parameter will be normalized with
 <c><see cref="M:Android.Content.Intent.NormalizeMimeType(System.String)" /></c> to follow Android best
 practices for intent filtering, for example to force lower-case.
 However the unchecked exception
 <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> may be thrown
 if the mimeType parameter has serious problems,
 for example if it is empty, so always catch this
 exception if you are passing user-generated data into this method.
 </para>
          <para tool="javadoc-to-mdoc">
 For efficiency, This method might not make an internal copy of the
 mimeData byte array, so take care not
 to modify the mimeData byte array while still using the returned
 NdefRecord.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createMime(java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="!:NoType:if the mimeType is empty or invalid" />
      </Docs>
    </Member>
    <Member MemberName="CreateTextRecord">
      <MemberSignature Language="C#" Value="public static Android.Nfc.NdefRecord CreateTextRecord (string languageCode, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.NdefRecord CreateTextRecord(string languageCode, string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTextRecord", "(Ljava/lang/String;Ljava/lang/String;)Landroid/nfc/NdefRecord;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.NdefRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="languageCode" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="languageCode">The languageCode for the record. If locale is empty or null,
                     the language code of the current default locale will be used.</param>
        <param name="text">The text to be encoded in the record. Will be represented in UTF-8 format.</param>
        <summary>Create a new NDEF record containing UTF-8 text data.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new NDEF record containing UTF-8 text data.</para>
          <para tool="javadoc-to-mdoc">

 The caller can either specify the language code for the provided text,
 or otherwise the language code corresponding to the current default
 locale will be used.

 Reference specification: NFCForum-TS-RTD_Text_1.0</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createTextRecord(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 21" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if text is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUri">
      <MemberSignature Language="C#" Value="public static Android.Nfc.NdefRecord CreateUri (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.NdefRecord CreateUri(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createUri", "(Landroid/net/Uri;)Landroid/nfc/NdefRecord;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.NdefRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">URI to encode.</param>
        <summary>Create a new NDEF Record containing a URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new NDEF Record containing a URI.</para>
          <para tool="javadoc-to-mdoc">
 Use this method to encode a URI (or URL) into an NDEF Record.</para>
          <para tool="javadoc-to-mdoc">
 Uses the well known URI type representation: <c><see cref="F:Android.Nfc.NdefRecord.TnfWellKnown" /></c>
 and <c><see cref="P:Android.Nfc.NdefRecord.RtdUri" /></c>. This is the most efficient encoding
 of a URI into NDEF.</para>
          <para tool="javadoc-to-mdoc">
 The uri parameter will be normalized with
 <c><see cref="M:Android.Net.Uri.NormalizeScheme" /></c> to set the scheme to lower case to
 follow Android best practices for intent filtering.
 However the unchecked exception
 <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> may be thrown if the uri
 parameter has serious problems, for example if it is empty, so always
 catch this exception if you are passing user-generated data into this
 method.</para>
          <para tool="javadoc-to-mdoc">

 Reference specification: NFCForum-TS-RTD_URI_1.0</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createUri(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="!:NoType:if the uri is empty or invalid" />
      </Docs>
    </Member>
    <Member MemberName="CreateUri">
      <MemberSignature Language="C#" Value="public static Android.Nfc.NdefRecord CreateUri (string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.NdefRecord CreateUri(string uriString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createUri", "(Ljava/lang/String;)Landroid/nfc/NdefRecord;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.NdefRecord</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriString">string URI to encode.</param>
        <summary>Create a new NDEF Record containing a URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new NDEF Record containing a URI.</para>
          <para tool="javadoc-to-mdoc">
 Use this method to encode a URI (or URL) into an NDEF Record.</para>
          <para tool="javadoc-to-mdoc">
 Uses the well known URI type representation: <c><see cref="F:Android.Nfc.NdefRecord.TnfWellKnown" /></c>
 and <c><see cref="P:Android.Nfc.NdefRecord.RtdUri" /></c>. This is the most efficient encoding
 of a URI into NDEF.</para>
          <para tool="javadoc-to-mdoc">
 The uriString parameter will be normalized with
 <c><see cref="M:Android.Net.Uri.NormalizeScheme" /></c> to set the scheme to lower case to
 follow Android best practices for intent filtering.
 However the unchecked exception
 <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> may be thrown if the uriString
 parameter has serious problems, for example if it is empty, so always
 catch this exception if you are passing user-generated data into this
 method.</para>
          <para tool="javadoc-to-mdoc">

 Reference specification: NFCForum-TS-RTD_URI_1.0</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#createUri(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="!:NoType:if the uriString is empty or invalid" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#CREATOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#describeContents()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetId">
      <MemberSignature Language="C#" Value="public byte[] GetId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetId() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getId", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the variable length ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the variable length ID.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns an empty byte array if this record
 does not have an id field.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#getId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetPayload">
      <MemberSignature Language="C#" Value="public byte[] GetPayload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPayload() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPayload", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the variable length payload.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the variable length payload.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns an empty byte array if this record
 does not have a payload field.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#getPayload()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public byte[] GetTypeInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetTypeInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getType", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the variable length Type field.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the variable length Type field.
 </para>
          <para tool="javadoc-to-mdoc">
 This should be used in conjunction with the TNF field to determine the
 payload format.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns an empty byte array if this record
 does not have a type field.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#getType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="RtdAlternativeCarrier">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdAlternativeCarrier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdAlternativeCarrier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_ALTERNATIVE_CARRIER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD Alternative Carrier type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD Alternative Carrier type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_ALTERNATIVE_CARRIER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="RtdHandoverCarrier">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdHandoverCarrier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdHandoverCarrier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_HANDOVER_CARRIER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD Handover Carrier type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD Handover Carrier type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_HANDOVER_CARRIER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="RtdHandoverRequest">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdHandoverRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdHandoverRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_HANDOVER_REQUEST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD Handover Request type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD Handover Request type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_HANDOVER_REQUEST" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="RtdHandoverSelect">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdHandoverSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdHandoverSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_HANDOVER_SELECT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD Handover Select type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD Handover Select type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_HANDOVER_SELECT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="RtdSmartPoster">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdSmartPoster { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdSmartPoster" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_SMART_POSTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD Smart Poster type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD Smart Poster type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_SMART_POSTER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="RtdText">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_TEXT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD Text type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD Text type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_TEXT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="RtdUri">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; RtdUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; RtdUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTD_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RTD URI type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">RTD URI type. For use with TNF_WELL_KNOWN.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#RTD_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="F:Android.Nfc.NdefRecord.TnfWellKnown" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tnf">
      <MemberSignature Language="C#" Value="public short Tnf { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Tnf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTnf", "()S", "GetGetTnfHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the 3-bit TNF.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the 3-bit TNF.
 </para>
          <para tool="javadoc-to-mdoc">
 TNF is the top-level type.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#getTnf()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="TnfAbsoluteUri">
      <MemberSignature Language="C#" Value="public const short TnfAbsoluteUri = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfAbsoluteUri = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_ABSOLUTE_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Indicates the type field contains an absolute-URI
 BNF construct defined by RFC 3986.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the type field contains an absolute-URI
 BNF construct defined by RFC 3986.</para>
          <para tool="javadoc-to-mdoc">
 When creating new records prefer <c><see cref="M:Android.Nfc.NdefRecord.CreateUri(Android.Net.Uri)" /></c>,
 since it offers more compact URI encoding
 (#RTD_URI allows compression of common URI prefixes).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_ABSOLUTE_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Nfc.NdefRecord.CreateUri(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="TnfEmpty">
      <MemberSignature Language="C#" Value="public const short TnfEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfEmpty = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_EMPTY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates the record is empty.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the record is empty.</para>
          <para tool="javadoc-to-mdoc">
 Type, id and payload fields are empty in a TNF_EMPTY record.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_EMPTY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="TnfExternalType">
      <MemberSignature Language="C#" Value="public const short TnfExternalType = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfExternalType = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_EXTERNAL_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Indicates the type field contains an external type name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the type field contains an external type name.</para>
          <para tool="javadoc-to-mdoc">
 Used to encode custom payloads. When creating new records
 use the helper <c><see cref="M:Android.Nfc.NdefRecord.CreateExternal(System.String,System.String,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
 The external-type RTD format is specified in NFCForum-TS-RTD_1.0.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
 Note this TNF should not be used with RTD_TEXT or RTD_URI constants.
 Those are well known RTD constants, not external RTD constants.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_EXTERNAL_TYPE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Nfc.NdefRecord.CreateExternal(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TnfMimeMedia">
      <MemberSignature Language="C#" Value="public const short TnfMimeMedia = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfMimeMedia = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_MIME_MEDIA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Indicates the type field contains a media-type BNF
 construct, defined by RFC 2046.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the type field contains a media-type BNF
 construct, defined by RFC 2046.</para>
          <para tool="javadoc-to-mdoc">
 Use this with MIME type names such as "image/jpeg", or
 using the helper <c><see cref="M:Android.Nfc.NdefRecord.CreateMime(System.String,System.Byte[])" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_MIME_MEDIA" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Nfc.NdefRecord.CreateMime(System.String, System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="TnfUnchanged">
      <MemberSignature Language="C#" Value="public const short TnfUnchanged = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfUnchanged = (6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_UNCHANGED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Indicates the payload is an intermediate or final chunk of a chunked
 NDEF Record.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the payload is an intermediate or final chunk of a chunked
 NDEF Record.</para>
          <para tool="javadoc-to-mdoc">
 TNF_UNCHANGED can not be used with this class
 since all <c><see cref="T:Android.Nfc.NdefRecord" /></c>s are already unchunked, however they
 may appear in the binary format.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_UNCHANGED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="TnfUnknown">
      <MemberSignature Language="C#" Value="public const short TnfUnknown = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfUnknown = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_UNKNOWN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Indicates the payload type is unknown.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the payload type is unknown.</para>
          <para tool="javadoc-to-mdoc">
 NFC Forum explains this should be treated similarly to the
 "application/octet-stream" MIME type. The payload
 type is not explicitly encoded within the record.
 </para>
          <para tool="javadoc-to-mdoc">
 The type field is empty in an TNF_UNKNOWN record.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_UNKNOWN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="TnfWellKnown">
      <MemberSignature Language="C#" Value="public const short TnfWellKnown = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 TnfWellKnown = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TNF_WELL_KNOWN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates the type field contains a well-known RTD type name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates the type field contains a well-known RTD type name.</para>
          <para tool="javadoc-to-mdoc">
 Use this tnf with RTD types such as <c><see cref="P:Android.Nfc.NdefRecord.RtdText" /></c>, <c><see cref="P:Android.Nfc.NdefRecord.RtdUri" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The RTD type name format is specified in NFCForum-TS-RTD_1.0.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#TNF_WELL_KNOWN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Nfc.NdefRecord.RtdUri" />
        <altmember cref="P:Android.Nfc.NdefRecord.RtdText" />
        <altmember cref="P:Android.Nfc.NdefRecord.RtdSmartPoster" />
        <altmember cref="M:Android.Nfc.NdefRecord.CreateUri(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toByteArray", "()[B", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return this NDEF Record as a byte array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return this NDEF Record as a byte array.</para>
          <para tool="javadoc-to-mdoc">
 This method is deprecated, use <c><see cref="M:Android.Nfc.NdefMessage.ToByteArray" /></c>
 instead. This is because the NDEF binary format is not defined for
 a record outside of the context of a message: the MB and ME flags
 cannot be set without knowing the location inside a message.</para>
          <para tool="javadoc-to-mdoc">
 This implementation will attempt to serialize a single record by
 always setting the MB and ME flags (in other words, assume this
 is a single-record NDEF Message).</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#toByteArray()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ToMimeType">
      <MemberSignature Language="C#" Value="public string ToMimeType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToMimeType() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toMimeType", "()Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Map this record to a MIME type, or return null if it cannot be mapped.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Map this record to a MIME type, or return null if it cannot be mapped.</para>
          <para tool="javadoc-to-mdoc">
 Currently this method considers all <c><see cref="F:Android.Nfc.NdefRecord.TnfMimeMedia" /></c> records to
 be MIME records, as well as some <c><see cref="F:Android.Nfc.NdefRecord.TnfWellKnown" /></c> records such as
 <c><see cref="P:Android.Nfc.NdefRecord.RtdText" /></c>. If this is a MIME record then the MIME type as string
 is returned, otherwise null is returned.</para>
          <para tool="javadoc-to-mdoc">
 This method does not perform validation that the MIME type is
 actually valid. It always attempts to
 return a string containing the type if this is a MIME record.</para>
          <para tool="javadoc-to-mdoc">
 The returned MIME type will by normalized to lower-case using
 <c><see cref="M:Android.Content.Intent.NormalizeMimeType(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
 The MIME payload can be obtained using <c><see cref="M:Android.Nfc.NdefRecord.GetPayload" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#toMimeType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ToUri">
      <MemberSignature Language="C#" Value="public Android.Net.Uri ToUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri ToUri() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toUri", "()Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Map this record to a URI, or return null if it cannot be mapped.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Map this record to a URI, or return null if it cannot be mapped.</para>
          <para tool="javadoc-to-mdoc">
 Currently this method considers the following to be URI records:
 <list type="bullet"><item><term><c><see cref="F:Android.Nfc.NdefRecord.TnfAbsoluteUri" /></c> records.</term></item><item><term><c><see cref="F:Android.Nfc.NdefRecord.TnfWellKnown" /></c> with a type of <c><see cref="P:Android.Nfc.NdefRecord.RtdUri" /></c>.</term></item><item><term><c><see cref="F:Android.Nfc.NdefRecord.TnfWellKnown" /></c> with a type of <c><see cref="P:Android.Nfc.NdefRecord.RtdSmartPoster" /></c>
 and containing a URI record in the NDEF message nested in the payload.
 </term></item><item><term><c><see cref="F:Android.Nfc.NdefRecord.TnfExternalType" /></c> records.</term></item></list>
 If this is not a URI record by the above rules, then null is returned.</para>
          <para tool="javadoc-to-mdoc">
 This method does not perform validation that the URI is
 actually valid: it always attempts to create and return a URI if
 this record appears to be a URI record by the above rules.</para>
          <para tool="javadoc-to-mdoc">
 The returned URI will be normalized to have a lower case scheme
 using <c><see cref="M:Android.Net.Uri.NormalizeScheme" /></c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#toUri()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel dest, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel dest, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags" />
      </Parameters>
      <Docs>
        <param name="dest">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flatten this object in to a Parcel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/nfc/NdefRecord.html#writeToParcel(android.os.Parcel, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
