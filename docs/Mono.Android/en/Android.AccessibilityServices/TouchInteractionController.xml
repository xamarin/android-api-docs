<Type Name="TouchInteractionController" FullName="Android.AccessibilityServices.TouchInteractionController">
  <TypeSignature Language="C#" Value="public sealed class TouchInteractionController : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchInteractionController extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.AccessibilityServices.TouchInteractionController" />
  <TypeSignature Language="F#" Value="type TouchInteractionController = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/accessibilityservice/TouchInteractionController", ApiSince=33, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/accessibilityservice/TouchInteractionController", ApiSince=33, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class allows a service to handle touch exploration and the detection of specialized
            accessibility gestures.</summary>
    <remarks>
      <para>This class allows a service to handle touch exploration and the detection of specialized
            accessibility gestures. The service receives motion events and can match those motion events
            against the gestures it supports. The service can also request the framework enter three other
            states of operation for the duration of this interaction. Upon entering any of these states the
            framework will take over and the service will not receive motion events until the start of a new
            interaction. The states are as follows:
            
            &lt;ul&gt;
              &lt;li&gt;The service can tell the framework that this interaction is touch exploration. The user is
                  trying to explore the screen rather than manipulate it. The framework will then convert the
                  motion events to hover events to support touch exploration.
              &lt;li&gt;The service can tell the framework that this interaction is a dragging interaction where
                  two fingers are used to execute a one-finger gesture such as scrolling the screen. The
                  service must specify which of the two fingers should be passed through to rest of the input
                  pipeline.
              &lt;li&gt;Finally, the service can request that the framework delegate this interaction, meaning pass
                  it through to the rest of the input pipeline as-is.
            &lt;/ul&gt;
            
            When <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE </c> is enabled, this
            controller will receive all motion events received by the framework for the specified display
            when not touch-exploring or delegating. If the service classifies this interaction as touch
            exploration or delegating the framework will stop sending motion events to the service for the
            duration of this interaction. If the service classifies this interaction as a dragging
            interaction the framework will send motion events to the service to allow the service to
            determine if the interaction still qualifies as dragging or if it has become a delegating
            interaction. If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE </c> is disabled
            this controller will not receive any motion events because touch interactions are being passed
            through to the input pipeline unaltered.
            Note that <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE </c>
            requires setting <c>android.R.attr#canRequestTouchExplorationMode</c> as well.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DisplayId">
      <MemberSignature Language="C#" Value="public int DisplayId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayId" />
      <MemberSignature Language="DocId" Value="P:Android.AccessibilityServices.TouchInteractionController.DisplayId" />
      <MemberSignature Language="F#" Value="member this.DisplayId : int" Usage="Android.AccessibilityServices.TouchInteractionController.DisplayId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDisplayId", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDisplayId", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>the display id associated with this controller.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#getDisplayId()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.getDisplayId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.AccessibilityServices.TouchInteractionController.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.AccessibilityServices.TouchInteractionController.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPointerCount">
      <MemberSignature Language="C#" Value="public int MaxPointerCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPointerCount" />
      <MemberSignature Language="DocId" Value="P:Android.AccessibilityServices.TouchInteractionController.MaxPointerCount" />
      <MemberSignature Language="F#" Value="member this.MaxPointerCount : int" Usage="Android.AccessibilityServices.TouchInteractionController.MaxPointerCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxPointerCount", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxPointerCount", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>the maximum number of pointers that this display will accept.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#getMaxPointerCount()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.getMaxPointerCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.PerformClick" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="touchInteractionController.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performClick", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performClick", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to perform a click.</summary>
        <remarks>
          <para>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to perform a click.
            The framework will first try to perform
            <c>AccessibilityNodeInfo.AccessibilityAction#ACTION_CLICK</c> on the item with
            accessibility focus. If that fails, the framework will simulate a click using motion events
            on the last location to have accessibility focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#performClick()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.performClick()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLongClickAndStartDrag">
      <MemberSignature Language="C#" Value="public void PerformLongClickAndStartDrag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLongClickAndStartDrag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.PerformLongClickAndStartDrag" />
      <MemberSignature Language="F#" Value="member this.PerformLongClickAndStartDrag : unit -&gt; unit" Usage="touchInteractionController.PerformLongClickAndStartDrag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performLongClickAndStartDrag", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performLongClickAndStartDrag", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to perform a long click.</summary>
        <remarks>
          <para>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to perform a long click.
            The framework will simulate a long click using motion events on the last location with
            accessibility focus and will delegate any movements to the rest of the input pipeline. This
            allows a user to double-tap and hold to trigger a drag and then execute that drag by moving
            their finger.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#performLongClickAndStartDrag()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.performLongClickAndStartDrag()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public void RegisterCallback (Java.Util.Concurrent.IExecutor? executor, Android.AccessibilityServices.TouchInteractionController.ICallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterCallback(class Java.Util.Concurrent.IExecutor executor, class Android.AccessibilityServices.TouchInteractionController/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.RegisterCallback(Java.Util.Concurrent.IExecutor,Android.AccessibilityServices.TouchInteractionController.ICallback)" />
      <MemberSignature Language="F#" Value="member this.RegisterCallback : Java.Util.Concurrent.IExecutor * Android.AccessibilityServices.TouchInteractionController.ICallback -&gt; unit" Usage="touchInteractionController.RegisterCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerCallback", "(Ljava/util/concurrent/Executor;Landroid/accessibilityservice/TouchInteractionController$Callback;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerCallback", "(Ljava/util/concurrent/Executor;Landroid/accessibilityservice/TouchInteractionController$Callback;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.AccessibilityServices.TouchInteractionController+ICallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestDelegating">
      <MemberSignature Language="C#" Value="public void RequestDelegating ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestDelegating() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.RequestDelegating" />
      <MemberSignature Language="F#" Value="member this.RequestDelegating : unit -&gt; unit" Usage="touchInteractionController.RequestDelegating " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestDelegating", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestDelegating", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to initiate a delegating
            interaction.</summary>
        <remarks>
          <para>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to initiate a delegating
            interaction. Motion events will be passed through as-is to the rest of the input pipeline for
            the duration of this interaction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#requestDelegating()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.requestDelegating()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestDragging">
      <MemberSignature Language="C#" Value="public void RequestDragging (int pointerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestDragging(int32 pointerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.RequestDragging(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequestDragging : int -&gt; unit" Usage="touchInteractionController.RequestDragging pointerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestDragging", "(I)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestDragging", "(I)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointerId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pointerId">the pointer to be passed through to the rest of the input pipeline. If the
                       pointer id is valid but not actually present on the screen it will be ignored.</param>
        <summary>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to initiate a dragging
            interaction using the specified pointer.</summary>
        <remarks>
          <para>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> and <c>If
            {@link AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at least
            one callback has been added, this function tells the framework to initiate a dragging
            interaction using the specified pointer. The pointer's movements will be passed through to
            the rest of the input pipeline. Dragging is often used to perform two-finger scrolling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#requestDragging(int)" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.requestDragging(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTouchExploration">
      <MemberSignature Language="C#" Value="public void RequestTouchExploration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestTouchExploration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.RequestTouchExploration" />
      <MemberSignature Language="F#" Value="member this.RequestTouchExploration : unit -&gt; unit" Usage="touchInteractionController.RequestTouchExploration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestTouchExploration", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestTouchExploration", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at
            least one callback has been added for this display this function tells the framework to
            initiate touch exploration.</summary>
        <remarks>
          <para>If <c>AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE</c> is enabled and at
            least one callback has been added for this display this function tells the framework to
            initiate touch exploration. Touch exploration will continue for the duration of this
            interaction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#requestTouchExploration()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.requestTouchExploration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public int State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 State" />
      <MemberSignature Language="DocId" Value="P:Android.AccessibilityServices.TouchInteractionController.State" />
      <MemberSignature Language="F#" Value="member this.State : int" Usage="Android.AccessibilityServices.TouchInteractionController.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getState", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getState", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>the current state of this controller.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#getState()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.getState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateClear">
      <MemberSignature Language="C#" Value="public const Android.AccessibilityServices.TouchInteractionState StateClear = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.AccessibilityServices.TouchInteractionState StateClear = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.AccessibilityServices.TouchInteractionController.StateClear" />
      <MemberSignature Language="F#" Value="val mutable StateClear : Android.AccessibilityServices.TouchInteractionState" Usage="Android.AccessibilityServices.TouchInteractionController.StateClear" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STATE_CLEAR", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STATE_CLEAR", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.AccessibilityServices.TouchInteractionState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The state where the user is not touching the screen.</summary>
        <remarks>
          <para>The state where the user is not touching the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#STATE_CLEAR" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.STATE_CLEAR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateDelegating">
      <MemberSignature Language="C#" Value="public const Android.AccessibilityServices.TouchInteractionState StateDelegating = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.AccessibilityServices.TouchInteractionState StateDelegating = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.AccessibilityServices.TouchInteractionController.StateDelegating" />
      <MemberSignature Language="F#" Value="val mutable StateDelegating : Android.AccessibilityServices.TouchInteractionState" Usage="Android.AccessibilityServices.TouchInteractionController.StateDelegating" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STATE_DELEGATING", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STATE_DELEGATING", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.AccessibilityServices.TouchInteractionState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The user is performing a gesture which is being passed through to the input pipeline as-is.</summary>
        <remarks>
          <para>The user is performing a gesture which is being passed through to the input pipeline as-is.
            The service is not receiving motion events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#STATE_DELEGATING" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.STATE_DELEGATING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateDragging">
      <MemberSignature Language="C#" Value="public const Android.AccessibilityServices.TouchInteractionState StateDragging = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.AccessibilityServices.TouchInteractionState StateDragging = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.AccessibilityServices.TouchInteractionController.StateDragging" />
      <MemberSignature Language="F#" Value="val mutable StateDragging : Android.AccessibilityServices.TouchInteractionState" Usage="Android.AccessibilityServices.TouchInteractionController.StateDragging" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STATE_DRAGGING", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STATE_DRAGGING", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.AccessibilityServices.TouchInteractionState</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>The state where the user is dragging with two fingers.</summary>
        <remarks>
          <para>The state where the user is dragging with two fingers. The service is not receiving motion
            events. The selected finger is being dispatched to the rest of the input pipeline to execute
            the drag.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#STATE_DRAGGING" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.STATE_DRAGGING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateToString">
      <MemberSignature Language="C#" Value="public static string StateToString (int state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StateToString(int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.StateToString(System.Int32)" />
      <MemberSignature Language="F#" Value="static member StateToString : int -&gt; string" Usage="Android.AccessibilityServices.TouchInteractionController.StateToString state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stateToString", "(I)Ljava/lang/String;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stateToString", "(I)Ljava/lang/String;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Returns a string representation of the specified state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a string representation of the specified state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#stateToString(int)" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.stateToString(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateTouchExploring">
      <MemberSignature Language="C#" Value="public const Android.AccessibilityServices.TouchInteractionState StateTouchExploring = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.AccessibilityServices.TouchInteractionState StateTouchExploring = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.AccessibilityServices.TouchInteractionController.StateTouchExploring" />
      <MemberSignature Language="F#" Value="val mutable StateTouchExploring : Android.AccessibilityServices.TouchInteractionState" Usage="Android.AccessibilityServices.TouchInteractionController.StateTouchExploring" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STATE_TOUCH_EXPLORING", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STATE_TOUCH_EXPLORING", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.AccessibilityServices.TouchInteractionState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The state where the user is explicitly exploring the screen.</summary>
        <remarks>
          <para>The state where the user is explicitly exploring the screen. The service is not receiving
            motion events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#STATE_TOUCH_EXPLORING" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.STATE_TOUCH_EXPLORING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateTouchInteracting">
      <MemberSignature Language="C#" Value="public const Android.AccessibilityServices.TouchInteractionState StateTouchInteracting = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.AccessibilityServices.TouchInteractionState StateTouchInteracting = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.AccessibilityServices.TouchInteractionController.StateTouchInteracting" />
      <MemberSignature Language="F#" Value="val mutable StateTouchInteracting : Android.AccessibilityServices.TouchInteractionState" Usage="Android.AccessibilityServices.TouchInteractionController.StateTouchInteracting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STATE_TOUCH_INTERACTING", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STATE_TOUCH_INTERACTING", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.AccessibilityServices.TouchInteractionState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.AccessibilityServices.TouchInteractionState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The state where the user is touching the screen and the service is receiving motion events.</summary>
        <remarks>
          <para>The state where the user is touching the screen and the service is receiving motion events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#STATE_TOUCH_INTERACTING" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.STATE_TOUCH_INTERACTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.AccessibilityServices.TouchInteractionController.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.AccessibilityServices.TouchInteractionController.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.AccessibilityServices.TouchInteractionController.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.AccessibilityServices.TouchInteractionController.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAllCallbacks">
      <MemberSignature Language="C#" Value="public void UnregisterAllCallbacks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterAllCallbacks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.UnregisterAllCallbacks" />
      <MemberSignature Language="F#" Value="member this.UnregisterAllCallbacks : unit -&gt; unit" Usage="touchInteractionController.UnregisterAllCallbacks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAllCallbacks", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAllCallbacks", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all callbacks and returns control of touch interactions to the framework.</summary>
        <remarks>
          <para>Removes all callbacks and returns control of touch interactions to the framework.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accessibilityservice/TouchInteractionController#unregisterAllCallbacks()" title="Reference documentation">Java documentation for <code>android.accessibilityservice.TouchInteractionController.unregisterAllCallbacks()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCallback">
      <MemberSignature Language="C#" Value="public bool UnregisterCallback (Android.AccessibilityServices.TouchInteractionController.ICallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterCallback(class Android.AccessibilityServices.TouchInteractionController/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.AccessibilityServices.TouchInteractionController.UnregisterCallback(Android.AccessibilityServices.TouchInteractionController.ICallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterCallback : Android.AccessibilityServices.TouchInteractionController.ICallback -&gt; bool" Usage="touchInteractionController.UnregisterCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterCallback", "(Landroid/accessibilityservice/TouchInteractionController$Callback;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterCallback", "(Landroid/accessibilityservice/TouchInteractionController$Callback;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.AccessibilityServices.TouchInteractionController+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
