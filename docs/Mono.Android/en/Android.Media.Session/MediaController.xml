<Type Name="MediaController" FullName="Android.Media.Session.MediaController">
  <TypeSignature Language="C#" Value="public sealed class MediaController : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaController extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.Session.MediaController" />
  <TypeSignature Language="F#" Value="type MediaController = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/session/MediaController", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/session/MediaController", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Allows an app to interact with an ongoing media session.</summary>
    <remarks>
      <para>Allows an app to interact with an ongoing media session. Media buttons and
            other commands can be sent to the session. A callback may be registered to
            receive updates from the session, such as metadata and play state changes.</para>
      <para>A MediaController can be created through <c>MediaSessionManager</c> if you
            hold the "android.permission.MEDIA_CONTENT_CONTROL" permission or are an
            enabled notification listener or by getting a <c>MediaSession.Token</c>
            directly from the session owner.</para>
      <para>MediaController objects are thread-safe.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/session/MediaController" title="Reference documentation">Java documentation for <code>android.media.session.MediaController</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaController (Android.Content.Context context, Android.Media.Session.MediaSession.Token token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.Session.MediaSession/Token token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.#ctor(Android.Content.Context,Android.Media.Session.MediaSession.Token)" />
      <MemberSignature Language="F#" Value="new Android.Media.Session.MediaController : Android.Content.Context * Android.Media.Session.MediaSession.Token -&gt; Android.Media.Session.MediaController" Usage="new Android.Media.Session.MediaController (context, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/session/MediaSession$Token;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/session/MediaSession$Token;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="token" Type="Android.Media.Session.MediaSession+Token" />
      </Parameters>
      <Docs>
        <param name="context">The caller's context.</param>
        <param name="token">The token for the session.</param>
        <summary>Create a new MediaController from a session's token.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#MediaController(android.content.Context,%20android.media.session.Token)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.MediaController(android.content.Context, android.media.session.Token)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustVolume">
      <MemberSignature Language="C#" Value="public void AdjustVolume (Android.Media.Adjust direction, Android.Media.AudioFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AdjustVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.AudioFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.AdjustVolume(Android.Media.Adjust,Android.Media.AudioFlags)" />
      <MemberSignature Language="F#" Value="member this.AdjustVolume : Android.Media.Adjust * Android.Media.AudioFlags -&gt; unit" Usage="mediaController.AdjustVolume (direction, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustVolume", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adjustVolume", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.AudioFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume in.</param>
        <param name="flags">Any flags to pass with the command.</param>
        <summary>Adjust the volume of the output this session is playing on.</summary>
        <remarks>
          <para>Adjust the volume of the output this session is playing on. The direction
            must be one of <c>AudioManager#ADJUST_LOWER</c>,
            <c>AudioManager#ADJUST_RAISE</c>, or <c>AudioManager#ADJUST_SAME</c>.
            The command will be ignored if the session does not support
            <c>VolumeProvider#VOLUME_CONTROL_RELATIVE</c> or
            <c>VolumeProvider#VOLUME_CONTROL_ABSOLUTE</c>. The flags in
            <c>AudioManager</c> may be used to affect the handling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#adjustVolume(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.adjustVolume(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Media.Session.MediaController.GetPlaybackInfo" />
      </Docs>
    </Member>
    <Member MemberName="DispatchMediaButtonEvent">
      <MemberSignature Language="C#" Value="public bool DispatchMediaButtonEvent (Android.Views.KeyEvent keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DispatchMediaButtonEvent(class Android.Views.KeyEvent keyEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.DispatchMediaButtonEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="member this.DispatchMediaButtonEvent : Android.Views.KeyEvent -&gt; bool" Usage="mediaController.DispatchMediaButtonEvent keyEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchMediaButtonEvent", "(Landroid/view/KeyEvent;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchMediaButtonEvent", "(Landroid/view/KeyEvent;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">The media button event to dispatch.</param>
        <summary>Send the specified media button event to the session.</summary>
        <returns>true if the event was sent to the session, false otherwise.</returns>
        <remarks>
          <para>Send the specified media button event to the session. Only media keys can
            be sent by this method, other keys will be ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#dispatchMediaButtonEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.dispatchMediaButtonEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extras">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle? Extras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle Extras" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.Extras" />
      <MemberSignature Language="F#" Value="member this.Extras : Android.OS.Bundle" Usage="Android.Media.Session.MediaController.Extras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExtras", "()Landroid/os/Bundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getExtras", "()Landroid/os/Bundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the extras for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Get the extras for this session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getExtras()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getExtras()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public long Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Flags" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.Flags" />
      <MemberSignature Language="F#" Value="member this.Flags : int64" Usage="Android.Media.Session.MediaController.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFlags", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFlags", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the flags for this session.</summary>
        <value>The current set of flags for the session.</value>
        <remarks>
          <para>Get the flags for this session. Flags are defined in <c>MediaSession</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getFlags()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getFlags()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPlaybackInfo">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaController.PlaybackInfo? GetPlaybackInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Session.MediaController/PlaybackInfo GetPlaybackInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.GetPlaybackInfo" />
      <MemberSignature Language="F#" Value="member this.GetPlaybackInfo : unit -&gt; Android.Media.Session.MediaController.PlaybackInfo" Usage="mediaController.GetPlaybackInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPlaybackInfo", "()Landroid/media/session/MediaController$PlaybackInfo;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPlaybackInfo", "()Landroid/media/session/MediaController$PlaybackInfo;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController+PlaybackInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the current playback info for this session.</summary>
        <returns>The current playback info or null.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getPlaybackInfo()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getPlaybackInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransportControls">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaController.TransportControls GetTransportControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Session.MediaController/TransportControls GetTransportControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.GetTransportControls" />
      <MemberSignature Language="F#" Value="member this.GetTransportControls : unit -&gt; Android.Media.Session.MediaController.TransportControls" Usage="mediaController.GetTransportControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransportControls", "()Landroid/media/session/MediaController$TransportControls;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransportControls", "()Landroid/media/session/MediaController$TransportControls;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController+TransportControls</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a <c>TransportControls</c> instance to send transport actions to
            the associated session.</summary>
        <returns>A transport controls instance.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getTransportControls()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getTransportControls()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.Session.MediaController.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public Android.Media.MediaMetadata? Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.Metadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : Android.Media.MediaMetadata" Usage="Android.Media.Session.MediaController.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMetadata", "()Landroid/media/MediaMetadata;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMetadata", "()Landroid/media/MediaMetadata;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current metadata for this session.</summary>
        <value>The current MediaMetadata or null.</value>
        <remarks>
          <para>Get the current metadata for this session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getMetadata()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getMetadata()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackageName">
      <MemberSignature Language="C#" Value="public string? PackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageName" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.PackageName" />
      <MemberSignature Language="F#" Value="member this.PackageName : string" Usage="Android.Media.Session.MediaController.PackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the session owner's package name.</summary>
        <value>The package name of the session owner.</value>
        <remarks>
          <para>Get the session owner's package name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getPackageName()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getPackageName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackState">
      <MemberSignature Language="C#" Value="public Android.Media.Session.PlaybackState? PlaybackState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.PlaybackState PlaybackState" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.PlaybackState" />
      <MemberSignature Language="F#" Value="member this.PlaybackState : Android.Media.Session.PlaybackState" Usage="Android.Media.Session.MediaController.PlaybackState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPlaybackState", "()Landroid/media/session/PlaybackState;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPlaybackState", "()Landroid/media/session/PlaybackState;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.PlaybackState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current playback state for this session.</summary>
        <value>The current PlaybackState or null</value>
        <remarks>
          <para>Get the current playback state for this session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getPlaybackState()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getPlaybackState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Queue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Media.Session.MediaSession.QueueItem&gt;? Queue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.Session.MediaSession/QueueItem&gt; Queue" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.Queue" />
      <MemberSignature Language="F#" Value="member this.Queue : System.Collections.Generic.IList&lt;Android.Media.Session.MediaSession.QueueItem&gt;" Usage="Android.Media.Session.MediaController.Queue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getQueue", "()Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getQueue", "()Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.Session.MediaSession+QueueItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current play queue for this session if one is set.</summary>
        <value>The current play queue or null.</value>
        <remarks>
          <para>Get the current play queue for this session if one is set. If you only
            care about the current item <c>#getMetadata()</c> should be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getQueue()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getQueue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueTitle">
      <MemberSignature Language="C#" Value="public string? QueueTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueueTitle" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.QueueTitle" />
      <MemberSignature Language="F#" Value="member this.QueueTitle : string" Usage="Android.Media.Session.MediaController.QueueTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueTitleFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? QueueTitleFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence QueueTitleFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.QueueTitleFormatted" />
      <MemberSignature Language="F#" Value="member this.QueueTitleFormatted : Java.Lang.ICharSequence" Usage="Android.Media.Session.MediaController.QueueTitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getQueueTitle", "()Ljava/lang/CharSequence;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getQueueTitle", "()Ljava/lang/CharSequence;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the queue title for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Get the queue title for this session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getQueueTitle()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getQueueTitle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RatingType">
      <MemberSignature Language="C#" Value="public Android.Media.RatingStyle RatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RatingStyle RatingType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.RatingType" />
      <MemberSignature Language="F#" Value="member this.RatingType : Android.Media.RatingStyle" Usage="Android.Media.Session.MediaController.RatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRatingType", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRatingType", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RatingStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the rating type supported by the session.</summary>
        <value>The supported rating type</value>
        <remarks>
          <para>Get the rating type supported by the session. One of:
            &lt;ul&gt;
            &lt;li&gt;<c>Rating#RATING_NONE</c>&lt;/li&gt;
            &lt;li&gt;<c>Rating#RATING_HEART</c>&lt;/li&gt;
            &lt;li&gt;<c>Rating#RATING_THUMB_UP_DOWN</c>&lt;/li&gt;
            &lt;li&gt;<c>Rating#RATING_3_STARS</c>&lt;/li&gt;
            &lt;li&gt;<c>Rating#RATING_4_STARS</c>&lt;/li&gt;
            &lt;li&gt;<c>Rating#RATING_5_STARS</c>&lt;/li&gt;
            &lt;li&gt;<c>Rating#RATING_PERCENTAGE</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getRatingType()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getRatingType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public void RegisterCallback (Android.Media.Session.MediaController.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterCallback(class Android.Media.Session.MediaController/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.RegisterCallback(Android.Media.Session.MediaController.Callback)" />
      <MemberSignature Language="F#" Value="member this.RegisterCallback : Android.Media.Session.MediaController.Callback -&gt; unit" Usage="mediaController.RegisterCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerCallback", "(Landroid/media/session/MediaController$Callback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerCallback", "(Landroid/media/session/MediaController$Callback;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Session.MediaController+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback object, must not be null.</param>
        <summary>Registers a callback to receive updates from the Session.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#registerCallback(android.media.session.Callback)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.registerCallback(android.media.session.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public void RegisterCallback (Android.Media.Session.MediaController.Callback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterCallback(class Android.Media.Session.MediaController/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.RegisterCallback(Android.Media.Session.MediaController.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.RegisterCallback : Android.Media.Session.MediaController.Callback * Android.OS.Handler -&gt; unit" Usage="mediaController.RegisterCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerCallback", "(Landroid/media/session/MediaController$Callback;Landroid/os/Handler;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerCallback", "(Landroid/media/session/MediaController$Callback;Landroid/os/Handler;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Session.MediaController+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The callback object, must not be null.</param>
        <param name="handler">The handler to post updates on. If null the callers thread
            will be used.
</param>
        <summary>Registers a callback to receive updates from the Session.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#registerCallback(android.media.session.Callback)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.registerCallback(android.media.session.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public void SendCommand (string command, Android.OS.Bundle? args, Android.OS.ResultReceiver? cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendCommand(string command, class Android.OS.Bundle args, class Android.OS.ResultReceiver cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.SendCommand(System.String,Android.OS.Bundle,Android.OS.ResultReceiver)" />
      <MemberSignature Language="F#" Value="member this.SendCommand : string * Android.OS.Bundle * Android.OS.ResultReceiver -&gt; unit" Usage="mediaController.SendCommand (command, args, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendCommand", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/ResultReceiver;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendCommand", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/ResultReceiver;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
        <Parameter Name="cb" Type="Android.OS.ResultReceiver" />
      </Parameters>
      <Docs>
        <param name="command">The command to send</param>
        <param name="args">Any parameters to include with the command</param>
        <param name="cb">The callback to receive the result on</param>
        <summary>Sends a generic command to the session.</summary>
        <remarks>
          <para>Sends a generic command to the session. It is up to the session creator
            to decide what commands and parameters they will support. As such,
            commands should only be sent to sessions that the controller owns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#sendCommand(java.lang.String,%20android.os.Bundle,%20android.os.ResultReceiver)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionActivity">
      <MemberSignature Language="C#" Value="public Android.App.PendingIntent? SessionActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.PendingIntent SessionActivity" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.SessionActivity" />
      <MemberSignature Language="F#" Value="member this.SessionActivity : Android.App.PendingIntent" Usage="Android.Media.Session.MediaController.SessionActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSessionActivity", "()Landroid/app/PendingIntent;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSessionActivity", "()Landroid/app/PendingIntent;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get an intent for launching UI associated with this session if one
            exists.</summary>
        <value>A <c>PendingIntent</c> to launch UI or null.</value>
        <remarks>
          <para>Get an intent for launching UI associated with this session if one
            exists.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getSessionActivity()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getSessionActivity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionInfo">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle SessionInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle SessionInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.SessionInfo" />
      <MemberSignature Language="F#" Value="member this.SessionInfo : Android.OS.Bundle" Usage="Android.Media.Session.MediaController.SessionInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSessionInfo", "()Landroid/os/Bundle;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSessionInfo", "()Landroid/os/Bundle;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the additional session information which was set when the session was created.</summary>
        <value>The additional session information, or an empty <c>Bundle</c> if not set.</value>
        <remarks>
          <para>Gets the additional session information which was set when the session was created.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getSessionInfo()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getSessionInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionToken">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaSession.Token SessionToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaSession/Token SessionToken" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.SessionToken" />
      <MemberSignature Language="F#" Value="member this.SessionToken : Android.Media.Session.MediaSession.Token" Usage="Android.Media.Session.MediaController.SessionToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSessionToken", "()Landroid/media/session/MediaSession$Token;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSessionToken", "()Landroid/media/session/MediaSession$Token;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaSession+Token</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the token for the session this is connected to.</summary>
        <value>The token for the connected session.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getSessionToken()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getSessionToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVolumeTo">
      <MemberSignature Language="C#" Value="public void SetVolumeTo (int value, Android.Media.AudioFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVolumeTo(int32 value, valuetype Android.Media.AudioFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.SetVolumeTo(System.Int32,Android.Media.AudioFlags)" />
      <MemberSignature Language="F#" Value="member this.SetVolumeTo : int * Android.Media.AudioFlags -&gt; unit" Usage="mediaController.SetVolumeTo (value, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVolumeTo", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVolumeTo", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Media.AudioFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to set it to, between 0 and the reported max.</param>
        <param name="flags">Flags from <c>AudioManager</c> to include with the volume
                       request.</param>
        <summary>Set the volume of the output this session is playing on.</summary>
        <remarks>
          <para>Set the volume of the output this session is playing on. The command will
            be ignored if it does not support
            <c>VolumeProvider#VOLUME_CONTROL_ABSOLUTE</c>. The flags in
            <c>AudioManager</c> may be used to affect the handling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#setVolumeTo(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.setVolumeTo(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Media.Session.MediaController.GetPlaybackInfo" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.Tag" />
      <MemberSignature Language="F#" Value="member this.Tag : string" Usage="Android.Media.Session.MediaController.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTag", "()Ljava/lang/String;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTag", "()Ljava/lang/String;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the session's tag for debugging purposes.</summary>
        <value>The session's tag.</value>
        <remarks>
          <para>Get the session's tag for debugging purposes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#getTag()" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.getTag()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.Session.MediaController.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaController.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.Session.MediaController.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCallback">
      <MemberSignature Language="C#" Value="public void UnregisterCallback (Android.Media.Session.MediaController.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterCallback(class Android.Media.Session.MediaController/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaController.UnregisterCallback(Android.Media.Session.MediaController.Callback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterCallback : Android.Media.Session.MediaController.Callback -&gt; unit" Usage="mediaController.UnregisterCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterCallback", "(Landroid/media/session/MediaController$Callback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterCallback", "(Landroid/media/session/MediaController$Callback;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Session.MediaController+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to remove.</param>
        <summary>Unregisters the specified callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/session/MediaController#unregisterCallback(android.media.session.Callback)" title="Reference documentation">Java documentation for <code>android.media.session.MediaController.unregisterCallback(android.media.session.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
