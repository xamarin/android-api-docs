<Type Name="LocationManager" FullName="Android.Locations.LocationManager">
  <TypeSignature Language="C#" Value="public class LocationManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocationManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Locations.LocationManager" />
  <TypeSignature Language="F#" Value="type LocationManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/location/LocationManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/location/LocationManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides access to the system location services.</summary>
    <remarks>
      <para>This class provides access to the system location services. These services allow applications to
            obtain periodic updates of the device's geographical location, or to be notified when the device
            enters the proximity of a given geographical location.
            
            &lt;p class="note"&gt;Unless otherwise noted, all Location API methods require the
            <c>android.Manifest.permission#ACCESS_COARSE_LOCATION</c> or
            <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c> permissions. If your application only
            has the coarse permission then providers will still return location results, but the exact
            location will be obfuscated to a coarse level of accuracy.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/location/LocationManager" title="Reference documentation">Java documentation for <code>android.location.LocationManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LocationManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Locations.LocationManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Locations.LocationManager" Usage="new Android.Locations.LocationManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionGnssCapabilitiesChanged">
      <MemberSignature Language="C#" Value="public const string ActionGnssCapabilitiesChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionGnssCapabilitiesChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ActionGnssCapabilitiesChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionGnssCapabilitiesChanged : string" Usage="Android.Locations.LocationManager.ActionGnssCapabilitiesChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_GNSS_CAPABILITIES_CHANGED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_GNSS_CAPABILITIES_CHANGED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action when GNSS capabilities change.</summary>
        <remarks>
          <para>Broadcast intent action when GNSS capabilities change. This is most common at boot time as
            GNSS capabilities are queried from the chipset. Includes an intent extra,
            <c>#EXTRA_GNSS_CAPABILITIES</c>, with the new <c>GnssCapabilities</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#ACTION_GNSS_CAPABILITIES_CHANGED" title="Reference documentation">Java documentation for <code>android.location.LocationManager.ACTION_GNSS_CAPABILITIES_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGpsStatusListener">
      <MemberSignature Language="C#" Value="public virtual bool AddGpsStatusListener (Android.Locations.GpsStatus.IListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddGpsStatusListener(class Android.Locations.GpsStatus/IListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddGpsStatusListener(Android.Locations.GpsStatus.IListener)" />
      <MemberSignature Language="F#" Value="abstract member AddGpsStatusListener : Android.Locations.GpsStatus.IListener -&gt; bool&#xA;override this.AddGpsStatusListener : Android.Locations.GpsStatus.IListener -&gt; bool" Usage="locationManager.AddGpsStatusListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)Z", "GetAddGpsStatusListener_Landroid_location_GpsStatus_Listener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)Z", "GetAddGpsStatusListener_Landroid_location_GpsStatus_Listener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+IListener" />
      </Parameters>
      <Docs>
        <param name="listener">GPS status listener object to register</param>
        <summary>Adds a GPS status listener.</summary>
        <returns>true if the listener was successfully added</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addGpsStatusListener(android.location.Listener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addGpsStatusListener(android.location.Listener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if the ACCESS_FINE_LOCATION permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNmeaListener">
      <MemberSignature Language="C#" Value="public virtual bool AddNmeaListener (Android.Locations.GpsStatus.INmeaListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddNmeaListener(class Android.Locations.GpsStatus/INmeaListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddNmeaListener(Android.Locations.GpsStatus.INmeaListener)" />
      <MemberSignature Language="F#" Value="abstract member AddNmeaListener : Android.Locations.GpsStatus.INmeaListener -&gt; bool&#xA;override this.AddNmeaListener : Android.Locations.GpsStatus.INmeaListener -&gt; bool" Usage="locationManager.AddNmeaListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)Z", "GetAddNmeaListener_Landroid_location_GpsStatus_NmeaListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)Z", "GetAddNmeaListener_Landroid_location_GpsStatus_NmeaListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+INmeaListener" />
      </Parameters>
      <Docs>
        <param name="listener">a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=GpsStatus NmeaListener ;scope=Xamarin" title="GpsStatus NmeaListener ">GpsStatus NmeaListener </a></format> object to register</param>
        <summary>No-op method to keep backward-compatibility.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addNmeaListener(android.location.NmeaListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addNmeaListener(android.location.NmeaListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Java.Lang.SecurityException">if the ACCESS_FINE_LOCATION permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNmeaListener">
      <MemberSignature Language="C#" Value="public virtual bool AddNmeaListener (Android.Locations.IOnNmeaMessageListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddNmeaListener(class Android.Locations.IOnNmeaMessageListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddNmeaListener(Android.Locations.IOnNmeaMessageListener)" />
      <MemberSignature Language="F#" Value="abstract member AddNmeaListener : Android.Locations.IOnNmeaMessageListener -&gt; bool&#xA;override this.AddNmeaListener : Android.Locations.IOnNmeaMessageListener -&gt; bool" Usage="locationManager.AddNmeaListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNmeaListener", "(Landroid/location/OnNmeaMessageListener;)Z", "GetAddNmeaListener_Landroid_location_OnNmeaMessageListener_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNmeaListener", "(Landroid/location/OnNmeaMessageListener;)Z", "GetAddNmeaListener_Landroid_location_OnNmeaMessageListener_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.IOnNmeaMessageListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to register</param>
        <summary>Adds an NMEA listener.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>Adds an NMEA listener.</para>
          <para>See <c>#addNmeaListener(Executor, OnNmeaMessageListener)</c> for more detail on how this
            method works.</para>
          <para>This member is deprecated. Use <c>#addNmeaListener(OnNmeaMessageListener, Handler)</c> or <c>#addNmeaListener(Executor, OnNmeaMessageListener)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addNmeaListener(android.location.OnNmeaMessageListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addNmeaListener(android.location.OnNmeaMessageListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNmeaListener">
      <MemberSignature Language="C#" Value="public virtual bool AddNmeaListener (Android.Locations.IOnNmeaMessageListener listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddNmeaListener(class Android.Locations.IOnNmeaMessageListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddNmeaListener(Android.Locations.IOnNmeaMessageListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddNmeaListener : Android.Locations.IOnNmeaMessageListener * Android.OS.Handler -&gt; bool&#xA;override this.AddNmeaListener : Android.Locations.IOnNmeaMessageListener * Android.OS.Handler -&gt; bool" Usage="locationManager.AddNmeaListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNmeaListener", "(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z", "GetAddNmeaListener_Landroid_location_OnNmeaMessageListener_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNmeaListener", "(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z", "GetAddNmeaListener_Landroid_location_OnNmeaMessageListener_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.IOnNmeaMessageListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to register</param>
        <param name="handler">the handler that the listener runs on</param>
        <summary>Adds an NMEA listener.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>Adds an NMEA listener.</para>
          <para>See <c>#addNmeaListener(Executor, OnNmeaMessageListener)</c> for more detail on how this
            method works.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addNmeaListener(android.location.OnNmeaMessageListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addNmeaListener(android.location.OnNmeaMessageListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNmeaListener">
      <MemberSignature Language="C#" Value="public virtual bool AddNmeaListener (Java.Util.Concurrent.IExecutor executor, Android.Locations.IOnNmeaMessageListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddNmeaListener(class Java.Util.Concurrent.IExecutor executor, class Android.Locations.IOnNmeaMessageListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddNmeaListener(Java.Util.Concurrent.IExecutor,Android.Locations.IOnNmeaMessageListener)" />
      <MemberSignature Language="F#" Value="abstract member AddNmeaListener : Java.Util.Concurrent.IExecutor * Android.Locations.IOnNmeaMessageListener -&gt; bool&#xA;override this.AddNmeaListener : Java.Util.Concurrent.IExecutor * Android.Locations.IOnNmeaMessageListener -&gt; bool" Usage="locationManager.AddNmeaListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNmeaListener", "(Ljava/util/concurrent/Executor;Landroid/location/OnNmeaMessageListener;)Z", "GetAddNmeaListener_Ljava_util_concurrent_Executor_Landroid_location_OnNmeaMessageListener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNmeaListener", "(Ljava/util/concurrent/Executor;Landroid/location/OnNmeaMessageListener;)Z", "GetAddNmeaListener_Ljava_util_concurrent_Executor_Landroid_location_OnNmeaMessageListener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Locations.IOnNmeaMessageListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to register</param>
        <param name="executor">the executor that the listener runs on</param>
        <summary>Adds an NMEA listener.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>Adds an NMEA listener. GNSS NMEA information will only be received while the
            <c>#GPS_PROVIDER</c> is enabled, and while the client app is in the foreground.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addNmeaListener(java.util.concurrent.Executor,%20android.location.OnNmeaMessageListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addNmeaListener(java.util.concurrent.Executor, android.location.OnNmeaMessageListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProximityAlert">
      <MemberSignature Language="C#" Value="public virtual void AddProximityAlert (double latitude, double longitude, float radius, long expiration, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddProximityAlert(float64 latitude, float64 longitude, float32 radius, int64 expiration, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddProximityAlert(System.Double,System.Double,System.Single,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member AddProximityAlert : double * double * single * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.AddProximityAlert : double * double * single * int64 * Android.App.PendingIntent -&gt; unit" Usage="locationManager.AddProximityAlert (latitude, longitude, radius, expiration, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addProximityAlert", "(DDFJLandroid/app/PendingIntent;)V", "GetAddProximityAlert_DDFJLandroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addProximityAlert", "(DDFJLandroid/app/PendingIntent;)V", "GetAddProximityAlert_DDFJLandroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="expiration" Type="System.Int64" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="latitude">the latitude of the central point of the alert region</param>
        <param name="longitude">the longitude of the central point of the alert region</param>
        <param name="radius">the radius of the central point of the alert region in meters</param>
        <param name="expiration">expiration realtime for this proximity alert in milliseconds, or -1 to
                                 indicate no expiration</param>
        <param name="pendingIntent">a <c>PendingIntent</c> that will sent when entry to or exit from the
                                 alert region is detected</param>
        <summary>Sets a proximity alert for the location given by the position (latitude, longitude) and the
            given radius.</summary>
        <remarks>
          <para>Sets a proximity alert for the location given by the position (latitude, longitude) and the
            given radius.</para>
          <para>When the device detects that it has entered or exited the area surrounding the location,
            the given PendingIntent will be fired.</para>
          <para>The fired intent will have a boolean extra added with key <c>#KEY_PROXIMITY_ENTERING</c>.
            If the value is true, the device is entering the proximity region; if false, it is exiting.</para>
          <para>Due to the approximate nature of position estimation, if the device passes through the
            given area briefly, it is possible that no Intent will be fired. Similarly, an intent could
            be fired if the device passes very close to the given area but does not actually enter it.</para>
          <para>Before API version 17, this method could be used with
            <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c> or
            <c>android.Manifest.permission#ACCESS_COARSE_LOCATION</c>. From API version 17 and onwards,
            this method requires <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c> permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addProximityAlert(double,%20double,%20float,%20long,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addProximityAlert(double, double, float, long, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.Manifest.Permission.AccessFineLocation" tool="ReplaceLinkValue" />
 permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTestProvider">
      <MemberSignature Language="C#" Value="public virtual void AddTestProvider (string provider, Android.Locations.Provider.ProviderProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTestProvider(string provider, class Android.Locations.Provider.ProviderProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddTestProvider(System.String,Android.Locations.Provider.ProviderProperties)" />
      <MemberSignature Language="F#" Value="abstract member AddTestProvider : string * Android.Locations.Provider.ProviderProperties -&gt; unit&#xA;override this.AddTestProvider : string * Android.Locations.Provider.ProviderProperties -&gt; unit" Usage="locationManager.AddTestProvider (provider, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;Landroid/location/provider/ProviderProperties;)V", "GetAddTestProvider_Ljava_lang_String_Landroid_location_provider_ProviderProperties_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;Landroid/location/provider/ProviderProperties;)V", "GetAddTestProvider_Ljava_lang_String_Landroid_location_provider_ProviderProperties_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="properties" Type="Android.Locations.Provider.ProviderProperties" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="provider">the provider name</param>
        <summary>Creates a test location provider and adds it to the set of active providers.</summary>
        <remarks>
          <para>Creates a test location provider and adds it to the set of active providers. This provider
            will replace any provider with the same name that exists prior to this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addTestProvider(java.lang.String,%20android.location.provider.ProviderProperties)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addTestProvider(java.lang.String, android.location.provider.ProviderProperties)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTestProvider">
      <MemberSignature Language="C#" Value="public virtual void AddTestProvider (string provider, Android.Locations.Provider.ProviderProperties properties, System.Collections.Generic.ICollection&lt;string&gt; extraAttributionTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTestProvider(string provider, class Android.Locations.Provider.ProviderProperties properties, class System.Collections.Generic.ICollection`1&lt;string&gt; extraAttributionTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddTestProvider(System.String,Android.Locations.Provider.ProviderProperties,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member AddTestProvider : string * Android.Locations.Provider.ProviderProperties * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit&#xA;override this.AddTestProvider : string * Android.Locations.Provider.ProviderProperties * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit" Usage="locationManager.AddTestProvider (provider, properties, extraAttributionTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;Landroid/location/provider/ProviderProperties;Ljava/util/Set;)V", "GetAddTestProvider_Ljava_lang_String_Landroid_location_provider_ProviderProperties_Ljava_util_Set_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;Landroid/location/provider/ProviderProperties;Ljava/util/Set;)V", "GetAddTestProvider_Ljava_lang_String_Landroid_location_provider_ProviderProperties_Ljava_util_Set_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="properties" Type="Android.Locations.Provider.ProviderProperties" />
        <Parameter Name="extraAttributionTags" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="properties">the provider properties</param>
        <param name="extraAttributionTags">additional attribution tags associated with this provider</param>
        <summary>Creates a test location provider and adds it to the set of active providers.</summary>
        <remarks>
          <para>Creates a test location provider and adds it to the set of active providers. This provider
            will replace any provider with the same name that exists prior to this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addTestProvider(java.lang.String,%20android.location.provider.ProviderProperties,%20java.util.Set%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addTestProvider(java.lang.String, android.location.provider.ProviderProperties, java.util.Set&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTestProvider">
      <MemberSignature Language="C#" Value="public virtual void AddTestProvider (string provider, bool requiresNetwork, bool requiresSatellite, bool requiresCell, bool hasMonetaryCost, bool supportsAltitude, bool supportsSpeed, bool supportsBearing, Android.Locations.Power powerRequirement, Android.Hardware.SensorStatus accuracy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTestProvider(string provider, bool requiresNetwork, bool requiresSatellite, bool requiresCell, bool hasMonetaryCost, bool supportsAltitude, bool supportsSpeed, bool supportsBearing, valuetype Android.Locations.Power powerRequirement, valuetype Android.Hardware.SensorStatus accuracy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.AddTestProvider(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Android.Locations.Power,Android.Hardware.SensorStatus)" />
      <MemberSignature Language="F#" Value="abstract member AddTestProvider : string * bool * bool * bool * bool * bool * bool * bool * Android.Locations.Power * Android.Hardware.SensorStatus -&gt; unit&#xA;override this.AddTestProvider : string * bool * bool * bool * bool * bool * bool * bool * Android.Locations.Power * Android.Hardware.SensorStatus -&gt; unit" Usage="locationManager.AddTestProvider (provider, requiresNetwork, requiresSatellite, requiresCell, hasMonetaryCost, supportsAltitude, supportsSpeed, supportsBearing, powerRequirement, accuracy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;ZZZZZZZII)V", "GetAddTestProvider_Ljava_lang_String_ZZZZZZZIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;ZZZZZZZII)V", "GetAddTestProvider_Ljava_lang_String_ZZZZZZZIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="requiresNetwork" Type="System.Boolean" />
        <Parameter Name="requiresSatellite" Type="System.Boolean" />
        <Parameter Name="requiresCell" Type="System.Boolean" />
        <Parameter Name="hasMonetaryCost" Type="System.Boolean" />
        <Parameter Name="supportsAltitude" Type="System.Boolean" />
        <Parameter Name="supportsSpeed" Type="System.Boolean" />
        <Parameter Name="supportsBearing" Type="System.Boolean" />
        <Parameter Name="powerRequirement" Type="Android.Locations.Power">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="accuracy" Type="Android.Hardware.SensorStatus">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requiresNetwork">To be added.</param>
        <param name="requiresSatellite">To be added.</param>
        <param name="requiresCell">To be added.</param>
        <param name="hasMonetaryCost">To be added.</param>
        <param name="supportsAltitude">To be added.</param>
        <param name="supportsSpeed">To be added.</param>
        <param name="supportsBearing">To be added.</param>
        <param name="powerRequirement">To be added.</param>
        <param name="accuracy">To be added.</param>
        <param name="provider">the provider name</param>
        <summary>Creates a test location provider and adds it to the set of active providers.</summary>
        <remarks>
          <para>Creates a test location provider and adds it to the set of active providers. This provider
            will replace any provider with the same name that exists prior to this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#addTestProvider(java.lang.String,%20boolean,%20boolean,%20boolean,%20boolean,%20boolean,%20boolean,%20boolean,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if a provider with the given name already exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="AllProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; AllProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllProviders" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.AllProviders" />
      <MemberSignature Language="F#" Value="member this.AllProviders : System.Collections.Generic.IList&lt;string&gt;" Usage="Android.Locations.LocationManager.AllProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllProviders", "()Ljava/util/List;", "GetGetAllProvidersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllProviders", "()Ljava/util/List;", "GetGetAllProvidersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of the names of all available location providers.</summary>
        <value>list of provider names</value>
        <remarks>
          <para>Returns a list of the names of all available location providers. All providers are returned,
            including those that are currently disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getAllProviders()" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getAllProviders()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearTestProviderEnabled">
      <MemberSignature Language="C#" Value="public virtual void ClearTestProviderEnabled (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTestProviderEnabled(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.ClearTestProviderEnabled(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ClearTestProviderEnabled : string -&gt; unit&#xA;override this.ClearTestProviderEnabled : string -&gt; unit" Usage="locationManager.ClearTestProviderEnabled provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearTestProviderEnabled", "(Ljava/lang/String;)V", "GetClearTestProviderEnabled_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearTestProviderEnabled", "(Ljava/lang/String;)V", "GetClearTestProviderEnabled_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Equivalent to calling <c>#setTestProviderEnabled(String, boolean)</c> to disable a test
            provider.</summary>
        <remarks>
          <para>Equivalent to calling <c>#setTestProviderEnabled(String, boolean)</c> to disable a test
            provider.</para>
          <para>This member is deprecated. Use <c>#setTestProviderEnabled(String, boolean)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#clearTestProviderEnabled(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.clearTestProviderEnabled(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearTestProviderLocation">
      <MemberSignature Language="C#" Value="public virtual void ClearTestProviderLocation (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTestProviderLocation(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.ClearTestProviderLocation(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ClearTestProviderLocation : string -&gt; unit&#xA;override this.ClearTestProviderLocation : string -&gt; unit" Usage="locationManager.ClearTestProviderLocation provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearTestProviderLocation", "(Ljava/lang/String;)V", "GetClearTestProviderLocation_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearTestProviderLocation", "(Ljava/lang/String;)V", "GetClearTestProviderLocation_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Does nothing.</summary>
        <remarks>
          <para>Does nothing.</para>
          <para>This member is deprecated. This method has always been a no-op, and may be removed in the future.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#clearTestProviderLocation(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.clearTestProviderLocation(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearTestProviderStatus">
      <MemberSignature Language="C#" Value="public virtual void ClearTestProviderStatus (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTestProviderStatus(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.ClearTestProviderStatus(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ClearTestProviderStatus : string -&gt; unit&#xA;override this.ClearTestProviderStatus : string -&gt; unit" Usage="locationManager.ClearTestProviderStatus provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearTestProviderStatus", "(Ljava/lang/String;)V", "GetClearTestProviderStatus_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearTestProviderStatus", "(Ljava/lang/String;)V", "GetClearTestProviderStatus_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>This method has no effect as provider status has been deprecated and is no longer supported.</summary>
        <remarks>
          <para>This method has no effect as provider status has been deprecated and is no longer supported.</para>
          <para>This member is deprecated. This method has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#clearTestProviderStatus(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.clearTestProviderStatus(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtraGnssCapabilities">
      <MemberSignature Language="C#" Value="public const string ExtraGnssCapabilities;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraGnssCapabilities" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ExtraGnssCapabilities" />
      <MemberSignature Language="F#" Value="val mutable ExtraGnssCapabilities : string" Usage="Android.Locations.LocationManager.ExtraGnssCapabilities" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_GNSS_CAPABILITIES", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_GNSS_CAPABILITIES", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent extra included with <c>#ACTION_GNSS_CAPABILITIES_CHANGED</c> broadcasts, containing
            the new <c>GnssCapabilities</c>.</summary>
        <remarks>
          <para>Intent extra included with <c>#ACTION_GNSS_CAPABILITIES_CHANGED</c> broadcasts, containing
            the new <c>GnssCapabilities</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#EXTRA_GNSS_CAPABILITIES" title="Reference documentation">Java documentation for <code>android.location.LocationManager.EXTRA_GNSS_CAPABILITIES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraLocationEnabled">
      <MemberSignature Language="C#" Value="public const string ExtraLocationEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraLocationEnabled" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ExtraLocationEnabled" />
      <MemberSignature Language="F#" Value="val mutable ExtraLocationEnabled : string" Usage="Android.Locations.LocationManager.ExtraLocationEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_LOCATION_ENABLED", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_LOCATION_ENABLED", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent extra included with <c>#MODE_CHANGED_ACTION</c> broadcasts, containing the boolean
            enabled state of location.</summary>
        <remarks>
          <para>Intent extra included with <c>#MODE_CHANGED_ACTION</c> broadcasts, containing the boolean
            enabled state of location.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#EXTRA_LOCATION_ENABLED" title="Reference documentation">Java documentation for <code>android.location.LocationManager.EXTRA_LOCATION_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProviderEnabled">
      <MemberSignature Language="C#" Value="public const string ExtraProviderEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProviderEnabled" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ExtraProviderEnabled" />
      <MemberSignature Language="F#" Value="val mutable ExtraProviderEnabled : string" Usage="Android.Locations.LocationManager.ExtraProviderEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVIDER_ENABLED", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVIDER_ENABLED", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent extra included with <c>#PROVIDERS_CHANGED_ACTION</c> broadcasts, containing the
            boolean enabled state of the location provider that has changed.</summary>
        <remarks>
          <para>Intent extra included with <c>#PROVIDERS_CHANGED_ACTION</c> broadcasts, containing the
            boolean enabled state of the location provider that has changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#EXTRA_PROVIDER_ENABLED" title="Reference documentation">Java documentation for <code>android.location.LocationManager.EXTRA_PROVIDER_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProviderName">
      <MemberSignature Language="C#" Value="public const string ExtraProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProviderName" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ExtraProviderName" />
      <MemberSignature Language="F#" Value="val mutable ExtraProviderName : string" Usage="Android.Locations.LocationManager.ExtraProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVIDER_NAME", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVIDER_NAME", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent extra included with <c>#PROVIDERS_CHANGED_ACTION</c> broadcasts, containing the name
            of the location provider that has changed.</summary>
        <remarks>
          <para>Intent extra included with <c>#PROVIDERS_CHANGED_ACTION</c> broadcasts, containing the name
            of the location provider that has changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#EXTRA_PROVIDER_NAME" title="Reference documentation">Java documentation for <code>android.location.LocationManager.EXTRA_PROVIDER_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.Locations.LocationManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Locations.LocationManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Locations.LocationManager" Usage="Android.Locations.LocationManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Locations.LocationManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FusedProvider">
      <MemberSignature Language="C#" Value="public const string FusedProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FusedProvider" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.FusedProvider" />
      <MemberSignature Language="F#" Value="val mutable FusedProvider : string" Usage="Android.Locations.LocationManager.FusedProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FUSED_PROVIDER", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FUSED_PROVIDER", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard name of the fused location provider.</summary>
        <remarks>
          <para>Standard name of the fused location provider.</para>
          <para>If present, this provider may combine inputs from several other location providers to
            provide the best possible location fix. It is implicitly used for all requestLocationUpdates
            APIs that involve a <c>Criteria</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#FUSED_PROVIDER" title="Reference documentation">Java documentation for <code>android.location.LocationManager.FUSED_PROVIDER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBestProvider">
      <MemberSignature Language="C#" Value="public virtual string? GetBestProvider (Android.Locations.Criteria criteria, bool enabledOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetBestProvider(class Android.Locations.Criteria criteria, bool enabledOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetBestProvider(Android.Locations.Criteria,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetBestProvider : Android.Locations.Criteria * bool -&gt; string&#xA;override this.GetBestProvider : Android.Locations.Criteria * bool -&gt; string" Usage="locationManager.GetBestProvider (criteria, enabledOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBestProvider", "(Landroid/location/Criteria;Z)Ljava/lang/String;", "GetGetBestProvider_Landroid_location_Criteria_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBestProvider", "(Landroid/location/Criteria;Z)Ljava/lang/String;", "GetGetBestProvider_Landroid_location_Criteria_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="enabledOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="criteria">the criteria that need to be matched</param>
        <param name="enabledOnly">if true then only enabled providers are included</param>
        <summary>Returns the name of the provider that best meets the given criteria.</summary>
        <returns>name of the provider that best matches the criteria, or null if none match</returns>
        <remarks>
          <para>Returns the name of the provider that best meets the given criteria. Only providers that are
            permitted to be accessed by the caller will be returned. If several providers meet the
            criteria, the one with the best accuracy is returned. If no provider meets the criteria, the
            criteria are loosened in the following order:
            
            &lt;ul&gt;
            &lt;li&gt; power requirement
            &lt;li&gt; accuracy
            &lt;li&gt; bearing
            &lt;li&gt; speed
            &lt;li&gt; altitude
            &lt;/ul&gt;</para>
          <para>Note that the requirement on monetary cost is not removed in this process.</para>
          <para>This member is deprecated. Criteria based APIs are deprecated, prefer to select a provider explicitly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getBestProvider(android.location.Criteria,%20boolean)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getBestProvider(android.location.Criteria, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentLocation">
      <MemberSignature Language="C#" Value="public virtual void GetCurrentLocation (string provider, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer consumer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCurrentLocation(string provider, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer consumer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetCurrentLocation(System.String,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentLocation : string * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.GetCurrentLocation : string * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="locationManager.GetCurrentLocation (provider, cancellationSignal, executor, consumer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCurrentLocation", "(Ljava/lang/String;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "GetGetCurrentLocation_Ljava_lang_String_Landroid_os_CancellationSignal_Ljava_util_concurrent_Executor_Ljava_util_function_Consumer_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCurrentLocation", "(Ljava/lang/String;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "GetGetCurrentLocation_Ljava_lang_String_Landroid_os_CancellationSignal_Ljava_util_concurrent_Executor_Ljava_util_function_Consumer_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="consumer" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="cancellationSignal">an optional signal that allows for cancelling this call</param>
        <param name="executor">the callback will take place on this <c>Executor</c></param>
        <param name="consumer">the callback invoked with either a <c>Location</c> or null</param>
        <summary>Asynchronously returns a single current location fix from the given provider.</summary>
        <remarks>
          <para>Asynchronously returns a single current location fix from the given provider.</para>
          <para>See
            <c>#getCurrentLocation(String, LocationRequest, CancellationSignal, Executor, Consumer)</c>
            for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getCurrentLocation(java.lang.String,%20android.os.CancellationSignal,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.location.Location%3E)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getCurrentLocation(java.lang.String, android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.location.Location&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentLocation">
      <MemberSignature Language="C#" Value="public virtual void GetCurrentLocation (string provider, Android.Locations.LocationRequest locationRequest, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer consumer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCurrentLocation(string provider, class Android.Locations.LocationRequest locationRequest, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer consumer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetCurrentLocation(System.String,Android.Locations.LocationRequest,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentLocation : string * Android.Locations.LocationRequest * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.GetCurrentLocation : string * Android.Locations.LocationRequest * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="locationManager.GetCurrentLocation (provider, locationRequest, cancellationSignal, executor, consumer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCurrentLocation", "(Ljava/lang/String;Landroid/location/LocationRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "GetGetCurrentLocation_Ljava_lang_String_Landroid_location_LocationRequest_Landroid_os_CancellationSignal_Ljava_util_concurrent_Executor_Ljava_util_function_Consumer_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCurrentLocation", "(Ljava/lang/String;Landroid/location/LocationRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "GetGetCurrentLocation_Ljava_lang_String_Landroid_location_LocationRequest_Landroid_os_CancellationSignal_Ljava_util_concurrent_Executor_Ljava_util_function_Consumer_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="locationRequest" Type="Android.Locations.LocationRequest" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="consumer" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="locationRequest">the location request containing location parameters</param>
        <param name="cancellationSignal">an optional signal that allows for cancelling this call</param>
        <param name="executor">the callback will take place on this <c>Executor</c></param>
        <param name="consumer">the callback invoked with either a <c>Location</c> or null</param>
        <summary>Asynchronously returns a single current location fix from the given provider based on the
            given <c>LocationRequest</c>.</summary>
        <remarks>
          <para>Asynchronously returns a single current location fix from the given provider based on the
            given <c>LocationRequest</c>. This may activate sensors in order to compute a new location,
            unlike <c>#getLastKnownLocation(String)</c>, which will only return a cached fix if
            available. The given callback will be invoked once and only once, either with a valid
            location or with a null location if the provider was unable to generate a valid location.</para>
          <para>A client may supply an optional <c>CancellationSignal</c>. If this is used to cancel the
            operation, no callback should be expected after the cancellation.</para>
          <para>This method may return locations from the very recent past (on the order of several
            seconds), but will never return older locations (for example, several minutes old or older).
            Clients may rely upon the guarantee that if this method returns a location, it will represent
            the best estimation of the location of the device in the present moment.</para>
          <para>Clients calling this method from the background may notice that the method fails to
            determine a valid location fix more often than while in the foreground. Background
            applications may be throttled in their location accesses to some degree.
            
            The given location request may be used to provide hints on how a fresh location is computed
            if necessary. In particular <c>LocationRequest#getDurationMillis()</c> can be used to
            provide maximum duration allowed before failing. The system will always cap the maximum
            amount of time a request for current location may run to some reasonable value (less than a
            minute for example) before the request is failed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getCurrentLocation(java.lang.String,%20android.location.LocationRequest,%20android.os.CancellationSignal,%20java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.location.Location%3E)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getCurrentLocation(java.lang.String, android.location.LocationRequest, android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer&lt;android.location.Location&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGpsStatus">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.GpsStatus? GetGpsStatus (Android.Locations.GpsStatus? status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.GpsStatus GetGpsStatus(class Android.Locations.GpsStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetGpsStatus(Android.Locations.GpsStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetGpsStatus : Android.Locations.GpsStatus -&gt; Android.Locations.GpsStatus&#xA;override this.GetGpsStatus : Android.Locations.GpsStatus -&gt; Android.Locations.GpsStatus" Usage="locationManager.GetGpsStatus status" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGpsStatus", "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;", "GetGetGpsStatus_Landroid_location_GpsStatus_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGpsStatus", "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;", "GetGetGpsStatus_Landroid_location_GpsStatus_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.GpsStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Android.Locations.GpsStatus" />
      </Parameters>
      <Docs>
        <param name="status">object containing GPS status details, or null.</param>
        <summary>Retrieves information about the current status of the GPS engine.</summary>
        <returns>status object containing updated GPS status.</returns>
        <remarks>
          <para>Retrieves information about the current status of the GPS engine. This should only be called
            from within the <c>GpsStatus.Listener#onGpsStatusChanged</c> callback to ensure that the
            data is copied atomically.
            
            The caller may either pass in an existing <c>GpsStatus</c> object to be overwritten, or pass
            null to create a new <c>GpsStatus</c> object.</para>
          <para>This member is deprecated. GpsStatus APIs are deprecated, use <c>GnssStatus</c> APIs instead. No longer
            supported in apps targeting S and above.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getGpsStatus(android.location.GpsStatus)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getGpsStatus(android.location.GpsStatus)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetLastKnownLocation">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.Location? GetLastKnownLocation (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.Location GetLastKnownLocation(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetLastKnownLocation(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetLastKnownLocation : string -&gt; Android.Locations.Location&#xA;override this.GetLastKnownLocation : string -&gt; Android.Locations.Location" Usage="locationManager.GetLastKnownLocation provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLastKnownLocation", "(Ljava/lang/String;)Landroid/location/Location;", "GetGetLastKnownLocation_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLastKnownLocation", "(Ljava/lang/String;)Landroid/location/Location;", "GetGetLastKnownLocation_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.Location</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <summary>Gets the last known location from the given provider, or null if there is no last known
            location.</summary>
        <returns>the last known location for the given provider, or null if not available</returns>
        <remarks>
          <para>Gets the last known location from the given provider, or null if there is no last known
            location. The returned location may be quite old in some circumstances, so the age of the
            location should always be checked.</para>
          <para>This will never activate sensors to compute a new location, and will only ever return a
            cached location.</para>
          <para>See also <c>#getCurrentLocation(String, CancellationSignal, Executor, Consumer)</c> which
            will always attempt to return a current location, but will potentially use additional power
            in the course of the attempt as compared to this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getLastKnownLocation(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getLastKnownLocation(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.LocationProvider? GetProvider (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.LocationProvider GetProvider(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetProvider(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProvider : string -&gt; Android.Locations.LocationProvider&#xA;override this.GetProvider : string -&gt; Android.Locations.LocationProvider" Usage="locationManager.GetProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProvider", "(Ljava/lang/String;)Landroid/location/LocationProvider;", "GetGetProvider_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProvider", "(Ljava/lang/String;)Landroid/location/LocationProvider;", "GetGetProvider_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.LocationProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <summary>Returns the information about the location provider with the given name, or null if no
            provider exists by that name.</summary>
        <returns>location provider information, or null if provider does not exist</returns>
        <remarks>
          <para>Returns the information about the location provider with the given name, or null if no
            provider exists by that name.</para>
          <para>This member is deprecated. This method has no way to indicate that a provider's properties are unknown, and
            so may return incorrect results on rare occasions. Use <c>#getProviderProperties(String)</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getProvider(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getProvider(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if name is null or does not exist</exception>
        <exception cref="T:Java.Lang.SecurityException">if the caller is not permitted to access the
 given provider.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderProperties">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.Provider.ProviderProperties? GetProviderProperties (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.Provider.ProviderProperties GetProviderProperties(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetProviderProperties(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderProperties : string -&gt; Android.Locations.Provider.ProviderProperties&#xA;override this.GetProviderProperties : string -&gt; Android.Locations.Provider.ProviderProperties" Usage="locationManager.GetProviderProperties provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProviderProperties", "(Ljava/lang/String;)Landroid/location/provider/ProviderProperties;", "GetGetProviderProperties_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProviderProperties", "(Ljava/lang/String;)Landroid/location/provider/ProviderProperties;", "GetGetProviderProperties_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.Provider.ProviderProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <summary>Returns the properties of the given provider, or null if the properties are currently
            unknown.</summary>
        <returns>location provider properties, or null if properties are currently unknown</returns>
        <remarks>
          <para>Returns the properties of the given provider, or null if the properties are currently
            unknown. Provider properties may change over time, although this is discouraged, and should
            be rare. The most common transition is when provider properties go from being unknown to
            known, which is most common near boot time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getProviderProperties(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getProviderProperties(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetProviders (bool enabledOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetProviders(bool enabledOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetProviders(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetProviders : bool -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetProviders : bool -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="locationManager.GetProviders enabledOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProviders", "(Z)Ljava/util/List;", "GetGetProviders_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProviders", "(Z)Ljava/util/List;", "GetGetProviders_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabledOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabledOnly">if true then only enabled providers are included</param>
        <summary>Returns a list of the names of available location providers.</summary>
        <returns>list of provider names</returns>
        <remarks>
          <para>Returns a list of the names of available location providers. If <c>enabledOnly</c> is false,
            this is functionally the same as <c>#getAllProviders()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getProviders(boolean)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getProviders(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetProviders (Android.Locations.Criteria criteria, bool enabledOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetProviders(class Android.Locations.Criteria criteria, bool enabledOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.GetProviders(Android.Locations.Criteria,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetProviders : Android.Locations.Criteria * bool -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetProviders : Android.Locations.Criteria * bool -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="locationManager.GetProviders (criteria, enabledOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProviders", "(Landroid/location/Criteria;Z)Ljava/util/List;", "GetGetProviders_Landroid_location_Criteria_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProviders", "(Landroid/location/Criteria;Z)Ljava/util/List;", "GetGetProviders_Landroid_location_Criteria_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="enabledOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="criteria">the criteria that providers must match</param>
        <param name="enabledOnly">if true then only enabled providers are included</param>
        <summary>Returns a list of the names of available location providers that satisfy the given criteria.</summary>
        <returns>list of provider names</returns>
        <remarks>
          <para>Returns a list of the names of available location providers that satisfy the given criteria.</para>
          <para>This member is deprecated. Criteria based APIs are deprecated, prefer to select a provider explicitly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getProviders(android.location.Criteria,%20boolean)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getProviders(android.location.Criteria, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GnssAntennaInfos">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Locations.GnssAntennaInfo&gt;? GnssAntennaInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Locations.GnssAntennaInfo&gt; GnssAntennaInfos" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.GnssAntennaInfos" />
      <MemberSignature Language="F#" Value="member this.GnssAntennaInfos : System.Collections.Generic.IList&lt;Android.Locations.GnssAntennaInfo&gt;" Usage="Android.Locations.LocationManager.GnssAntennaInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGnssAntennaInfos", "()Ljava/util/List;", "GetGetGnssAntennaInfosHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGnssAntennaInfos", "()Ljava/util/List;", "GetGetGnssAntennaInfosHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Locations.GnssAntennaInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current list of GNSS antenna infos, or null if unknown or unsupported.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the current list of GNSS antenna infos, or null if unknown or unsupported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getGnssAntennaInfos()" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getGnssAntennaInfos()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GnssCapabilities">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.GnssCapabilities GnssCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Locations.GnssCapabilities GnssCapabilities" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.GnssCapabilities" />
      <MemberSignature Language="F#" Value="member this.GnssCapabilities : Android.Locations.GnssCapabilities" Usage="Android.Locations.LocationManager.GnssCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGnssCapabilities", "()Landroid/location/GnssCapabilities;", "GetGetGnssCapabilitiesHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGnssCapabilities", "()Landroid/location/GnssCapabilities;", "GetGetGnssCapabilitiesHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.GnssCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the supported capabilities of the GNSS chipset.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the supported capabilities of the GNSS chipset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getGnssCapabilities()" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getGnssCapabilities()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GnssHardwareModelName">
      <MemberSignature Language="C#" Value="public virtual string? GnssHardwareModelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GnssHardwareModelName" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.GnssHardwareModelName" />
      <MemberSignature Language="F#" Value="member this.GnssHardwareModelName : string" Usage="Android.Locations.LocationManager.GnssHardwareModelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGnssHardwareModelName", "()Ljava/lang/String;", "GetGetGnssHardwareModelNameHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGnssHardwareModelName", "()Ljava/lang/String;", "GetGetGnssHardwareModelNameHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the model name (including vendor and hardware/software version) of the GNSS hardware
            driver, or null if this information is not available.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the model name (including vendor and hardware/software version) of the GNSS hardware
            driver, or null if this information is not available.</para>
          <para>No device-specific serial number or ID is returned from this API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getGnssHardwareModelName()" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getGnssHardwareModelName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GnssYearOfHardware">
      <MemberSignature Language="C#" Value="public virtual int GnssYearOfHardware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GnssYearOfHardware" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.GnssYearOfHardware" />
      <MemberSignature Language="F#" Value="member this.GnssYearOfHardware : int" Usage="Android.Locations.LocationManager.GnssYearOfHardware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGnssYearOfHardware", "()I", "GetGetGnssYearOfHardwareHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGnssYearOfHardware", "()I", "GetGetGnssYearOfHardwareHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the model year of the GNSS hardware and software build, or 0 if the model year
            is before 2016.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the model year of the GNSS hardware and software build, or 0 if the model year
            is before 2016.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#getGnssYearOfHardware()" title="Reference documentation">Java documentation for <code>android.location.LocationManager.getGnssYearOfHardware()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GpsProvider">
      <MemberSignature Language="C#" Value="public const string GpsProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GpsProvider" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.GpsProvider" />
      <MemberSignature Language="F#" Value="val mutable GpsProvider : string" Usage="Android.Locations.LocationManager.GpsProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("GPS_PROVIDER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("GPS_PROVIDER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard name of the GNSS location provider.</summary>
        <remarks>
          <para>Standard name of the GNSS location provider.</para>
          <para>If present, this provider determines location using GNSS satellites. The responsiveness
            and accuracy of location fixes may depend on GNSS signal conditions.</para>
          <para>Locations returned from this provider are with respect to the primary GNSS antenna
            position within the device. <c>#getGnssAntennaInfos()</c> may be used to determine the GNSS
            antenna position with respect to the Android Coordinate System, and convert between them if
            necessary. This is generally only necessary for high accuracy applications.</para>
          <para>The extras Bundle for locations derived by this location provider may contain the
            following key/value pairs:
            &lt;ul&gt;
            &lt;li&gt; satellites - the number of satellites used to derive the fix
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#GPS_PROVIDER" title="Reference documentation">Java documentation for <code>android.location.LocationManager.GPS_PROVIDER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasProvider">
      <MemberSignature Language="C#" Value="public virtual bool HasProvider (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasProvider(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.HasProvider(System.String)" />
      <MemberSignature Language="F#" Value="abstract member HasProvider : string -&gt; bool&#xA;override this.HasProvider : string -&gt; bool" Usage="locationManager.HasProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasProvider", "(Ljava/lang/String;)Z", "GetHasProvider_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasProvider", "(Ljava/lang/String;)Z", "GetHasProvider_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">a potential location provider</param>
        <summary>Returns true if the given location provider exists on this device, irrespective of whether
            it is currently enabled or not.</summary>
        <returns>true if the location provider exists, false otherwise</returns>
        <remarks>
          <para>Returns true if the given location provider exists on this device, irrespective of whether
            it is currently enabled or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#hasProvider(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.hasProvider(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocationEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsLocationEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocationEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.IsLocationEnabled" />
      <MemberSignature Language="F#" Value="member this.IsLocationEnabled : bool" Usage="Android.Locations.LocationManager.IsLocationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLocationEnabled", "()Z", "GetIsLocationEnabledHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLocationEnabled", "()Z", "GetIsLocationEnabledHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current enabled/disabled state of location.</summary>
        <value>true if location is enabled and false if location is disabled.</value>
        <remarks>
          <para>Returns the current enabled/disabled state of location. To listen for changes, see
            <c>#MODE_CHANGED_ACTION</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#isLocationEnabled()" title="Reference documentation">Java documentation for <code>android.location.LocationManager.isLocationEnabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProviderEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsProviderEnabled (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProviderEnabled(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.IsProviderEnabled(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsProviderEnabled : string -&gt; bool&#xA;override this.IsProviderEnabled : string -&gt; bool" Usage="locationManager.IsProviderEnabled provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isProviderEnabled", "(Ljava/lang/String;)Z", "GetIsProviderEnabled_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isProviderEnabled", "(Ljava/lang/String;)Z", "GetIsProviderEnabled_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <summary>Returns the current enabled/disabled status of the given provider.</summary>
        <returns>true if the provider exists and is enabled</returns>
        <remarks>
          <para>Returns the current enabled/disabled status of the given provider. To listen for changes, see
            <c>#PROVIDERS_CHANGED_ACTION</c>.
            
            Before API version <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this method would throw
            <c>SecurityException</c> if the location permissions were not sufficient to use the
            specified provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#isProviderEnabled(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.isProviderEnabled(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Locations.LocationManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyFlushComplete">
      <MemberSignature Language="C#" Value="public const string KeyFlushComplete;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyFlushComplete" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.KeyFlushComplete" />
      <MemberSignature Language="F#" Value="val mutable KeyFlushComplete : string" Usage="Android.Locations.LocationManager.KeyFlushComplete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEY_FLUSH_COMPLETE", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEY_FLUSH_COMPLETE", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for an extra holding an integer request code when location flush completion is sent
            using a PendingIntent.</summary>
        <remarks>
          <para>Key used for an extra holding an integer request code when location flush completion is sent
            using a PendingIntent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#KEY_FLUSH_COMPLETE" title="Reference documentation">Java documentation for <code>android.location.LocationManager.KEY_FLUSH_COMPLETE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyLocationChanged">
      <MemberSignature Language="C#" Value="public const string KeyLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyLocationChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.KeyLocationChanged" />
      <MemberSignature Language="F#" Value="val mutable KeyLocationChanged : string" Usage="Android.Locations.LocationManager.KeyLocationChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEY_LOCATION_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEY_LOCATION_CHANGED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for an extra holding a <c>Location</c> value when a location change is sent using
            a PendingIntent.</summary>
        <remarks>
          <para>Key used for an extra holding a <c>Location</c> value when a location change is sent using
            a PendingIntent. If the location change includes a list of batched locations via
            <c>#KEY_LOCATIONS</c> then this key will still be present, and will hold the last location
            in the batch. Use <c>Intent#getParcelableExtra(String)</c> to retrieve the location.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#KEY_LOCATION_CHANGED" title="Reference documentation">Java documentation for <code>android.location.LocationManager.KEY_LOCATION_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="KeyLocations">
      <MemberSignature Language="C#" Value="public const string KeyLocations;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyLocations" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.KeyLocations" />
      <MemberSignature Language="F#" Value="val mutable KeyLocations : string" Usage="Android.Locations.LocationManager.KeyLocations" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEY_LOCATIONS", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEY_LOCATIONS", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for an extra holding a array of <c>Location</c>s when a location change is sent
            using a PendingIntent.</summary>
        <remarks>
          <para>Key used for an extra holding a array of <c>Location</c>s when a location change is sent
            using a PendingIntent. This key will only be present if the location change includes
            multiple (ie, batched) locations, otherwise only <c>#KEY_LOCATION_CHANGED</c> will be
            present. Use <c>Intent#getParcelableArrayExtra(String)</c> to retrieve the locations.</para>
          <para>The array of locations will never be empty, and will ordered from earliest location to
            latest location, the same as with <c>LocationListener#onLocationChanged(List)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#KEY_LOCATIONS" title="Reference documentation">Java documentation for <code>android.location.LocationManager.KEY_LOCATIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyProviderEnabled">
      <MemberSignature Language="C#" Value="public const string KeyProviderEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyProviderEnabled" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.KeyProviderEnabled" />
      <MemberSignature Language="F#" Value="val mutable KeyProviderEnabled : string" Usage="Android.Locations.LocationManager.KeyProviderEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEY_PROVIDER_ENABLED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEY_PROVIDER_ENABLED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for an extra holding a boolean enabled/disabled status value when a provider
            enabled/disabled event is broadcast using a PendingIntent.</summary>
        <remarks>
          <para>Key used for an extra holding a boolean enabled/disabled status value when a provider
            enabled/disabled event is broadcast using a PendingIntent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#KEY_PROVIDER_ENABLED" title="Reference documentation">Java documentation for <code>android.location.LocationManager.KEY_PROVIDER_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="KeyProximityEntering">
      <MemberSignature Language="C#" Value="public const string KeyProximityEntering;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyProximityEntering" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.KeyProximityEntering" />
      <MemberSignature Language="F#" Value="val mutable KeyProximityEntering : string" Usage="Android.Locations.LocationManager.KeyProximityEntering" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEY_PROXIMITY_ENTERING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEY_PROXIMITY_ENTERING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for the Bundle extra holding a boolean indicating whether
            a proximity alert is entering (true) or exiting (false).</summary>
        <remarks>
          <para>Key used for the Bundle extra holding a boolean indicating whether
            a proximity alert is entering (true) or exiting (false)..</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#KEY_PROXIMITY_ENTERING" title="Reference documentation">Java documentation for <code>android.location.LocationManager.KEY_PROXIMITY_ENTERING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyStatusChanged">
      <MemberSignature Language="C#" Value="public const string KeyStatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyStatusChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.KeyStatusChanged" />
      <MemberSignature Language="F#" Value="val mutable KeyStatusChanged : string" Usage="Android.Locations.LocationManager.KeyStatusChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEY_STATUS_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEY_STATUS_CHANGED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This key is no longer in use.</summary>
        <remarks>
          <para>This key is no longer in use.</para>
          <para>Key used for a Bundle extra holding an Integer status value when a status change is
            broadcast using a PendingIntent.</para>
          <para>This member is deprecated. Status changes are deprecated and no longer broadcast from Android Q onwards.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#KEY_STATUS_CHANGED" title="Reference documentation">Java documentation for <code>android.location.LocationManager.KEY_STATUS_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ModeChangedAction">
      <MemberSignature Language="C#" Value="public const string ModeChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ModeChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ModeChangedAction" />
      <MemberSignature Language="F#" Value="val mutable ModeChangedAction : string" Usage="Android.Locations.LocationManager.ModeChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_CHANGED_ACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_CHANGED_ACTION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action when the device location enabled state changes.</summary>
        <remarks>
          <para>Broadcast intent action when the device location enabled state changes. From Android R and
            above, will include a boolean intent extra, <c>#EXTRA_LOCATION_ENABLED</c>, with the enabled
            state of location.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#MODE_CHANGED_ACTION" title="Reference documentation">Java documentation for <code>android.location.LocationManager.MODE_CHANGED_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkProvider">
      <MemberSignature Language="C#" Value="public const string NetworkProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NetworkProvider" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.NetworkProvider" />
      <MemberSignature Language="F#" Value="val mutable NetworkProvider : string" Usage="Android.Locations.LocationManager.NetworkProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NETWORK_PROVIDER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NETWORK_PROVIDER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard name of the network location provider.</summary>
        <remarks>
          <para>Standard name of the network location provider.</para>
          <para>If present, this provider determines location based on nearby of cell tower and WiFi
            access points. Operation of this provider may require a data connection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#NETWORK_PROVIDER" title="Reference documentation">Java documentation for <code>android.location.LocationManager.NETWORK_PROVIDER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PassiveProvider">
      <MemberSignature Language="C#" Value="public const string PassiveProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PassiveProvider" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.PassiveProvider" />
      <MemberSignature Language="F#" Value="val mutable PassiveProvider : string" Usage="Android.Locations.LocationManager.PassiveProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PASSIVE_PROVIDER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PASSIVE_PROVIDER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A special location provider for receiving locations without actively initiating a location
            fix.</summary>
        <remarks>
          <para>A special location provider for receiving locations without actively initiating a location
            fix. This location provider is always present.</para>
          <para>This provider can be used to passively receive location updates when other applications or
            services request them without actually requesting the locations yourself. This provider will
            only return locations generated by other providers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#PASSIVE_PROVIDER" title="Reference documentation">Java documentation for <code>android.location.LocationManager.PASSIVE_PROVIDER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersChangedAction">
      <MemberSignature Language="C#" Value="public const string ProvidersChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProvidersChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Locations.LocationManager.ProvidersChangedAction" />
      <MemberSignature Language="F#" Value="val mutable ProvidersChangedAction : string" Usage="Android.Locations.LocationManager.ProvidersChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROVIDERS_CHANGED_ACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROVIDERS_CHANGED_ACTION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action when the set of enabled location providers changes.</summary>
        <remarks>
          <para>Broadcast intent action when the set of enabled location providers changes. To check the
            status of a provider, use <c>#isProviderEnabled(String)</c>. From Android Q and above, will
            include a string intent extra, <c>#EXTRA_PROVIDER_NAME</c>, with the name of the provider
            whose state has changed. From Android R and above, will include a boolean intent extra,
            <c>#EXTRA_PROVIDER_ENABLED</c>, with the enabled state of the provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#PROVIDERS_CHANGED_ACTION" title="Reference documentation">Java documentation for <code>android.location.LocationManager.PROVIDERS_CHANGED_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAntennaInfoListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterAntennaInfoListener (Java.Util.Concurrent.IExecutor executor, Android.Locations.GnssAntennaInfo.IListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterAntennaInfoListener(class Java.Util.Concurrent.IExecutor executor, class Android.Locations.GnssAntennaInfo/IListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterAntennaInfoListener(Java.Util.Concurrent.IExecutor,Android.Locations.GnssAntennaInfo.IListener)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAntennaInfoListener : Java.Util.Concurrent.IExecutor * Android.Locations.GnssAntennaInfo.IListener -&gt; bool&#xA;override this.RegisterAntennaInfoListener : Java.Util.Concurrent.IExecutor * Android.Locations.GnssAntennaInfo.IListener -&gt; bool" Usage="locationManager.RegisterAntennaInfoListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAntennaInfoListener", "(Ljava/util/concurrent/Executor;Landroid/location/GnssAntennaInfo$Listener;)Z", "GetRegisterAntennaInfoListener_Ljava_util_concurrent_Executor_Landroid_location_GnssAntennaInfo_Listener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAntennaInfoListener", "(Ljava/util/concurrent/Executor;Landroid/location/GnssAntennaInfo$Listener;)Z", "GetRegisterAntennaInfoListener_Ljava_util_concurrent_Executor_Landroid_location_GnssAntennaInfo_Listener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Locations.GnssAntennaInfo+IListener" />
      </Parameters>
      <Docs>
        <param name="executor">the executor that the listener runs on</param>
        <param name="listener">the listener to register</param>
        <summary>Registers a GNSS antenna info listener that will receive all changes to antenna info.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerAntennaInfoListener(java.util.concurrent.Executor,%20android.location.Listener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerAntennaInfoListener(java.util.concurrent.Executor, android.location.Listener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssMeasurementsCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssMeasurementsCallback (Android.Locations.GnssMeasurementsEvent.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssMeasurementsCallback(class Android.Locations.GnssMeasurementsEvent/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssMeasurementsCallback(Android.Locations.GnssMeasurementsEvent.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementsEvent.Callback -&gt; bool&#xA;override this.RegisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementsEvent.Callback -&gt; bool" Usage="locationManager.RegisterGnssMeasurementsCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)Z", "GetRegisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)Z", "GetRegisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssMeasurementsEvent+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Registers a GNSS measurements callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssMeasurementsCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssMeasurementsCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssMeasurementsCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssMeasurementsCallback (Android.Locations.GnssMeasurementsEvent.Callback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssMeasurementsCallback(class Android.Locations.GnssMeasurementsEvent/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssMeasurementsCallback(Android.Locations.GnssMeasurementsEvent.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementsEvent.Callback * Android.OS.Handler -&gt; bool&#xA;override this.RegisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementsEvent.Callback * Android.OS.Handler -&gt; bool" Usage="locationManager.RegisterGnssMeasurementsCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;Landroid/os/Handler;)Z", "GetRegisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementsEvent_Callback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;Landroid/os/Handler;)Z", "GetRegisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementsEvent_Callback_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssMeasurementsEvent+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>Registers a GNSS measurements callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssMeasurementsCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssMeasurementsCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssMeasurementsCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssMeasurementsCallback (Java.Util.Concurrent.IExecutor executor, Android.Locations.GnssMeasurementsEvent.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssMeasurementsCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Locations.GnssMeasurementsEvent/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssMeasurementsCallback(Java.Util.Concurrent.IExecutor,Android.Locations.GnssMeasurementsEvent.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssMeasurementsCallback : Java.Util.Concurrent.IExecutor * Android.Locations.GnssMeasurementsEvent.Callback -&gt; bool&#xA;override this.RegisterGnssMeasurementsCallback : Java.Util.Concurrent.IExecutor * Android.Locations.GnssMeasurementsEvent.Callback -&gt; bool" Usage="locationManager.RegisterGnssMeasurementsCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssMeasurementsCallback", "(Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent$Callback;)Z", "GetRegisterGnssMeasurementsCallback_Ljava_util_concurrent_Executor_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssMeasurementsCallback", "(Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent$Callback;)Z", "GetRegisterGnssMeasurementsCallback_Ljava_util_concurrent_Executor_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Locations.GnssMeasurementsEvent+Callback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>Registers a GNSS measurements callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssMeasurementsCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssMeasurementsCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssMeasurementsCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssMeasurementsCallback (Android.Locations.GnssMeasurementRequest request, Java.Util.Concurrent.IExecutor executor, Android.Locations.GnssMeasurementsEvent.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssMeasurementsCallback(class Android.Locations.GnssMeasurementRequest request, class Java.Util.Concurrent.IExecutor executor, class Android.Locations.GnssMeasurementsEvent/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssMeasurementsCallback(Android.Locations.GnssMeasurementRequest,Java.Util.Concurrent.IExecutor,Android.Locations.GnssMeasurementsEvent.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementRequest * Java.Util.Concurrent.IExecutor * Android.Locations.GnssMeasurementsEvent.Callback -&gt; bool&#xA;override this.RegisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementRequest * Java.Util.Concurrent.IExecutor * Android.Locations.GnssMeasurementsEvent.Callback -&gt; bool" Usage="locationManager.RegisterGnssMeasurementsCallback (request, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementRequest;Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent$Callback;)Z", "GetRegisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementRequest_Ljava_util_concurrent_Executor_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementRequest;Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent$Callback;)Z", "GetRegisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementRequest_Ljava_util_concurrent_Executor_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Locations.GnssMeasurementRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Locations.GnssMeasurementsEvent+Callback" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>Registers a GNSS measurements callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssMeasurementsCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssMeasurementsCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssNavigationMessageCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssNavigationMessageCallback (Android.Locations.GnssNavigationMessage.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssNavigationMessageCallback(class Android.Locations.GnssNavigationMessage/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssNavigationMessageCallback(Android.Locations.GnssNavigationMessage.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssNavigationMessageCallback : Android.Locations.GnssNavigationMessage.Callback -&gt; bool&#xA;override this.RegisterGnssNavigationMessageCallback : Android.Locations.GnssNavigationMessage.Callback -&gt; bool" Usage="locationManager.RegisterGnssNavigationMessageCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)Z", "GetRegisterGnssNavigationMessageCallback_Landroid_location_GnssNavigationMessage_Callback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)Z", "GetRegisterGnssNavigationMessageCallback_Landroid_location_GnssNavigationMessage_Callback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssNavigationMessage+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to register</param>
        <summary>Registers a GNSS navigation message callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssNavigationMessageCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssNavigationMessageCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssNavigationMessageCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssNavigationMessageCallback (Android.Locations.GnssNavigationMessage.Callback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssNavigationMessageCallback(class Android.Locations.GnssNavigationMessage/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssNavigationMessageCallback(Android.Locations.GnssNavigationMessage.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssNavigationMessageCallback : Android.Locations.GnssNavigationMessage.Callback * Android.OS.Handler -&gt; bool&#xA;override this.RegisterGnssNavigationMessageCallback : Android.Locations.GnssNavigationMessage.Callback * Android.OS.Handler -&gt; bool" Usage="locationManager.RegisterGnssNavigationMessageCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;Landroid/os/Handler;)Z", "GetRegisterGnssNavigationMessageCallback_Landroid_location_GnssNavigationMessage_Callback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;Landroid/os/Handler;)Z", "GetRegisterGnssNavigationMessageCallback_Landroid_location_GnssNavigationMessage_Callback_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssNavigationMessage+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to register</param>
        <param name="handler">To be added.</param>
        <summary>Registers a GNSS navigation message callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssNavigationMessageCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssNavigationMessageCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssNavigationMessageCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssNavigationMessageCallback (Java.Util.Concurrent.IExecutor executor, Android.Locations.GnssNavigationMessage.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssNavigationMessageCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Locations.GnssNavigationMessage/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssNavigationMessageCallback(Java.Util.Concurrent.IExecutor,Android.Locations.GnssNavigationMessage.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssNavigationMessageCallback : Java.Util.Concurrent.IExecutor * Android.Locations.GnssNavigationMessage.Callback -&gt; bool&#xA;override this.RegisterGnssNavigationMessageCallback : Java.Util.Concurrent.IExecutor * Android.Locations.GnssNavigationMessage.Callback -&gt; bool" Usage="locationManager.RegisterGnssNavigationMessageCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssNavigationMessageCallback", "(Ljava/util/concurrent/Executor;Landroid/location/GnssNavigationMessage$Callback;)Z", "GetRegisterGnssNavigationMessageCallback_Ljava_util_concurrent_Executor_Landroid_location_GnssNavigationMessage_Callback_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssNavigationMessageCallback", "(Ljava/util/concurrent/Executor;Landroid/location/GnssNavigationMessage$Callback;)Z", "GetRegisterGnssNavigationMessageCallback_Ljava_util_concurrent_Executor_Landroid_location_GnssNavigationMessage_Callback_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Locations.GnssNavigationMessage+Callback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">the callback to register</param>
        <summary>Registers a GNSS navigation message callback which will run on a binder thread.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssNavigationMessageCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssNavigationMessageCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssStatusCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssStatusCallback (Android.Locations.GnssStatus.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssStatusCallback(class Android.Locations.GnssStatus/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssStatusCallback(Android.Locations.GnssStatus.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssStatusCallback : Android.Locations.GnssStatus.Callback -&gt; bool&#xA;override this.RegisterGnssStatusCallback : Android.Locations.GnssStatus.Callback -&gt; bool" Usage="locationManager.RegisterGnssStatusCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)Z", "GetRegisterGnssStatusCallback_Landroid_location_GnssStatus_Callback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)Z", "GetRegisterGnssStatusCallback_Landroid_location_GnssStatus_Callback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssStatus+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to register</param>
        <summary>Registers a GNSS status callback.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssStatusCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssStatusCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssStatusCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssStatusCallback (Android.Locations.GnssStatus.Callback callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssStatusCallback(class Android.Locations.GnssStatus/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssStatusCallback(Android.Locations.GnssStatus.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssStatusCallback : Android.Locations.GnssStatus.Callback * Android.OS.Handler -&gt; bool&#xA;override this.RegisterGnssStatusCallback : Android.Locations.GnssStatus.Callback * Android.OS.Handler -&gt; bool" Usage="locationManager.RegisterGnssStatusCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;Landroid/os/Handler;)Z", "GetRegisterGnssStatusCallback_Landroid_location_GnssStatus_Callback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;Landroid/os/Handler;)Z", "GetRegisterGnssStatusCallback_Landroid_location_GnssStatus_Callback_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssStatus+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to register</param>
        <param name="handler">To be added.</param>
        <summary>Registers a GNSS status callback.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssStatusCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssStatusCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterGnssStatusCallback">
      <MemberSignature Language="C#" Value="public virtual bool RegisterGnssStatusCallback (Java.Util.Concurrent.IExecutor executor, Android.Locations.GnssStatus.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterGnssStatusCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Locations.GnssStatus/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RegisterGnssStatusCallback(Java.Util.Concurrent.IExecutor,Android.Locations.GnssStatus.Callback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterGnssStatusCallback : Java.Util.Concurrent.IExecutor * Android.Locations.GnssStatus.Callback -&gt; bool&#xA;override this.RegisterGnssStatusCallback : Java.Util.Concurrent.IExecutor * Android.Locations.GnssStatus.Callback -&gt; bool" Usage="locationManager.RegisterGnssStatusCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerGnssStatusCallback", "(Ljava/util/concurrent/Executor;Landroid/location/GnssStatus$Callback;)Z", "GetRegisterGnssStatusCallback_Ljava_util_concurrent_Executor_Landroid_location_GnssStatus_Callback_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerGnssStatusCallback", "(Ljava/util/concurrent/Executor;Landroid/location/GnssStatus$Callback;)Z", "GetRegisterGnssStatusCallback_Ljava_util_concurrent_Executor_Landroid_location_GnssStatus_Callback_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.ACCESS_FINE_LOCATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Locations.GnssStatus+Callback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">the callback to register</param>
        <summary>Registers a GNSS status callback.</summary>
        <returns>
          <c>true</c> always</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#registerGnssStatusCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.registerGnssStatusCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGpsStatusListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveGpsStatusListener (Android.Locations.GpsStatus.IListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveGpsStatusListener(class Android.Locations.GpsStatus/IListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveGpsStatusListener(Android.Locations.GpsStatus.IListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveGpsStatusListener : Android.Locations.GpsStatus.IListener -&gt; unit&#xA;override this.RemoveGpsStatusListener : Android.Locations.GpsStatus.IListener -&gt; unit" Usage="locationManager.RemoveGpsStatusListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)V", "GetRemoveGpsStatusListener_Landroid_location_GpsStatus_Listener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)V", "GetRemoveGpsStatusListener_Landroid_location_GpsStatus_Listener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+IListener" />
      </Parameters>
      <Docs>
        <param name="listener">GPS status listener object to remove</param>
        <summary>Removes a GPS status listener.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeGpsStatusListener(android.location.Listener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeGpsStatusListener(android.location.Listener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNmeaListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveNmeaListener (Android.Locations.GpsStatus.INmeaListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNmeaListener(class Android.Locations.GpsStatus/INmeaListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveNmeaListener(Android.Locations.GpsStatus.INmeaListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveNmeaListener : Android.Locations.GpsStatus.INmeaListener -&gt; unit&#xA;override this.RemoveNmeaListener : Android.Locations.GpsStatus.INmeaListener -&gt; unit" Usage="locationManager.RemoveNmeaListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)V", "GetRemoveNmeaListener_Landroid_location_GpsStatus_NmeaListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)V", "GetRemoveNmeaListener_Landroid_location_GpsStatus_NmeaListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+INmeaListener" />
      </Parameters>
      <Docs>
        <param name="listener">a <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=GpsStatus NmeaListener ;scope=Xamarin" title="GpsStatus NmeaListener ">GpsStatus NmeaListener </a></format> object to remove
</param>
        <summary>No-op method to keep backward-compatibility.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeNmeaListener(android.location.NmeaListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeNmeaListener(android.location.NmeaListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNmeaListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveNmeaListener (Android.Locations.IOnNmeaMessageListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNmeaListener(class Android.Locations.IOnNmeaMessageListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveNmeaListener(Android.Locations.IOnNmeaMessageListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveNmeaListener : Android.Locations.IOnNmeaMessageListener -&gt; unit&#xA;override this.RemoveNmeaListener : Android.Locations.IOnNmeaMessageListener -&gt; unit" Usage="locationManager.RemoveNmeaListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNmeaListener", "(Landroid/location/OnNmeaMessageListener;)V", "GetRemoveNmeaListener_Landroid_location_OnNmeaMessageListener_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNmeaListener", "(Landroid/location/OnNmeaMessageListener;)V", "GetRemoveNmeaListener_Landroid_location_OnNmeaMessageListener_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.IOnNmeaMessageListener" />
      </Parameters>
      <Docs>
        <param name="listener">a <c>OnNmeaMessageListener</c> object to remove</param>
        <summary>Removes an NMEA listener.</summary>
        <remarks>
          <para>Removes an NMEA listener.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeNmeaListener(android.location.OnNmeaMessageListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeNmeaListener(android.location.OnNmeaMessageListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProximityAlert">
      <MemberSignature Language="C#" Value="public virtual void RemoveProximityAlert (Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProximityAlert(class Android.App.PendingIntent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveProximityAlert(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RemoveProximityAlert : Android.App.PendingIntent -&gt; unit&#xA;override this.RemoveProximityAlert : Android.App.PendingIntent -&gt; unit" Usage="locationManager.RemoveProximityAlert intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeProximityAlert", "(Landroid/app/PendingIntent;)V", "GetRemoveProximityAlert_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeProximityAlert", "(Landroid/app/PendingIntent;)V", "GetRemoveProximityAlert_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">the PendingIntent that no longer needs to be notified of
            proximity alerts</param>
        <summary>Removes the proximity alert with the given PendingIntent.</summary>
        <remarks>
          <para>Removes the proximity alert with the given PendingIntent.</para>
          <para>Before API version 17, this method could be used with
            <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c> or
            <c>android.Manifest.permission#ACCESS_COARSE_LOCATION</c>.
            From API version 17 and onwards, this method requires
            <c>android.Manifest.permission#ACCESS_FINE_LOCATION</c> permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeProximityAlert(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeProximityAlert(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.Manifest.Permission.AccessFineLocation" tool="ReplaceLinkValue" />
 permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTestProvider">
      <MemberSignature Language="C#" Value="public virtual void RemoveTestProvider (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTestProvider(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveTestProvider(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTestProvider : string -&gt; unit&#xA;override this.RemoveTestProvider : string -&gt; unit" Usage="locationManager.RemoveTestProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeTestProvider", "(Ljava/lang/String;)V", "GetRemoveTestProvider_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeTestProvider", "(Ljava/lang/String;)V", "GetRemoveTestProvider_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Removes the test location provider with the given name or does nothing if no such test
            location provider exists.</summary>
        <remarks>
          <para>Removes the test location provider with the given name or does nothing if no such test
            location provider exists.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeTestProvider(java.lang.String)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeTestProvider(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUpdates">
      <MemberSignature Language="C#" Value="public virtual void RemoveUpdates (Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUpdates(class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveUpdates(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RemoveUpdates : Android.App.PendingIntent -&gt; unit&#xA;override this.RemoveUpdates : Android.App.PendingIntent -&gt; unit" Usage="locationManager.RemoveUpdates pendingIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeUpdates", "(Landroid/app/PendingIntent;)V", "GetRemoveUpdates_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeUpdates", "(Landroid/app/PendingIntent;)V", "GetRemoveUpdates_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="pendingIntent">pending intent that no longer needs location updates</param>
        <summary>Removes location updates for the specified <c>PendingIntent</c>.</summary>
        <remarks>
          <para>Removes location updates for the specified <c>PendingIntent</c>. Following this call, the
            PendingIntent will no longer receive location updates.</para>
          <para>See <c>#removeUpdates(LocationListener)</c> for more detail on how this method works.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeUpdates(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeUpdates(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUpdates">
      <MemberSignature Language="C#" Value="public virtual void RemoveUpdates (Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUpdates(class Android.Locations.ILocationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RemoveUpdates(Android.Locations.ILocationListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveUpdates : Android.Locations.ILocationListener -&gt; unit&#xA;override this.RemoveUpdates : Android.Locations.ILocationListener -&gt; unit" Usage="locationManager.RemoveUpdates listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeUpdates", "(Landroid/location/LocationListener;)V", "GetRemoveUpdates_Landroid_location_LocationListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeUpdates", "(Landroid/location/LocationListener;)V", "GetRemoveUpdates_Landroid_location_LocationListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="listener">listener that no longer needs location updates</param>
        <summary>Removes all location updates for the specified <c>LocationListener</c>.</summary>
        <remarks>
          <para>Removes all location updates for the specified <c>LocationListener</c>. The given listener
            is guaranteed not to receive any invocations that &lt;b&gt;happens-after&lt;/b&gt; this method is
            invoked.</para>
          <para>If the given listener has any batched requests, this method will not flush any incomplete
            location batches before stopping location updates. If you wish to flush any pending locations
            before stopping, you must first call <c>#requestFlush(String, LocationListener, int)</c> and
            then call this method once the flush is complete. If this method is invoked before the flush
            is complete, you may not receive the flushed locations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#removeUpdates(android.location.LocationListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.removeUpdates(android.location.LocationListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestFlush">
      <MemberSignature Language="C#" Value="public virtual void RequestFlush (string provider, Android.App.PendingIntent pendingIntent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestFlush(string provider, class Android.App.PendingIntent pendingIntent, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestFlush(System.String,Android.App.PendingIntent,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RequestFlush : string * Android.App.PendingIntent * int -&gt; unit&#xA;override this.RequestFlush : string * Android.App.PendingIntent * int -&gt; unit" Usage="locationManager.RequestFlush (provider, pendingIntent, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFlush", "(Ljava/lang/String;Landroid/app/PendingIntent;I)V", "GetRequestFlush_Ljava_lang_String_Landroid_app_PendingIntent_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFlush", "(Ljava/lang/String;Landroid/app/PendingIntent;I)V", "GetRequestFlush_Ljava_lang_String_Landroid_app_PendingIntent_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="pendingIntent">a pendingIntent registered under the provider</param>
        <param name="requestCode">an arbitrary integer that will be passed back as the extra value for
                                 <c>#KEY_FLUSH_COMPLETE</c></param>
        <summary>Requests that the given provider flush any batched locations to listeners.</summary>
        <remarks>
          <para>Requests that the given provider flush any batched locations to listeners. The given
            PendingIntent (registered with the provider) will be sent with <c>#KEY_FLUSH_COMPLETE</c>
            present in the extra keys, and <c>requestCode</c> as the corresponding value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestFlush(java.lang.String,%20android.app.PendingIntent,%20int)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestFlush(java.lang.String, android.app.PendingIntent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestFlush">
      <MemberSignature Language="C#" Value="public virtual void RequestFlush (string provider, Android.Locations.ILocationListener listener, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestFlush(string provider, class Android.Locations.ILocationListener listener, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestFlush(System.String,Android.Locations.ILocationListener,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RequestFlush : string * Android.Locations.ILocationListener * int -&gt; unit&#xA;override this.RequestFlush : string * Android.Locations.ILocationListener * int -&gt; unit" Usage="locationManager.RequestFlush (provider, listener, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFlush", "(Ljava/lang/String;Landroid/location/LocationListener;I)V", "GetRequestFlush_Ljava_lang_String_Landroid_location_LocationListener_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFlush", "(Ljava/lang/String;Landroid/location/LocationListener;I)V", "GetRequestFlush_Ljava_lang_String_Landroid_location_LocationListener_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="listener">a listener registered under the provider</param>
        <param name="requestCode">an arbitrary integer passed through to
                               <c>LocationListener#onFlushComplete(int)</c></param>
        <summary>Requests that the given provider flush any batched locations to listeners.</summary>
        <remarks>
          <para>Requests that the given provider flush any batched locations to listeners. The given listener
            (registered with the provider) will have <c>LocationListener#onFlushComplete(int)</c>
            invoked with the given result code after any locations that were flushed have been delivered.
            If <c>#removeUpdates(LocationListener)</c> is invoked before the flush callback is executed,
            then the flush callback will never be executed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestFlush(java.lang.String,%20android.location.LocationListener,%20int)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestFlush(java.lang.String, android.location.LocationListener, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, Android.Locations.LocationRequest locationRequest, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, class Android.Locations.LocationRequest locationRequest, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.String,Android.Locations.LocationRequest,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : string * Android.Locations.LocationRequest * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestLocationUpdates : string * Android.Locations.LocationRequest * Android.App.PendingIntent -&gt; unit" Usage="locationManager.RequestLocationUpdates (provider, locationRequest, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;Landroid/location/LocationRequest;Landroid/app/PendingIntent;)V", "GetRequestLocationUpdates_Ljava_lang_String_Landroid_location_LocationRequest_Landroid_app_PendingIntent_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;Landroid/location/LocationRequest;Landroid/app/PendingIntent;)V", "GetRequestLocationUpdates_Ljava_lang_String_Landroid_location_LocationRequest_Landroid_app_PendingIntent_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="locationRequest" Type="Android.Locations.LocationRequest" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="locationRequest">the location request containing location parameters</param>
        <param name="pendingIntent">the pending intent to send location updates</param>
        <summary>Register for location updates from the specified provider, using a <c>LocationRequest</c>,
            and callbacks delivered via the provided <c>PendingIntent</c>.</summary>
        <remarks>
          <para>Register for location updates from the specified provider, using a <c>LocationRequest</c>,
            and callbacks delivered via the provided <c>PendingIntent</c>.</para>
          <para>The delivered pending intents will contain extras with the callback information. The keys
            used for the extras are <c>#KEY_LOCATION_CHANGED</c> and <c>#KEY_PROVIDER_ENABLED</c>. See
            the documentation for each respective extra key for information on the values.</para>
          <para>To unregister for location updates, use <c>#removeUpdates(PendingIntent)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(java.lang.String,%20android.location.LocationRequest,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(java.lang.String, android.location.LocationRequest, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (long minTimeMs, float minDistanceM, Android.Locations.Criteria criteria, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(int64 minTimeMs, float32 minDistanceM, class Android.Locations.Criteria criteria, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.Int64,System.Single,Android.Locations.Criteria,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : int64 * single * Android.Locations.Criteria * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestLocationUpdates : int64 * single * Android.Locations.Criteria * Android.App.PendingIntent -&gt; unit" Usage="locationManager.RequestLocationUpdates (minTimeMs, minDistanceM, criteria, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="criteria">contains parameters to choose the appropriate provider for location updates</param>
        <param name="pendingIntent">the pending intent to send location updates</param>
        <summary>Register for location updates using a provider selected through the given Criteria, and
            callbacks delivered via the provided <c>PendingIntent</c>.</summary>
        <remarks>
          <para>Register for location updates using a provider selected through the given Criteria, and
            callbacks delivered via the provided <c>PendingIntent</c>.</para>
          <para>Note: Since Android KitKat, Criteria requests will always result in using the
            <c>#FUSED_PROVIDER</c>.</para>
          <para>See <c>#requestLocationUpdates(String, long, float, PendingIntent)</c> for more detail on
            how this method works.</para>
          <para>This member is deprecated. Use <c>#requestLocationUpdates(String, long, float, PendingIntent)</c> instead
            to explicitly select a provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(long,%20float,%20android.location.Criteria,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(long, float, android.location.Criteria, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if criteria is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, Android.Locations.LocationRequest locationRequest, Java.Util.Concurrent.IExecutor executor, Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, class Android.Locations.LocationRequest locationRequest, class Java.Util.Concurrent.IExecutor executor, class Android.Locations.ILocationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.String,Android.Locations.LocationRequest,Java.Util.Concurrent.IExecutor,Android.Locations.ILocationListener)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : string * Android.Locations.LocationRequest * Java.Util.Concurrent.IExecutor * Android.Locations.ILocationListener -&gt; unit&#xA;override this.RequestLocationUpdates : string * Android.Locations.LocationRequest * Java.Util.Concurrent.IExecutor * Android.Locations.ILocationListener -&gt; unit" Usage="locationManager.RequestLocationUpdates (provider, locationRequest, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;Landroid/location/LocationRequest;Ljava/util/concurrent/Executor;Landroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_Landroid_location_LocationRequest_Ljava_util_concurrent_Executor_Landroid_location_LocationListener_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;Landroid/location/LocationRequest;Ljava/util/concurrent/Executor;Landroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_Landroid_location_LocationRequest_Ljava_util_concurrent_Executor_Landroid_location_LocationListener_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="locationRequest" Type="Android.Locations.LocationRequest" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="locationRequest">the location request containing location parameters</param>
        <param name="executor">the executor handling listener callbacks</param>
        <param name="listener">the listener to receive location updates</param>
        <summary>Register for location updates from the specified provider, using a <c>LocationRequest</c>,
            and a callback on the specified <c>Executor</c>.</summary>
        <remarks>
          <para>Register for location updates from the specified provider, using a <c>LocationRequest</c>,
            and a callback on the specified <c>Executor</c>.</para>
          <para>Only one request can be registered for each unique listener/provider pair, so any
            subsequent requests with the same provider and listener will overwrite all associated
            arguments. The same listener may be used across multiple providers with different requests
            for each provider.</para>
          <para>It may take some time to receive the first location update depending on the conditions the
            device finds itself in. In order to take advantage of cached locations, application may
            consider using <c>#getLastKnownLocation(String)</c> or <c>#getCurrentLocation(String,
            LocationRequest, CancellationSignal, Executor, Consumer)</c> instead.</para>
          <para>See <c>LocationRequest</c> documentation for an explanation of various request parameters
            and how they can affect the received locations.</para>
          <para>If your application wants to passively observe location updates from all providers, then
            use the <c>#PASSIVE_PROVIDER</c>. This provider does not turn on or modify active location
            providers, so you do not need to be as careful about minimum time and minimum distance
            parameters. However, if your application performs heavy work on a location update (such as
            network activity) then you should set an explicit fastest interval on your location request
            in case another application enables a location provider with extremely fast updates.</para>
          <para>In case the provider you have selected is disabled, location updates will cease, and a
            provider availability update will be sent. As soon as the provider is enabled again, another
            provider availability update will be sent and location updates will resume.</para>
          <para>Locations returned from <c>#GPS_PROVIDER</c> are with respect to the primary GNSS antenna
            position within the device. <c>#getGnssAntennaInfos()</c> may be used to determine the GNSS
            antenna position with respect to the Android Coordinate System, and convert between them if
            necessary. This is generally only necessary for high accuracy applications.</para>
          <para>When location callbacks are invoked, the system will hold a wakelock on your
            application's behalf for some period of time, but not indefinitely. If your application
            requires a long running wakelock within the location callback, you should acquire it
            yourself.</para>
          <para>Spamming location requests is a drain on system resources, and the system has preventative
            measures in place to ensure that this behavior will never result in more locations than could
            be achieved with a single location request with an equivalent interval that is left in place
            the whole time. As part of this amelioration, applications that target Android S and above
            may receive cached or historical locations through their listener. These locations will never
            be older than the interval of the location request.</para>
          <para>To unregister for location updates, use <c>#removeUpdates(LocationListener)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(java.lang.String,%20android.location.LocationRequest,%20java.util.concurrent.Executor,%20android.location.LocationListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(java.lang.String, android.location.LocationRequest, java.util.concurrent.Executor, android.location.LocationListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTimeMs, float minDistanceM, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTimeMs, float32 minDistanceM, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.String,System.Int64,System.Single,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : string * int64 * single * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestLocationUpdates : string * int64 * single * Android.App.PendingIntent -&gt; unit" Usage="locationManager.RequestLocationUpdates (provider, minTimeMs, minDistanceM, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/app/PendingIntent;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/app/PendingIntent;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="pendingIntent">the pending intent to send location updates</param>
        <summary>Register for location updates using the named provider, and callbacks delivered via the
            provided <c>PendingIntent</c>.</summary>
        <remarks>
          <para>Register for location updates using the named provider, and callbacks delivered via the
            provided <c>PendingIntent</c>.</para>
          <para>See <c>#requestLocationUpdates(String, LocationRequest, PendingIntent)</c> for more
            detail on how this method works.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(java.lang.String,%20long,%20float,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist
 on this device</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTimeMs, float minDistanceM, Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTimeMs, float32 minDistanceM, class Android.Locations.ILocationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.String,System.Int64,System.Single,Android.Locations.ILocationListener)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : string * int64 * single * Android.Locations.ILocationListener -&gt; unit&#xA;override this.RequestLocationUpdates : string * int64 * single * Android.Locations.ILocationListener -&gt; unit" Usage="locationManager.RequestLocationUpdates (provider, minTimeMs, minDistanceM, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_location_LocationListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_location_LocationListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="listener">the listener to receive location updates</param>
        <summary>Register for location updates from the given provider with the given arguments, and a
            callback on the <c>Looper</c> of the calling thread.</summary>
        <remarks>
          <para>Register for location updates from the given provider with the given arguments, and a
            callback on the <c>Looper</c> of the calling thread.</para>
          <para>See <c>#requestLocationUpdates(String, LocationRequest, Executor, LocationListener)</c>
            for more detail on how this method works.
            
            &lt;p class="note"&gt; Prior to Jellybean, the minTime parameter was only a hint, and some location
            provider implementations ignored it. For Jellybean and onwards however, it is mandatory for
            Android compatible devices to observe both the minTime and minDistance parameters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(java.lang.String,%20long,%20float,%20android.location.LocationListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist
 on this device</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.RuntimeException">if the calling thread has no Looper</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (long minTimeMs, float minDistanceM, Android.Locations.Criteria criteria, Android.Locations.ILocationListener listener, Android.OS.Looper? looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(int64 minTimeMs, float32 minDistanceM, class Android.Locations.Criteria criteria, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.Int64,System.Single,Android.Locations.Criteria,Android.Locations.ILocationListener,Android.OS.Looper)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : int64 * single * Android.Locations.Criteria * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit&#xA;override this.RequestLocationUpdates : int64 * single * Android.Locations.Criteria * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit" Usage="locationManager.RequestLocationUpdates (minTimeMs, minDistanceM, criteria, listener, looper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Landroid_location_LocationListener_Landroid_os_Looper_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Landroid_location_LocationListener_Landroid_os_Looper_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="looper">a Looper object whose message queue will be used to
 implement the callback mechanism, or null to make callbacks on the calling
 thread</param>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="criteria">contains parameters to choose the appropriate provider for location updates</param>
        <param name="listener">the listener to receive location updates</param>
        <summary>Register for location updates using a provider selected through the given Criteria, and a
            callback on the specified <c>Looper</c>.</summary>
        <remarks>
          <para>Register for location updates using a provider selected through the given Criteria, and a
            callback on the specified <c>Looper</c>.</para>
          <para>Note: Since Android KitKat, Criteria requests will always result in using the
            <c>#FUSED_PROVIDER</c>.</para>
          <para>See <c>#requestLocationUpdates(String, LocationRequest, Executor, LocationListener)</c>
            for more detail on how this method works.</para>
          <para>This member is deprecated. Use
            <c>#requestLocationUpdates(String, long, float, LocationListener, Looper)</c> instead to
            explicitly select a provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(long,%20float,%20android.location.Criteria,%20android.location.LocationListener,%20android.os.Looper)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(long, float, android.location.Criteria, android.location.LocationListener, android.os.Looper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if criteria is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (long minTimeMs, float minDistanceM, Android.Locations.Criteria criteria, Java.Util.Concurrent.IExecutor executor, Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(int64 minTimeMs, float32 minDistanceM, class Android.Locations.Criteria criteria, class Java.Util.Concurrent.IExecutor executor, class Android.Locations.ILocationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.Int64,System.Single,Android.Locations.Criteria,Java.Util.Concurrent.IExecutor,Android.Locations.ILocationListener)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : int64 * single * Android.Locations.Criteria * Java.Util.Concurrent.IExecutor * Android.Locations.ILocationListener -&gt; unit&#xA;override this.RequestLocationUpdates : int64 * single * Android.Locations.Criteria * Java.Util.Concurrent.IExecutor * Android.Locations.ILocationListener -&gt; unit" Usage="locationManager.RequestLocationUpdates (minTimeMs, minDistanceM, criteria, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Ljava/util/concurrent/Executor;Landroid/location/LocationListener;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Ljava_util_concurrent_Executor_Landroid_location_LocationListener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Ljava/util/concurrent/Executor;Landroid/location/LocationListener;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Ljava_util_concurrent_Executor_Landroid_location_LocationListener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="criteria">contains parameters to choose the appropriate provider for location updates</param>
        <param name="executor">the executor handling listener callbacks</param>
        <param name="listener">the listener to receive location updates</param>
        <summary>Register for location updates using a provider selected through the given Criteria, and a
            callback on the specified <c>Executor</c>.</summary>
        <remarks>
          <para>Register for location updates using a provider selected through the given Criteria, and a
            callback on the specified <c>Executor</c>.</para>
          <para>Note: Since Android KitKat, Criteria requests will always result in using the
            <c>#FUSED_PROVIDER</c>.</para>
          <para>See <c>#requestLocationUpdates(String, LocationRequest, Executor, LocationListener)</c>
            for more detail on how this method works.</para>
          <para>This member is deprecated. Use
            <c>#requestLocationUpdates(String, long, float, Executor, LocationListener)</c> instead to
            explicitly select a provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(long,%20float,%20android.location.Criteria,%20java.util.concurrent.Executor,%20android.location.LocationListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(long, float, android.location.Criteria, java.util.concurrent.Executor, android.location.LocationListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTimeMs, float minDistanceM, Android.Locations.ILocationListener listener, Android.OS.Looper? looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTimeMs, float32 minDistanceM, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.String,System.Int64,System.Single,Android.Locations.ILocationListener,Android.OS.Looper)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : string * int64 * single * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit&#xA;override this.RequestLocationUpdates : string * int64 * single * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit" Usage="locationManager.RequestLocationUpdates (provider, minTimeMs, minDistanceM, listener, looper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_location_LocationListener_Landroid_os_Looper_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_location_LocationListener_Landroid_os_Looper_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="listener">the listener to receive location updates</param>
        <param name="looper">the looper handling listener callbacks, or null to use the looper of the
                                calling thread</param>
        <summary>Register for location updates from the given provider with the given arguments, and a
            callback on the specified <c>Looper</c>.</summary>
        <remarks>
          <para>Register for location updates from the given provider with the given arguments, and a
            callback on the specified <c>Looper</c>.</para>
          <para>See <c>#requestLocationUpdates(String, LocationRequest, Executor, LocationListener)</c>
            for more detail on how this method works.
            
            &lt;p class="note"&gt;Prior to Jellybean, the minTime parameter was only a hint, and some location
            provider implementations ignored it. For Jellybean and onwards however, it is mandatory for
            Android compatible devices to observe both the minTime and minDistance parameters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(java.lang.String,%20long,%20float,%20android.location.LocationListener,%20android.os.Looper)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTimeMs, float minDistanceM, Java.Util.Concurrent.IExecutor executor, Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTimeMs, float32 minDistanceM, class Java.Util.Concurrent.IExecutor executor, class Android.Locations.ILocationListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestLocationUpdates(System.String,System.Int64,System.Single,Java.Util.Concurrent.IExecutor,Android.Locations.ILocationListener)" />
      <MemberSignature Language="F#" Value="abstract member RequestLocationUpdates : string * int64 * single * Java.Util.Concurrent.IExecutor * Android.Locations.ILocationListener -&gt; unit&#xA;override this.RequestLocationUpdates : string * int64 * single * Java.Util.Concurrent.IExecutor * Android.Locations.ILocationListener -&gt; unit" Usage="locationManager.RequestLocationUpdates (provider, minTimeMs, minDistanceM, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLjava/util/concurrent/Executor;Landroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLjava_util_concurrent_Executor_Landroid_location_LocationListener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLjava/util/concurrent/Executor;Landroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLjava_util_concurrent_Executor_Landroid_location_LocationListener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTimeMs" Type="System.Int64" />
        <Parameter Name="minDistanceM" Type="System.Single" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="minTimeMs">minimum time interval between location updates in milliseconds</param>
        <param name="minDistanceM">minimum distance between location updates in meters</param>
        <param name="executor">the executor handling listener callbacks</param>
        <param name="listener">the listener to receive location updates</param>
        <summary>Register for location updates using the named provider, and a callback on
            the specified <c>Executor</c>.</summary>
        <remarks>
          <para>Register for location updates using the named provider, and a callback on
            the specified <c>Executor</c>.</para>
          <para>See <c>#requestLocationUpdates(String, LocationRequest, Executor, LocationListener)</c>
            for more detail on how this method works.
            
            &lt;p class="note"&gt;Prior to Jellybean, the minTime parameter was only a hint, and some location
            provider implementations ignored it. For Jellybean and onwards however, it is mandatory for
            Android compatible devices to observe both the minTime and minDistance parameters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestLocationUpdates(java.lang.String,%20long,%20float,%20java.util.concurrent.Executor,%20android.location.LocationListener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, java.util.concurrent.Executor, android.location.LocationListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (Android.Locations.Criteria criteria, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(class Android.Locations.Criteria criteria, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestSingleUpdate(Android.Locations.Criteria,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestSingleUpdate : Android.Locations.Criteria * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestSingleUpdate : Android.Locations.Criteria * Android.App.PendingIntent -&gt; unit" Usage="locationManager.RequestSingleUpdate (criteria, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestSingleUpdate", "(Landroid/location/Criteria;Landroid/app/PendingIntent;)V", "GetRequestSingleUpdate_Landroid_location_Criteria_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestSingleUpdate", "(Landroid/location/Criteria;Landroid/app/PendingIntent;)V", "GetRequestSingleUpdate_Landroid_location_Criteria_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="criteria">contains parameters to choose the appropriate provider for location
                                 updates</param>
        <param name="pendingIntent">the pending intent to send location updates</param>
        <summary>Register for a single location update using a Criteria and pending intent.</summary>
        <remarks>
          <para>Register for a single location update using a Criteria and pending intent.</para>
          <para>Note: Since Android KitKat, Criteria requests will always result in using the
            <c>#FUSED_PROVIDER</c>.</para>
          <para>See <c>#requestLocationUpdates(long, float, Criteria, PendingIntent)</c> for more detail
            on how to use this method.</para>
          <para>This member is deprecated. Use <c>#getCurrentLocation(String, CancellationSignal, Executor, Consumer)</c>
            instead as it does not carry a risk of extreme battery drain.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestSingleUpdate(android.location.Criteria,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestSingleUpdate(android.location.Criteria, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (string provider, Android.App.PendingIntent pendingIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(string provider, class Android.App.PendingIntent pendingIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestSingleUpdate(System.String,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestSingleUpdate : string * Android.App.PendingIntent -&gt; unit&#xA;override this.RequestSingleUpdate : string * Android.App.PendingIntent -&gt; unit" Usage="locationManager.RequestSingleUpdate (provider, pendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestSingleUpdate", "(Ljava/lang/String;Landroid/app/PendingIntent;)V", "GetRequestSingleUpdate_Ljava_lang_String_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestSingleUpdate", "(Ljava/lang/String;Landroid/app/PendingIntent;)V", "GetRequestSingleUpdate_Ljava_lang_String_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="pendingIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="pendingIntent">the pending intent to send location updates</param>
        <summary>Register for a single location update using a named provider and pending intent.</summary>
        <remarks>
          <para>Register for a single location update using a named provider and pending intent.</para>
          <para>See <c>#requestLocationUpdates(long, float, Criteria, PendingIntent)</c> for more detail
            on how to use this method.</para>
          <para>This member is deprecated. Use <c>#getCurrentLocation(String, CancellationSignal, Executor, Consumer)</c>
            instead as it does not carry a risk of extreme battery drain.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestSingleUpdate(java.lang.String,%20android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestSingleUpdate(java.lang.String, android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (Android.Locations.Criteria criteria, Android.Locations.ILocationListener listener, Android.OS.Looper? looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(class Android.Locations.Criteria criteria, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestSingleUpdate(Android.Locations.Criteria,Android.Locations.ILocationListener,Android.OS.Looper)" />
      <MemberSignature Language="F#" Value="abstract member RequestSingleUpdate : Android.Locations.Criteria * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit&#xA;override this.RequestSingleUpdate : Android.Locations.Criteria * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit" Usage="locationManager.RequestSingleUpdate (criteria, listener, looper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestSingleUpdate", "(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestSingleUpdate_Landroid_location_Criteria_Landroid_location_LocationListener_Landroid_os_Looper_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestSingleUpdate", "(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestSingleUpdate_Landroid_location_Criteria_Landroid_location_LocationListener_Landroid_os_Looper_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="criteria">contains parameters to choose the appropriate provider for location updates</param>
        <param name="listener">the listener to receive location updates</param>
        <param name="looper">the looper handling listener callbacks, or null to use the looper of the
                            calling thread</param>
        <summary>Register for a single location update using a Criteria and a callback.</summary>
        <remarks>
          <para>Register for a single location update using a Criteria and a callback.</para>
          <para>Note: Since Android KitKat, Criteria requests will always result in using the
            <c>#FUSED_PROVIDER</c>.</para>
          <para>See <c>#requestLocationUpdates(long, float, Criteria, PendingIntent)</c> for more detail
            on how to use this method.</para>
          <para>This member is deprecated. Use <c>#getCurrentLocation(String, CancellationSignal, Executor, Consumer)</c>
            instead as it does not carry a risk of extreme battery drain.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestSingleUpdate(android.location.Criteria,%20android.location.LocationListener,%20android.os.Looper)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestSingleUpdate(android.location.Criteria, android.location.LocationListener, android.os.Looper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if criteria is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (string provider, Android.Locations.ILocationListener listener, Android.OS.Looper? looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(string provider, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.RequestSingleUpdate(System.String,Android.Locations.ILocationListener,Android.OS.Looper)" />
      <MemberSignature Language="F#" Value="abstract member RequestSingleUpdate : string * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit&#xA;override this.RequestSingleUpdate : string * Android.Locations.ILocationListener * Android.OS.Looper -&gt; unit" Usage="locationManager.RequestSingleUpdate (provider, listener, looper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestSingleUpdate", "(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestSingleUpdate_Ljava_lang_String_Landroid_location_LocationListener_Landroid_os_Looper_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestSingleUpdate", "(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestSingleUpdate_Ljava_lang_String_Landroid_location_LocationListener_Landroid_os_Looper_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="listener">the listener to receive location updates</param>
        <param name="looper">the looper handling listener callbacks, or null to use the looper of the
                            calling thread</param>
        <summary>Register for a single location update using the named provider and a callback.</summary>
        <remarks>
          <para>Register for a single location update using the named provider and a callback.</para>
          <para>See <c>#requestLocationUpdates(String, long, float, LocationListener, Looper)</c> for
            more detail on how to use this method.</para>
          <para>This member is deprecated. Use <c>#getCurrentLocation(String, CancellationSignal, Executor, Consumer)</c>
            instead as it does not carry a risk of extreme battery drain.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#requestSingleUpdate(java.lang.String,%20android.location.LocationListener,%20android.os.Looper)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.requestSingleUpdate(java.lang.String, android.location.LocationListener, android.os.Looper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendExtraCommand">
      <MemberSignature Language="C#" Value="public virtual bool SendExtraCommand (string provider, string command, Android.OS.Bundle? extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendExtraCommand(string provider, string command, class Android.OS.Bundle extras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.SendExtraCommand(System.String,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendExtraCommand : string * string * Android.OS.Bundle -&gt; bool&#xA;override this.SendExtraCommand : string * string * Android.OS.Bundle -&gt; bool" Usage="locationManager.SendExtraCommand (provider, command, extras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendExtraCommand", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z", "GetSendExtraCommand_Ljava_lang_String_Ljava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendExtraCommand", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z", "GetSendExtraCommand_Ljava_lang_String_Ljava_lang_String_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="provider">a provider listed by <c>#getAllProviders()</c></param>
        <param name="command">name of the command to send to the provider</param>
        <param name="extras">optional arguments for the command, or null</param>
        <summary>Sends additional commands to a location provider.</summary>
        <returns>true always, the return value may be ignored</returns>
        <remarks>
          <para>Sends additional commands to a location provider. Can be used to support provider specific
            extensions to the Location Manager API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#sendExtraCommand(java.lang.String,%20java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetTestProviderEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetTestProviderEnabled (string provider, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTestProviderEnabled(string provider, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.SetTestProviderEnabled(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetTestProviderEnabled : string * bool -&gt; unit&#xA;override this.SetTestProviderEnabled : string * bool -&gt; unit" Usage="locationManager.SetTestProviderEnabled (provider, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTestProviderEnabled", "(Ljava/lang/String;Z)V", "GetSetTestProviderEnabled_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTestProviderEnabled", "(Ljava/lang/String;Z)V", "GetSetTestProviderEnabled_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="enabled">the mock enabled value</param>
        <summary>Sets the given test provider to be enabled or disabled.</summary>
        <remarks>
          <para>Sets the given test provider to be enabled or disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#setTestProviderEnabled(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.setTestProviderEnabled(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTestProviderLocation">
      <MemberSignature Language="C#" Value="public virtual void SetTestProviderLocation (string provider, Android.Locations.Location location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTestProviderLocation(string provider, class Android.Locations.Location location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.SetTestProviderLocation(System.String,Android.Locations.Location)" />
      <MemberSignature Language="F#" Value="abstract member SetTestProviderLocation : string * Android.Locations.Location -&gt; unit&#xA;override this.SetTestProviderLocation : string * Android.Locations.Location -&gt; unit" Usage="locationManager.SetTestProviderLocation (provider, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTestProviderLocation", "(Ljava/lang/String;Landroid/location/Location;)V", "GetSetTestProviderLocation_Ljava_lang_String_Landroid_location_Location_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTestProviderLocation", "(Ljava/lang/String;Landroid/location/Location;)V", "GetSetTestProviderLocation_Ljava_lang_String_Landroid_location_Location_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="location" Type="Android.Locations.Location" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="location">the mock location</param>
        <summary>Sets a new location for the given test provider.</summary>
        <remarks>
          <para>Sets a new location for the given test provider. This location will be identiable as a mock
            location to all clients via <c>Location#isMock()</c>.</para>
          <para>The location object must have a minimum number of fields set to be considered valid, as
            per documentation on <c>Location</c> class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#setTestProviderLocation(java.lang.String,%20android.location.Location)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.setTestProviderLocation(java.lang.String, android.location.Location)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the location is incomplete
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTestProviderStatus">
      <MemberSignature Language="C#" Value="public virtual void SetTestProviderStatus (string provider, Android.Locations.Availability status, Android.OS.Bundle? extras, long updateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTestProviderStatus(string provider, valuetype Android.Locations.Availability status, class Android.OS.Bundle extras, int64 updateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.SetTestProviderStatus(System.String,Android.Locations.Availability,Android.OS.Bundle,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetTestProviderStatus : string * Android.Locations.Availability * Android.OS.Bundle * int64 -&gt; unit&#xA;override this.SetTestProviderStatus : string * Android.Locations.Availability * Android.OS.Bundle * int64 -&gt; unit" Usage="locationManager.SetTestProviderStatus (provider, status, extras, updateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTestProviderStatus", "(Ljava/lang/String;ILandroid/os/Bundle;J)V", "GetSetTestProviderStatus_Ljava_lang_String_ILandroid_os_Bundle_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTestProviderStatus", "(Ljava/lang/String;ILandroid/os/Bundle;J)V", "GetSetTestProviderStatus_Ljava_lang_String_ILandroid_os_Bundle_JHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="status" Type="Android.Locations.Availability">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="updateTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="status">the mock status</param>
        <param name="extras">a Bundle containing mock extras</param>
        <param name="updateTime">the mock update time</param>
        <summary>This method has no effect as provider status has been deprecated and is no longer supported.</summary>
        <remarks>
          <para>This method has no effect as provider status has been deprecated and is no longer supported.</para>
          <para>This member is deprecated. This method has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#setTestProviderStatus(java.lang.String,%20int,%20android.os.Bundle,%20long)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /> is not set to <see cref="F:Android.App.AppOpsManager.ModeAllowed" /> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Locations.LocationManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Locations.LocationManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Locations.LocationManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAntennaInfoListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAntennaInfoListener (Android.Locations.GnssAntennaInfo.IListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAntennaInfoListener(class Android.Locations.GnssAntennaInfo/IListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.UnregisterAntennaInfoListener(Android.Locations.GnssAntennaInfo.IListener)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAntennaInfoListener : Android.Locations.GnssAntennaInfo.IListener -&gt; unit&#xA;override this.UnregisterAntennaInfoListener : Android.Locations.GnssAntennaInfo.IListener -&gt; unit" Usage="locationManager.UnregisterAntennaInfoListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAntennaInfoListener", "(Landroid/location/GnssAntennaInfo$Listener;)V", "GetUnregisterAntennaInfoListener_Landroid_location_GnssAntennaInfo_Listener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAntennaInfoListener", "(Landroid/location/GnssAntennaInfo$Listener;)V", "GetUnregisterAntennaInfoListener_Landroid_location_GnssAntennaInfo_Listener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GnssAntennaInfo+IListener" />
      </Parameters>
      <Docs>
        <param name="listener">a <c>GnssAntennaInfo.Listener</c> object to remove</param>
        <summary>Unregisters a GNSS antenna info listener.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#unregisterAntennaInfoListener(android.location.Listener)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.unregisterAntennaInfoListener(android.location.Listener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterGnssMeasurementsCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterGnssMeasurementsCallback (Android.Locations.GnssMeasurementsEvent.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterGnssMeasurementsCallback(class Android.Locations.GnssMeasurementsEvent/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.UnregisterGnssMeasurementsCallback(Android.Locations.GnssMeasurementsEvent.Callback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementsEvent.Callback -&gt; unit&#xA;override this.UnregisterGnssMeasurementsCallback : Android.Locations.GnssMeasurementsEvent.Callback -&gt; unit" Usage="locationManager.UnregisterGnssMeasurementsCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)V", "GetUnregisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)V", "GetUnregisterGnssMeasurementsCallback_Landroid_location_GnssMeasurementsEvent_Callback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssMeasurementsEvent+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">a <c>GnssMeasurementsEvent.Callback</c> object to remove.</param>
        <summary>Unregisters a GPS Measurement callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#unregisterGnssMeasurementsCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.unregisterGnssMeasurementsCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterGnssNavigationMessageCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterGnssNavigationMessageCallback (Android.Locations.GnssNavigationMessage.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterGnssNavigationMessageCallback(class Android.Locations.GnssNavigationMessage/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.UnregisterGnssNavigationMessageCallback(Android.Locations.GnssNavigationMessage.Callback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterGnssNavigationMessageCallback : Android.Locations.GnssNavigationMessage.Callback -&gt; unit&#xA;override this.UnregisterGnssNavigationMessageCallback : Android.Locations.GnssNavigationMessage.Callback -&gt; unit" Usage="locationManager.UnregisterGnssNavigationMessageCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)V", "GetUnregisterGnssNavigationMessageCallback_Landroid_location_GnssNavigationMessage_Callback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)V", "GetUnregisterGnssNavigationMessageCallback_Landroid_location_GnssNavigationMessage_Callback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssNavigationMessage+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">a <c>GnssNavigationMessage.Callback</c> object to remove.</param>
        <summary>Unregisters a GNSS Navigation Message callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#unregisterGnssNavigationMessageCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.unregisterGnssNavigationMessageCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterGnssStatusCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterGnssStatusCallback (Android.Locations.GnssStatus.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterGnssStatusCallback(class Android.Locations.GnssStatus/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Locations.LocationManager.UnregisterGnssStatusCallback(Android.Locations.GnssStatus.Callback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterGnssStatusCallback : Android.Locations.GnssStatus.Callback -&gt; unit&#xA;override this.UnregisterGnssStatusCallback : Android.Locations.GnssStatus.Callback -&gt; unit" Usage="locationManager.UnregisterGnssStatusCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)V", "GetUnregisterGnssStatusCallback_Landroid_location_GnssStatus_Callback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)V", "GetUnregisterGnssStatusCallback_Landroid_location_GnssStatus_Callback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Locations.GnssStatus+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">GNSS status callback object to remove</param>
        <summary>Removes a GNSS status callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/location/LocationManager#unregisterGnssStatusCallback(android.location.Callback)" title="Reference documentation">Java documentation for <code>android.location.LocationManager.unregisterGnssStatusCallback(android.location.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
