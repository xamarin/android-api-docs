<Type Name="KeyPairGenerator" FullName="Java.Security.KeyPairGenerator">
  <TypeSignature Language="C#" Value="public abstract class KeyPairGenerator : Java.Security.KeyPairGeneratorSpi" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit KeyPairGenerator extends Java.Security.KeyPairGeneratorSpi" />
  <TypeSignature Language="DocId" Value="T:Java.Security.KeyPairGenerator" />
  <TypeSignature Language="F#" Value="type KeyPairGenerator = class&#xA;    inherit KeyPairGeneratorSpi" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Security.KeyPairGeneratorSpi</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/security/KeyPairGenerator", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/security/KeyPairGenerator", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The KeyPairGenerator class is used to generate pairs of
            public and private keys.</summary>
    <remarks>
      <para>The KeyPairGenerator class is used to generate pairs of
            public and private keys. Key pair generators are constructed using the
            <c>getInstance</c> factory methods (static methods that
            return instances of a given class).</para>
      <para>A Key pair generator for a particular algorithm creates a public/private
            key pair that can be used with this algorithm. It also associates
            algorithm-specific parameters with each of the generated keys.</para>
      <para>There are two ways to generate a key pair: in an algorithm-independent
            manner, and in an algorithm-specific manner.
            The only difference between the two is the initialization of the object:
            
            &lt;ul&gt;
            &lt;li&gt;&lt;b&gt;Algorithm-Independent Initialization&lt;/b&gt;</para>
      <para>All key pair generators share the concepts of a keysize and a
            source of randomness. The keysize is interpreted differently for different
            algorithms (e.g., in the case of the <i>DSA</i> algorithm, the keysize
            corresponds to the length of the modulus).
            There is an
            <c>#initialize(int, java.security.SecureRandom) initialize</c>
            method in this KeyPairGenerator class that takes these two universally
            shared types of arguments. There is also one that takes just a
            <c>keysize</c> argument, and uses the <c>SecureRandom</c>
            implementation of the highest-priority installed provider as the source
            of randomness. (If none of the installed providers supply an implementation
            of <c>SecureRandom</c>, a system-provided source of randomness is
            used.)</para>
      <para>Since no other parameters are specified when you call the above
            algorithm-independent <c>initialize</c> methods, it is up to the
            provider what to do about the algorithm-specific parameters (if any) to be
            associated with each of the keys.</para>
      <para>If the algorithm is the <i>DSA</i> algorithm, and the keysize (modulus
            size) is 512, 768, 1024, or 2048, then the <i>Sun</i> provider uses a set of
            precomputed values for the <c>p</c>, <c>q</c>, and
            <c>g</c> parameters. If the modulus size is not one of the above
            values, the <i>Sun</i> provider creates a new set of parameters. Other
            providers might have precomputed parameter sets for more than just the
            modulus sizes mentioned above. Still others might not have a list of
            precomputed parameters at all and instead always create new parameter sets.
            
            &lt;li&gt;&lt;b&gt;Algorithm-Specific Initialization&lt;/b&gt;</para>
      <para>For situations where a set of algorithm-specific parameters already
            exists (e.g., so-called <i>community parameters</i> in DSA), there are two
            <c>#initialize(java.security.spec.AlgorithmParameterSpec)
            initialize</c> methods that have an <c>AlgorithmParameterSpec</c>
            argument. One also has a <c>SecureRandom</c> argument, while
            the other uses the <c>SecureRandom</c>
            implementation of the highest-priority installed provider as the source
            of randomness. (If none of the installed providers supply an implementation
            of <c>SecureRandom</c>, a system-provided source of randomness is
            used.)
            &lt;/ul&gt;</para>
      <para>In case the client does not explicitly initialize the KeyPairGenerator
            (via a call to an <c>initialize</c> method), each provider must
            supply (and document) a default initialization.
            For example, the <i>Sun</i> provider uses a default modulus size (keysize)
            of 1024 bits.</para>
      <para>Note that this class is abstract and extends from
            <c>KeyPairGeneratorSpi</c> for historical reasons.
            Application developers should only take notice of the methods defined in
            this <c>KeyPairGenerator</c> class; all the methods in
            the superclass are intended for cryptographic service providers who wish to
            supply their own implementations of key pair generators.</para>
      <para>Android provides the following <c>KeyPairGenerator</c> algorithms:
            &lt;table&gt;
              &lt;thead&gt;
                &lt;tr&gt;
                  &lt;th&gt;Algorithm&lt;/th&gt;
                  &lt;th&gt;Supported API Levels&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody&gt;
                &lt;tr&gt;
                  &lt;td&gt;DH&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;DSA&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;EC&lt;/td&gt;
                  &lt;td&gt;11+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;RSA&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
            
            These algorithms are described in the <see href="https://developer.android.com//../specs/security/standard-names.html#keypairgenerator-algorithms">
            KeyPairGenerator section</see> of the
            Java Cryptography Architecture Standard Algorithm Name Documentation.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/security/KeyPairGenerator" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyPairGenerator (string? algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Security.KeyPairGenerator : string -&gt; Java.Security.KeyPairGenerator" Usage="new Java.Security.KeyPairGenerator algorithm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard string name of the algorithm.
            See the KeyPairGenerator section in the <see href="https://developer.android.com//../specs/security/standard-names.html#keypairgenerator-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <summary>Creates a KeyPairGenerator object for the specified algorithm.</summary>
        <remarks>
          <para>Creates a KeyPairGenerator object for the specified algorithm.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#KeyPairGenerator(java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.KeyPairGenerator(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyPairGenerator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Security.KeyPairGenerator : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Security.KeyPairGenerator" Usage="new Java.Security.KeyPairGenerator (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public virtual string? Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:Java.Security.KeyPairGenerator.Algorithm" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string" Usage="Java.Security.KeyPairGenerator.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the standard name of the algorithm for this key pair generator.</summary>
        <value>the standard string name of the algorithm.</value>
        <remarks>
          <para>Returns the standard name of the algorithm for this key pair generator.
            See the KeyPairGenerator section in the <see href="https://developer.android.com//../specs/security/standard-names.html#keypairgenerator-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#getAlgorithm()" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.getAlgorithm()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerateKeyPair">
      <MemberSignature Language="C#" Value="public override Java.Security.KeyPair? GenerateKeyPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Security.KeyPair GenerateKeyPair() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.GenerateKeyPair" />
      <MemberSignature Language="F#" Value="override this.GenerateKeyPair : unit -&gt; Java.Security.KeyPair" Usage="keyPairGenerator.GenerateKeyPair " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateKeyPair", "()Ljava/security/KeyPair;", "GetGenerateKeyPairHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateKeyPair", "()Ljava/security/KeyPair;", "GetGenerateKeyPairHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPair</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a key pair.</summary>
        <returns>the generated key pair</returns>
        <remarks>
          <para>Generates a key pair.</para>
          <para>If this KeyPairGenerator has not been initialized explicitly,
            provider-specific defaults will be used for the size and other
            (algorithm-specific) values of the generated keys.</para>
          <para>This will generate a new key pair every time it is called.</para>
          <para>This method is functionally equivalent to
            <c>#genKeyPair() genKeyPair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#generateKeyPair()" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.generateKeyPair()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenKeyPair">
      <MemberSignature Language="C#" Value="public Java.Security.KeyPair? GenKeyPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.KeyPair GenKeyPair() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.GenKeyPair" />
      <MemberSignature Language="F#" Value="member this.GenKeyPair : unit -&gt; Java.Security.KeyPair" Usage="keyPairGenerator.GenKeyPair " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("genKeyPair", "()Ljava/security/KeyPair;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("genKeyPair", "()Ljava/security/KeyPair;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPair</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a key pair.</summary>
        <returns>the generated key pair</returns>
        <remarks>
          <para>Generates a key pair.</para>
          <para>If this KeyPairGenerator has not been initialized explicitly,
            provider-specific defaults will be used for the size and other
            (algorithm-specific) values of the generated keys.</para>
          <para>This will generate a new key pair every time it is called.</para>
          <para>This method is functionally equivalent to
            <c>#generateKeyPair() generateKeyPair</c>.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#genKeyPair()" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.genKeyPair()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.KeyPairGenerator? GetInstance (string? algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.KeyPairGenerator GetInstance(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.GetInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; Java.Security.KeyPairGenerator" Usage="Java.Security.KeyPairGenerator.GetInstance algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/KeyPairGenerator;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/KeyPairGenerator;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPairGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard string name of the algorithm.
            See the KeyPairGenerator section in the <see href="https://developer.android.com//../specs/security/standard-names.html#keypairgenerator-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <summary>Returns a KeyPairGenerator object that generates public/private
            key pairs for the specified algorithm.</summary>
        <returns>the new <c>KeyPairGenerator</c> object</returns>
        <remarks>
          <para>Returns a KeyPairGenerator object that generates public/private
            key pairs for the specified algorithm.</para>
          <para>This method traverses the list of registered security Providers,
            starting with the most preferred Provider.
            A new KeyPairGenerator object encapsulating the
            KeyPairGeneratorSpi implementation from the first
            Provider that supports the specified algorithm is returned.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.KeyPairGenerator? GetInstance (string? algorithm, Java.Security.Provider? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.KeyPairGenerator GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.GetInstance(System.String,Java.Security.Provider)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Security.Provider -&gt; Java.Security.KeyPairGenerator" Usage="Java.Security.KeyPairGenerator.GetInstance (algorithm, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyPairGenerator;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyPairGenerator;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPairGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard string name of the algorithm.
            See the KeyPairGenerator section in the <see href="https://developer.android.com//../specs/security/standard-names.html#keypairgenerator-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <param name="provider">the provider.</param>
        <summary>Returns a KeyPairGenerator object that generates public/private
            key pairs for the specified algorithm.</summary>
        <returns>the new <c>KeyPairGenerator</c> object</returns>
        <remarks>
          <para>Returns a KeyPairGenerator object that generates public/private
            key pairs for the specified algorithm.</para>
          <para>A new KeyPairGenerator object encapsulating the
            KeyPairGeneratorSpi implementation from the specified Provider
            object is returned.  Note that the specified Provider object
            does not have to be registered in the provider list.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#getInstance(java.lang.String,%20java.security.Provider)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.getInstance(java.lang.String, java.security.Provider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.KeyPairGenerator? GetInstance (string? algorithm, string? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.KeyPairGenerator GetInstance(string algorithm, string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.GetInstance(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * string -&gt; Java.Security.KeyPairGenerator" Usage="Java.Security.KeyPairGenerator.GetInstance (algorithm, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyPairGenerator;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyPairGenerator;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.KeyPairGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard string name of the algorithm.
            See the KeyPairGenerator section in the <see href="https://developer.android.com//../specs/security/standard-names.html#keypairgenerator-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <param name="provider">the string name of the provider.</param>
        <summary>Returns a KeyPairGenerator object that generates public/private
            key pairs for the specified algorithm.</summary>
        <returns>the new <c>KeyPairGenerator</c> object</returns>
        <remarks>
          <para>Returns a KeyPairGenerator object that generates public/private
            key pairs for the specified algorithm.</para>
          <para>A new KeyPairGenerator object encapsulating the
            KeyPairGeneratorSpi implementation from the specified provider
            is returned.  The specified provider must be registered
            in the security provider list.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#getInstance(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.getInstance(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null || provider.isEmpty()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (Java.Security.Spec.IAlgorithmParameterSpec? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.Initialize(Java.Security.Spec.IAlgorithmParameterSpec)" />
      <MemberSignature Language="F#" Value="override this.Initialize : Java.Security.Spec.IAlgorithmParameterSpec -&gt; unit" Usage="keyPairGenerator.Initialize params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initialize", "(Ljava/security/spec/AlgorithmParameterSpec;)V", "GetInitialize_Ljava_security_spec_AlgorithmParameterSpec_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initialize", "(Ljava/security/spec/AlgorithmParameterSpec;)V", "GetInitialize_Ljava_security_spec_AlgorithmParameterSpec_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="params">the parameter set used to generate the keys.</param>
        <summary>Initializes the key pair generator using the specified parameter
            set and the <c>SecureRandom</c>
            implementation of the highest-priority installed provider as the source
            of randomness.</summary>
        <remarks>
          <para>Initializes the key pair generator using the specified parameter
            set and the <c>SecureRandom</c>
            implementation of the highest-priority installed provider as the source
            of randomness.
            (If none of the installed providers supply an implementation of
            <c>SecureRandom</c>, a system-provided source of randomness is
            used.)</para>
          <para>This concrete method has been added to this previously-defined
            abstract class.
            This method calls the KeyPairGeneratorSpi
            <c>KeyPairGeneratorSpi#initialize(
            java.security.spec.AlgorithmParameterSpec,
            java.security.SecureRandom) initialize</c> method,
            passing it <c>params</c> and a source of randomness (obtained
            from the highest-priority installed provider or system-provided if none
            of the installed providers supply one).
            That <c>initialize</c> method always throws an
            UnsupportedOperationException if it is not overridden by the provider.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#initialize(java.security.spec.AlgorithmParameterSpec)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.initialize(java.security.spec.AlgorithmParameterSpec)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are not supported
</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (int keysize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(int32 keysize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.Initialize(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.Initialize : int -&gt; unit" Usage="keyPairGenerator.Initialize keysize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initialize", "(I)V", "GetInitialize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initialize", "(I)V", "GetInitialize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keysize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keysize">the keysize. This is an
            algorithm-specific metric, such as modulus length, specified in
            number of bits.</param>
        <summary>Initializes the key pair generator for a certain keysize using
            a default parameter set and the <c>SecureRandom</c>
            implementation of the highest-priority installed provider as the source
            of randomness.</summary>
        <remarks>
          <para>Initializes the key pair generator for a certain keysize using
            a default parameter set and the <c>SecureRandom</c>
            implementation of the highest-priority installed provider as the source
            of randomness.
            (If none of the installed providers supply an implementation of
            <c>SecureRandom</c>, a system-provided source of randomness is
            used.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#initialize(int)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.initialize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (int keysize, Java.Security.SecureRandom? random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(int32 keysize, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.KeyPairGenerator.Initialize(System.Int32,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="override this.Initialize : int * Java.Security.SecureRandom -&gt; unit" Usage="keyPairGenerator.Initialize (keysize, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initialize", "(ILjava/security/SecureRandom;)V", "GetInitialize_ILjava_security_SecureRandom_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initialize", "(ILjava/security/SecureRandom;)V", "GetInitialize_ILjava_security_SecureRandom_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keysize" Type="System.Int32" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="keysize">the keysize. This is an
            algorithm-specific metric, such as modulus length, specified in
            number of bits.</param>
        <param name="random">the source of randomness.</param>
        <summary>Initializes the key pair generator for a certain keysize with
            the given source of randomness (and a default parameter set).</summary>
        <remarks>
          <para>Initializes the key pair generator for a certain keysize with
            the given source of randomness (and a default parameter set).</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#initialize(int,%20java.security.SecureRandom)" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.initialize(int, java.security.SecureRandom)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Security.KeyPairGenerator.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Security.KeyPairGenerator.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider? Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberSignature Language="DocId" Value="P:Java.Security.KeyPairGenerator.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : Java.Security.Provider" Usage="Java.Security.KeyPairGenerator.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this key pair generator object.</summary>
        <value>the provider of this key pair generator object</value>
        <remarks>
          <para>Returns the provider of this key pair generator object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/KeyPairGenerator#getProvider()" title="Reference documentation">Java documentation for <code>java.security.KeyPairGenerator.getProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Security.KeyPairGenerator.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Security.KeyPairGenerator.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Security.KeyPairGenerator.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Security.KeyPairGenerator.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
