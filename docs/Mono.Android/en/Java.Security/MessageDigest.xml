<Type Name="MessageDigest" FullName="Java.Security.MessageDigest">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageDigest&#xA;Inherits MessageDigestSpi" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageDigest abstract : Java::Security::MessageDigestSpi" />
  <TypeSignature Language="C#" Value="public abstract class MessageDigest : Java.Security.MessageDigestSpi" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageDigest extends Java.Security.MessageDigestSpi" />
  <TypeSignature Language="DocId" Value="T:Java.Security.MessageDigest" />
  <TypeSignature Language="F#" Value="type MessageDigest = class&#xA;    inherit MessageDigestSpi" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Security.MessageDigestSpi</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/security/MessageDigest", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/security/MessageDigest", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This MessageDigest class provides applications the functionality of a
            message digest algorithm, such as SHA-1 or SHA-256.</summary>
    <remarks>
      <para>This MessageDigest class provides applications the functionality of a
            message digest algorithm, such as SHA-1 or SHA-256.
            Message digests are secure one-way hash functions that take arbitrary-sized
            data and output a fixed-length hash value.</para>
      <para>A MessageDigest object starts out initialized. The data is
            processed through it using the <c>#update(byte) update</c>
            methods. At any point <c>#reset() reset</c> can be called
            to reset the digest. Once all the data to be updated has been
            updated, one of the <c>#digest() digest</c> methods should
            be called to complete the hash computation.</para>
      <para>The <c>digest</c> method can be called once for a given number
            of updates. After <c>digest</c> has been called, the MessageDigest
            object is reset to its initialized state.</para>
      <para>Implementations are free to implement the Cloneable interface.
            Client applications can test cloneability by attempting cloning
            and catching the CloneNotSupportedException:</para>
      <code lang="text/java">{@code
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            
            try {
                md.update(toChapter1);
                MessageDigest tc1 = md.clone();
                byte[] toChapter1Digest = tc1.digest();
                md.update(toChapter2);
                ...etc.
            } catch (CloneNotSupportedException cnse) {
                throw new DigestException("couldn't make digest of partial content");
            }
            }</code>
      <para>Note that if a given implementation is not cloneable, it is
            still possible to compute intermediate digests by instantiating
            several instances, if the number of digests is known in advance.</para>
      <para>Note that this class is abstract and extends from
            <c>MessageDigestSpi</c> for historical reasons.
            Application developers should only take notice of the methods defined in
            this <c>MessageDigest</c> class; all the methods in
            the superclass are intended for cryptographic service providers who wish to
            supply their own implementations of message digest algorithms.</para>
      <para>Android provides the following <c>MessageDigest</c> algorithms:
            &lt;table&gt;
              &lt;thead&gt;
                &lt;tr&gt;
                  &lt;th&gt;Algorithm&lt;/th&gt;
                  &lt;th&gt;Supported API Levels&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody&gt;
                &lt;tr&gt;
                  &lt;td&gt;MD5&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;SHA-1&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;SHA-224&lt;/td&gt;
                  &lt;td&gt;1-8,22+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;SHA-256&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;SHA-384&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td&gt;SHA-512&lt;/td&gt;
                  &lt;td&gt;1+&lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
            
            These algorithms are described in the <see href="https://developer.android.com//../specs/security/standard-names.html#messagedigest-algorithms">
            MessageDigest section</see> of the
            Java Cryptography Architecture Standard Algorithm Name Documentation.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/security/MessageDigest" title="Reference documentation">Java documentation for <code>java.security.MessageDigest</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (algorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageDigest(System::String ^ algorithm);" />
      <MemberSignature Language="C#" Value="protected MessageDigest (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Security.MessageDigest : string -&gt; Java.Security.MessageDigest" Usage="new Java.Security.MessageDigest algorithm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the standard name of the digest algorithm.
            See the MessageDigest section in the <see href="https://developer.android.com//../specs/security/standard-names.html#messagedigest-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <summary>Creates a message digest with the specified algorithm name.</summary>
        <remarks>
          <para>Creates a message digest with the specified algorithm name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#MessageDigest(java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.MessageDigest(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageDigest(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected MessageDigest (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Security.MessageDigest : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Security.MessageDigest" Usage="new Java.Security.MessageDigest (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:Java.Security.MessageDigest.Algorithm" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string" Usage="Java.Security.MessageDigest.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a string that identifies the algorithm, independent of
            implementation details.</summary>
        <value>the name of the algorithm</value>
        <remarks>
          <para>Returns a string that identifies the algorithm, independent of
            implementation details. The name should be a standard
            Java Security name (such as "SHA-256").
            See the MessageDigest section in the <see href="https://developer.android.com//../specs/security/standard-names.html#messagedigest-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#getAlgorithm()" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.getAlgorithm()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Digest () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ Digest();" />
      <MemberSignature Language="C#" Value="public virtual byte[] Digest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Digest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Digest" />
      <MemberSignature Language="F#" Value="abstract member Digest : unit -&gt; byte[]&#xA;override this.Digest : unit -&gt; byte[]" Usage="messageDigest.Digest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digest", "()[B", "GetDigestHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digest", "()[B", "GetDigestHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Completes the hash computation by performing final operations
            such as padding.</summary>
        <returns>the array of bytes for the resulting hash value.</returns>
        <remarks>
          <para>Completes the hash computation by performing final operations
            such as padding. The digest is reset after this call is made.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#digest()" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.digest()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Digest (input As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ Digest(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="C#" Value="public virtual byte[] Digest (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Digest(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Digest(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Digest : byte[] -&gt; byte[]&#xA;override this.Digest : byte[] -&gt; byte[]" Usage="messageDigest.Digest input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digest", "([B)[B", "GetDigest_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digest", "([B)[B", "GetDigest_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input to be updated before the digest is
            completed.</param>
        <summary>Performs a final update on the digest using the specified array
            of bytes, then completes the digest computation.</summary>
        <returns>the array of bytes for the resulting hash value.</returns>
        <remarks>
          <para>Performs a final update on the digest using the specified array
            of bytes, then completes the digest computation. That is, this
            method first calls <c>#update(byte[]) update(input)</c>,
            passing the <i>input</i> array to the <c>update</c> method,
            then calls <c>#digest() digest()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#digest(byte[])" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.digest(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Digest (buf As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Digest(cli::array &lt;System::Byte&gt; ^ buf, int offset, int len);" />
      <MemberSignature Language="C#" Value="public virtual int Digest (byte[] buf, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Digest(unsigned int8[] buf, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Digest(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Digest : byte[] * int * int -&gt; int&#xA;override this.Digest : byte[] * int * int -&gt; int" Usage="messageDigest.Digest (buf, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("digest", "([BII)I", "GetDigest_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("digest", "([BII)I", "GetDigest_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">output buffer for the computed digest</param>
        <param name="offset">offset into the output buffer to begin storing the digest</param>
        <param name="len">number of bytes within buf allotted for the digest</param>
        <summary>Completes the hash computation by performing final operations
            such as padding.</summary>
        <returns>the number of bytes placed into <c>buf</c></returns>
        <remarks>
          <para>Completes the hash computation by performing final operations
            such as padding. The digest is reset after this call is made.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#digest(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.digest(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.DigestException">if an error occurs</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>offset</c> or <c>len</c> are not valid in respect to
             <c>buf</c></exception>
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="DigestLength">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DigestLength { int get(); };" />
      <MemberSignature Language="C#" Value="public int DigestLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DigestLength" />
      <MemberSignature Language="DocId" Value="P:Java.Security.MessageDigest.DigestLength" />
      <MemberSignature Language="F#" Value="member this.DigestLength : int" Usage="Java.Security.MessageDigest.DigestLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDigestLength", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDigestLength", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the length of the digest in bytes, or 0 if this operation is
            not supported by the provider and the implementation is not cloneable.</summary>
        <value>the digest length in bytes, or 0 if this operation is not
            supported by the provider and the implementation is not cloneable.</value>
        <remarks>
          <para>Returns the length of the digest in bytes, or 0 if this operation is
            not supported by the provider and the implementation is not cloneable.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#getDigestLength()" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.getDigestLength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (algorithm As String) As MessageDigest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Security::MessageDigest ^ GetInstance(System::String ^ algorithm);" />
      <MemberSignature Language="C#" Value="public static Java.Security.MessageDigest GetInstance (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.MessageDigest GetInstance(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.GetInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; Java.Security.MessageDigest" Usage="Java.Security.MessageDigest.GetInstance algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/MessageDigest;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/MessageDigest;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.MessageDigest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm requested.
            See the MessageDigest section in the <see href="https://developer.android.com//../specs/security/standard-names.html#messagedigest-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <summary>Returns a MessageDigest object that implements the specified digest
            algorithm.</summary>
        <returns>a <c>MessageDigest</c> object that implements the
                    specified algorithm</returns>
        <remarks>
          <para>Returns a MessageDigest object that implements the specified digest
            algorithm.</para>
          <para>This method traverses the list of registered security Providers,
            starting with the most preferred Provider.
            A new MessageDigest object encapsulating the
            MessageDigestSpi implementation from the first
            Provider that supports the specified algorithm is returned.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#getInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.getInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (algorithm As String, provider As Provider) As MessageDigest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Security::MessageDigest ^ GetInstance(System::String ^ algorithm, Java::Security::Provider ^ provider);" />
      <MemberSignature Language="C#" Value="public static Java.Security.MessageDigest GetInstance (string algorithm, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.MessageDigest GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.GetInstance(System.String,Java.Security.Provider)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * Java.Security.Provider -&gt; Java.Security.MessageDigest" Usage="Java.Security.MessageDigest.GetInstance (algorithm, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.MessageDigest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm requested.
            See the MessageDigest section in the <see href="https://developer.android.com//../specs/security/standard-names.html#messagedigest-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <param name="provider">the provider.</param>
        <summary>Returns a MessageDigest object that implements the specified digest
            algorithm.</summary>
        <returns>a <c>MessageDigest</c> object that implements the
                    specified algorithm</returns>
        <remarks>
          <para>Returns a MessageDigest object that implements the specified digest
            algorithm.</para>
          <para>A new MessageDigest object encapsulating the
            MessageDigestSpi implementation from the specified Provider
            object is returned.  Note that the specified Provider object
            does not have to be registered in the provider list.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#getInstance(java.lang.String,%20java.security.Provider)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.getInstance(java.lang.String, java.security.Provider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (algorithm As String, provider As String) As MessageDigest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Security::MessageDigest ^ GetInstance(System::String ^ algorithm, System::String ^ provider);" />
      <MemberSignature Language="C#" Value="public static Java.Security.MessageDigest GetInstance (string algorithm, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.MessageDigest GetInstance(string algorithm, string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.GetInstance(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GetInstance : string * string -&gt; Java.Security.MessageDigest" Usage="Java.Security.MessageDigest.GetInstance (algorithm, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.MessageDigest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm requested.
            See the MessageDigest section in the <see href="https://developer.android.com//../specs/security/standard-names.html#messagedigest-algorithms">
            Java Security Standard Algorithm Names Specification</see>
            for information about standard algorithm names.</param>
        <param name="provider">the name of the provider.</param>
        <summary>Returns a MessageDigest object that implements the specified digest
            algorithm.</summary>
        <returns>a <c>MessageDigest</c> object that implements the
                    specified algorithm</returns>
        <remarks>
          <para>Returns a MessageDigest object that implements the specified digest
            algorithm.</para>
          <para>A new MessageDigest object encapsulating the
            MessageDigestSpi implementation from the specified provider
            is returned.  The specified provider must be registered
            in the security provider list.</para>
          <para>Note that the list of registered providers may be retrieved via
            the <c>Security#getProviders() Security.getProviders()</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#getInstance(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.getInstance(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null || provider.isEmpty()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEqual (digesta As Byte(), digestb As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEqual(cli::array &lt;System::Byte&gt; ^ digesta, cli::array &lt;System::Byte&gt; ^ digestb);" />
      <MemberSignature Language="C#" Value="public static bool IsEqual (byte[]? digesta, byte[]? digestb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEqual(unsigned int8[] digesta, unsigned int8[] digestb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.IsEqual(System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="static member IsEqual : byte[] * byte[] -&gt; bool" Usage="Java.Security.MessageDigest.IsEqual (digesta, digestb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isEqual", "([B[B)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isEqual", "([B[B)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digesta" Type="System.Byte[]" />
        <Parameter Name="digestb" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="digesta">one of the digests to compare.</param>
        <param name="digestb">the other digest to compare.</param>
        <summary>Compares two digests for equality.</summary>
        <returns>true if the digests are equal, false otherwise.</returns>
        <remarks>
          <para>Compares two digests for equality. Two digests are equal if they have
            the same length and all bytes at corresponding positions are equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#isEqual(byte[],%20byte[])" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.isEqual(byte[], byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Security.MessageDigest.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Security.MessageDigest.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As Provider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Security::Provider ^ Provider { Java::Security::Provider ^ get(); };" />
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberSignature Language="DocId" Value="P:Java.Security.MessageDigest.Provider" />
      <MemberSignature Language="F#" Value="member this.Provider : Java.Security.Provider" Usage="Java.Security.MessageDigest.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this message digest object.</summary>
        <value>the provider of this message digest object</value>
        <remarks>
          <para>Returns the provider of this message digest object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#getProvider()" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.getProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="messageDigest.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the digest for further use.</summary>
        <remarks>
          <para>Resets the digest for further use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#reset()" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Security.MessageDigest.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Security.MessageDigest.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Security.MessageDigest.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Security.MessageDigest.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="VB.NET" Value="Public Sub Update (input As ByteBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update(Java::Nio::ByteBuffer ^ input);" />
      <MemberSignature Language="C#" Value="public void Update (Java.Nio.ByteBuffer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(class Java.Nio.ByteBuffer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Update(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="member this.Update : Java.Nio.ByteBuffer -&gt; unit" Usage="messageDigest.Update input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the ByteBuffer</param>
        <summary>Update the digest using the specified ByteBuffer.</summary>
        <remarks>
          <para>Update the digest using the specified ByteBuffer. The digest is
            updated using the <c>input.remaining()</c> bytes starting
            at <c>input.position()</c>.
            Upon return, the buffer's position will be equal to its limit;
            its limit will not have changed.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#update(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.update(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (input As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="C#" Value="public virtual void Update (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Update(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Update : byte[] -&gt; unit&#xA;override this.Update : byte[] -&gt; unit" Usage="messageDigest.Update input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "([B)V", "GetUpdate_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "([B)V", "GetUpdate_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the array of bytes.</param>
        <summary>Updates the digest using the specified array of bytes.</summary>
        <remarks>
          <para>Updates the digest using the specified array of bytes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#update(byte[])" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.update(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>input</c> is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (input As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::SByte input);" />
      <MemberSignature Language="C#" Value="public virtual void Update (sbyte input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(int8 input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Update(System.SByte)" />
      <MemberSignature Language="F#" Value="abstract member Update : sbyte -&gt; unit&#xA;override this.Update : sbyte -&gt; unit" Usage="messageDigest.Update input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(B)V", "GetUpdate_BHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(B)V", "GetUpdate_BHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="input">the byte with which to update the digest.</param>
        <summary>Updates the digest using the specified byte.</summary>
        <remarks>
          <para>Updates the digest using the specified byte.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#update(byte)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.update(byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (input As Byte(), offset As Integer, len As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(cli::array &lt;System::Byte&gt; ^ input, int offset, int len);" />
      <MemberSignature Language="C#" Value="public virtual void Update (byte[] input, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(unsigned int8[] input, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Security.MessageDigest.Update(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Update : byte[] * int * int -&gt; unit&#xA;override this.Update : byte[] * int * int -&gt; unit" Usage="messageDigest.Update (input, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "([BII)V", "GetUpdate_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "([BII)V", "GetUpdate_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the array of bytes.</param>
        <param name="offset">the offset to start from in the array of bytes.</param>
        <param name="len">the number of bytes to use, starting at
            <c>offset</c>.</param>
        <summary>Updates the digest using the specified array of bytes, starting
            at the specified offset.</summary>
        <remarks>
          <para>Updates the digest using the specified array of bytes, starting
            at the specified offset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/security/MessageDigest#update(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.security.MessageDigest.update(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>offset</c> or <c>len</c> are not valid in respect to
             <c>input</c></exception>
      </Docs>
    </Member>
  </Members>
</Type>
