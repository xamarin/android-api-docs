<Type Name="OutputStreamWriter" FullName="Java.IO.OutputStreamWriter">
  <TypeSignature Language="C#" Value="public class OutputStreamWriter : Java.IO.Writer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutputStreamWriter extends Java.IO.Writer" />
  <TypeSignature Language="DocId" Value="T:Java.IO.OutputStreamWriter" />
  <TypeSignature Language="F#" Value="type OutputStreamWriter = class&#xA;    inherit Writer" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.Writer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/OutputStreamWriter", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/OutputStreamWriter", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An OutputStreamWriter is a bridge from character streams to byte streams:
            Characters written to it are encoded into bytes using a specified <c>java.nio.charset.Charset charset</c>.</summary>
    <remarks>
      <para>An OutputStreamWriter is a bridge from character streams to byte streams:
            Characters written to it are encoded into bytes using a specified <c>java.nio.charset.Charset charset</c>.  The charset that it uses
            may be specified by name or may be given explicitly, or the platform's
            default charset may be accepted.</para>
      <para>Each invocation of a write() method causes the encoding converter to be
            invoked on the given character(s).  The resulting bytes are accumulated in a
            buffer before being written to the underlying output stream.  The size of
            this buffer may be specified, but by default it is large enough for most
            purposes.  Note that the characters passed to the write() methods are not
            buffered.</para>
      <para>For top efficiency, consider wrapping an OutputStreamWriter within a
            BufferedWriter so as to avoid frequent converter invocations.  For example:</para>
      <code lang="text/java">Writer out
              = new BufferedWriter(new OutputStreamWriter(System.out));
            </code>
      <para>A <i>surrogate pair</i> is a character represented by a sequence of two
            <c>char</c> values: A <i>high</i> surrogate in the range '&amp;#92;uD800' to
            '&amp;#92;uDBFF' followed by a <i>low</i> surrogate in the range '&amp;#92;uDC00' to
            '&amp;#92;uDFFF'.</para>
      <para>A <i>malformed surrogate element</i> is a high surrogate that is not
            followed by a low surrogate or a low surrogate that is not preceded by a
            high surrogate.</para>
      <para>This class always replaces malformed surrogate elements and unmappable
            character sequences with the charset's default <i>substitution sequence</i>.
            The java.nio.charset.CharsetEncoder class should be used when more
            control over the encoding process is required.</para>
      <para>Added in JDK1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/OutputStreamWriter" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputStreamWriter (System.IO.Stream? out);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="new Java.IO.OutputStreamWriter : System.IO.Stream -&gt; Java.IO.OutputStreamWriter" Usage="new Java.IO.OutputStreamWriter out" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="out">An OutputStream</param>
        <summary>Creates an OutputStreamWriter that uses the default character encoding.</summary>
        <remarks>
          <para>Creates an OutputStreamWriter that uses the default character encoding.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#OutputStreamWriter(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutputStreamWriter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.OutputStreamWriter : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.OutputStreamWriter" Usage="new Java.IO.OutputStreamWriter (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputStreamWriter (System.IO.Stream? out, Java.Nio.Charset.Charset? cs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream out, class Java.Nio.Charset.Charset cs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.#ctor(System.IO.Stream,Java.Nio.Charset.Charset)" />
      <MemberSignature Language="F#" Value="new Java.IO.OutputStreamWriter : System.IO.Stream * Java.Nio.Charset.Charset -&gt; Java.IO.OutputStreamWriter" Usage="new Java.IO.OutputStreamWriter (out, cs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
        <Parameter Name="cs" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="out">An OutputStream</param>
        <param name="cs">A charset</param>
        <summary>Creates an OutputStreamWriter that uses the given charset.</summary>
        <remarks>
          <para>Creates an OutputStreamWriter that uses the given charset.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#OutputStreamWriter(java.io.OutputStream,%20java.nio.charset.Charset)" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.nio.charset.Charset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputStreamWriter (System.IO.Stream? out, Java.Nio.Charset.CharsetEncoder? enc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream out, class Java.Nio.Charset.CharsetEncoder enc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.#ctor(System.IO.Stream,Java.Nio.Charset.CharsetEncoder)" />
      <MemberSignature Language="F#" Value="new Java.IO.OutputStreamWriter : System.IO.Stream * Java.Nio.Charset.CharsetEncoder -&gt; Java.IO.OutputStreamWriter" Usage="new Java.IO.OutputStreamWriter (out, enc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
        <Parameter Name="enc" Type="Java.Nio.Charset.CharsetEncoder" />
      </Parameters>
      <Docs>
        <param name="out">An OutputStream</param>
        <param name="enc">A charset encoder</param>
        <summary>Creates an OutputStreamWriter that uses the given charset encoder.</summary>
        <remarks>
          <para>Creates an OutputStreamWriter that uses the given charset encoder.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#OutputStreamWriter(java.io.OutputStream,%20java.nio.charset.CharsetEncoder)" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.nio.charset.CharsetEncoder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputStreamWriter (System.IO.Stream? out, string? charsetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream out, string charsetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="new Java.IO.OutputStreamWriter : System.IO.Stream * string -&gt; Java.IO.OutputStreamWriter" Usage="new Java.IO.OutputStreamWriter (out, charsetName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="out" Type="System.IO.Stream" />
        <Parameter Name="charsetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="out">An OutputStream</param>
        <param name="charsetName">The name of a supported
                    <c>java.nio.charset.Charset charset</c></param>
        <summary>Creates an OutputStreamWriter that uses the named charset.</summary>
        <remarks>
          <para>Creates an OutputStreamWriter that uses the named charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#OutputStreamWriter(java.io.OutputStream,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>charsetName</c> is <c>null</c>.</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the encoding specified by <c>charsetName</c> cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.Close" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="outputStreamWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this writer.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing this writer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string? Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:Java.IO.OutputStreamWriter.Encoding" />
      <MemberSignature Language="F#" Value="member this.Encoding : string" Usage="Java.IO.OutputStreamWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEncoding", "()Ljava/lang/String;", "GetGetEncodingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEncoding", "()Ljava/lang/String;", "GetGetEncodingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the character encoding being used by this stream.</summary>
        <value>The historical name of this encoding, or possibly
                    <c>null</c> if the stream has been closed</value>
        <remarks>
          <para>Returns the name of the character encoding being used by this stream.</para>
          <para>If the encoding has an historical name then that name is returned;
            otherwise the encoding's canonical name is returned.</para>
          <para>If this instance was created with the <c>#OutputStreamWriter(OutputStream, String)</c> constructor then the returned
            name, being unique for the encoding, may differ from the name passed to
            the constructor.  This method may return <c>null</c> if the stream has
            been closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#getEncoding()" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.getEncoding()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.Flush" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="outputStreamWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "GetFlushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes the stream.</summary>
        <remarks>
          <para>Flushes the stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#flush()" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while flushing this writer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.OutputStreamWriter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.OutputStreamWriter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.OutputStreamWriter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.OutputStreamWriter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.OutputStreamWriter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.OutputStreamWriter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[]? cbuf, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] cbuf, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.OutputStreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="outputStreamWriter.Write (cbuf, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([CII)V", "GetWrite_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([CII)V", "GetWrite_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cbuf">Buffer of characters</param>
        <param name="off">Offset from which to start writing characters</param>
        <param name="len">Number of characters to write</param>
        <summary>Writes a portion of an array of characters.</summary>
        <remarks>
          <para>Writes a portion of an array of characters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/OutputStreamWriter#write(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.io.OutputStreamWriter.write(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c> or <c>count </c>, or if
             <c>offset + count</c> is greater than the size of
             <c>buf</c>.</exception>
        <exception cref="T:Java.IO.IOException">if this writer has already been closed or another I/O error
             occurs.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
