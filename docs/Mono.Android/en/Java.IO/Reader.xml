<Type Name="Reader" FullName="Java.IO.Reader">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Reader&#xA;Inherits Object&#xA;Implements ICloseable, IDisposable, IJavaPeerable, IReadable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Reader abstract : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::IO::ICloseable, Java::Lang::IReadable" />
  <TypeSignature Language="C#" Value="public abstract class Reader : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable, Java.Lang.IReadable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Reader extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class Java.Lang.IReadable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.Reader" />
  <TypeSignature Language="F#" Value="type Reader = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IReadable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IReadable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/Reader", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/Reader", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Abstract class for reading character streams.</summary>
    <remarks>
      <para>Abstract class for reading character streams.  The only methods that a
            subclass must implement are read(char[], int, int) and close().  Most
            subclasses, however, will override some of the methods defined here in order
            to provide higher efficiency, additional functionality, or both.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/Reader" title="Reference documentation">Java documentation for <code>java.io.Reader</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Reader();" />
      <MemberSignature Language="C#" Value="protected Reader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new character-stream reader whose critical sections will
            synchronize on the reader itself.</summary>
        <remarks>
          <para>Creates a new character-stream reader whose critical sections will
            synchronize on the reader itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#Reader()" title="Reference documentation">Java documentation for <code>java.io.Reader.Reader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (lock As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Reader(Java::Lang::Object ^ lock);" />
      <MemberSignature Language="C#" Value="protected Reader (Java.Lang.Object? lock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Object lock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.#ctor(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="new Java.IO.Reader : Java.Lang.Object -&gt; Java.IO.Reader" Usage="new Java.IO.Reader lock" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="lock" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="lock">The Object to synchronize on.</param>
        <summary>Creates a new character-stream reader whose critical sections will
            synchronize on the given object.</summary>
        <remarks>
          <para>Creates a new character-stream reader whose critical sections will
            synchronize on the given object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#Reader(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.io.Reader.Reader(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>lock</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Reader(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Reader (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.Reader : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.Reader" Usage="new Java.IO.Reader (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="reader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the stream and releases any system resources associated with
            it.</summary>
        <remarks>
          <para>Closes the stream and releases any system resources associated with
            it.  Once the stream has been closed, further read(), ready(),
            mark(), reset(), or skip() invocations will throw an IOException.
            Closing a previously closed stream has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#close()" title="Reference documentation">Java documentation for <code>java.io.Reader.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing this reader.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.Reader.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.Reader.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="VB.NET" Value="Protected Property Lock As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Java::Lang::Object ^ Lock { Java::Lang::Object ^ get(); void set(Java::Lang::Object ^ value); };" />
      <MemberSignature Language="C#" Value="protected Java.Lang.Object? Lock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Lock" />
      <MemberSignature Language="DocId" Value="P:Java.IO.Reader.Lock" />
      <MemberSignature Language="F#" Value="member this.Lock : Java.Lang.Object with get, set" Usage="Java.IO.Reader.Lock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lock")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lock")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The object used to synchronize operations on this stream.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The object used to synchronize operations on this stream.  For
            efficiency, a character-stream object may use an object other than
            itself to protect critical sections.  A subclass should therefore use
            the object in this field rather than <c>this</c> or a synchronized
            method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#lock" title="Reference documentation">Java documentation for <code>java.io.Reader.lock</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mark">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Mark (readAheadLimit As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Mark(int readAheadLimit);" />
      <MemberSignature Language="C#" Value="public virtual void Mark (int readAheadLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Mark(int32 readAheadLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Mark(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Mark : int -&gt; unit&#xA;override this.Mark : int -&gt; unit" Usage="reader.Mark readAheadLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mark", "(I)V", "GetMark_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mark", "(I)V", "GetMark_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readAheadLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="readAheadLimit">Limit on the number of characters that may be
                                    read while still preserving the mark.  After
                                    reading this many characters, attempting to
                                    reset the stream may fail.</param>
        <summary>Marks the present position in the stream.</summary>
        <remarks>
          <para>Marks the present position in the stream.  Subsequent calls to reset()
            will attempt to reposition the stream to this point.  Not all
            character-input streams support the mark() operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#mark(int)" title="Reference documentation">Java documentation for <code>java.io.Reader.mark(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>readLimit </c>.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while setting a mark in this reader.</exception>
        <altmember cref="M:Java.IO.Reader.MarkSupported" />
        <altmember cref="M:Java.IO.Reader.Reset" />
      </Docs>
    </Member>
    <Member MemberName="MarkSupported">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarkSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MarkSupported();" />
      <MemberSignature Language="C#" Value="public virtual bool MarkSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MarkSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.MarkSupported" />
      <MemberSignature Language="F#" Value="abstract member MarkSupported : unit -&gt; bool&#xA;override this.MarkSupported : unit -&gt; bool" Usage="reader.MarkSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("markSupported", "()Z", "GetMarkSupportedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("markSupported", "()Z", "GetMarkSupportedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tells whether this stream supports the mark() operation.</summary>
        <returns>true if and only if this stream supports the mark operation.</returns>
        <remarks>
          <para>Tells whether this stream supports the mark() operation. The default
            implementation always returns false. Subclasses should override this
            method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#markSupported()" title="Reference documentation">Java documentation for <code>java.io.Reader.markSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NullReader">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NullReader () As Reader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::IO::Reader ^ NullReader();" />
      <MemberSignature Language="C#" Value="public static Java.IO.Reader? NullReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NullReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.NullReader" />
      <MemberSignature Language="F#" Value="static member NullReader : unit -&gt; Java.IO.Reader" Usage="Java.IO.Reader.NullReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nullReader", "()Ljava/io/Reader;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nullReader", "()Ljava/io/Reader;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>Reader</c> that reads no characters.</summary>
        <returns>a <c>Reader</c> which reads no characters</returns>
        <remarks>
          <para>Returns a new <c>Reader</c> that reads no characters. The returned
            stream is initially open.  The stream is closed by calling the
            <c>close()</c> method.  Subsequent calls to <c>close()</c> have no
            effect.</para>
          <para>While the stream is open, the <c>read()</c>, <c>read(char[])</c>,
            <c>read(char[], int, int)</c>, <c>read(Charbuffer)</c>, <c>ready()</c>, <c>skip(long)</c>, and <c>transferTo()</c> methods all
            behave as if end of stream has been reached. After the stream has been
            closed, these methods all throw <c>IOException</c>.</para>
          <para>The <c>markSupported()</c> method returns <c>false</c>.  The
            <c>mark()</c> and <c>reset()</c> methods throw an <c>IOException</c>.</para>
          <para>The <c>#lock object</c> used to synchronize operations on the
            returned <c>Reader</c> is not specified.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#nullReader()" title="Reference documentation">Java documentation for <code>java.io.Reader.nullReader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Read" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="reader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "()I", "GetReadHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "()I", "GetReadHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a single character.</summary>
        <returns>The character read, as an integer in the range 0 to 65535
                        (<c>0x00-0xffff</c>), or -1 if the end of the stream has
                        been reached</returns>
        <remarks>
          <para>Reads a single character.  This method will block until a character is
            available, an I/O error occurs, or the end of the stream is reached.</para>
          <para>Subclasses that intend to support efficient single-character input
            should override this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#read()" title="Reference documentation">Java documentation for <code>java.io.Reader.read()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this reader is closed or some other I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (target As CharBuffer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Java::Nio::CharBuffer ^ target);" />
      <MemberSignature Language="C#" Value="public virtual int Read (Java.Nio.CharBuffer? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(class Java.Nio.CharBuffer target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Read(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.CharBuffer -&gt; int&#xA;override this.Read : Java.Nio.CharBuffer -&gt; int" Usage="reader.Read target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IReadable.Read(Java.Nio.CharBuffer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/CharBuffer;)I", "GetRead_Ljava_nio_CharBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/CharBuffer;)I", "GetRead_Ljava_nio_CharBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="target">the buffer to read characters into</param>
        <summary>Attempts to read characters into the specified character buffer.</summary>
        <returns>The number of characters added to the buffer, or
                    -1 if this source of characters is at its end</returns>
        <remarks>
          <para>Attempts to read characters into the specified character buffer.
            The buffer is used as a repository of characters as-is: the only
            changes made are the results of a put operation. No flipping or
            rewinding of the buffer is performed.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#read(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.io.Reader.read(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs while reading from this reader.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>target</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if <c>target</c> is read-only.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (cbuf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ cbuf);" />
      <MemberSignature Language="C#" Value="public virtual int Read (char[]? cbuf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(char[] cbuf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Read(System.Char[])" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] -&gt; int&#xA;override this.Read : char[] -&gt; int" Usage="reader.Read cbuf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([C)I", "GetRead_arrayCHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([C)I", "GetRead_arrayCHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="cbuf">Destination buffer</param>
        <summary>Reads characters into an array.</summary>
        <returns>The number of characters read, or -1
                         if the end of the stream
                         has been reached</returns>
        <remarks>
          <para>Reads characters into an array.  This method will block until some input
            is available, an I/O error occurs, or the end of the stream is reached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#read(char[])" title="Reference documentation">Java documentation for <code>java.io.Reader.read(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this reader is closed or some other I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (cbuf As Char(), off As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;char&gt; ^ cbuf, int off, int len);" />
      <MemberSignature Language="C#" Value="public abstract int Read (char[]? cbuf, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(char[] cbuf, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int" Usage="reader.Read (cbuf, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([CII)I", "GetRead_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([CII)I", "GetRead_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cbuf">Destination buffer</param>
        <param name="off">Offset at which to start storing characters</param>
        <param name="len">Maximum number of characters to read</param>
        <summary>Reads characters into a portion of an array.</summary>
        <returns>The number of characters read, or -1 if the end of the
                        stream has been reached</returns>
        <remarks>
          <para>Reads characters into a portion of an array.  This method will block
            until some input is available, an I/O error occurs, or the end of the
            stream is reached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#read(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.io.Reader.read(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this reader is closed or some other I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync () As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync();" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.ReadAsync" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="reader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (target As CharBuffer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(Java::Nio::CharBuffer ^ target);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (Java.Nio.CharBuffer? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(class Java.Nio.CharBuffer target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.ReadAsync(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : Java.Nio.CharBuffer -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="reader.ReadAsync target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Nio.CharBuffer">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (cbuf As Char()) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ cbuf);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[]? cbuf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] cbuf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.ReadAsync(System.Char[])" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : char[] -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="reader.ReadAsync cbuf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cbuf">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (cbuf As Char(), off As Integer, len As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ cbuf, int off, int len);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[]? cbuf, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] cbuf, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="reader.ReadAsync (cbuf, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cbuf">To be added.</param>
        <param name="off">To be added.</param>
        <param name="len">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Ready () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Ready();" />
      <MemberSignature Language="C#" Value="public virtual bool Ready ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Ready() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Ready" />
      <MemberSignature Language="F#" Value="abstract member Ready : unit -&gt; bool&#xA;override this.Ready : unit -&gt; bool" Usage="reader.Ready " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ready", "()Z", "GetReadyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ready", "()Z", "GetReadyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tells whether this stream is ready to be read.</summary>
        <returns>True if the next read() is guaranteed not to block for input,
            false otherwise.  Note that returning false does not guarantee that the
            next read will block.</returns>
        <remarks>
          <para>Tells whether this stream is ready to be read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#ready()" title="Reference documentation">Java documentation for <code>java.io.Reader.ready()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this reader is closed or some other I/O error occurs.</exception>
        <altmember cref="M:Java.IO.Reader.Read" />
        <altmember cref="M:Java.IO.Reader.Read(System.Char[])" />
        <altmember cref="M:Java.IO.Reader.Read(System.Char[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="reader.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the stream.</summary>
        <remarks>
          <para>Resets the stream.  If the stream has been marked, then attempt to
            reposition it at the mark.  If the stream has not been marked, then
            attempt to reset it in some way appropriate to the particular stream,
            for example by repositioning it to its starting point.  Not all
            character-input streams support the reset() operation, and some support
            reset() without supporting mark().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#reset()" title="Reference documentation">Java documentation for <code>java.io.Reader.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">always thrown in this default implementation.</exception>
        <altmember cref="M:Java.IO.Reader.Mark(System.Int32)" />
        <altmember cref="M:Java.IO.Reader.MarkSupported" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip (n As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long Skip(long n);" />
      <MemberSignature Language="C#" Value="public virtual long Skip (long n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Skip(int64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.Skip(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member Skip : int64 -&gt; int64&#xA;override this.Skip : int64 -&gt; int64" Usage="reader.Skip n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("skip", "(J)J", "GetSkip_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("skip", "(J)J", "GetSkip_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="n">The number of characters to skip</param>
        <summary>Skips characters.</summary>
        <returns>The number of characters actually skipped</returns>
        <remarks>
          <para>Skips characters.  This method will block until some characters are
            available, an I/O error occurs, or the end of the stream is reached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#skip(long)" title="Reference documentation">Java documentation for <code>java.io.Reader.skip(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>charCount </c>.</exception>
        <exception cref="T:Java.IO.IOException">if this reader is closed or some other I/O error occurs.</exception>
        <altmember cref="M:Java.IO.Reader.Mark(System.Int32)" />
        <altmember cref="M:Java.IO.Reader.MarkSupported" />
        <altmember cref="M:Java.IO.Reader.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SkipAsync">
      <MemberSignature Language="VB.NET" Value="Public Function SkipAsync (n As Long) As Task(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;long&gt; ^ SkipAsync(long n);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;long&gt; SkipAsync (long n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int64&gt; SkipAsync(int64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.SkipAsync(System.Int64)" />
      <MemberSignature Language="F#" Value="member this.SkipAsync : int64 -&gt; System.Threading.Tasks.Task&lt;int64&gt;" Usage="reader.SkipAsync n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.Reader.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.Reader.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.Reader.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.Reader.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransferTo (out As Writer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long TransferTo(Java::IO::Writer ^ out);" />
      <MemberSignature Language="C#" Value="public virtual long TransferTo (Java.IO.Writer? out);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 TransferTo(class Java.IO.Writer out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.Reader.TransferTo(Java.IO.Writer)" />
      <MemberSignature Language="F#" Value="abstract member TransferTo : Java.IO.Writer -&gt; int64&#xA;override this.TransferTo : Java.IO.Writer -&gt; int64" Usage="reader.TransferTo out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("transferTo", "(Ljava/io/Writer;)J", "GetTransferTo_Ljava_io_Writer_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("transferTo", "(Ljava/io/Writer;)J", "GetTransferTo_Ljava_io_Writer_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.IO.Writer" />
      </Parameters>
      <Docs>
        <param name="out">the writer, non-null</param>
        <summary>Reads all characters from this reader and writes the characters to the
            given writer in the order that they are read.</summary>
        <returns>the number of characters transferred</returns>
        <remarks>
          <para>Reads all characters from this reader and writes the characters to the
            given writer in the order that they are read. On return, this reader
            will be at end of the stream. This method does not close either reader
            or writer.</para>
          <para>This method may block indefinitely reading from the reader, or
            writing to the writer. The behavior for the case where the reader
            and/or writer is <i>asynchronously closed</i>, or the thread
            interrupted during the transfer, is highly reader and writer
            specific, and therefore not specified.</para>
          <para>If an I/O error occurs reading from the reader or writing to the
            writer, then it may do so after some characters have been read or
            written. Consequently the reader may not be at end of the stream and
            one, or both, streams may be in an inconsistent state. It is strongly
            recommended that both streams be promptly closed if an I/O error occurs.</para>
          <para>Added in 10.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/Reader#transferTo(java.io.Writer)" title="Reference documentation">Java documentation for <code>java.io.Reader.transferTo(java.io.Writer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
