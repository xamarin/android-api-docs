<Type Name="File" FullName="Java.IO.File">
  <TypeSignature Language="C#" Value="public class File : Java.Lang.Object, IDisposable, Java.IO.ISerializable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit File extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class Java.Lang.IComparable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/File", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An "abstract" representation of a file system entity identified by a
 pathname.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An "abstract" representation of a file system entity identified by a
 pathname. The pathname may be absolute (relative to the root directory
 of the file system) or relative to the current directory in which the program
 is running.

 </para>
      <para tool="javadoc-to-mdoc">The actual file referenced by a <c>File</c> may or may not exist. It may
 also, despite the name <c>File</c>, be a directory or other non-regular
 file.

 </para>
      <para tool="javadoc-to-mdoc">This class provides limited functionality for getting/setting file
 permissions, file type, and last modified time.

 </para>
      <para tool="javadoc-to-mdoc">On Android strings are converted to UTF-8 byte sequences when sending filenames to
 the operating system, and byte sequences returned by the operating system (from the
 various <c>list</c> methods) are converted to strings by decoding them as UTF-8
 byte sequences.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.IO.ISerializable" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Lang.IComparable" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/io/File.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (Java.Net.URI uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.URI uri) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/URI;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uri" Type="Java.Net.URI" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Constructs a new File using the path of the specified URI.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new File using the path of the specified URI. <c>uri</c>
 needs to be an absolute and hierarchical Unified Resource Identifier with
 file scheme and non-empty path component, but with undefined authority,
 query or fragment components.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#File(java.net.URI)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>uri == null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>uri</c> does not comply with the conditions above.</exception>
        <altmember cref="M:Java.IO.File.ToURI" />
        <altmember cref="T:Java.Net.URI" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Constructs a new file using the specified path.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new file using the specified path.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#File(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>path</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (Java.IO.File dir, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File dir, string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dir" Type="Java.IO.File" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dir">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Constructs a new file using the specified directory and name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new file using the specified directory and name.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#File(java.io.File, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>name</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected File (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (string dirPath, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dirPath, string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dirPath" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dirPath">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Constructs a new File using the specified directory path and file name,
 placing a path separator between the two.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new File using the specified directory path and file name,
 placing a path separator between the two.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#File(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>name == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteFile">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File AbsoluteFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File AbsoluteFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAbsoluteFile", "()Ljava/io/File;", "GetGetAbsoluteFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new file constructed using the absolute path of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new file constructed using the absolute path of this file.
 Equivalent to <c>new File(this.getAbsolutePath())</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getAbsoluteFile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public virtual string AbsolutePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsolutePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAbsolutePath", "()Ljava/lang/String;", "GetGetAbsolutePathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the absolute path of this file. An absolute path is a path that starts at a root
 of the file system. On Android, there is only one root: <c>/</c>.

 </para>
          <para tool="javadoc-to-mdoc">A common use for absolute paths is when passing paths to a <c>Process</c> as
 command-line arguments, to remove the requirement implied by relative paths, that the
 child must have the same working directory as its parent.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getAbsolutePath()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canExecute", "()Z", "GetCanExecuteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tests whether or not this process is allowed to execute this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests whether or not this process is allowed to execute this file.
 Note that this is a best-effort result; the only way to be certain is
 to actually attempt the operation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#canExecute()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="CanonicalFile">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File CanonicalFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File CanonicalFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCanonicalFile", "()Ljava/io/File;", "GetGetCanonicalFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new file created using the canonical path of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new file created using the canonical path of this file.
 Equivalent to <c>new File(this.getCanonicalPath())</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getCanonicalFile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CanonicalPath">
      <MemberSignature Language="C#" Value="public virtual string CanonicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCanonicalPath", "()Ljava/lang/String;", "GetGetCanonicalPathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the canonical path of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the canonical path of this file.
 An <format type="text/html"><i>absolute</i></format> path is one that begins at the root of the file system.
 A <format type="text/html"><i>canonical</i></format> path is an absolute path with symbolic links
 and references to "." or ".." resolved. If a path element does not exist (or
 is not searchable), there is a conflict between interpreting canonicalization
 as a textual operation (where "a/../b" is "b" even if "a" does not exist) .

 </para>
          <para tool="javadoc-to-mdoc">Most callers should use <c><see cref="P:Java.IO.File.AbsolutePath" /></c> instead. A canonical path is
 significantly more expensive to compute, and not generally useful. The primary
 use for canonical paths is determining whether two paths point to the same file by
 comparing the canonicalized paths.

 </para>
          <para tool="javadoc-to-mdoc">It can be actively harmful to use a canonical path, specifically because
 canonicalization removes symbolic links. It's wise to assume that a symbolic link
 is present for a reason, and that that reason is because the link may need to change.
 Canonicalization removes this layer of indirection. Good code should generally avoid
 caching canonical paths.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getCanonicalPath()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canRead", "()Z", "GetCanReadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current context is allowed to read from this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the current context is allowed to read from this file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#canRead()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public virtual bool CanWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWrite() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canWrite", "()Z", "GetCanWriteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the current context is allowed to write to this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the current context is allowed to write to this file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#canWrite()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.IO.File another);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.IO.File another) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareTo", "(Ljava/io/File;)I", "GetCompareTo_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="another" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="another">a file to compare this file to</param>
        <summary>Returns the relative sort ordering of the paths for this file and the
 file <c>another</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the relative sort ordering of the paths for this file and the
 file <c>another</c>. The ordering is platform dependent.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#compareTo(java.io.File)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CreateNewFile">
      <MemberSignature Language="C#" Value="public virtual bool CreateNewFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CreateNewFile() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createNewFile", "()Z", "GetCreateNewFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new, empty file on the file system according to the path
 information stored in this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, empty file on the file system according to the path
 information stored in this file. This method returns true if it creates
 a file, false if the file already existed. Note that it returns false
 even if the file is not a file (because it's a directory, say).

 </para>
          <para tool="javadoc-to-mdoc">This method is not generally useful. For creating temporary files,
 use <c><see cref="M:Java.IO.File.CreateTempFile(System.String,System.String)" /></c> instead. For reading/writing files, use <c><see cref="T:Java.IO.FileInputStream" /></c>,
 <c><see cref="T:Java.IO.FileOutputStream" /></c>, or <c><see cref="T:Java.IO.RandomAccessFile" /></c>, all of which can create files.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> if the file
 already exists, even if it's not a regular file. Callers should always check the
 return value, and may additionally want to call <c><see cref="P:Java.IO.File.IsFile" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#createNewFile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if it's not possible to create the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTempFile">
      <MemberSignature Language="C#" Value="public static Java.IO.File CreateTempFile (string prefix, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File CreateTempFile(string prefix, string suffix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTempFile", "(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">the prefix to the temp file name.</param>
        <param name="suffix">the suffix to the temp file name.</param>
        <summary>Creates an empty temporary file using the given prefix and suffix as part
 of the file name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an empty temporary file using the given prefix and suffix as part
 of the file name. If <c>suffix</c> is null, <c>.tmp</c> is used. This
 method is a convenience method that calls
 <c><see cref="M:Java.IO.File.CreateTempFile(System.String,System.String,System.String)" /></c> with the third argument
 being <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#createTempFile(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs when writing the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTempFile">
      <MemberSignature Language="C#" Value="public static Java.IO.File CreateTempFile (string prefix, string suffix, Java.IO.File directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File CreateTempFile(string prefix, string suffix, class Java.IO.File directory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTempFile", "(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="directory" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="prefix">the prefix to the temp file name.</param>
        <param name="suffix">the suffix to the temp file name.</param>
        <param name="directory">the location to which the temp file is to be written, or
            <c>null</c> for the default location for temporary files,
            which is taken from the "java.io.tmpdir" system property. It
            may be necessary to set this property to an existing, writable
            directory for this method to work properly.</param>
        <summary>Creates an empty temporary file in the given directory using the given
 prefix and suffix as part of the file name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an empty temporary file in the given directory using the given
 prefix and suffix as part of the file name. If <c>suffix</c> is null, <c>.tmp</c> is used.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> call <c><see cref="M:Java.IO.File.DeleteOnExit" /></c>, but see the
 documentation for that method before you call it manually.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#createTempFile(java.lang.String, java.lang.String, java.io.File)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the length of <c>prefix</c> is less than 3.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs when writing the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual bool Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Delete() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("delete", "()Z", "GetDeleteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Deletes this file. Directories must be empty before they will be deleted.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> on failure.
 Callers must check the return value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#delete()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeleteOnExit">
      <MemberSignature Language="C#" Value="public virtual void DeleteOnExit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteOnExit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteOnExit", "()V", "GetDeleteOnExitHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schedules this file to be automatically deleted when the VM terminates normally.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Schedules this file to be automatically deleted when the VM terminates normally.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <i>Note that on Android, the application lifecycle does not include VM termination,
 so calling this method will not ensure that files are deleted</i>
            </format>. Instead, you should
 use the most appropriate out of:
 <list type="bullet"><item><term>Use a <c>finally</c> clause to manually invoke <c><see cref="M:Java.IO.File.Delete" /></c>.
 </term></item><item><term>Maintain your own set of files to delete, and process it at an appropriate point
 in your application's lifecycle.
 </term></item><item><term>Use the Unix trick of deleting the file as soon as all readers and writers have
 opened it. No new readers/writers will be able to access the file, but all existing
 ones will still have access until the last one closes the file.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#deleteOnExit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual bool Exists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Exists() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exists", "()Z", "GetExistsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a boolean indicating whether this file can be found on the
 underlying file system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a boolean indicating whether this file can be found on the
 underlying file system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#exists()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FreeSpace">
      <MemberSignature Language="C#" Value="public virtual long FreeSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FreeSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFreeSpace", "()J", "GetGetFreeSpaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of free bytes on the partition containing this path.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of free bytes on the partition containing this path.
 Returns 0 if this path does not exist.

 </para>
          <para tool="javadoc-to-mdoc">Note that this is likely to be an optimistic over-estimate and should not
 be taken as a guarantee your application can actually write this many bytes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getFreeSpace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public virtual bool IsAbsolute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAbsolute", "()Z", "GetIsAbsoluteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if this file's pathname is absolute.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates if this file's pathname is absolute. Whether a pathname is
 absolute is platform specific. On Android, absolute paths start with
 the character '/'.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#isAbsolute()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.IO.File.Path" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public virtual bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDirectory", "()Z", "GetIsDirectoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if this file represents a <i>directory</i> on the
 underlying file system.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates if this file represents a <i>directory</i> on the
 underlying file system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#isDirectory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public virtual bool IsFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFile", "()Z", "GetIsFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if this file represents a <i>file</i> on the underlying
 file system.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates if this file represents a <i>file</i> on the underlying
 file system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#isFile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public virtual bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHidden", "()Z", "GetIsHiddenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether or not this file is a hidden file as defined by the
 operating system.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether or not this file is a hidden file as defined by the
 operating system. The notion of "hidden" is system-dependent. For Unix
 systems a file is considered hidden if its name starts with a ".". For
 Windows systems there is an explicit flag in the file system for this
 purpose.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#isHidden()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object another);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object another) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="another" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="another">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public virtual long LastModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 LastModified() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lastModified", "()J", "GetLastModifiedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the time when this file was last modified, measured in
 milliseconds since January 1st, 1970, midnight.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the time when this file was last modified, measured in
 milliseconds since January 1st, 1970, midnight.
 Returns 0 if the file does not exist.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#lastModified()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual long Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Length() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("length", "()J", "GetLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of this file in bytes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the length of this file in bytes.
 Returns 0 if the file does not exist.
 The result for a directory is not defined.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#length()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual string[] List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] List() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("list", "()[Ljava/lang/String;", "GetListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of strings with the file names in the directory
 represented by this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an array of strings with the file names in the directory
 represented by this file. The result is <c>null</c> if this file is not
 a directory.
 </para>
          <para tool="javadoc-to-mdoc">
 The entries <c>.</c> and <c>..</c> representing the current and parent
 directory are not returned as part of the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#list()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual string[] List (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] List(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("list", "(Ljava/io/FilenameFilter;)[Ljava/lang/String;", "GetList_Ljava_io_FilenameFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">the filter to match names against, may be <c>null</c>.</param>
        <summary>Gets a list of the files in the directory represented by this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a list of the files in the directory represented by this file. This
 list is then filtered through a FilenameFilter and the names of files
 with matching names are returned as an array of strings. Returns
 <c>null</c> if this file is not a directory. If <c>filter</c> is
 <c>null</c> then all filenames match.
 </para>
          <para tool="javadoc-to-mdoc">
 The entries <c>.</c> and <c>..</c> representing the current and parent
 directories are not returned as part of the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#list(java.io.FilenameFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string[]&gt; ListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string[]&gt; ListAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string[]&gt; ListAsync (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string[]&gt; ListAsync(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFiles">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File[] ListFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] ListFiles() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listFiles", "()[Ljava/io/File;", "GetListFilesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of files contained in the directory represented by this
 file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an array of files contained in the directory represented by this
 file. The result is <c>null</c> if this file is not a directory. The
 paths of the files in the array are absolute if the path of this file is
 absolute, they are relative otherwise.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#listFiles()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListFiles">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File[] ListFiles (Java.IO.IFileFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] ListFiles(class Java.IO.IFileFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listFiles", "(Ljava/io/FileFilter;)[Ljava/io/File;", "GetListFiles_Ljava_io_FileFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFileFilter" />
      </Parameters>
      <Docs>
        <param name="filter">the filter to match names against, may be <c>null</c>.</param>
        <summary>Gets a list of the files in the directory represented by this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a list of the files in the directory represented by this file. This
 list is then filtered through a FileFilter and matching files are
 returned as an array of files. Returns <c>null</c> if this file is not a
 directory. If <c>filter</c> is <c>null</c> then all files match.
 </para>
          <para tool="javadoc-to-mdoc">
 The entries <c>.</c> and <c>..</c> representing the current and parent
 directories are not returned as part of the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#listFiles(java.io.FileFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListFiles">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File[] ListFiles (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] ListFiles(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listFiles", "(Ljava/io/FilenameFilter;)[Ljava/io/File;", "GetListFiles_Ljava_io_FilenameFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">the filter to match names against, may be <c>null</c>.</param>
        <summary>Gets a list of the files in the directory represented by this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a list of the files in the directory represented by this file. This
 list is then filtered through a FilenameFilter and files with matching
 names are returned as an array of files. Returns <c>null</c> if this
 file is not a directory. If <c>filter</c> is <c>null</c> then all
 filenames match.
 </para>
          <para tool="javadoc-to-mdoc">
 The entries <c>.</c> and <c>..</c> representing the current and parent
 directories are not returned as part of the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#listFiles(java.io.FilenameFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListFilesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListFilesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListFilesAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListFilesAsync (Java.IO.IFileFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListFilesAsync(class Java.IO.IFileFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFileFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListFilesAsync (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListFilesAsync(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoots">
      <MemberSignature Language="C#" Value="public static Java.IO.File[] ListRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File[] ListRoots() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listRoots", "()[Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the file system roots.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the file system roots. On Android and other Unix systems, there is
 a single root, <c>/</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#listRoots()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListRootsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListRootsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListRootsAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mkdir">
      <MemberSignature Language="C#" Value="public virtual bool Mkdir ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Mkdir() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mkdir", "()Z", "GetMkdirHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the directory named by this file, assuming its parents exist.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates the directory named by this file, assuming its parents exist.
 Use <c><see cref="M:Java.IO.File.Mkdirs" /></c> if you also want to create missing parents.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> on failure.
 Callers must check the return value. Note also that this method returns
 false if the directory already existed. If you want to know whether the
 directory exists on return, either use <c>(f.mkdir() || f.isDirectory())</c>
 or simply ignore the return value from this method and simply call <c><see cref="P:Java.IO.File.IsDirectory" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#mkdir()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mkdirs">
      <MemberSignature Language="C#" Value="public virtual bool Mkdirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Mkdirs() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mkdirs", "()Z", "GetMkdirsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the directory named by this file, creating missing parent
 directories if necessary.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates the directory named by this file, creating missing parent
 directories if necessary.
 Use <c><see cref="M:Java.IO.File.Mkdir" /></c> if you don't want to create missing parents.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> on failure.
 Callers must check the return value. Note also that this method returns
 false if the directory already existed. If you want to know whether the
 directory exists on return, either use <c>(f.mkdirs() || f.isDirectory())</c>
 or simply ignore the return value from this method and simply call <c><see cref="P:Java.IO.File.IsDirectory" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#mkdirs()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the file or directory represented by this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of the file or directory represented by this file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual string Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParent", "()Ljava/lang/String;", "GetGetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the pathname of the parent of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the pathname of the parent of this file. This is the path up to
 but not including the last name. <c>null</c> is returned if there is no
 parent.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getParent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentFile">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File ParentFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File ParentFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParentFile", "()Ljava/io/File;", "GetGetParentFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new file made from the pathname of the parent of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new file made from the pathname of the parent of this file.
 This is the path up to but not including the last name. <c>null</c> is
 returned when there is no parent.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getParentFile()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPath", "()Ljava/lang/String;", "GetGetPathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the path of this file.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the path of this file.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getPath()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pathSeparator")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent string used to separate components in search paths (":").</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The system-dependent string used to separate components in search paths (":").
 See <c><see cref="P:Java.IO.File.PathSeparatorChar" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#pathSeparator" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparatorChar">
      <MemberSignature Language="C#" Value="public static char PathSeparatorChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char PathSeparatorChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pathSeparatorChar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent character used to separate components in search paths (':').</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The system-dependent character used to separate components in search paths (':').
 This is used to split such things as the PATH environment variable and classpath
 system properties into lists of directories to be searched.

 </para>
          <para tool="javadoc-to-mdoc">This field is initialized from the system property "path.separator".
 Later changes to that property will have no effect on this field or this class.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#pathSeparatorChar" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public virtual bool RenameTo (Java.IO.File newPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RenameTo(class Java.IO.File newPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("renameTo", "(Ljava/io/File;)Z", "GetRenameTo_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="newPath">the new path.</param>
        <summary>Renames this file to <c>newPath</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Renames this file to <c>newPath</c>. This operation is supported for both
 files and directories.

 </para>
          <para tool="javadoc-to-mdoc">Many failures are possible. Some of the more likely failures include:
 <list type="bullet"><item><term>Write permission is required on the directories containing both the source and
 destination paths.
 </term></item><item><term>Search permission is required for all parents of both paths.
 </term></item><item><term>Both paths be on the same mount point. On Android, applications are most likely to hit
 this restriction when attempting to copy between internal storage and an SD card.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> on failure.
 Callers must check the return value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#renameTo(java.io.File)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public static string Separator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Separator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("separator")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent string used to separate components in filenames ('/').</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The system-dependent string used to separate components in filenames ('/').
 See <c><see cref="P:Java.IO.File.SeparatorChar" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#separator" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorChar">
      <MemberSignature Language="C#" Value="public static char SeparatorChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char SeparatorChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("separatorChar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent character used to separate components in filenames ('/').</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The system-dependent character used to separate components in filenames ('/').
 Use of this (rather than hard-coding '/') helps portability to other operating systems.

 </para>
          <para tool="javadoc-to-mdoc">This field is initialized from the system property "file.separator".
 Later changes to that property will have no effect on this field or this class.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#separatorChar" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetExecutable">
      <MemberSignature Language="C#" Value="public virtual bool SetExecutable (bool executable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetExecutable(bool executable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExecutable", "(Z)Z", "GetSetExecutable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="executable">To be added.</param>
        <summary>Equivalent to setExecutable(executable, true).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to setExecutable(executable, true).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setExecutable(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Java.IO.File.SetExecutable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetExecutable">
      <MemberSignature Language="C#" Value="public virtual bool SetExecutable (bool executable, bool ownerOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetExecutable(bool executable, bool ownerOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExecutable", "(ZZ)Z", "GetSetExecutable_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Boolean" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="executable">To allow execute permission if true, otherwise disallow</param>
        <param name="ownerOnly">To manipulate execute permission only for owner if true,
            otherwise for everyone. The manipulation will apply to
            everyone regardless of this value if the underlying system
            does not distinguish owner and other users.</param>
        <summary>Manipulates the execute permissions for the abstract path designated by
 this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Manipulates the execute permissions for the abstract path designated by
 this file.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> on failure.
 Callers must check the return value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setExecutable(boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetLastModified">
      <MemberSignature Language="C#" Value="public virtual bool SetLastModified (long time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLastModified(int64 time) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLastModified", "(J)Z", "GetSetLastModified_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="time">the last modification time for this file.</param>
        <summary>Sets the time this file was last modified, measured in milliseconds since
 January 1st, 1970, midnight.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the time this file was last modified, measured in milliseconds since
 January 1st, 1970, midnight.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method does <format type="text/html"><i>not</i></format> throw <c>IOException</c> on failure.
 Callers must check the return value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setLastModified(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>time </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadable">
      <MemberSignature Language="C#" Value="public virtual bool SetReadable (bool readable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReadable(bool readable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReadable", "(Z)Z", "GetSetReadable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="readable">To be added.</param>
        <summary tool="true">Equivalent to setReadable(readable, true).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to setReadable(readable, true).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setReadable(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Java.IO.File.SetReadable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetReadable">
      <MemberSignature Language="C#" Value="public virtual bool SetReadable (bool readable, bool ownerOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReadable(bool readable, bool ownerOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReadable", "(ZZ)Z", "GetSetReadable_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Boolean" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="readable">To allow read permission if true, otherwise disallow</param>
        <param name="ownerOnly">To manipulate read permission only for owner if true,
            otherwise for everyone. The manipulation will apply to
            everyone regardless of this value if the underlying system
            does not distinguish owner and other users.</param>
        <summary>Manipulates the read permissions for the abstract path designated by this
 file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Manipulates the read permissions for the abstract path designated by this
 file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setReadable(boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReadOnly() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReadOnly", "()Z", "GetSetReadOnlyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Equivalent to setWritable(false, false).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to setWritable(false, false).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setReadOnly()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.IO.File.SetWritable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetWritable">
      <MemberSignature Language="C#" Value="public virtual bool SetWritable (bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWritable(bool writable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWritable", "(Z)Z", "GetSetWritable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writable">To be added.</param>
        <summary tool="true">Equivalent to setWritable(writable, true).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to setWritable(writable, true).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setWritable(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Java.IO.File.SetWritable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetWritable">
      <MemberSignature Language="C#" Value="public virtual bool SetWritable (bool writable, bool ownerOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWritable(bool writable, bool ownerOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWritable", "(ZZ)Z", "GetSetWritable_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Boolean" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writable">To allow write permission if true, otherwise disallow</param>
        <param name="ownerOnly">To manipulate write permission only for owner if true,
            otherwise for everyone. The manipulation will apply to
            everyone regardless of this value if the underlying system
            does not distinguish owner and other users.</param>
        <summary>Manipulates the write permissions for the abstract path designated by this
 file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Manipulates the write permissions for the abstract path designated by this
 file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#setWritable(boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalSpace">
      <MemberSignature Language="C#" Value="public virtual long TotalSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalSpace", "()J", "GetGetTotalSpaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total size in bytes of the partition containing this path.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total size in bytes of the partition containing this path.
 Returns 0 if this path does not exist.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getTotalSpace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ToURI">
      <MemberSignature Language="C#" Value="public virtual Java.Net.URI ToURI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.URI ToURI() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toURI", "()Ljava/net/URI;", "GetToURIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URI</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a Uniform Resource Identifier for this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a Uniform Resource Identifier for this file. The URI is system
 dependent and may not be transferable between different operating / file
 systems.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#toURI()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToURL">
      <MemberSignature Language="C#" Value="public virtual Java.Net.URL ToURL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.URL ToURL() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toURL", "()Ljava/net/URL;", "GetToURLHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URL</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a Uniform Resource Locator for this file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a Uniform Resource Locator for this file. The URL is system
 dependent and may not be transferable between different operating / file
 systems.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#toURL()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.MalformedURLException">if the path cannot be transformed into a URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsableSpace">
      <MemberSignature Language="C#" Value="public virtual long UsableSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UsableSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUsableSpace", "()J", "GetGetUsableSpaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of usable free bytes on the partition containing this path.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of usable free bytes on the partition containing this path.
 Returns 0 if this path does not exist.

 </para>
          <para tool="javadoc-to-mdoc">Note that this is likely to be an optimistic over-estimate and should not
 be taken as a guarantee your application can actually write this many bytes.
 On Android (and other Unix-based systems), this method returns the number of free bytes
 available to non-root users, regardless of whether you're actually running as root,
 and regardless of any quota or other restrictions that might apply to the user.
 (The <c>getFreeSpace</c> method returns the number of bytes potentially available to root.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/File.html#getUsableSpace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
