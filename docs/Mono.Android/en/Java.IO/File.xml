<Type Name="File" FullName="Java.IO.File">
  <TypeSignature Language="C#" Value="public class File : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit File extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.File" />
  <TypeSignature Language="F#" Value="type File = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/File", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An abstract representation of file and directory pathnames.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/File" title="Reference documentation">Java documentation for <code>java.io.File</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (Java.Net.URI uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.URI uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.#ctor(Java.Net.URI)" />
      <MemberSignature Language="F#" Value="new Java.IO.File : Java.Net.URI -&gt; Java.IO.File" Usage="new Java.IO.File uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/URI;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uri" Type="Java.Net.URI" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Creates a new &lt;code&gt;File&lt;/code&gt; instance from a parent abstract
            pathname and a child pathname string.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#File(java.io.File,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.File.File(java.io.File, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>uri == null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>uri</c> does not comply with the conditions above.</exception>
        <altmember cref="M:Java.IO.File.ToURI" />
        <altmember cref="T:Java.Net.URI" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (string pathname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pathname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.IO.File : string -&gt; Java.IO.File" Usage="new Java.IO.File pathname" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pathname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathname">To be added.</param>
        <summary>Creates a new &lt;code&gt;File&lt;/code&gt; instance from a parent abstract
            pathname and a child pathname string.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#File(java.io.File,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.File.File(java.io.File, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>path</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (Java.IO.File parent, string child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File parent, string child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.#ctor(Java.IO.File,System.String)" />
      <MemberSignature Language="F#" Value="new Java.IO.File : Java.IO.File * string -&gt; Java.IO.File" Usage="new Java.IO.File (parent, child)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="Java.IO.File" />
        <Parameter Name="child" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">The parent abstract pathname</param>
        <param name="child">The child pathname string</param>
        <summary>Creates a new &lt;code&gt;File&lt;/code&gt; instance from a parent abstract
            pathname and a child pathname string.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#File(java.io.File,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.File.File(java.io.File, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>name</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected File (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.File : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.File" Usage="new Java.IO.File (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public File (string parent, string child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parent, string child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.#ctor(System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Java.IO.File : string * string -&gt; Java.IO.File" Usage="new Java.IO.File (parent, child)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.String" />
        <Parameter Name="child" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">The parent abstract pathname</param>
        <param name="child">The child pathname string</param>
        <summary>Creates a new &lt;code&gt;File&lt;/code&gt; instance from a parent abstract
            pathname and a child pathname string.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#File(java.io.File,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.File.File(java.io.File, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>name == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteFile">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File AbsoluteFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File AbsoluteFile" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.AbsoluteFile" />
      <MemberSignature Language="F#" Value="member this.AbsoluteFile : Java.IO.File" Usage="Java.IO.File.AbsoluteFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAbsoluteFile", "()Ljava/io/File;", "GetGetAbsoluteFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute form of this abstract pathname.</summary>
        <value>The absolute abstract pathname denoting the same file or
                     directory as this abstract pathname</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getAbsoluteFile()" title="Reference documentation">Java documentation for <code>java.io.File.getAbsoluteFile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public virtual string AbsolutePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsolutePath" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.AbsolutePath" />
      <MemberSignature Language="F#" Value="member this.AbsolutePath : string" Usage="Java.IO.File.AbsolutePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAbsolutePath", "()Ljava/lang/String;", "GetGetAbsolutePathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the absolute path of this file.</summary>
        <value>The absolute pathname string denoting the same file or
                     directory as this abstract pathname</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getAbsolutePath()" title="Reference documentation">Java documentation for <code>java.io.File.getAbsolutePath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CanExecute" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : unit -&gt; bool&#xA;override this.CanExecute : unit -&gt; bool" Usage="file.CanExecute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canExecute", "()Z", "GetCanExecuteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tests whether the application can execute the file denoted by this
            abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the abstract pathname exists
                     &lt;em&gt;and&lt;/em&gt; the application is allowed to execute the file</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#canExecute()" title="Reference documentation">Java documentation for <code>java.io.File.canExecute()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="CanonicalFile">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File CanonicalFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File CanonicalFile" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.CanonicalFile" />
      <MemberSignature Language="F#" Value="member this.CanonicalFile : Java.IO.File" Usage="Java.IO.File.CanonicalFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCanonicalFile", "()Ljava/io/File;", "GetGetCanonicalFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the canonical form of this abstract pathname.</summary>
        <value>The canonical pathname string denoting the same file or
                     directory as this abstract pathname</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getCanonicalFile()" title="Reference documentation">Java documentation for <code>java.io.File.getCanonicalFile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CanonicalPath">
      <MemberSignature Language="C#" Value="public virtual string CanonicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalPath" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.CanonicalPath" />
      <MemberSignature Language="F#" Value="member this.CanonicalPath : string" Usage="Java.IO.File.CanonicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCanonicalPath", "()Ljava/lang/String;", "GetGetCanonicalPathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the canonical pathname string of this abstract pathname.</summary>
        <value>The canonical pathname string denoting the same file or
                     directory as this abstract pathname</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getCanonicalPath()" title="Reference documentation">Java documentation for <code>java.io.File.getCanonicalPath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CanRead" />
      <MemberSignature Language="F#" Value="abstract member CanRead : unit -&gt; bool&#xA;override this.CanRead : unit -&gt; bool" Usage="file.CanRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canRead", "()Z", "GetCanReadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tests whether the application can read the file denoted by this
            abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the file specified by this
                     abstract pathname exists &lt;em&gt;and&lt;/em&gt; can be read by the
                     application; &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#canRead()" title="Reference documentation">Java documentation for <code>java.io.File.canRead()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public virtual bool CanWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CanWrite" />
      <MemberSignature Language="F#" Value="abstract member CanWrite : unit -&gt; bool&#xA;override this.CanWrite : unit -&gt; bool" Usage="file.CanWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canWrite", "()Z", "GetCanWriteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tests whether the application can modify the file denoted by this
            abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the file system actually
                     contains a file denoted by this abstract pathname &lt;em&gt;and&lt;/em&gt;
                     the application is allowed to write to the file;
                     &lt;code&gt;false&lt;/code&gt; otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#canWrite()" title="Reference documentation">Java documentation for <code>java.io.File.canWrite()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.IO.File pathname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.IO.File pathname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CompareTo(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Java.IO.File -&gt; int&#xA;override this.CompareTo : Java.IO.File -&gt; int" Usage="file.CompareTo pathname" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareTo", "(Ljava/io/File;)I", "GetCompareTo_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathname" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="pathname">The abstract pathname to be compared to this abstract
                               pathname</param>
        <summary>Compares two abstract pathnames lexicographically.</summary>
        <returns>Zero if the argument is equal to this abstract pathname, a
                     value less than zero if this abstract pathname is
                     lexicographically less than the argument, or a value greater
                     than zero if this abstract pathname is lexicographically
                     greater than the argument</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#compareTo(java.io.File)" title="Reference documentation">Java documentation for <code>java.io.File.compareTo(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CreateNewFile">
      <MemberSignature Language="C#" Value="public virtual bool CreateNewFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CreateNewFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CreateNewFile" />
      <MemberSignature Language="F#" Value="abstract member CreateNewFile : unit -&gt; bool&#xA;override this.CreateNewFile : unit -&gt; bool" Usage="file.CreateNewFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createNewFile", "()Z", "GetCreateNewFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically creates a new, empty file named by this abstract pathname if
            and only if a file with this name does not yet exist.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the named file does not exist and was
                     successfully created; &lt;code&gt;false&lt;/code&gt; if the named file
                     already exists</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#createNewFile()" title="Reference documentation">Java documentation for <code>java.io.File.createNewFile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if it's not possible to create the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTempFile">
      <MemberSignature Language="C#" Value="public static Java.IO.File CreateTempFile (string prefix, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File CreateTempFile(string prefix, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CreateTempFile(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateTempFile : string * string -&gt; Java.IO.File" Usage="Java.IO.File.CreateTempFile (prefix, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTempFile", "(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix string to be used in generating the file's
                               name; must be at least three characters long</param>
        <param name="suffix">The suffix string to be used in generating the file's
                               name; may be &lt;code&gt;null&lt;/code&gt;, in which case the
                               suffix &lt;code&gt;".tmp"&lt;/code&gt; will be used</param>
        <summary>Creates an empty file in the default temporary-file directory, using
            the given prefix and suffix to generate its name.</summary>
        <returns>An abstract pathname denoting a newly-created empty file</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#createTempFile(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.File.createTempFile(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs when writing the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTempFile">
      <MemberSignature Language="C#" Value="public static Java.IO.File CreateTempFile (string prefix, string suffix, Java.IO.File directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File CreateTempFile(string prefix, string suffix, class Java.IO.File directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.CreateTempFile(System.String,System.String,Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member CreateTempFile : string * string * Java.IO.File -&gt; Java.IO.File" Usage="Java.IO.File.CreateTempFile (prefix, suffix, directory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTempFile", "(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="directory" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="prefix">The prefix string to be used in generating the file's
                               name; must be at least three characters long</param>
        <param name="suffix">The suffix string to be used in generating the file's
                               name; may be &lt;code&gt;null&lt;/code&gt;, in which case the
                               suffix &lt;code&gt;".tmp"&lt;/code&gt; will be used</param>
        <param name="directory">the location to which the temp file is to be written, or
            <c>null</c> for the default location for temporary files,
            which is taken from the "java.io.tmpdir" system property. It
            may be necessary to set this property to an existing, writable
            directory for this method to work properly.</param>
        <summary>Creates an empty file in the default temporary-file directory, using
            the given prefix and suffix to generate its name.</summary>
        <returns>An abstract pathname denoting a newly-created empty file</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#createTempFile(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.File.createTempFile(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the length of <c>prefix</c> is less than 3.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs when writing the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual bool Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.Delete" />
      <MemberSignature Language="F#" Value="abstract member Delete : unit -&gt; bool&#xA;override this.Delete : unit -&gt; bool" Usage="file.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("delete", "()Z", "GetDeleteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes the file or directory denoted by this abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the file or directory is
                     successfully deleted; &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#delete()" title="Reference documentation">Java documentation for <code>java.io.File.delete()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeleteOnExit">
      <MemberSignature Language="C#" Value="public virtual void DeleteOnExit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteOnExit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.DeleteOnExit" />
      <MemberSignature Language="F#" Value="abstract member DeleteOnExit : unit -&gt; unit&#xA;override this.DeleteOnExit : unit -&gt; unit" Usage="file.DeleteOnExit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteOnExit", "()V", "GetDeleteOnExitHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Requests that the file or directory denoted by this abstract
            pathname be deleted when the virtual machine terminates.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#deleteOnExit()" title="Reference documentation">Java documentation for <code>java.io.File.deleteOnExit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual bool Exists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Exists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.Exists" />
      <MemberSignature Language="F#" Value="abstract member Exists : unit -&gt; bool&#xA;override this.Exists : unit -&gt; bool" Usage="file.Exists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exists", "()Z", "GetExistsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tests whether the file or directory denoted by this abstract pathname
            exists.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the file or directory denoted
                     by this abstract pathname exists; &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#exists()" title="Reference documentation">Java documentation for <code>java.io.File.exists()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FreeSpace">
      <MemberSignature Language="C#" Value="public virtual long FreeSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FreeSpace" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.FreeSpace" />
      <MemberSignature Language="F#" Value="member this.FreeSpace : int64" Usage="Java.IO.File.FreeSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFreeSpace", "()J", "GetGetFreeSpaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of unallocated bytes in the partition &lt;a
            href="#partName"&gt;named&lt;/a&gt; by this abstract path name.</summary>
        <value>The number of unallocated bytes on the partition or <c>0L</c>
                     if the abstract pathname does not name a partition.  This
                     value will be less than or equal to the total file system size
                     returned by <c>#getTotalSpace</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getFreeSpace()" title="Reference documentation">Java documentation for <code>java.io.File.getFreeSpace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public virtual bool IsAbsolute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbsolute" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.IsAbsolute" />
      <MemberSignature Language="F#" Value="member this.IsAbsolute : bool" Usage="Java.IO.File.IsAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAbsolute", "()Z", "GetIsAbsoluteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests whether this abstract pathname is absolute.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if this abstract pathname is absolute,
                     &lt;code&gt;false&lt;/code&gt; otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#isAbsolute()" title="Reference documentation">Java documentation for <code>java.io.File.isAbsolute()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.IO.File.Path" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public virtual bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.IsDirectory" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="Java.IO.File.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDirectory", "()Z", "GetIsDirectoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests whether the file denoted by this abstract pathname is a
            directory.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if and only if the file denoted by this
                     abstract pathname exists &lt;em&gt;and&lt;/em&gt; is a directory;
                     &lt;code&gt;false&lt;/code&gt; otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#isDirectory()" title="Reference documentation">Java documentation for <code>java.io.File.isDirectory()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public virtual bool IsFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFile" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.IsFile" />
      <MemberSignature Language="F#" Value="member this.IsFile : bool" Usage="Java.IO.File.IsFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFile", "()Z", "GetIsFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests whether the file denoted by this abstract pathname is a normal
            file.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if and only if the file denoted by this
                     abstract pathname exists &lt;em&gt;and&lt;/em&gt; is a normal file;
                     &lt;code&gt;false&lt;/code&gt; otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#isFile()" title="Reference documentation">Java documentation for <code>java.io.File.isFile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public virtual bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.IsHidden" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool" Usage="Java.IO.File.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHidden", "()Z", "GetIsHiddenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests whether the file named by this abstract pathname is a hidden
            file.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if and only if the file denoted by this
                     abstract pathname is hidden according to the conventions of the
                     underlying platform</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#isHidden()" title="Reference documentation">Java documentation for <code>java.io.File.isHidden()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.File.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public virtual long LastModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 LastModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.LastModified" />
      <MemberSignature Language="F#" Value="abstract member LastModified : unit -&gt; int64&#xA;override this.LastModified : unit -&gt; int64" Usage="file.LastModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lastModified", "()J", "GetLastModifiedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the time that the file denoted by this abstract pathname was
            last modified.</summary>
        <returns>A &lt;code&gt;long&lt;/code&gt; value representing the time the file was
                     last modified, measured in milliseconds since the epoch
                     (00:00:00 GMT, January 1, 1970), or &lt;code&gt;0L&lt;/code&gt; if the
                     file does not exist or if an I/O error occurs</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#lastModified()" title="Reference documentation">Java documentation for <code>java.io.File.lastModified()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual long Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.Length" />
      <MemberSignature Language="F#" Value="abstract member Length : unit -&gt; int64&#xA;override this.Length : unit -&gt; int64" Usage="file.Length " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("length", "()J", "GetLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of the file denoted by this abstract pathname.</summary>
        <returns>The length, in bytes, of the file denoted by this abstract
                     pathname, or &lt;code&gt;0L&lt;/code&gt; if the file does not exist.  Some
                     operating systems may return &lt;code&gt;0L&lt;/code&gt; for pathnames
                     denoting system-dependent entities such as devices or pipes.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#length()" title="Reference documentation">Java documentation for <code>java.io.File.length()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual string[] List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] List() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.List" />
      <MemberSignature Language="F#" Value="abstract member List : unit -&gt; string[]&#xA;override this.List : unit -&gt; string[]" Usage="file.List " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("list", "()[Ljava/lang/String;", "GetListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of strings naming the files and directories in the
            directory denoted by this abstract pathname.</summary>
        <returns>An array of strings naming the files and directories in the
                     directory denoted by this abstract pathname.  The array will be
                     empty if the directory is empty.  Returns <c>null</c> if
                     this abstract pathname does not denote a directory, or if an
                     I/O error occurs.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#list()" title="Reference documentation">Java documentation for <code>java.io.File.list()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual string[] List (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] List(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.List(Java.IO.IFilenameFilter)" />
      <MemberSignature Language="F#" Value="abstract member List : Java.IO.IFilenameFilter -&gt; string[]&#xA;override this.List : Java.IO.IFilenameFilter -&gt; string[]" Usage="file.List filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("list", "(Ljava/io/FilenameFilter;)[Ljava/lang/String;", "GetList_Ljava_io_FilenameFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">the filter to match names against, may be <c>null</c>.</param>
        <summary>Returns an array of strings naming the files and directories in the
            directory denoted by this abstract pathname.</summary>
        <returns>An array of strings naming the files and directories in the
                     directory denoted by this abstract pathname.  The array will be
                     empty if the directory is empty.  Returns <c>null</c> if
                     this abstract pathname does not denote a directory, or if an
                     I/O error occurs.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#list()" title="Reference documentation">Java documentation for <code>java.io.File.list()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string[]&gt; ListAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string[]&gt; ListAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListAsync" />
      <MemberSignature Language="F#" Value="member this.ListAsync : unit -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="file.ListAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string[]&gt; ListAsync (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string[]&gt; ListAsync(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListAsync(Java.IO.IFilenameFilter)" />
      <MemberSignature Language="F#" Value="member this.ListAsync : Java.IO.IFilenameFilter -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="file.ListAsync filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFiles">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File[] ListFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] ListFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListFiles" />
      <MemberSignature Language="F#" Value="abstract member ListFiles : unit -&gt; Java.IO.File[]&#xA;override this.ListFiles : unit -&gt; Java.IO.File[]" Usage="file.ListFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listFiles", "()[Ljava/io/File;", "GetListFilesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of abstract pathnames denoting the files in the
            directory denoted by this abstract pathname.</summary>
        <returns>An array of abstract pathnames denoting the files and
                     directories in the directory denoted by this abstract pathname.
                     The array will be empty if the directory is empty.  Returns
                     <c>null</c> if this abstract pathname does not denote a
                     directory, or if an I/O error occurs.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#listFiles()" title="Reference documentation">Java documentation for <code>java.io.File.listFiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListFiles">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File[] ListFiles (Java.IO.IFileFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] ListFiles(class Java.IO.IFileFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListFiles(Java.IO.IFileFilter)" />
      <MemberSignature Language="F#" Value="abstract member ListFiles : Java.IO.IFileFilter -&gt; Java.IO.File[]&#xA;override this.ListFiles : Java.IO.IFileFilter -&gt; Java.IO.File[]" Usage="file.ListFiles filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listFiles", "(Ljava/io/FileFilter;)[Ljava/io/File;", "GetListFiles_Ljava_io_FileFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFileFilter" />
      </Parameters>
      <Docs>
        <param name="filter">the filter to match names against, may be <c>null</c>.</param>
        <summary>Returns an array of abstract pathnames denoting the files in the
            directory denoted by this abstract pathname.</summary>
        <returns>An array of abstract pathnames denoting the files and
                     directories in the directory denoted by this abstract pathname.
                     The array will be empty if the directory is empty.  Returns
                     <c>null</c> if this abstract pathname does not denote a
                     directory, or if an I/O error occurs.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#listFiles()" title="Reference documentation">Java documentation for <code>java.io.File.listFiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListFiles">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File[] ListFiles (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.File[] ListFiles(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListFiles(Java.IO.IFilenameFilter)" />
      <MemberSignature Language="F#" Value="abstract member ListFiles : Java.IO.IFilenameFilter -&gt; Java.IO.File[]&#xA;override this.ListFiles : Java.IO.IFilenameFilter -&gt; Java.IO.File[]" Usage="file.ListFiles filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listFiles", "(Ljava/io/FilenameFilter;)[Ljava/io/File;", "GetListFiles_Ljava_io_FilenameFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">the filter to match names against, may be <c>null</c>.</param>
        <summary>Returns an array of abstract pathnames denoting the files in the
            directory denoted by this abstract pathname.</summary>
        <returns>An array of abstract pathnames denoting the files and
                     directories in the directory denoted by this abstract pathname.
                     The array will be empty if the directory is empty.  Returns
                     <c>null</c> if this abstract pathname does not denote a
                     directory, or if an I/O error occurs.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#listFiles()" title="Reference documentation">Java documentation for <code>java.io.File.listFiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListFilesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListFilesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListFilesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListFilesAsync" />
      <MemberSignature Language="F#" Value="member this.ListFilesAsync : unit -&gt; System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;" Usage="file.ListFilesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListFilesAsync (Java.IO.IFileFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListFilesAsync(class Java.IO.IFileFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListFilesAsync(Java.IO.IFileFilter)" />
      <MemberSignature Language="F#" Value="member this.ListFilesAsync : Java.IO.IFileFilter -&gt; System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;" Usage="file.ListFilesAsync filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFileFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFilesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListFilesAsync (Java.IO.IFilenameFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListFilesAsync(class Java.IO.IFilenameFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListFilesAsync(Java.IO.IFilenameFilter)" />
      <MemberSignature Language="F#" Value="member this.ListFilesAsync : Java.IO.IFilenameFilter -&gt; System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;" Usage="file.ListFilesAsync filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.IO.IFilenameFilter" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoots">
      <MemberSignature Language="C#" Value="public static Java.IO.File[] ListRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File[] ListRoots() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListRoots" />
      <MemberSignature Language="F#" Value="static member ListRoots : unit -&gt; Java.IO.File[]" Usage="Java.IO.File.ListRoots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("listRoots", "()[Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the file system roots.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#listRoots()" title="Reference documentation">Java documentation for <code>java.io.File.listRoots()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListRootsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Java.IO.File[]&gt; ListRootsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Java.IO.File[]&gt; ListRootsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ListRootsAsync" />
      <MemberSignature Language="F#" Value="static member ListRootsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;" Usage="Java.IO.File.ListRootsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.IO.File[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mkdir">
      <MemberSignature Language="C#" Value="public virtual bool Mkdir ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Mkdir() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.Mkdir" />
      <MemberSignature Language="F#" Value="abstract member Mkdir : unit -&gt; bool&#xA;override this.Mkdir : unit -&gt; bool" Usage="file.Mkdir " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mkdir", "()Z", "GetMkdirHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the directory named by this abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the directory was
                     created; &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#mkdir()" title="Reference documentation">Java documentation for <code>java.io.File.mkdir()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mkdirs">
      <MemberSignature Language="C#" Value="public virtual bool Mkdirs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Mkdirs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.Mkdirs" />
      <MemberSignature Language="F#" Value="abstract member Mkdirs : unit -&gt; bool&#xA;override this.Mkdirs : unit -&gt; bool" Usage="file.Mkdirs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mkdirs", "()Z", "GetMkdirsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the directory named by this abstract pathname, including any
            necessary but nonexistent parent directories.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the directory was created,
                     along with all necessary parent directories; &lt;code&gt;false&lt;/code&gt;
                     otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#mkdirs()" title="Reference documentation">Java documentation for <code>java.io.File.mkdirs()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Java.IO.File.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the file or directory denoted by this abstract
            pathname.</summary>
        <value>The name of the file or directory denoted by this abstract
                     pathname, or the empty string if this pathname's name sequence
                     is empty</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getName()" title="Reference documentation">Java documentation for <code>java.io.File.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual string Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parent" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : string" Usage="Java.IO.File.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParent", "()Ljava/lang/String;", "GetGetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the pathname string of this abstract pathname's parent, or
            &lt;code&gt;null&lt;/code&gt; if this pathname does not name a parent directory.</summary>
        <value>The pathname string of the parent directory named by this
                     abstract pathname, or &lt;code&gt;null&lt;/code&gt; if this pathname
                     does not name a parent</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getParent()" title="Reference documentation">Java documentation for <code>java.io.File.getParent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentFile">
      <MemberSignature Language="C#" Value="public virtual Java.IO.File ParentFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.File ParentFile" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.ParentFile" />
      <MemberSignature Language="F#" Value="member this.ParentFile : Java.IO.File" Usage="Java.IO.File.ParentFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParentFile", "()Ljava/io/File;", "GetGetParentFileHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the abstract pathname of this abstract pathname's parent,
            or &lt;code&gt;null&lt;/code&gt; if this pathname does not name a parent
            directory.</summary>
        <value>The abstract pathname of the parent directory named by this
                     abstract pathname, or &lt;code&gt;null&lt;/code&gt; if this pathname
                     does not name a parent</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getParentFile()" title="Reference documentation">Java documentation for <code>java.io.File.getParentFile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.Path" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="Java.IO.File.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPath", "()Ljava/lang/String;", "GetGetPathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Converts this abstract pathname into a pathname string.</summary>
        <value>The string form of this abstract pathname</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getPath()" title="Reference documentation">Java documentation for <code>java.io.File.getPath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.PathSeparator" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : string" Usage="Java.IO.File.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pathSeparator")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent path-separator character, represented as a string
            for convenience.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#pathSeparator" title="Reference documentation">Java documentation for <code>java.io.File.pathSeparator</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparatorChar">
      <MemberSignature Language="C#" Value="public static char PathSeparatorChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char PathSeparatorChar" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.PathSeparatorChar" />
      <MemberSignature Language="F#" Value="member this.PathSeparatorChar : char" Usage="Java.IO.File.PathSeparatorChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pathSeparatorChar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent path-separator character.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#pathSeparatorChar" title="Reference documentation">Java documentation for <code>java.io.File.pathSeparatorChar</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public virtual bool RenameTo (Java.IO.File dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RenameTo(class Java.IO.File dest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.RenameTo(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member RenameTo : Java.IO.File -&gt; bool&#xA;override this.RenameTo : Java.IO.File -&gt; bool" Usage="file.RenameTo dest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("renameTo", "(Ljava/io/File;)Z", "GetRenameTo_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="dest">The new abstract pathname for the named file</param>
        <summary>Renames the file denoted by this abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the renaming succeeded;
                     &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#renameTo(java.io.File)" title="Reference documentation">Java documentation for <code>java.io.File.renameTo(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public static string Separator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Separator" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.Separator" />
      <MemberSignature Language="F#" Value="member this.Separator : string" Usage="Java.IO.File.Separator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("separator")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent default name-separator character, represented as a
            string for convenience.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#separator" title="Reference documentation">Java documentation for <code>java.io.File.separator</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorChar">
      <MemberSignature Language="C#" Value="public static char SeparatorChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char SeparatorChar" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.SeparatorChar" />
      <MemberSignature Language="F#" Value="member this.SeparatorChar : char" Usage="Java.IO.File.SeparatorChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("separatorChar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The system-dependent default name-separator character.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#separatorChar" title="Reference documentation">Java documentation for <code>java.io.File.separatorChar</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetExecutable">
      <MemberSignature Language="C#" Value="public virtual bool SetExecutable (bool executable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetExecutable(bool executable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetExecutable(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetExecutable : bool -&gt; bool&#xA;override this.SetExecutable : bool -&gt; bool" Usage="file.SetExecutable executable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExecutable", "(Z)Z", "GetSetExecutable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="executable">If &lt;code&gt;true&lt;/code&gt;, sets the access permission to allow execute
                     operations; if &lt;code&gt;false&lt;/code&gt; to disallow execute operations</param>
        <summary>A convenience method to set the owner's execute permission for this
            abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded.  The
                      operation will fail if the user does not have permission to
                      change the access permissions of this abstract pathname.  If
                      &lt;code&gt;executable&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and the underlying
                      file system does not implement an execute permission, then the
                      operation will fail.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setExecutable(boolean)" title="Reference documentation">Java documentation for <code>java.io.File.setExecutable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Java.IO.File.SetExecutable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetExecutable">
      <MemberSignature Language="C#" Value="public virtual bool SetExecutable (bool executable, bool ownerOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetExecutable(bool executable, bool ownerOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetExecutable(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetExecutable : bool * bool -&gt; bool&#xA;override this.SetExecutable : bool * bool -&gt; bool" Usage="file.SetExecutable (executable, ownerOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExecutable", "(ZZ)Z", "GetSetExecutable_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executable" Type="System.Boolean" />
        <Parameter Name="ownerOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="executable">If &lt;code&gt;true&lt;/code&gt;, sets the access permission to allow execute
                     operations; if &lt;code&gt;false&lt;/code&gt; to disallow execute operations</param>
        <param name="ownerOnly">To manipulate execute permission only for owner if true,
            otherwise for everyone. The manipulation will apply to
            everyone regardless of this value if the underlying system
            does not distinguish owner and other users.</param>
        <summary>A convenience method to set the owner's execute permission for this
            abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded.  The
                      operation will fail if the user does not have permission to
                      change the access permissions of this abstract pathname.  If
                      &lt;code&gt;executable&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and the underlying
                      file system does not implement an execute permission, then the
                      operation will fail.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setExecutable(boolean)" title="Reference documentation">Java documentation for <code>java.io.File.setExecutable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetLastModified">
      <MemberSignature Language="C#" Value="public virtual bool SetLastModified (long time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLastModified(int64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetLastModified(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetLastModified : int64 -&gt; bool&#xA;override this.SetLastModified : int64 -&gt; bool" Usage="file.SetLastModified time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLastModified", "(J)Z", "GetSetLastModified_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="time">The new last-modified time, measured in milliseconds since
                          the epoch (00:00:00 GMT, January 1, 1970)</param>
        <summary>Sets the last-modified time of the file or directory named by this
            abstract pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded;
                     &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setLastModified(long)" title="Reference documentation">Java documentation for <code>java.io.File.setLastModified(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>time </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadable">
      <MemberSignature Language="C#" Value="public virtual bool SetReadable (bool readable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReadable(bool readable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetReadable(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetReadable : bool -&gt; bool&#xA;override this.SetReadable : bool -&gt; bool" Usage="file.SetReadable readable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReadable", "(Z)Z", "GetSetReadable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="readable">If &lt;code&gt;true&lt;/code&gt;, sets the access permission to allow read
                     operations; if &lt;code&gt;false&lt;/code&gt; to disallow read operations</param>
        <summary>A convenience method to set the owner's read permission for this abstract
            pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded.  The
                     operation will fail if the user does not have permission to
                     change the access permissions of this abstract pathname.  If
                     &lt;code&gt;readable&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and the underlying
                     file system does not implement a read permission, then the
                     operation will fail.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setReadable(boolean)" title="Reference documentation">Java documentation for <code>java.io.File.setReadable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Java.IO.File.SetReadable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetReadable">
      <MemberSignature Language="C#" Value="public virtual bool SetReadable (bool readable, bool ownerOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReadable(bool readable, bool ownerOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetReadable(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetReadable : bool * bool -&gt; bool&#xA;override this.SetReadable : bool * bool -&gt; bool" Usage="file.SetReadable (readable, ownerOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReadable", "(ZZ)Z", "GetSetReadable_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readable" Type="System.Boolean" />
        <Parameter Name="ownerOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="readable">If &lt;code&gt;true&lt;/code&gt;, sets the access permission to allow read
                     operations; if &lt;code&gt;false&lt;/code&gt; to disallow read operations</param>
        <param name="ownerOnly">To manipulate read permission only for owner if true,
            otherwise for everyone. The manipulation will apply to
            everyone regardless of this value if the underlying system
            does not distinguish owner and other users.</param>
        <summary>A convenience method to set the owner's read permission for this abstract
            pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded.  The
                     operation will fail if the user does not have permission to
                     change the access permissions of this abstract pathname.  If
                     &lt;code&gt;readable&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and the underlying
                     file system does not implement a read permission, then the
                     operation will fail.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setReadable(boolean)" title="Reference documentation">Java documentation for <code>java.io.File.setReadable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetReadOnly" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnly : unit -&gt; bool&#xA;override this.SetReadOnly : unit -&gt; bool" Usage="file.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReadOnly", "()Z", "GetSetReadOnlyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marks the file or directory named by this abstract pathname so that
            only read operations are allowed.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded;
                     &lt;code&gt;false&lt;/code&gt; otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setReadOnly()" title="Reference documentation">Java documentation for <code>java.io.File.setReadOnly()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.IO.File.SetWritable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetWritable">
      <MemberSignature Language="C#" Value="public virtual bool SetWritable (bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWritable(bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetWritable(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetWritable : bool -&gt; bool&#xA;override this.SetWritable : bool -&gt; bool" Usage="file.SetWritable writable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWritable", "(Z)Z", "GetSetWritable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writable">If &lt;code&gt;true&lt;/code&gt;, sets the access permission to allow write
                     operations; if &lt;code&gt;false&lt;/code&gt; to disallow write operations</param>
        <summary>A convenience method to set the owner's write permission for this abstract
            pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded.  The
                     operation will fail if the user does not have permission to
                     change the access permissions of this abstract pathname.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setWritable(boolean)" title="Reference documentation">Java documentation for <code>java.io.File.setWritable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Java.IO.File.SetWritable(System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetWritable">
      <MemberSignature Language="C#" Value="public virtual bool SetWritable (bool writable, bool ownerOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWritable(bool writable, bool ownerOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.SetWritable(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetWritable : bool * bool -&gt; bool&#xA;override this.SetWritable : bool * bool -&gt; bool" Usage="file.SetWritable (writable, ownerOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWritable", "(ZZ)Z", "GetSetWritable_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writable" Type="System.Boolean" />
        <Parameter Name="ownerOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writable">If &lt;code&gt;true&lt;/code&gt;, sets the access permission to allow write
                     operations; if &lt;code&gt;false&lt;/code&gt; to disallow write operations</param>
        <param name="ownerOnly">To manipulate write permission only for owner if true,
            otherwise for everyone. The manipulation will apply to
            everyone regardless of this value if the underlying system
            does not distinguish owner and other users.</param>
        <summary>A convenience method to set the owner's write permission for this abstract
            pathname.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if and only if the operation succeeded.  The
                     operation will fail if the user does not have permission to
                     change the access permissions of this abstract pathname.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#setWritable(boolean)" title="Reference documentation">Java documentation for <code>java.io.File.setWritable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.File.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.File.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPath">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.IPath ToPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IPath ToPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ToPath" />
      <MemberSignature Language="F#" Value="abstract member ToPath : unit -&gt; Java.Nio.FileNio.IPath&#xA;override this.ToPath : unit -&gt; Java.Nio.FileNio.IPath" Usage="file.ToPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toPath", "()Ljava/nio/file/Path;", "GetToPathHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Path java.nio.file.Path</c> object constructed from the
            this abstract path.</summary>
        <returns>a <c>Path</c> constructed from this abstract path</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#toPath()" title="Reference documentation">Java documentation for <code>java.io.File.toPath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalSpace">
      <MemberSignature Language="C#" Value="public virtual long TotalSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalSpace" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.TotalSpace" />
      <MemberSignature Language="F#" Value="member this.TotalSpace : int64" Usage="Java.IO.File.TotalSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalSpace", "()J", "GetGetTotalSpaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the partition &lt;a href="#partName"&gt;named&lt;/a&gt; by this
            abstract pathname.</summary>
        <value>The size, in bytes, of the partition or <c>0L</c> if this
                     abstract pathname does not name a partition</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getTotalSpace()" title="Reference documentation">Java documentation for <code>java.io.File.getTotalSpace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ToURI">
      <MemberSignature Language="C#" Value="public virtual Java.Net.URI ToURI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.URI ToURI() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ToURI" />
      <MemberSignature Language="F#" Value="abstract member ToURI : unit -&gt; Java.Net.URI&#xA;override this.ToURI : unit -&gt; Java.Net.URI" Usage="file.ToURI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toURI", "()Ljava/net/URI;", "GetToURIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URI</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Constructs a <c>file:</c> URI that represents this abstract pathname.</summary>
        <returns>An absolute, hierarchical URI with a scheme equal to
                     <c>"file"</c>, a path representing this abstract pathname,
                     and undefined authority, query, and fragment components</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#toURI()" title="Reference documentation">Java documentation for <code>java.io.File.toURI()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToURL">
      <MemberSignature Language="C#" Value="public virtual Java.Net.URL ToURL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.URL ToURL() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.File.ToURL" />
      <MemberSignature Language="F#" Value="abstract member ToURL : unit -&gt; Java.Net.URL&#xA;override this.ToURL : unit -&gt; Java.Net.URL" Usage="file.ToURL " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toURL", "()Ljava/net/URL;", "GetToURLHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URL</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this abstract pathname into a &lt;code&gt;file:&lt;/code&gt; URL.</summary>
        <returns>A URL object representing the equivalent file URL</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#toURL()" title="Reference documentation">Java documentation for <code>java.io.File.toURL()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.MalformedURLException">if the path cannot be transformed into a URL.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsableSpace">
      <MemberSignature Language="C#" Value="public virtual long UsableSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UsableSpace" />
      <MemberSignature Language="DocId" Value="P:Java.IO.File.UsableSpace" />
      <MemberSignature Language="F#" Value="member this.UsableSpace : int64" Usage="Java.IO.File.UsableSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUsableSpace", "()J", "GetGetUsableSpaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of bytes available to this virtual machine on the
            partition &lt;a href="#partName"&gt;named&lt;/a&gt; by this abstract pathname.</summary>
        <value>The number of available bytes on the partition or <c>0L</c>
                     if the abstract pathname does not name a partition.  On
                     systems where this information is not available, this method
                     will be equivalent to a call to <c>#getFreeSpace</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/File#getUsableSpace()" title="Reference documentation">Java documentation for <code>java.io.File.getUsableSpace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
