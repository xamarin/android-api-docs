<Type Name="ObjectInputStream" FullName="Java.IO.ObjectInputStream">
  <TypeSignature Language="VB.NET" Value="Public Class ObjectInputStream&#xA;Inherits InputStream&#xA;Implements IDisposable, IJavaPeerable, IObjectInput" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectInputStream : Java::IO::InputStream, IDisposable, Java::Interop::IJavaPeerable, Java::IO::IObjectInput" />
  <TypeSignature Language="C#" Value="public class ObjectInputStream : Java.IO.InputStream, IDisposable, Java.Interop.IJavaPeerable, Java.IO.IObjectInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectInputStream extends Java.IO.InputStream implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.IDataInput, class Java.IO.IObjectInput, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.ObjectInputStream" />
  <TypeSignature Language="F#" Value="type ObjectInputStream = class&#xA;    inherit InputStream&#xA;    interface IObjectInput&#xA;    interface IDataInput&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.InputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.IDataInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.IObjectInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/ObjectInputStream", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/ObjectInputStream", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An ObjectInputStream deserializes primitive data and objects previously
            written using an ObjectOutputStream.</summary>
    <remarks>
      <para>An ObjectInputStream deserializes primitive data and objects previously
            written using an ObjectOutputStream.</para>
      <para>ObjectOutputStream and ObjectInputStream can provide an application with
            persistent storage for graphs of objects when used with a FileOutputStream
            and FileInputStream respectively.  ObjectInputStream is used to recover
            those objects previously serialized. Other uses include passing objects
            between hosts using a socket stream or for marshaling and unmarshaling
            arguments and parameters in a remote communication system.</para>
      <para>ObjectInputStream ensures that the types of all objects in the graph
            created from the stream match the classes present in the Java Virtual
            Machine.  Classes are loaded as required using the standard mechanisms.</para>
      <para>Only objects that support the java.io.Serializable or
            java.io.Externalizable interface can be read from streams.</para>
      <para>The method <c>readObject</c> is used to read an object from the
            stream.  Java's safe casting should be used to get the desired type.  In
            Java, strings and arrays are objects and are treated as objects during
            serialization. When read they need to be cast to the expected type.</para>
      <para>Primitive data types can be read from the stream using the appropriate
            method on DataInput.</para>
      <para>The default deserialization mechanism for objects restores the contents
            of each field to the value and type it had when it was written.  Fields
            declared as transient or static are ignored by the deserialization process.
            References to other objects cause those objects to be read from the stream
            as necessary.  Graphs of objects are restored correctly using a reference
            sharing mechanism.  New objects are always allocated when deserializing,
            which prevents existing objects from being overwritten.</para>
      <para>Reading an object is analogous to running the constructors of a new
            object.  Memory is allocated for the object and initialized to zero (NULL).
            No-arg constructors are invoked for the non-serializable classes and then
            the fields of the serializable classes are restored from the stream starting
            with the serializable class closest to java.lang.object and finishing with
            the object's most specific class.</para>
      <para>For example to read from a stream as written by the example in
            ObjectOutputStream:
            &lt;br&gt;</para>
      <code lang="text/java">FileInputStream fis = new FileInputStream("t.tmp");
                 ObjectInputStream ois = new ObjectInputStream(fis);
            
                 int i = ois.readInt();
                 String today = (String) ois.readObject();
                 Date date = (Date) ois.readObject();
            
                 ois.close();
            </code>
      <para>Classes control how they are serialized by implementing either the
            java.io.Serializable or java.io.Externalizable interfaces.</para>
      <para>Implementing the Serializable interface allows object serialization to
            save and restore the entire state of the object and it allows classes to
            evolve between the time the stream is written and the time it is read.  It
            automatically traverses references between objects, saving and restoring
            entire graphs.</para>
      <para>Serializable classes that require special handling during the
            serialization and deserialization process should implement the following
            methods:</para>
      <code lang="text/java">private void writeObject(java.io.ObjectOutputStream stream)
                throws IOException;
            private void readObject(java.io.ObjectInputStream stream)
                throws IOException, ClassNotFoundException;
            private void readObjectNoData()
                throws ObjectStreamException;
            </code>
      <para>The readObject method is responsible for reading and restoring the state
            of the object for its particular class using data written to the stream by
            the corresponding writeObject method.  The method does not need to concern
            itself with the state belonging to its superclasses or subclasses.  State is
            restored by reading data from the ObjectInputStream for the individual
            fields and making assignments to the appropriate fields of the object.
            Reading primitive data types is supported by DataInput.</para>
      <para>Any attempt to read object data which exceeds the boundaries of the
            custom data written by the corresponding writeObject method will cause an
            OptionalDataException to be thrown with an eof field value of true.
            Non-object reads which exceed the end of the allotted data will reflect the
            end of data in the same way that they would indicate the end of the stream:
            bytewise reads will return -1 as the byte read or number of bytes read, and
            primitive reads will throw EOFExceptions.  If there is no corresponding
            writeObject method, then the end of default serialized data marks the end of
            the allotted data.</para>
      <para>Primitive and object read calls issued from within a readExternal method
            behave in the same manner--if the stream is already positioned at the end of
            data written by the corresponding writeExternal method, object reads will
            throw OptionalDataExceptions with eof set to true, bytewise reads will
            return -1, and primitive reads will throw EOFExceptions.  Note that this
            behavior does not hold for streams written with the old
            <c>ObjectStreamConstants.PROTOCOL_VERSION_1</c> protocol, in which the
            end of data written by writeExternal methods is not demarcated, and hence
            cannot be detected.</para>
      <para>The readObjectNoData method is responsible for initializing the state of
            the object for its particular class in the event that the serialization
            stream does not list the given class as a superclass of the object being
            deserialized.  This may occur in cases where the receiving party uses a
            different version of the deserialized instance's class than the sending
            party, and the receiver's version extends classes that are not extended by
            the sender's version.  This may also occur if the serialization stream has
            been tampered; hence, readObjectNoData is useful for initializing
            deserialized objects properly despite a "hostile" or incomplete source
            stream.</para>
      <para>Serialization does not read or assign values to the fields of any object
            that does not implement the java.io.Serializable interface.  Subclasses of
            Objects that are not serializable can be serializable. In this case the
            non-serializable class must have a no-arg constructor to allow its fields to
            be initialized.  In this case it is the responsibility of the subclass to
            save and restore the state of the non-serializable class. It is frequently
            the case that the fields of that class are accessible (public, package, or
            protected) or that there are get and set methods that can be used to restore
            the state.</para>
      <para>Any exception that occurs while deserializing an object will be caught by
            the ObjectInputStream and abort the reading process.</para>
      <para>Implementing the Externalizable interface allows the object to assume
            complete control over the contents and format of the object's serialized
            form.  The methods of the Externalizable interface, writeExternal and
            readExternal, are called to save and restore the objects state.  When
            implemented by a class they can write and read their own state using all of
            the methods of ObjectOutput and ObjectInput.  It is the responsibility of
            the objects to handle any versioning that occurs.</para>
      <para>Enum constants are deserialized differently than ordinary serializable or
            externalizable objects.  The serialized form of an enum constant consists
            solely of its name; field values of the constant are not transmitted.  To
            deserialize an enum constant, ObjectInputStream reads the constant name from
            the stream; the deserialized constant is then obtained by calling the static
            method <c>Enum.valueOf(Class, String)</c> with the enum constant's
            base type and the received constant name as arguments.  Like other
            serializable or externalizable objects, enum constants can function as the
            targets of back references appearing subsequently in the serialization
            stream.  The process by which enum constants are deserialized cannot be
            customized: any class-specific readObject, readObjectNoData, and readResolve
            methods defined by enum types are ignored during deserialization.
            Similarly, any serialPersistentFields or serialVersionUID field declarations
            are also ignored--all enum types have a fixed serialVersionUID of 0L.</para>
      <para>Added in JDK1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/ObjectInputStream" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectInputStream();" />
      <MemberSignature Language="C#" Value="protected ObjectInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Provide a way for subclasses that are completely reimplementing
            ObjectInputStream to not have to allocate private data just used by this
            implementation of ObjectInputStream.</summary>
        <remarks>
          <para>Provide a way for subclasses that are completely reimplementing
            ObjectInputStream to not have to allocate private data just used by this
            implementation of ObjectInputStream.</para>
          <para>If there is a security manager installed, this method first calls the
            security manager's <c>checkPermission</c> method with the
            <c>SerializablePermission("enableSubclassImplementation")</c>
            permission to ensure it's ok to enable subclassing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#ObjectInputStream()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.ObjectInputStream()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs when creating this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (in As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectInputStream(System::IO::Stream ^ in);" />
      <MemberSignature Language="C#" Value="public ObjectInputStream (System.IO.Stream? in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="new Java.IO.ObjectInputStream : System.IO.Stream -&gt; Java.IO.ObjectInputStream" Usage="new Java.IO.ObjectInputStream in" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">input stream to read from</param>
        <summary>Creates an ObjectInputStream that reads from the specified InputStream.</summary>
        <remarks>
          <para>Creates an ObjectInputStream that reads from the specified InputStream.
            A serialization stream header is read from the stream and verified.
            This constructor will block until the corresponding ObjectOutputStream
            has written and flushed the header.</para>
          <para>If a security manager is installed, this constructor will check for
            the "enableSubclassImplementation" SerializablePermission when invoked
            directly or indirectly by the constructor of a subclass which overrides
            the ObjectInputStream.readFields or ObjectInputStream.readUnshared
            methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#ObjectInputStream(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading the stream header.</exception>
        <exception cref="T:Java.IO.StreamCorruptedException">if the source stream does not contain serialized objects that
             can be read.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectInputStream(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ObjectInputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.ObjectInputStream : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.ObjectInputStream" Usage="new Java.IO.ObjectInputStream (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultReadObject">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefaultReadObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefaultReadObject();" />
      <MemberSignature Language="C#" Value="public virtual void DefaultReadObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultReadObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.DefaultReadObject" />
      <MemberSignature Language="F#" Value="abstract member DefaultReadObject : unit -&gt; unit&#xA;override this.DefaultReadObject : unit -&gt; unit" Usage="objectInputStream.DefaultReadObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defaultReadObject", "()V", "GetDefaultReadObjectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defaultReadObject", "()V", "GetDefaultReadObjectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Read the non-static and non-transient fields of the current class from
            this stream.</summary>
        <remarks>
          <para>Read the non-static and non-transient fields of the current class from
            this stream.  This may only be called from the readObject method of the
            class being deserialized. It will throw the NotActiveException if it is
            called otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#defaultReadObject()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.defaultReadObject()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the object's class cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading the object data.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this method is not called from <c>readObject()</c>.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.DefaultWriteObject" />
      </Docs>
    </Member>
    <Member MemberName="EnableResolveObject">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableResolveObject (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableResolveObject(bool enable);" />
      <MemberSignature Language="C#" Value="protected virtual bool EnableResolveObject (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableResolveObject(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EnableResolveObject : bool -&gt; bool&#xA;override this.EnableResolveObject : bool -&gt; bool" Usage="objectInputStream.EnableResolveObject enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enableResolveObject", "(Z)Z", "GetEnableResolveObject_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enableResolveObject", "(Z)Z", "GetEnableResolveObject_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">true for enabling use of <c>resolveObject</c> for
                     every object being deserialized</param>
        <summary>Enable the stream to allow objects read from the stream to be replaced.</summary>
        <returns>the previous setting before this method was invoked</returns>
        <remarks>
          <para>Enable the stream to allow objects read from the stream to be replaced.
            When enabled, the resolveObject method is called for every object being
            deserialized.</para>
          <para>If <i>enable</i> is true, and there is a security manager installed,
            this method first calls the security manager's
            <c>checkPermission</c> method with the
            <c>SerializablePermission("enableSubstitution")</c> permission to
            ensure it's ok to enable the stream to allow objects read from the
            stream to be replaced.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#enableResolveObject(boolean)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.enableResolveObject(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.IO.ObjectInputStream.ResolveObject(Java.Lang.Object)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.ObjectInputStream.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.ObjectInputStream.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.Read" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="objectInputStream.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IObjectInput.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "()I", "GetReadHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "()I", "GetReadHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a byte of data.</summary>
        <returns>the byte read, or -1 if the end of the stream is reached.</returns>
        <remarks>
          <para>Reads a byte of data. This method will block if no input is available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#read()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.read()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadBoolean();" />
      <MemberSignature Language="C#" Value="public virtual bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadBoolean" />
      <MemberSignature Language="F#" Value="abstract member ReadBoolean : unit -&gt; bool&#xA;override this.ReadBoolean : unit -&gt; bool" Usage="objectInputStream.ReadBoolean " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadBoolean</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads in a boolean.</summary>
        <returns>the boolean read.</returns>
        <remarks>
          <para>Reads in a boolean.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readBoolean()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readBoolean()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::SByte ReadByte();" />
      <MemberSignature Language="C#" Value="public virtual sbyte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadByte" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; sbyte&#xA;override this.ReadByte : unit -&gt; sbyte" Usage="objectInputStream.ReadByte " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadByte</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readByte", "()B", "GetReadByteHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readByte", "()B", "GetReadByteHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an 8 bit byte.</summary>
        <returns>the 8 bit byte read.</returns>
        <remarks>
          <para>Reads an 8 bit byte.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readByte()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readByte()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char ReadChar();" />
      <MemberSignature Language="C#" Value="public virtual char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadChar" />
      <MemberSignature Language="F#" Value="abstract member ReadChar : unit -&gt; char&#xA;override this.ReadChar : unit -&gt; char" Usage="objectInputStream.ReadChar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadChar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readChar", "()C", "GetReadCharHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readChar", "()C", "GetReadCharHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a 16 bit char.</summary>
        <returns>the 16 bit char read.</returns>
        <remarks>
          <para>Reads a 16 bit char.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readChar()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readChar()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadClassDescriptor">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadClassDescriptor () As ObjectStreamClass" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::IO::ObjectStreamClass ^ ReadClassDescriptor();" />
      <MemberSignature Language="C#" Value="protected virtual Java.IO.ObjectStreamClass? ReadClassDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.IO.ObjectStreamClass ReadClassDescriptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadClassDescriptor" />
      <MemberSignature Language="F#" Value="abstract member ReadClassDescriptor : unit -&gt; Java.IO.ObjectStreamClass&#xA;override this.ReadClassDescriptor : unit -&gt; Java.IO.ObjectStreamClass" Usage="objectInputStream.ReadClassDescriptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readClassDescriptor", "()Ljava/io/ObjectStreamClass;", "GetReadClassDescriptorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readClassDescriptor", "()Ljava/io/ObjectStreamClass;", "GetReadClassDescriptorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectStreamClass</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Read a class descriptor from the serialization stream.</summary>
        <returns>the class descriptor read</returns>
        <remarks>
          <para>Read a class descriptor from the serialization stream.  This method is
            called when the ObjectInputStream expects a class descriptor as the next
            item in the serialization stream.  Subclasses of ObjectInputStream may
            override this method to read in class descriptors that have been written
            in non-standard formats (by subclasses of ObjectOutputStream which have
            overridden the <c>writeClassDescriptor</c> method).  By default,
            this method reads class descriptors according to the format defined in
            the Object Serialization specification.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readClassDescriptor()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readClassDescriptor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if a class for one of the objects cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadDouble();" />
      <MemberSignature Language="C#" Value="public virtual double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadDouble" />
      <MemberSignature Language="F#" Value="abstract member ReadDouble : unit -&gt; double&#xA;override this.ReadDouble : unit -&gt; double" Usage="objectInputStream.ReadDouble " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadDouble</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a 64 bit double.</summary>
        <returns>the 64 bit double read.</returns>
        <remarks>
          <para>Reads a 64 bit double.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readDouble()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readDouble()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadFields () As ObjectInputStream.GetField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::IO::ObjectInputStream::GetField ^ ReadFields();" />
      <MemberSignature Language="C#" Value="public virtual Java.IO.ObjectInputStream.GetField? ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.ObjectInputStream/GetField ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFields" />
      <MemberSignature Language="F#" Value="abstract member ReadFields : unit -&gt; Java.IO.ObjectInputStream.GetField&#xA;override this.ReadFields : unit -&gt; Java.IO.ObjectInputStream.GetField" Usage="objectInputStream.ReadFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFields", "()Ljava/io/ObjectInputStream$GetField;", "GetReadFieldsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFields", "()Ljava/io/ObjectInputStream$GetField;", "GetReadFieldsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectInputStream+GetField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the persistent fields from the stream and makes them available by
            name.</summary>
        <returns>the &lt;code&gt;GetField&lt;/code&gt; object representing the persistent
                     fields of the object being deserialized</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readFields()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readFields()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of an object being deserialized can not be
             found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from this stream.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this stream is currently not reading an object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFloat">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadFloat();" />
      <MemberSignature Language="C#" Value="public virtual float ReadFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFloat" />
      <MemberSignature Language="F#" Value="abstract member ReadFloat : unit -&gt; single&#xA;override this.ReadFloat : unit -&gt; single" Usage="objectInputStream.ReadFloat " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadFloat</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a 32 bit float.</summary>
        <returns>the 32 bit float read.</returns>
        <remarks>
          <para>Reads a 32 bit float.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readFloat()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readFloat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadFully (buf As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadFully(cli::array &lt;System::Byte&gt; ^ buf);" />
      <MemberSignature Language="C#" Value="public virtual void ReadFully (byte[]? buf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] buf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFully(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member ReadFully : byte[] -&gt; unit&#xA;override this.ReadFully : byte[] -&gt; unit" Usage="objectInputStream.ReadFully buf" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadFully(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buf">the buffer into which the data is read</param>
        <summary>Reads bytes, blocking until all bytes are read.</summary>
        <remarks>
          <para>Reads bytes, blocking until all bytes are read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readFully(byte[])" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readFully(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadFully (buf As Byte(), off As Integer, len As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadFully(cli::array &lt;System::Byte&gt; ^ buf, int off, int len);" />
      <MemberSignature Language="C#" Value="public virtual void ReadFully (byte[]? buf, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] buf, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFully(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ReadFully : byte[] * int * int -&gt; unit&#xA;override this.ReadFully : byte[] * int * int -&gt; unit" Usage="objectInputStream.ReadFully (buf, off, len)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadFully(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">the buffer into which the data is read</param>
        <param name="off">the start offset of the data</param>
        <param name="len">the maximum number of bytes to read</param>
        <summary>Reads bytes, blocking until all bytes are read.</summary>
        <remarks>
          <para>Reads bytes, blocking until all bytes are read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readFully(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readFully(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadInt();" />
      <MemberSignature Language="C#" Value="public virtual int ReadInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadInt" />
      <MemberSignature Language="F#" Value="abstract member ReadInt : unit -&gt; int&#xA;override this.ReadInt : unit -&gt; int" Usage="objectInputStream.ReadInt " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadInt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readInt", "()I", "GetReadIntHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readInt", "()I", "GetReadIntHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a 32 bit int.</summary>
        <returns>the 32 bit integer read.</returns>
        <remarks>
          <para>Reads a 32 bit int.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readInt()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readInt()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="C#" Value="public virtual string? ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadLine" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="objectInputStream.ReadLine " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadLine</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads in a line that has been terminated by a \n, \r, \r\n or EOF.</summary>
        <returns>a String copy of the line.</returns>
        <remarks>
          <para>Reads in a line that has been terminated by a \n, \r, \r\n or EOF.</para>
          <para>This member is deprecated. This method does not properly convert bytes to characters.
                     see DataInputStream for the details and alternatives.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readLine()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readLine()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLong">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadLong();" />
      <MemberSignature Language="C#" Value="public virtual long ReadLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadLong" />
      <MemberSignature Language="F#" Value="abstract member ReadLong : unit -&gt; int64&#xA;override this.ReadLong : unit -&gt; int64" Usage="objectInputStream.ReadLong " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadLong</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readLong", "()J", "GetReadLongHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readLong", "()J", "GetReadLongHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a 64 bit long.</summary>
        <returns>the read 64 bit long.</returns>
        <remarks>
          <para>Reads a 64 bit long.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readLong()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readLong()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="VB.NET" Value="Public Function ReadObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Object ^ ReadObject();" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? ReadObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadObject" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : unit -&gt; Java.Lang.Object&#xA;override this.ReadObject : unit -&gt; Java.Lang.Object" Usage="objectInputStream.ReadObject " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IObjectInput.ReadObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readObject", "()Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readObject", "()Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Read an object from the ObjectInputStream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Read an object from the ObjectInputStream.  The class of the object, the
            signature of the class, and the values of the non-transient and
            non-static fields of the class and all of its supertypes are read.
            Default deserializing for a class can be overridden using the writeObject
            and readObject methods.  Objects referenced by this object are read
            transitively so that a complete equivalent graph of objects is
            reconstructed by readObject.</para>
          <para>The root object is completely restored when all of its fields and the
            objects it references are completely restored.  At this point the object
            validation callbacks are executed in order based on their registered
            priorities. The callbacks are registered by objects (in the readObject
            special methods) as they are individually restored.</para>
          <para>Exceptions are thrown for problems with the InputStream and for
            classes that should not be deserialized.  All exceptions are fatal to
            the InputStream and leave it in an indeterminate state; it is up to the
            caller to ignore or recover the stream state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readObject()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readObject()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.OptionalDataException">if primitive data types were found instead of an object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadObjectOverride">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadObjectOverride () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Object ^ ReadObjectOverride();" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object? ReadObjectOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ReadObjectOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadObjectOverride" />
      <MemberSignature Language="F#" Value="abstract member ReadObjectOverride : unit -&gt; Java.Lang.Object&#xA;override this.ReadObjectOverride : unit -&gt; Java.Lang.Object" Usage="objectInputStream.ReadObjectOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readObjectOverride", "()Ljava/lang/Object;", "GetReadObjectOverrideHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readObjectOverride", "()Ljava/lang/Object;", "GetReadObjectOverrideHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is called by trusted subclasses of ObjectOutputStream that
            constructed ObjectOutputStream using the protected no-arg constructor.</summary>
        <returns>the Object read from the stream.</returns>
        <remarks>
          <para>This method is called by trusted subclasses of ObjectOutputStream that
            constructed ObjectOutputStream using the protected no-arg constructor.
            The subclass is expected to provide an override method with the modifier
            "final".</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readObjectOverride()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readObjectOverride()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.OptionalDataException">if primitive data types were found instead of an object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteObjectOverride(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadShort">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadShort () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual short ReadShort();" />
      <MemberSignature Language="C#" Value="public virtual short ReadShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadShort" />
      <MemberSignature Language="F#" Value="abstract member ReadShort : unit -&gt; int16&#xA;override this.ReadShort : unit -&gt; int16" Usage="objectInputStream.ReadShort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadShort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readShort", "()S", "GetReadShortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readShort", "()S", "GetReadShortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a 16 bit short.</summary>
        <returns>the 16 bit short read.</returns>
        <remarks>
          <para>Reads a 16 bit short.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readShort()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readShort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStreamHeader">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadStreamHeader ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadStreamHeader();" />
      <MemberSignature Language="C#" Value="protected virtual void ReadStreamHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadStreamHeader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadStreamHeader" />
      <MemberSignature Language="F#" Value="abstract member ReadStreamHeader : unit -&gt; unit&#xA;override this.ReadStreamHeader : unit -&gt; unit" Usage="objectInputStream.ReadStreamHeader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readStreamHeader", "()V", "GetReadStreamHeaderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readStreamHeader", "()V", "GetReadStreamHeaderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The readStreamHeader method is provided to allow subclasses to read and
            verify their own stream headers.</summary>
        <remarks>
          <para>The readStreamHeader method is provided to allow subclasses to read and
            verify their own stream headers. It reads and verifies the magic number
            and version number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readStreamHeader()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readStreamHeader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.StreamCorruptedException">if the source stream does not contain readable serialized
             objects.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnshared">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUnshared () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Object ^ ReadUnshared();" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ReadUnshared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadUnshared() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUnshared" />
      <MemberSignature Language="F#" Value="abstract member ReadUnshared : unit -&gt; Java.Lang.Object&#xA;override this.ReadUnshared : unit -&gt; Java.Lang.Object" Usage="objectInputStream.ReadUnshared " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUnshared", "()Ljava/lang/Object;", "GetReadUnsharedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUnshared", "()Ljava/lang/Object;", "GetReadUnsharedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an "unshared" object from the ObjectInputStream.</summary>
        <returns>reference to deserialized object</returns>
        <remarks>
          <para>Reads an "unshared" object from the ObjectInputStream.  This method is
            identical to readObject, except that it prevents subsequent calls to
            readObject and readUnshared from returning additional references to the
            deserialized instance obtained via this call.  Specifically:
            &lt;ul&gt;
              &lt;li&gt;If readUnshared is called to deserialize a back-reference (the
                  stream representation of an object which has been written
                  previously to the stream), an ObjectStreamException will be
                  thrown.
            
              &lt;li&gt;If readUnshared returns successfully, then any subsequent attempts
                  to deserialize back-references to the stream handle deserialized
                  by readUnshared will cause an ObjectStreamException to be thrown.
            &lt;/ul&gt;
            Deserializing an object via readUnshared invalidates the stream handle
            associated with the returned object.  Note that this in itself does not
            always guarantee that the reference returned by readUnshared is unique;
            the deserialized object may define a readResolve method which returns an
            object visible to other parties, or readUnshared may return a Class
            object or enum constant obtainable elsewhere in the stream or through
            external means. If the deserialized object defines a readResolve method
            and the invocation of that method returns an array, then readUnshared
            returns a shallow clone of that array; this guarantees that the returned
            array object is unique and cannot be obtained a second time from an
            invocation of readObject or readUnshared on the ObjectInputStream,
            even if the underlying data stream has been manipulated.</para>
          <para>ObjectInputStream subclasses which override this method can only be
            constructed in security contexts possessing the
            "enableSubclassImplementation" SerializablePermission; any attempt to
            instantiate such a subclass without this permission will cause a
            SecurityException to be thrown.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readUnshared()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readUnshared()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteUnshared(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedByte">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUnsignedByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadUnsignedByte();" />
      <MemberSignature Language="C#" Value="public virtual int ReadUnsignedByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUnsignedByte" />
      <MemberSignature Language="F#" Value="abstract member ReadUnsignedByte : unit -&gt; int&#xA;override this.ReadUnsignedByte : unit -&gt; int" Usage="objectInputStream.ReadUnsignedByte " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadUnsignedByte</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned 8 bit byte.</summary>
        <returns>the 8 bit byte read.</returns>
        <remarks>
          <para>Reads an unsigned 8 bit byte.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readUnsignedByte()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readUnsignedByte()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedShort">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUnsignedShort () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadUnsignedShort();" />
      <MemberSignature Language="C#" Value="public virtual int ReadUnsignedShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUnsignedShort" />
      <MemberSignature Language="F#" Value="abstract member ReadUnsignedShort : unit -&gt; int&#xA;override this.ReadUnsignedShort : unit -&gt; int" Usage="objectInputStream.ReadUnsignedShort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadUnsignedShort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned 16 bit short.</summary>
        <returns>the 16 bit short read.</returns>
        <remarks>
          <para>Reads an unsigned 16 bit short.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readUnsignedShort()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readUnsignedShort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUTF">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUTF () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadUTF();" />
      <MemberSignature Language="C#" Value="public virtual string? ReadUTF ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadUTF() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUTF" />
      <MemberSignature Language="F#" Value="abstract member ReadUTF : unit -&gt; string&#xA;override this.ReadUTF : unit -&gt; string" Usage="objectInputStream.ReadUTF " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadUTF</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a String in
            modified UTF-8
            format.</summary>
        <returns>the String.</returns>
        <remarks>
          <para>Reads a String in
            modified UTF-8
            format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#readUTF()" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.readUTF()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterValidation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterValidation (obj As IObjectInputValidation, prio As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterValidation(Java::IO::IObjectInputValidation ^ obj, int prio);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterValidation (Java.IO.IObjectInputValidation? obj, int prio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterValidation(class Java.IO.IObjectInputValidation obj, int32 prio) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.RegisterValidation(Java.IO.IObjectInputValidation,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RegisterValidation : Java.IO.IObjectInputValidation * int -&gt; unit&#xA;override this.RegisterValidation : Java.IO.IObjectInputValidation * int -&gt; unit" Usage="objectInputStream.RegisterValidation (obj, prio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerValidation", "(Ljava/io/ObjectInputValidation;I)V", "GetRegisterValidation_Ljava_io_ObjectInputValidation_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerValidation", "(Ljava/io/ObjectInputValidation;I)V", "GetRegisterValidation_Ljava_io_ObjectInputValidation_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.IO.IObjectInputValidation" />
        <Parameter Name="prio" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">the object to receive the validation callback.</param>
        <param name="prio">controls the order of callbacks;zero is a good default.
                     Use higher numbers to be called back earlier, lower numbers for
                     later callbacks. Within a priority, callbacks are processed in
                     no particular order.</param>
        <summary>Register an object to be validated before the graph is returned.</summary>
        <remarks>
          <para>Register an object to be validated before the graph is returned.  While
            similar to resolveObject these validations are called after the entire
            graph has been reconstituted.  Typically, a readObject method will
            register the object with the stream so that when all of the objects are
            restored a final set of validations can be performed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#registerValidation(java.io.ObjectInputValidation,%20int)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.registerValidation(java.io.ObjectInputValidation, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.InvalidObjectException">if <c>object</c> is <c>null</c>.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this stream is currently not reading objects. In that
             case, calling this method is not allowed.</exception>
        <altmember cref="M:Java.IO.IObjectInputValidation.ValidateObject" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClass">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveClass (desc As ObjectStreamClass) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Class ^ ResolveClass(Java::IO::ObjectStreamClass ^ desc);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class? ResolveClass (Java.IO.ObjectStreamClass? desc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class ResolveClass(class Java.IO.ObjectStreamClass desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ResolveClass(Java.IO.ObjectStreamClass)" />
      <MemberSignature Language="F#" Value="abstract member ResolveClass : Java.IO.ObjectStreamClass -&gt; Java.Lang.Class&#xA;override this.ResolveClass : Java.IO.ObjectStreamClass -&gt; Java.Lang.Class" Usage="objectInputStream.ResolveClass desc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveClass", "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;", "GetResolveClass_Ljava_io_ObjectStreamClass_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveClass", "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;", "GetResolveClass_Ljava_io_ObjectStreamClass_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desc" Type="Java.IO.ObjectStreamClass" />
      </Parameters>
      <Docs>
        <param name="desc">an instance of class <c>ObjectStreamClass</c></param>
        <summary>Load the local class equivalent of the specified stream class
            description.</summary>
        <returns>a <c>Class</c> object corresponding to <c>desc</c></returns>
        <remarks>
          <para>Load the local class equivalent of the specified stream class
            description.  Subclasses may implement this method to allow classes to
            be fetched from an alternate source.</para>
          <para>The corresponding method in <c>ObjectOutputStream</c> is
            <c>annotateClass</c>.  This method will be invoked only once for
            each unique class in the stream.  This method can be implemented by
            subclasses to use an alternate loading mechanism but must return a
            <c>Class</c> object. Once returned, if the class is not an array
            class, its serialVersionUID is compared to the serialVersionUID of the
            serialized class, and if there is a mismatch, the deserialization fails
            and an <c>InvalidClassException</c> is thrown.</para>
          <para>The default implementation of this method in
            <c>ObjectInputStream</c> returns the result of calling</para>
          <code lang="text/java">Class.forName(desc.getName(), false, loader)
            </code>
          <para>where <c>loader</c> is determined as follows: if there is a
            method on the current thread's stack whose declaring class was
            defined by a user-defined class loader (and was not a generated to
            implement reflective invocations), then <c>loader</c> is class
            loader corresponding to the closest such method to the currently
            executing frame; otherwise, <c>loader</c> is
            <c>null</c>. If this call results in a
            <c>ClassNotFoundException</c> and the name of the passed
            <c>ObjectStreamClass</c> instance is the Java language keyword
            for a primitive type or void, then the <c>Class</c> object
            representing that primitive type or void will be returned
            (e.g., an <c>ObjectStreamClass</c> with the name
            <c>"int"</c> will be resolved to <c>Integer.TYPE</c>).
            Otherwise, the <c>ClassNotFoundException</c> will be thrown to
            the caller of this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#resolveClass(java.io.ObjectStreamClass)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class for an object cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while creating the class.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveObject">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveObject (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Object ^ ResolveObject(Java::Lang::Object ^ obj);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object? ResolveObject (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ResolveObject(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ResolveObject(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member ResolveObject : Java.Lang.Object -&gt; Java.Lang.Object&#xA;override this.ResolveObject : Java.Lang.Object -&gt; Java.Lang.Object" Usage="objectInputStream.ResolveObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveObject", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetResolveObject_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveObject", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetResolveObject_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">object to be substituted</param>
        <summary>This method will allow trusted subclasses of ObjectInputStream to
            substitute one object for another during deserialization.</summary>
        <returns>the substituted object</returns>
        <remarks>
          <para>This method will allow trusted subclasses of ObjectInputStream to
            substitute one object for another during deserialization. Replacing
            objects is disabled until enableResolveObject is called. The
            enableResolveObject method checks that the stream requesting to resolve
            object can be trusted. Every reference to serializable objects is passed
            to resolveObject.  To insure that the private state of objects is not
            unintentionally exposed only trusted streams may use resolveObject.</para>
          <para>This method is called after an object has been read but before it is
            returned from readObject.  The default resolveObject method just returns
            the same object.</para>
          <para>When a subclass is replacing objects it must insure that the
            substituted object is compatible with every field where the reference
            will be stored.  Objects whose type is not a subclass of the type of the
            field or array element abort the serialization by raising an exception
            and the object is not be stored.</para>
          <para>This method is called only once when each object is first
            encountered.  All subsequent references to the object will be redirected
            to the new object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#resolveObject(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.resolveObject(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs while creating the replacement
             object.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.ReplaceObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProxyClass">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveProxyClass (interfaces As String()) As Class" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Lang::Class ^ ResolveProxyClass(cli::array &lt;System::String ^&gt; ^ interfaces);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class? ResolveProxyClass (string[]? interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class ResolveProxyClass(string[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ResolveProxyClass(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member ResolveProxyClass : string[] -&gt; Java.Lang.Class&#xA;override this.ResolveProxyClass : string[] -&gt; Java.Lang.Class" Usage="objectInputStream.ResolveProxyClass interfaces" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveProxyClass", "([Ljava/lang/String;)Ljava/lang/Class;", "GetResolveProxyClass_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveProxyClass", "([Ljava/lang/String;)Ljava/lang/Class;", "GetResolveProxyClass_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaces" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="interfaces">the list of interface names that were
                           deserialized in the proxy class descriptor</param>
        <summary>Returns a proxy class that implements the interfaces named in a proxy
            class descriptor; subclasses may implement this method to read custom
            data from the stream along with the descriptors for dynamic proxy
            classes, allowing them to use an alternate loading mechanism for the
            interfaces and the proxy class.</summary>
        <returns>a proxy class for the specified interfaces</returns>
        <remarks>
          <para>Returns a proxy class that implements the interfaces named in a proxy
            class descriptor; subclasses may implement this method to read custom
            data from the stream along with the descriptors for dynamic proxy
            classes, allowing them to use an alternate loading mechanism for the
            interfaces and the proxy class.</para>
          <para>This method is called exactly once for each unique proxy class
            descriptor in the stream.</para>
          <para>The corresponding method in <c>ObjectOutputStream</c> is
            <c>annotateProxyClass</c>.  For a given subclass of
            <c>ObjectInputStream</c> that overrides this method, the
            <c>annotateProxyClass</c> method in the corresponding subclass of
            <c>ObjectOutputStream</c> must write any data or objects read by
            this method.</para>
          <para>The default implementation of this method in
            <c>ObjectInputStream</c> returns the result of calling
            <c>Proxy.getProxyClass</c> with the list of <c>Class</c>
            objects for the interfaces that are named in the <c>interfaces</c>
            parameter.  The <c>Class</c> object for each interface name
            <c>i</c> is the value returned by calling</para>
          <code lang="text/java">Class.forName(i, false, loader)
            </code>
          <para>where <c>loader</c> is that of the first non-<c>null</c>
            class loader up the execution stack, or <c>null</c> if no
            non-<c>null</c> class loaders are on the stack (the same class
            loader choice used by the <c>resolveClass</c> method).  Unless any
            of the resolved interfaces are non-public, this same value of
            <c>loader</c> is also the class loader passed to
            <c>Proxy.getProxyClass</c>; if non-public interfaces are present,
            their class loader is passed instead (if more than one non-public
            interface class loader is encountered, an
            <c>IllegalAccessError</c> is thrown).
            If <c>Proxy.getProxyClass</c> throws an
            <c>IllegalArgumentException</c>, <c>resolveProxyClass</c>
            will throw a <c>ClassNotFoundException</c> containing the
            <c>IllegalArgumentException</c>.</para>
          <para>Added in 1.3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#resolveProxyClass(java.lang.String[])" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.resolveProxyClass(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the proxy class or any of the specified interfaces cannot
             be created.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipBytes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SkipBytes (len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int SkipBytes(int len);" />
      <MemberSignature Language="C#" Value="public virtual int SkipBytes (int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SkipBytes(int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.SkipBytes(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SkipBytes : int -&gt; int&#xA;override this.SkipBytes : int -&gt; int" Usage="objectInputStream.SkipBytes len" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.SkipBytes(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="len">the number of bytes to be skipped</param>
        <summary>Skips bytes.</summary>
        <returns>the actual number of bytes skipped.</returns>
        <remarks>
          <para>Skips bytes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/ObjectInputStream#skipBytes(int)" title="Reference documentation">Java documentation for <code>java.io.ObjectInputStream.skipBytes(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while skipping bytes on the source stream.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the source stream is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.ObjectInputStream.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.ObjectInputStream.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.ObjectInputStream.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.ObjectInputStream.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
