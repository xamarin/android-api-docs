<Type Name="StreamTokenizer" FullName="Java.IO.StreamTokenizer">
  <TypeSignature Language="C#" Value="public class StreamTokenizer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamTokenizer extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.IO.StreamTokenizer" />
  <TypeSignature Language="F#" Value="type StreamTokenizer = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/StreamTokenizer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/StreamTokenizer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>StreamTokenizer</c> class takes an input stream and
            parses it into "tokens", allowing the tokens to be
            read one at a time.</summary>
    <remarks>
      <para>The <c>StreamTokenizer</c> class takes an input stream and
            parses it into "tokens", allowing the tokens to be
            read one at a time. The parsing process is controlled by a table
            and a number of flags that can be set to various states. The
            stream tokenizer can recognize identifiers, numbers, quoted
            strings, and various comment styles.</para>
      <para>Each byte read from the input stream is regarded as a character
            in the range <c>'\u005Cu0000'</c> through <c>'\u005Cu00FF'</c>.
            The character value is used to look up five possible attributes of
            the character: <i>white space</i>, <i>alphabetic</i>,
            <i>numeric</i>, <i>string quote</i>, and <i>comment character</i>.
            Each character can have zero or more of these attributes.</para>
      <para>In addition, an instance has four flags. These flags indicate:
            &lt;ul&gt;
            &lt;li&gt;Whether line terminators are to be returned as tokens or treated
                as white space that merely separates tokens.
            &lt;li&gt;Whether C-style comments are to be recognized and skipped.
            &lt;li&gt;Whether C++-style comments are to be recognized and skipped.
            &lt;li&gt;Whether the characters of identifiers are converted to lowercase.
            &lt;/ul&gt;</para>
      <para>A typical application first constructs an instance of this class,
            sets up the syntax tables, and then repeatedly loops calling the
            <c>nextToken</c> method in each iteration of the loop until
            it returns the value <c>TT_EOF</c>.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/StreamTokenizer" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamTokenizer (Java.IO.Reader? r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.#ctor(Java.IO.Reader)" />
      <MemberSignature Language="F#" Value="new Java.IO.StreamTokenizer : Java.IO.Reader -&gt; Java.IO.StreamTokenizer" Usage="new Java.IO.StreamTokenizer r" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="r" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="r">a Reader object providing the input stream.</param>
        <summary>Create a tokenizer that parses the given character stream.</summary>
        <remarks>
          <para>Create a tokenizer that parses the given character stream.</para>
          <para>Added in 1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#StreamTokenizer(java.io.Reader)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.StreamTokenizer(java.io.Reader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamTokenizer (System.IO.Stream? is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="new Java.IO.StreamTokenizer : System.IO.Stream -&gt; Java.IO.StreamTokenizer" Usage="new Java.IO.StreamTokenizer is" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">an input stream.</param>
        <summary>Creates a stream tokenizer that parses the specified input
            stream.</summary>
        <remarks>
          <para>Creates a stream tokenizer that parses the specified input
            stream. The stream tokenizer is initialized to the following
            default state:
            &lt;ul&gt;
            &lt;li&gt;All byte values <c>'A'</c> through <c>'Z'</c>,
                <c>'a'</c> through <c>'z'</c>, and
                <c>'\u005Cu00A0'</c> through <c>'\u005Cu00FF'</c> are
                considered to be alphabetic.
            &lt;li&gt;All byte values <c>'\u005Cu0000'</c> through
                <c>'\u005Cu0020'</c> are considered to be white space.
            &lt;li&gt;<c>'/'</c> is a comment character.
            &lt;li&gt;Single quote <c>'\u005C''</c> and double quote <c>'"'</c>
                are string quote characters.
            &lt;li&gt;Numbers are parsed.
            &lt;li&gt;Ends of lines are treated as white space, not as separate tokens.
            &lt;li&gt;C-style and C++-style comments are not recognized.
            &lt;/ul&gt;</para>
          <para>This member is deprecated. As of JDK version 1.1, the preferred way to tokenize an
            input stream is to convert it into a character stream, for example:
            &lt;blockquote&gt;&lt;pre&gt;
              Reader r = new BufferedReader(new InputStreamReader(is));
              StreamTokenizer st = new StreamTokenizer(r);
            &lt;/pre&gt;&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#StreamTokenizer(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.StreamTokenizer(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>is</c> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamTokenizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.StreamTokenizer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.StreamTokenizer" Usage="new Java.IO.StreamTokenizer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentChar">
      <MemberSignature Language="C#" Value="public virtual void CommentChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommentChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.CommentChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CommentChar : int -&gt; unit&#xA;override this.CommentChar : int -&gt; unit" Usage="streamTokenizer.CommentChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("commentChar", "(I)V", "GetCommentChar_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commentChar", "(I)V", "GetCommentChar_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character.</param>
        <summary>Specified that the character argument starts a single-line
            comment.</summary>
        <remarks>
          <para>Specified that the character argument starts a single-line
            comment. All characters from the comment character to the end of
            the line are ignored by this stream tokenizer.</para>
          <para>Any other attribute settings for the specified character are cleared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#commentChar(int)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.commentChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EolIsSignificant">
      <MemberSignature Language="C#" Value="public virtual void EolIsSignificant (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EolIsSignificant(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.EolIsSignificant(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EolIsSignificant : bool -&gt; unit&#xA;override this.EolIsSignificant : bool -&gt; unit" Usage="streamTokenizer.EolIsSignificant flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eolIsSignificant", "(Z)V", "GetEolIsSignificant_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("eolIsSignificant", "(Z)V", "GetEolIsSignificant_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> indicates that end-of-line characters
                            are separate tokens; <c>false</c> indicates that
                            end-of-line characters are white space.</param>
        <summary>Determines whether or not ends of line are treated as tokens.</summary>
        <remarks>
          <para>Determines whether or not ends of line are treated as tokens.
            If the flag argument is true, this tokenizer treats end of lines
            as tokens; the <c>nextToken</c> method returns
            <c>TT_EOL</c> and also sets the <c>ttype</c> field to
            this value when an end of line is read.</para>
          <para>A line is a sequence of characters ending with either a
            carriage-return character (<c>'\u005Cr'</c>) or a newline
            character (<c>'\u005Cn'</c>). In addition, a carriage-return
            character followed immediately by a newline character is treated
            as a single end-of-line token.</para>
          <para>If the <c>flag</c> is false, end-of-line characters are
            treated as white space and serve only to separate tokens.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#eolIsSignificant(boolean)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.eolIsSignificant(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.StreamTokenizer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lineno">
      <MemberSignature Language="C#" Value="public virtual int Lineno ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Lineno() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.Lineno" />
      <MemberSignature Language="F#" Value="abstract member Lineno : unit -&gt; int&#xA;override this.Lineno : unit -&gt; int" Usage="streamTokenizer.Lineno " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lineno", "()I", "GetLinenoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lineno", "()I", "GetLinenoHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the current line number.</summary>
        <returns>the current line number of this stream tokenizer.</returns>
        <remarks>
          <para>Return the current line number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#lineno()" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.lineno()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowerCaseMode">
      <MemberSignature Language="C#" Value="public virtual void LowerCaseMode (bool fl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LowerCaseMode(bool fl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.LowerCaseMode(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member LowerCaseMode : bool -&gt; unit&#xA;override this.LowerCaseMode : bool -&gt; unit" Usage="streamTokenizer.LowerCaseMode fl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lowerCaseMode", "(Z)V", "GetLowerCaseMode_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lowerCaseMode", "(Z)V", "GetLowerCaseMode_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fl" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fl">
          <c>true</c> indicates that all word tokens should
                          be lowercased.</param>
        <summary>Determines whether or not word token are automatically lowercased.</summary>
        <remarks>
          <para>Determines whether or not word token are automatically lowercased.
            If the flag argument is <c>true</c>, then the value in the
            <c>sval</c> field is lowercased whenever a word token is
            returned (the <c>ttype</c> field has the
            value <c>TT_WORD</c> by the <c>nextToken</c> method
            of this tokenizer.</para>
          <para>If the flag argument is <c>false</c>, then the
            <c>sval</c> field is not modified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#lowerCaseMode(boolean)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.lowerCaseMode(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="C#" Value="public virtual Java.IO.TokenType NextToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Java.IO.TokenType NextToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.NextToken" />
      <MemberSignature Language="F#" Value="abstract member NextToken : unit -&gt; Java.IO.TokenType&#xA;override this.NextToken : unit -&gt; Java.IO.TokenType" Usage="streamTokenizer.NextToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Parses the next token from the input stream of this tokenizer.</summary>
        <returns>the value of the <c>ttype</c> field.</returns>
        <remarks>
          <para>Parses the next token from the input stream of this tokenizer.
            The type of the next token is returned in the <c>ttype</c>
            field. Additional information about the token may be in the
            <c>nval</c> field or the <c>sval</c> field of this
            tokenizer.</para>
          <para>Typical clients of this
            class first set up the syntax tables and then sit in a loop
            calling nextToken to parse successive tokens until TT_EOF
            is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#nextToken()" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.nextToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while parsing the next token.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Nval">
      <MemberSignature Language="C#" Value="public double Nval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Nval" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.Nval" />
      <MemberSignature Language="F#" Value="member this.Nval : double with get, set" Usage="Java.IO.StreamTokenizer.Nval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nval")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nval")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the current token is a number, this field contains the value
            of that number.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the current token is a number, this field contains the value
            of that number. The current token is a number when the value of
            the <c>ttype</c> field is <c>TT_NUMBER</c>.</para>
          <para>The initial value of this field is 0.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#nval" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.nval</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OrdinaryChar">
      <MemberSignature Language="C#" Value="public virtual void OrdinaryChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrdinaryChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.OrdinaryChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OrdinaryChar : int -&gt; unit&#xA;override this.OrdinaryChar : int -&gt; unit" Usage="streamTokenizer.OrdinaryChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ordinaryChar", "(I)V", "GetOrdinaryChar_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ordinaryChar", "(I)V", "GetOrdinaryChar_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character.</param>
        <summary>Specifies that the character argument is "ordinary"
            in this tokenizer.</summary>
        <remarks>
          <para>Specifies that the character argument is "ordinary"
            in this tokenizer. It removes any special significance the
            character has as a comment character, word component, string
            delimiter, white space, or number character. When such a character
            is encountered by the parser, the parser treats it as a
            single-character token and sets <c>ttype</c> field to the
            character value.</para>
          <para>Making a line terminator character "ordinary" may interfere
            with the ability of a <c>StreamTokenizer</c> to count
            lines. The <c>lineno</c> method may no longer reflect
            the presence of such terminator characters in its line count.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#ordinaryChar(int)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.ordinaryChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OrdinaryChars">
      <MemberSignature Language="C#" Value="public virtual void OrdinaryChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrdinaryChars(int32 low, int32 hi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.OrdinaryChars(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OrdinaryChars : int * int -&gt; unit&#xA;override this.OrdinaryChars : int * int -&gt; unit" Usage="streamTokenizer.OrdinaryChars (low, hi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ordinaryChars", "(II)V", "GetOrdinaryChars_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ordinaryChars", "(II)V", "GetOrdinaryChars_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the low end of the range.</param>
        <param name="hi">the high end of the range.</param>
        <summary>Specifies that all characters <i>c</i> in the range
            <c>low&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;i&gt;c&lt;/i&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;high</c>
            are "ordinary" in this tokenizer.</summary>
        <remarks>
          <para>Specifies that all characters <i>c</i> in the range
            <c>low&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;i&gt;c&lt;/i&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;high</c>
            are "ordinary" in this tokenizer. See the
            <c>ordinaryChar</c> method for more information on a
            character being ordinary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#ordinaryChars(int,%20int)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.ordinaryChars(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseNumbers">
      <MemberSignature Language="C#" Value="public virtual void ParseNumbers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseNumbers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.ParseNumbers" />
      <MemberSignature Language="F#" Value="abstract member ParseNumbers : unit -&gt; unit&#xA;override this.ParseNumbers : unit -&gt; unit" Usage="streamTokenizer.ParseNumbers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseNumbers", "()V", "GetParseNumbersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseNumbers", "()V", "GetParseNumbersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies that numbers should be parsed by this tokenizer.</summary>
        <remarks>
          <para>Specifies that numbers should be parsed by this tokenizer. The
            syntax table of this tokenizer is modified so that each of the twelve
            characters:
            &lt;blockquote&gt;</para>
          <code lang="text/java">0 1 2 3 4 5 6 7 8 9 . -
            </code>
          <para>&lt;/blockquote&gt;</para>
          <para>has the "numeric" attribute.</para>
          <para>When the parser encounters a word token that has the format of a
            double precision floating-point number, it treats the token as a
            number rather than a word, by setting the <c>ttype</c>
            field to the value <c>TT_NUMBER</c> and putting the numeric
            value of the token into the <c>nval</c> field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#parseNumbers()" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.parseNumbers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PushBack">
      <MemberSignature Language="C#" Value="public virtual void PushBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.PushBack" />
      <MemberSignature Language="F#" Value="abstract member PushBack : unit -&gt; unit&#xA;override this.PushBack : unit -&gt; unit" Usage="streamTokenizer.PushBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pushBack", "()V", "GetPushBackHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pushBack", "()V", "GetPushBackHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the next call to the <c>nextToken</c> method of this
            tokenizer to return the current value in the <c>ttype</c>
            field, and not to modify the value in the <c>nval</c> or
            <c>sval</c> field.</summary>
        <remarks>
          <para>Causes the next call to the <c>nextToken</c> method of this
            tokenizer to return the current value in the <c>ttype</c>
            field, and not to modify the value in the <c>nval</c> or
            <c>sval</c> field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#pushBack()" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.pushBack()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual void QuoteChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuoteChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.QuoteChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member QuoteChar : int -&gt; unit&#xA;override this.QuoteChar : int -&gt; unit" Usage="streamTokenizer.QuoteChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quoteChar", "(I)V", "GetQuoteChar_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quoteChar", "(I)V", "GetQuoteChar_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character.</param>
        <summary>Specifies that matching pairs of this character delimit string
            constants in this tokenizer.</summary>
        <remarks>
          <para>Specifies that matching pairs of this character delimit string
            constants in this tokenizer.</para>
          <para>When the <c>nextToken</c> method encounters a string
            constant, the <c>ttype</c> field is set to the string
            delimiter and the <c>sval</c> field is set to the body of
            the string.</para>
          <para>If a string quote character is encountered, then a string is
            recognized, consisting of all characters after (but not including)
            the string quote character, up to (but not including) the next
            occurrence of that same string quote character, or a line
            terminator, or end of file. The usual escape sequences such as
            <c>"\u005Cn"</c> and <c>"\u005Ct"</c> are recognized and
            converted to single characters as the string is parsed.</para>
          <para>Any other attribute settings for the specified character are cleared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#quoteChar(int)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.quoteChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetSyntax">
      <MemberSignature Language="C#" Value="public virtual void ResetSyntax ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetSyntax() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.ResetSyntax" />
      <MemberSignature Language="F#" Value="abstract member ResetSyntax : unit -&gt; unit&#xA;override this.ResetSyntax : unit -&gt; unit" Usage="streamTokenizer.ResetSyntax " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resetSyntax", "()V", "GetResetSyntaxHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resetSyntax", "()V", "GetResetSyntaxHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this tokenizer's syntax table so that all characters are
            "ordinary.</summary>
        <remarks>
          <para>Resets this tokenizer's syntax table so that all characters are
            "ordinary." See the <c>ordinaryChar</c> method
            for more information on a character being ordinary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#resetSyntax()" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.resetSyntax()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SlashSlashComments">
      <MemberSignature Language="C#" Value="public virtual void SlashSlashComments (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SlashSlashComments(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.SlashSlashComments(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SlashSlashComments : bool -&gt; unit&#xA;override this.SlashSlashComments : bool -&gt; unit" Usage="streamTokenizer.SlashSlashComments flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slashSlashComments", "(Z)V", "GetSlashSlashComments_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slashSlashComments", "(Z)V", "GetSlashSlashComments_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> indicates to recognize and ignore
                            C++-style comments.</param>
        <summary>Determines whether or not the tokenizer recognizes C++-style comments.</summary>
        <remarks>
          <para>Determines whether or not the tokenizer recognizes C++-style comments.
            If the flag argument is <c>true</c>, this stream tokenizer
            recognizes C++-style comments. Any occurrence of two consecutive
            slash characters (<c>'/'</c>) is treated as the beginning of
            a comment that extends to the end of the line.</para>
          <para>If the flag argument is <c>false</c>, then C++-style
            comments are not treated specially.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#slashSlashComments(boolean)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.slashSlashComments(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SlashStarComments">
      <MemberSignature Language="C#" Value="public virtual void SlashStarComments (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SlashStarComments(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.SlashStarComments(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SlashStarComments : bool -&gt; unit&#xA;override this.SlashStarComments : bool -&gt; unit" Usage="streamTokenizer.SlashStarComments flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("slashStarComments", "(Z)V", "GetSlashStarComments_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("slashStarComments", "(Z)V", "GetSlashStarComments_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> indicates to recognize and ignore
                            C-style comments.</param>
        <summary>Determines whether or not the tokenizer recognizes C-style comments.</summary>
        <remarks>
          <para>Determines whether or not the tokenizer recognizes C-style comments.
            If the flag argument is <c>true</c>, this stream tokenizer
            recognizes C-style comments. All text between successive
            occurrences of <c>/*</c> and <c>*&amp;#47;</c> are discarded.</para>
          <para>If the flag argument is <c>false</c>, then C-style comments
            are not treated specially.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#slashStarComments(boolean)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.slashStarComments(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sval">
      <MemberSignature Language="C#" Value="public string? Sval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sval" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.Sval" />
      <MemberSignature Language="F#" Value="member this.Sval : string with get, set" Usage="Java.IO.StreamTokenizer.Sval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sval")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sval")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the current token is a word token, this field contains a
            string giving the characters of the word token.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the current token is a word token, this field contains a
            string giving the characters of the word token. When the current
            token is a quoted string token, this field contains the body of
            the string.</para>
          <para>The current token is a word when the value of the
            <c>ttype</c> field is <c>TT_WORD</c>. The current token is
            a quoted string token when the value of the <c>ttype</c> field is
            a quote character.</para>
          <para>The initial value of this field is null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#sval" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.sval</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.StreamTokenizer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.StreamTokenizer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TtEof">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtEof = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtEof = (-1)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtEof" />
      <MemberSignature Language="F#" Value="val mutable TtEof : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtEof" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TT_EOF")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TT_EOF")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>A constant indicating that the end of the stream has been read.</summary>
        <remarks>
          <para>A constant indicating that the end of the stream has been read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#TT_EOF" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.TT_EOF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtEol">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtEol = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtEol = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtEol" />
      <MemberSignature Language="F#" Value="val mutable TtEol : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtEol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TT_EOL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TT_EOL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>A constant indicating that the end of the line has been read.</summary>
        <remarks>
          <para>A constant indicating that the end of the line has been read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#TT_EOL" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.TT_EOL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtNumber">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtNumber = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtNumber = (-2)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtNumber" />
      <MemberSignature Language="F#" Value="val mutable TtNumber : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TT_NUMBER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TT_NUMBER")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>A constant indicating that a number token has been read.</summary>
        <remarks>
          <para>A constant indicating that a number token has been read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#TT_NUMBER" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.TT_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtWord">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtWord = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtWord = (-3)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtWord" />
      <MemberSignature Language="F#" Value="val mutable TtWord : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtWord" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TT_WORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TT_WORD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>A constant indicating that a word token has been read.</summary>
        <remarks>
          <para>A constant indicating that a word token has been read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#TT_WORD" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.TT_WORD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ttype">
      <MemberSignature Language="C#" Value="public Java.IO.TokenType Ttype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Java.IO.TokenType Ttype" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.Ttype" />
      <MemberSignature Language="F#" Value="member this.Ttype : Java.IO.TokenType with get, set" Usage="Java.IO.StreamTokenizer.Ttype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ttype")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ttype")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>After a call to the <c>nextToken</c> method, this field
            contains the type of the token just read.</summary>
        <value>To be added.</value>
        <remarks>
          <para>After a call to the <c>nextToken</c> method, this field
            contains the type of the token just read. For a single character
            token, its value is the single character, converted to an integer.
            For a quoted string token, its value is the quote character.
            Otherwise, its value is one of the following:
            &lt;ul&gt;
            &lt;li&gt;<c>TT_WORD</c> indicates that the token is a word.
            &lt;li&gt;<c>TT_NUMBER</c> indicates that the token is a number.
            &lt;li&gt;<c>TT_EOL</c> indicates that the end of line has been read.
                The field can only have this value if the
                <c>eolIsSignificant</c> method has been called with the
                argument <c>true</c>.
            &lt;li&gt;<c>TT_EOF</c> indicates that the end of the input stream
                has been reached.
            &lt;/ul&gt;</para>
          <para>The initial value of this field is -4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#ttype" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.ttype</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceChars">
      <MemberSignature Language="C#" Value="public virtual void WhitespaceChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WhitespaceChars(int32 low, int32 hi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.WhitespaceChars(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WhitespaceChars : int * int -&gt; unit&#xA;override this.WhitespaceChars : int * int -&gt; unit" Usage="streamTokenizer.WhitespaceChars (low, hi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("whitespaceChars", "(II)V", "GetWhitespaceChars_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("whitespaceChars", "(II)V", "GetWhitespaceChars_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the low end of the range.</param>
        <param name="hi">the high end of the range.</param>
        <summary>Specifies that all characters <i>c</i> in the range
            <c>low&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;i&gt;c&lt;/i&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;high</c>
            are white space characters.</summary>
        <remarks>
          <para>Specifies that all characters <i>c</i> in the range
            <c>low&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;i&gt;c&lt;/i&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;high</c>
            are white space characters. White space characters serve only to
            separate tokens in the input stream.</para>
          <para>Any other attribute settings for the characters in the specified
            range are cleared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#whitespaceChars(int,%20int)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.whitespaceChars(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WordChars">
      <MemberSignature Language="C#" Value="public virtual void WordChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WordChars(int32 low, int32 hi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.WordChars(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WordChars : int * int -&gt; unit&#xA;override this.WordChars : int * int -&gt; unit" Usage="streamTokenizer.WordChars (low, hi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wordChars", "(II)V", "GetWordChars_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wordChars", "(II)V", "GetWordChars_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the low end of the range.</param>
        <param name="hi">the high end of the range.</param>
        <summary>Specifies that all characters <i>c</i> in the range
            <c>low&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;i&gt;c&lt;/i&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;high</c>
            are word constituents.</summary>
        <remarks>
          <para>Specifies that all characters <i>c</i> in the range
            <c>low&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;i&gt;c&lt;/i&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;high</c>
            are word constituents. A word token consists of a word constituent
            followed by zero or more word constituents or number constituents.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/StreamTokenizer#wordChars(int,%20int)" title="Reference documentation">Java documentation for <code>java.io.StreamTokenizer.wordChars(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
