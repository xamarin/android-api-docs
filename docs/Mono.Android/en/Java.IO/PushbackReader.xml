<Type Name="PushbackReader" FullName="Java.IO.PushbackReader">
  <TypeSignature Language="C#" Value="public class PushbackReader : Java.IO.FilterReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PushbackReader extends Java.IO.FilterReader" />
  <TypeSignature Language="DocId" Value="T:Java.IO.PushbackReader" />
  <TypeSignature Language="F#" Value="type PushbackReader = class&#xA;    inherit FilterReader" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.FilterReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/PushbackReader", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/PushbackReader", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A character-stream reader that allows characters to be pushed back into the
            stream.</summary>
    <remarks>
      <para>A character-stream reader that allows characters to be pushed back into the
            stream.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/PushbackReader" title="Reference documentation">Java documentation for <code>java.io.PushbackReader</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PushbackReader (Java.IO.Reader? in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.PushbackReader.#ctor(Java.IO.Reader)" />
      <MemberSignature Language="F#" Value="new Java.IO.PushbackReader : Java.IO.Reader -&gt; Java.IO.PushbackReader" Usage="new Java.IO.PushbackReader in" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="in">The reader from which characters will be read</param>
        <summary>Creates a new pushback reader with a one-character pushback buffer.</summary>
        <remarks>
          <para>Creates a new pushback reader with a one-character pushback buffer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/PushbackReader#PushbackReader(java.io.Reader)" title="Reference documentation">Java documentation for <code>java.io.PushbackReader.PushbackReader(java.io.Reader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PushbackReader (Java.IO.Reader? in, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader in, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.PushbackReader.#ctor(Java.IO.Reader,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.IO.PushbackReader : Java.IO.Reader * int -&gt; Java.IO.PushbackReader" Usage="new Java.IO.PushbackReader (in, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/Reader;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/Reader;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="Java.IO.Reader" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="in">The reader from which characters will be read</param>
        <param name="size">The size of the pushback buffer</param>
        <summary>Creates a new pushback reader with a pushback buffer of the given size.</summary>
        <remarks>
          <para>Creates a new pushback reader with a pushback buffer of the given size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/PushbackReader#PushbackReader(java.io.Reader,%20int)" title="Reference documentation">Java documentation for <code>java.io.PushbackReader.PushbackReader(java.io.Reader, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>size</c> is negative.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PushbackReader (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.PushbackReader.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.PushbackReader : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.PushbackReader" Usage="new Java.IO.PushbackReader (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.PushbackReader.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.PushbackReader.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.PushbackReader.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.PushbackReader.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.PushbackReader.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.PushbackReader.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public virtual void Unread (char[]? cbuf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unread(char[] cbuf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.PushbackReader.Unread(System.Char[])" />
      <MemberSignature Language="F#" Value="abstract member Unread : char[] -&gt; unit&#xA;override this.Unread : char[] -&gt; unit" Usage="pushbackReader.Unread cbuf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unread", "([C)V", "GetUnread_arrayCHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unread", "([C)V", "GetUnread_arrayCHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="cbuf">Character array to push back</param>
        <summary>Pushes back an array of characters by copying it to the front of the
            pushback buffer.</summary>
        <remarks>
          <para>Pushes back an array of characters by copying it to the front of the
            pushback buffer.  After this method returns, the next character to be
            read will have the value <c>cbuf[0]</c>, the character after that
            will have the value <c>cbuf[1]</c>, and so forth.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/PushbackReader#unread(char[])" title="Reference documentation">Java documentation for <code>java.io.PushbackReader.unread(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this reader is closed or the free space in the internal
             pushback buffer is not sufficient to store the contents of
             <c>buffer</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public virtual void Unread (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unread(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.PushbackReader.Unread(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Unread : int -&gt; unit&#xA;override this.Unread : int -&gt; unit" Usage="pushbackReader.Unread c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unread", "(I)V", "GetUnread_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unread", "(I)V", "GetUnread_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">The int value representing a character to be pushed back</param>
        <summary>Pushes back a single character by copying it to the front of the
            pushback buffer.</summary>
        <remarks>
          <para>Pushes back a single character by copying it to the front of the
            pushback buffer. After this method returns, the next character to be read
            will have the value <c>(char)c</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/PushbackReader#unread(int)" title="Reference documentation">Java documentation for <code>java.io.PushbackReader.unread(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this reader is closed or the internal pushback buffer is
             full.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public virtual void Unread (char[]? cbuf, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unread(char[] cbuf, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.PushbackReader.Unread(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Unread : char[] * int * int -&gt; unit&#xA;override this.Unread : char[] * int * int -&gt; unit" Usage="pushbackReader.Unread (cbuf, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unread", "([CII)V", "GetUnread_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unread", "([CII)V", "GetUnread_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cbuf" Type="System.Char[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cbuf">Character array</param>
        <param name="off">Offset of first character to push back</param>
        <param name="len">Number of characters to push back</param>
        <summary>Pushes back a portion of an array of characters by copying it to the
            front of the pushback buffer.</summary>
        <remarks>
          <para>Pushes back a portion of an array of characters by copying it to the
            front of the pushback buffer.  After this method returns, the next
            character to be read will have the value <c>cbuf[off]</c>, the
            character after that will have the value <c>cbuf[off+1]</c>, and
            so forth.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/PushbackReader#unread(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.io.PushbackReader.unread(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c> or <c>count </c>, or if
             <c>offset + count</c> is greater than the length of
             <c>buffer</c>.</exception>
        <exception cref="T:Java.IO.IOException">if this reader is closed or the free space in the internal
             pushback buffer is not sufficient to store the selected
             contents of <c>buffer</c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>buffer</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
