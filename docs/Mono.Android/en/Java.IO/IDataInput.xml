<Type Name="IDataInput" FullName="Java.IO.IDataInput">
  <TypeSignature Language="C#" Value="public interface IDataInput : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataInput implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.IDataInput" />
  <TypeSignature Language="F#" Value="type IDataInput = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/DataInput", "", "Java.IO.IDataInputInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/DataInput", "", "Java.IO.IDataInputInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>DataInput</c> interface provides
            for reading bytes from a binary stream and
            reconstructing from them data in any of
            the Java primitive types.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/DataInput" title="Reference documentation">Java documentation for <code>java.io.DataInput</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadBoolean" />
      <MemberSignature Language="F#" Value="abstract member ReadBoolean : unit -&gt; bool" Usage="iDataInput.ReadBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads one input byte and returns
            <c>true</c> if that byte is nonzero,
            <c>false</c> if that byte is zero.</summary>
        <returns>the <c>boolean</c> value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readBoolean()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readBoolean()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteBoolean(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public sbyte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadByte" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; sbyte" Usage="iDataInput.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readByte", "()B", "GetReadByteHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readByte", "()B", "GetReadByteHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads and returns one input byte.</summary>
        <returns>the 8-bit value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readByte()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readByte()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteByte(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadChar" />
      <MemberSignature Language="F#" Value="abstract member ReadChar : unit -&gt; char" Usage="iDataInput.ReadChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readChar", "()C", "GetReadCharHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readChar", "()C", "GetReadCharHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads two input bytes and returns a <c>char</c> value.</summary>
        <returns>the <c>char</c> value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readChar()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readChar()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteChar(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadDouble" />
      <MemberSignature Language="F#" Value="abstract member ReadDouble : unit -&gt; double" Usage="iDataInput.ReadDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads eight input bytes and returns
            a <c>double</c> value.</summary>
        <returns>the <c>double</c> value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readDouble()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readDouble()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteDouble(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ReadFloat">
      <MemberSignature Language="C#" Value="public float ReadFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadFloat" />
      <MemberSignature Language="F#" Value="abstract member ReadFloat : unit -&gt; single" Usage="iDataInput.ReadFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads four input bytes and returns
            a <c>float</c> value.</summary>
        <returns>the <c>float</c> value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readFloat()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readFloat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteFloat(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public void ReadFully (byte[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadFully(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member ReadFully : byte[] -&gt; unit" Usage="iDataInput.ReadFully b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">the buffer into which the data is read.</param>
        <summary>Reads some bytes from an input
            stream and stores them into the buffer
            array <c>b</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readFully(byte[])" title="Reference documentation">Java documentation for <code>java.io.DataInput.readFully(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public void ReadFully (byte[]? b, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] b, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadFully(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ReadFully : byte[] * int * int -&gt; unit" Usage="iDataInput.ReadFully (b, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">the buffer into which the data is read.</param>
        <param name="off">an int specifying the offset into the data.</param>
        <param name="len">an int specifying the number of bytes to read.</param>
        <summary>Reads <c>len</c>
            bytes from
            an input stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readFully(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.io.DataInput.readFully(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the source stream is reached before enough
             bytes have been read.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c> or <c>byteCount </c>, or
             <c>offset + byteCount &gt; dst.length</c>.</exception>
        <exception cref="T:Java.IO.IOException">if a problem occurs while reading from this stream.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>dst</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt">
      <MemberSignature Language="C#" Value="public int ReadInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadInt" />
      <MemberSignature Language="F#" Value="abstract member ReadInt : unit -&gt; int" Usage="iDataInput.ReadInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readInt", "()I", "GetReadIntHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readInt", "()I", "GetReadIntHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads four input bytes and returns an
            <c>int</c> value.</summary>
        <returns>the <c>int</c> value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readInt()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readInt()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteInt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string? ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadLine" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string" Usage="iDataInput.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next line of text from the input stream.</summary>
        <returns>the next line of text from the input stream,
                    or <c>null</c> if the end of file is
                    encountered before a byte can be read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readLine()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readLine()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLong">
      <MemberSignature Language="C#" Value="public long ReadLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadLong" />
      <MemberSignature Language="F#" Value="abstract member ReadLong : unit -&gt; int64" Usage="iDataInput.ReadLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readLong", "()J", "GetReadLongHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readLong", "()J", "GetReadLongHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads eight input bytes and returns
            a <c>long</c> value.</summary>
        <returns>the <c>long</c> value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readLong()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readLong()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteLong(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ReadShort">
      <MemberSignature Language="C#" Value="public short ReadShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadShort" />
      <MemberSignature Language="F#" Value="abstract member ReadShort : unit -&gt; int16" Usage="iDataInput.ReadShort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readShort", "()S", "GetReadShortHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readShort", "()S", "GetReadShortHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads two input bytes and returns
            a <c>short</c> value.</summary>
        <returns>the 16-bit value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readShort()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readShort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteShort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedByte">
      <MemberSignature Language="C#" Value="public int ReadUnsignedByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadUnsignedByte" />
      <MemberSignature Language="F#" Value="abstract member ReadUnsignedByte : unit -&gt; int" Usage="iDataInput.ReadUnsignedByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads one input byte, zero-extends
            it to type <c>int</c>, and returns
            the result, which is therefore in the range
            <c>0</c>
            through <c>255</c>.</summary>
        <returns>the unsigned 8-bit value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readUnsignedByte()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readUnsignedByte()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteByte(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedShort">
      <MemberSignature Language="C#" Value="public int ReadUnsignedShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadUnsignedShort" />
      <MemberSignature Language="F#" Value="abstract member ReadUnsignedShort : unit -&gt; int" Usage="iDataInput.ReadUnsignedShort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads two input bytes and returns
            an <c>int</c> value in the range <c>0</c>
            through <c>65535</c>.</summary>
        <returns>the unsigned 16-bit value read.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readUnsignedShort()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readUnsignedShort()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteShort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUTF">
      <MemberSignature Language="C#" Value="public string? ReadUTF ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadUTF() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.ReadUTF" />
      <MemberSignature Language="F#" Value="abstract member ReadUTF : unit -&gt; string" Usage="iDataInput.ReadUTF " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads in a string that has been encoded using a
            "#modified-utf-8"&gt;modified UTF-8
            format.</summary>
        <returns>a Unicode string.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#readUTF()" title="Reference documentation">Java documentation for <code>java.io.DataInput.readUTF()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteUTF(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipBytes">
      <MemberSignature Language="C#" Value="public int SkipBytes (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SkipBytes(int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataInput.SkipBytes(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SkipBytes : int -&gt; int" Usage="iDataInput.SkipBytes n" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">the number of bytes to be skipped.</param>
        <summary>Makes an attempt to skip over
            <c>n</c> bytes
            of data from the input
            stream, discarding the skipped bytes.</summary>
        <returns>the number of bytes actually skipped.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataInput#skipBytes(int)" title="Reference documentation">Java documentation for <code>java.io.DataInput.skipBytes(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if a problem occurs during skipping.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
