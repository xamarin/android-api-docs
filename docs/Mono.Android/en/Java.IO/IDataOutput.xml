<Type Name="IDataOutput" FullName="Java.IO.IDataOutput">
  <TypeSignature Language="C#" Value="public interface IDataOutput : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDataOutput implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.IDataOutput" />
  <TypeSignature Language="F#" Value="type IDataOutput = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/DataOutput", "", "Java.IO.IDataOutputInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/DataOutput", "", "Java.IO.IDataOutputInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>DataOutput</c> interface provides
            for converting data from any of the Java
            primitive types to a series of bytes and
            writing these bytes to a binary stream.</summary>
    <remarks>
      <para>The <c>DataOutput</c> interface provides
            for converting data from any of the Java
            primitive types to a series of bytes and
            writing these bytes to a binary stream.
            There is  also a facility for converting
            a <c>String</c> into
            modified UTF-8
            format and writing the resulting series
            of bytes.</para>
      <para>For all the methods in this interface that
            write bytes, it is generally true that if
            a byte cannot be written for any reason,
            an <c>IOException</c> is thrown.</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/DataOutput" title="Reference documentation">Java documentation for <code>java.io.DataOutput</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.Write(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] -&gt; unit" Usage="iDataOutput.Write b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([B)V", "GetWrite_arrayBHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([B)V", "GetWrite_arrayBHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">the data.</param>
        <summary>Writes to the output stream all the bytes in array <c>b</c>.</summary>
        <remarks>
          <para>Writes to the output stream all the bytes in array <c>b</c>.
            If <c>b</c> is <c>null</c>,
            a <c>NullPointerException</c> is thrown.
            If <c>b.length</c> is zero, then
            no bytes are written. Otherwise, the byte
            <c>b[0]</c> is written first, then
            <c>b[1]</c>, and so on; the last byte
            written is <c>b[b.length-1]</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#write(byte[])" title="Reference documentation">Java documentation for <code>java.io.DataOutput.write(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.Write(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit" Usage="iDataOutput.Write b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(I)V", "GetWrite_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(I)V", "GetWrite_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">the byte to be written.</param>
        <summary>Writes to the output stream the eight
            low-order bits of the argument <c>b</c>.</summary>
        <remarks>
          <para>Writes to the output stream the eight
            low-order bits of the argument <c>b</c>.
            The 24 high-order  bits of <c>b</c>
            are ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#write(int)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.write(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadByte" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[]? b, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] b, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit" Usage="iDataOutput.Write (b, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([BII)V", "GetWrite_arrayBIIHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([BII)V", "GetWrite_arrayBIIHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">the data.</param>
        <param name="off">the start offset in the data.</param>
        <param name="len">the number of bytes to write.</param>
        <summary>Writes <c>len</c> bytes from array
            <c>b</c>, in order,  to
            the output stream.</summary>
        <remarks>
          <para>Writes <c>len</c> bytes from array
            <c>b</c>, in order,  to
            the output stream.  If <c>b</c>
            is <c>null</c>, a <c>NullPointerException</c>
            is thrown.  If <c>off</c> is negative,
            or <c>len</c> is negative, or <c>off+len</c>
            is greater than the length of the array
            <c>b</c>, then an <c>IndexOutOfBoundsException</c>
            is thrown.  If <c>len</c> is zero,
            then no bytes are written. Otherwise, the
            byte <c>b[off]</c> is written first,
            then <c>b[off+1]</c>, and so on; the
            last byte written is <c>b[off+len-1]</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#write(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.write(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (bool v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBoolean(bool v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteBoolean(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member WriteBoolean : bool -&gt; unit" Usage="iDataOutput.WriteBoolean v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeBoolean", "(Z)V", "GetWriteBoolean_ZHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeBoolean", "(Z)V", "GetWriteBoolean_ZHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="v">the boolean to be written.</param>
        <summary>Writes a <c>boolean</c> value to this output stream.</summary>
        <remarks>
          <para>Writes a <c>boolean</c> value to this output stream.
            If the argument <c>v</c>
            is <c>true</c>, the value <c>(byte)1</c>
            is written; if <c>v</c> is <c>false</c>,
            the  value <c>(byte)0</c> is written.
            The byte written by this method may
            be read by the <c>readBoolean</c>
            method of interface <c>DataInput</c>,
            which will then return a <c>boolean</c>
            equal to <c>v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeBoolean(boolean)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeBoolean(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadBoolean" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public void WriteByte (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteByte(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteByte : int -&gt; unit" Usage="iDataOutput.WriteByte v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeByte", "(I)V", "GetWriteByte_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeByte", "(I)V", "GetWriteByte_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the byte value to be written.</param>
        <summary>Writes to the output stream the eight low-
            order bits of the argument <c>v</c>.</summary>
        <remarks>
          <para>Writes to the output stream the eight low-
            order bits of the argument <c>v</c>.
            The 24 high-order bits of <c>v</c>
            are ignored. (This means  that <c>writeByte</c>
            does exactly the same thing as <c>write</c>
            for an integer argument.) The byte written
            by this method may be read by the <c>readByte</c>
            method of interface <c>DataInput</c>,
            which will then return a <c>byte</c>
            equal to <c>(byte)v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeByte(int)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeByte(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadByte" />
        <altmember cref="M:Java.IO.IDataInput.ReadUnsignedByte" />
      </Docs>
    </Member>
    <Member MemberName="WriteBytes">
      <MemberSignature Language="C#" Value="public void WriteBytes (string? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteBytes(System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteBytes : string -&gt; unit" Usage="iDataOutput.WriteBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeBytes", "(Ljava/lang/String;)V", "GetWriteBytes_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeBytes", "(Ljava/lang/String;)V", "GetWriteBytes_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string of bytes to be written.</param>
        <summary>Writes a string to the output stream.</summary>
        <remarks>
          <para>Writes a string to the output stream.
            For every character in the string
            <c>s</c>,  taken in order, one byte
            is written to the output stream.  If
            <c>s</c> is <c>null</c>, a <c>NullPointerException</c>
            is thrown.</para>
          <para>If <c>s.length</c>
            is zero, then no bytes are written. Otherwise,
            the character <c>s[0]</c> is written
            first, then <c>s[1]</c>, and so on;
            the last character written is <c>s[s.length-1]</c>.
            For each character, one byte is written,
            the low-order byte, in exactly the manner
            of the <c>writeByte</c> method . The
            high-order eight bits of each character
            in the string are ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeBytes(java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeBytes(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChar">
      <MemberSignature Language="C#" Value="public void WriteChar (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChar(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteChar : int -&gt; unit" Usage="iDataOutput.WriteChar v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeChar", "(I)V", "GetWriteChar_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeChar", "(I)V", "GetWriteChar_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the <c>char</c> value to be written.</param>
        <summary>Writes a <c>char</c> value, which
            is comprised of two bytes, to the
            output stream.</summary>
        <remarks>
          <para>Writes a <c>char</c> value, which
            is comprised of two bytes, to the
            output stream.
            The byte values to be written, in the  order
            shown, are:</para>
          <code lang="text/java">{@code
            (byte)(0xff &amp; (v &gt;&gt; 8))
            (byte)(0xff &amp; v)
            }</code>
          <para>The bytes written by this method may be
            read by the <c>readChar</c> method
            of interface <c>DataInput</c> , which
            will then return a <c>char</c> equal
            to <c>(char)v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeChar(int)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeChar(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadChar" />
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public void WriteChars (string? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteChars(System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : string -&gt; unit" Usage="iDataOutput.WriteChars s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeChars", "(Ljava/lang/String;)V", "GetWriteChars_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeChars", "(Ljava/lang/String;)V", "GetWriteChars_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string value to be written.</param>
        <summary>Writes every character in the string <c>s</c>,
            to the output stream, in order,
            two bytes per character.</summary>
        <remarks>
          <para>Writes every character in the string <c>s</c>,
            to the output stream, in order,
            two bytes per character. If <c>s</c>
            is <c>null</c>, a <c>NullPointerException</c>
            is thrown.  If <c>s.length</c>
            is zero, then no characters are written.
            Otherwise, the character <c>s[0]</c>
            is written first, then <c>s[1]</c>,
            and so on; the last character written is
            <c>s[s.length-1]</c>. For each character,
            two bytes are actually written, high-order
            byte first, in exactly the manner of the
            <c>writeChar</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeChars(java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeChars(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadChar" />
      </Docs>
    </Member>
    <Member MemberName="WriteDouble">
      <MemberSignature Language="C#" Value="public void WriteDouble (double v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDouble(float64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteDouble(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member WriteDouble : double -&gt; unit" Usage="iDataOutput.WriteDouble v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeDouble", "(D)V", "GetWriteDouble_DHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeDouble", "(D)V", "GetWriteDouble_DHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v">the <c>double</c> value to be written.</param>
        <summary>Writes a <c>double</c> value,
            which is comprised of eight bytes, to the output stream.</summary>
        <remarks>
          <para>Writes a <c>double</c> value,
            which is comprised of eight bytes, to the output stream.
            It does this as if it first converts this
            <c>double</c> value to a <c>long</c>
            in exactly the manner of the <c>Double.doubleToLongBits</c>
            method  and then writes the <c>long</c>
            value in exactly the manner of the  <c>writeLong</c>
            method. The bytes written by this method
            may be read by the <c>readDouble</c>
            method of interface <c>DataInput</c>,
            which will then return a <c>double</c>
            equal to <c>v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeDouble(double)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeDouble(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadDouble" />
      </Docs>
    </Member>
    <Member MemberName="WriteFloat">
      <MemberSignature Language="C#" Value="public void WriteFloat (float v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFloat(float32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteFloat(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member WriteFloat : single -&gt; unit" Usage="iDataOutput.WriteFloat v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeFloat", "(F)V", "GetWriteFloat_FHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeFloat", "(F)V", "GetWriteFloat_FHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">the <c>float</c> value to be written.</param>
        <summary>Writes a <c>float</c> value,
            which is comprised of four bytes, to the output stream.</summary>
        <remarks>
          <para>Writes a <c>float</c> value,
            which is comprised of four bytes, to the output stream.
            It does this as if it first converts this
            <c>float</c> value to an <c>int</c>
            in exactly the manner of the <c>Float.floatToIntBits</c>
            method  and then writes the <c>int</c>
            value in exactly the manner of the  <c>writeInt</c>
            method.  The bytes written by this method
            may be read by the <c>readFloat</c>
            method of interface <c>DataInput</c>,
            which will then return a <c>float</c>
            equal to <c>v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeFloat(float)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeFloat(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadFloat" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt">
      <MemberSignature Language="C#" Value="public void WriteInt (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteInt(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteInt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteInt : int -&gt; unit" Usage="iDataOutput.WriteInt v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeInt", "(I)V", "GetWriteInt_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeInt", "(I)V", "GetWriteInt_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the <c>int</c> value to be written.</param>
        <summary>Writes an <c>int</c> value, which is
            comprised of four bytes, to the output stream.</summary>
        <remarks>
          <para>Writes an <c>int</c> value, which is
            comprised of four bytes, to the output stream.
            The byte values to be written, in the  order
            shown, are:</para>
          <code lang="text/java">{@code
            (byte)(0xff &amp; (v &gt;&gt; 24))
            (byte)(0xff &amp; (v &gt;&gt; 16))
            (byte)(0xff &amp; (v &gt;&gt;  8))
            (byte)(0xff &amp; v)
            }</code>
          <para>The bytes written by this method may be read
            by the <c>readInt</c> method of interface
            <c>DataInput</c> , which will then
            return an <c>int</c> equal to <c>v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeInt(int)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeInt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadInt" />
      </Docs>
    </Member>
    <Member MemberName="WriteLong">
      <MemberSignature Language="C#" Value="public void WriteLong (long v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLong(int64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteLong(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member WriteLong : int64 -&gt; unit" Usage="iDataOutput.WriteLong v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeLong", "(J)V", "GetWriteLong_JHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeLong", "(J)V", "GetWriteLong_JHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v">the <c>long</c> value to be written.</param>
        <summary>Writes a <c>long</c> value, which is
            comprised of eight bytes, to the output stream.</summary>
        <remarks>
          <para>Writes a <c>long</c> value, which is
            comprised of eight bytes, to the output stream.
            The byte values to be written, in the  order
            shown, are:</para>
          <code lang="text/java">{@code
            (byte)(0xff &amp; (v &gt;&gt; 56))
            (byte)(0xff &amp; (v &gt;&gt; 48))
            (byte)(0xff &amp; (v &gt;&gt; 40))
            (byte)(0xff &amp; (v &gt;&gt; 32))
            (byte)(0xff &amp; (v &gt;&gt; 24))
            (byte)(0xff &amp; (v &gt;&gt; 16))
            (byte)(0xff &amp; (v &gt;&gt;  8))
            (byte)(0xff &amp; v)
            }</code>
          <para>The bytes written by this method may be
            read by the <c>readLong</c> method
            of interface <c>DataInput</c> , which
            will then return a <c>long</c> equal
            to <c>v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeLong(long)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeLong(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadLong" />
      </Docs>
    </Member>
    <Member MemberName="WriteShort">
      <MemberSignature Language="C#" Value="public void WriteShort (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteShort(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteShort(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteShort : int -&gt; unit" Usage="iDataOutput.WriteShort v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeShort", "(I)V", "GetWriteShort_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeShort", "(I)V", "GetWriteShort_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the <c>short</c> value to be written.</param>
        <summary>Writes two bytes to the output
            stream to represent the value of the argument.</summary>
        <remarks>
          <para>Writes two bytes to the output
            stream to represent the value of the argument.
            The byte values to be written, in the  order
            shown, are:</para>
          <code lang="text/java">{@code
            (byte)(0xff &amp; (v &gt;&gt; 8))
            (byte)(0xff &amp; v)
            }</code>
          <para>The bytes written by this method may be
            read by the <c>readShort</c> method
            of interface <c>DataInput</c> , which
            will then return a <c>short</c> equal
            to <c>(short)v</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeShort(int)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeShort(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadShort" />
        <altmember cref="M:Java.IO.IDataInput.ReadUnsignedShort" />
      </Docs>
    </Member>
    <Member MemberName="WriteUTF">
      <MemberSignature Language="C#" Value="public void WriteUTF (string? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteUTF(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteUTF(System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteUTF : string -&gt; unit" Usage="iDataOutput.WriteUTF s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeUTF", "(Ljava/lang/String;)V", "GetWriteUTF_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeUTF", "(Ljava/lang/String;)V", "GetWriteUTF_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string value to be written.</param>
        <summary>Writes two bytes of length information
            to the output stream, followed
            by the
            modified UTF-8
            representation
            of  every character in the string <c>s</c>.</summary>
        <remarks>
          <para>Writes two bytes of length information
            to the output stream, followed
            by the
            modified UTF-8
            representation
            of  every character in the string <c>s</c>.
            If <c>s</c> is <c>null</c>,
            a <c>NullPointerException</c> is thrown.
            Each character in the string <c>s</c>
            is converted to a group of one, two, or
            three bytes, depending on the value of the
            character.</para>
          <para>If a character <c>c</c>
            is in the range <c>&amp;#92;u0001</c> through
            <c>&amp;#92;u007f</c>, it is represented
            by one byte:</para>
          <code lang="text/java">(byte)c </code>
          <para>If a character <c>c</c> is <c>&amp;#92;u0000</c>
            or is in the range <c>&amp;#92;u0080</c>
            through <c>&amp;#92;u07ff</c>, then it is
            represented by two bytes, to be written
            in the order shown:</para>
          <code lang="text/java">{@code
            (byte)(0xc0 | (0x1f &amp; (c &gt;&gt; 6)))
            (byte)(0x80 | (0x3f &amp; c))
            }</code>
          <para>If a character
            <c>c</c> is in the range <c>&amp;#92;u0800</c>
            through <c>uffff</c>, then it is
            represented by three bytes, to be written
            in the order shown:</para>
          <code lang="text/java">{@code
            (byte)(0xe0 | (0x0f &amp; (c &gt;&gt; 12)))
            (byte)(0x80 | (0x3f &amp; (c &gt;&gt;  6)))
            (byte)(0x80 | (0x3f &amp; c))
            }</code>
          <para>First,
            the total number of bytes needed to represent
            all the characters of <c>s</c> is
            calculated. If this number is larger than
            <c>65535</c>, then a <c>UTFDataFormatException</c>
            is thrown. Otherwise, this length is written
            to the output stream in exactly the manner
            of the <c>writeShort</c> method;
            after this, the one-, two-, or three-byte
            representation of each character in the
            string <c>s</c> is written.</para>
          <para>The
            bytes written by this method may be read
            by the <c>readUTF</c> method of interface
            <c>DataInput</c> , which will then
            return a <c>String</c> equal to <c>s</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/DataOutput#writeUTF(java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.DataOutput.writeUTF(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadUTF" />
      </Docs>
    </Member>
  </Members>
</Type>
