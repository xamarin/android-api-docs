<Type Name="IDataOutput" FullName="Java.IO.IDataOutput">
  <TypeSignature Language="C#" Value="public interface IDataOutput : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataOutput implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.IDataOutput" />
  <TypeSignature Language="F#" Value="type IDataOutput = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/DataOutput", "", "Java.IO.IDataOutputInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides
            for converting data from any of the Java
            primitive types to a series of bytes and
            writing these bytes to a binary stream.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/DataOutput" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.Write(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] -&gt; unit" Usage="iDataOutput.Write b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "([B)V", "GetWrite_arrayBHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">the byte to be written.</param>
        <summary>Writes to the output stream the eight
            low-order bits of the argument &lt;code&gt;b&lt;/code&gt;.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.Write(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit" Usage="iDataOutput.Write b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "(I)V", "GetWrite_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">the byte to be written.</param>
        <summary>Writes to the output stream the eight
            low-order bits of the argument &lt;code&gt;b&lt;/code&gt;.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadByte" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] b, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] b, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit" Usage="iDataOutput.Write (b, off, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "([BII)V", "GetWrite_arrayBIIHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">the byte to be written.</param>
        <param name="off">To be added.</param>
        <param name="len">To be added.</param>
        <summary>Writes to the output stream the eight
            low-order bits of the argument &lt;code&gt;b&lt;/code&gt;.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (bool v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBoolean(bool v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteBoolean(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member WriteBoolean : bool -&gt; unit" Usage="iDataOutput.WriteBoolean v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeBoolean", "(Z)V", "GetWriteBoolean_ZHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="v">the boolean to be written.</param>
        <summary>Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadBoolean" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public void WriteByte (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteByte(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteByte : int -&gt; unit" Usage="iDataOutput.WriteByte v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeByte", "(I)V", "GetWriteByte_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the byte value to be written.</param>
        <summary>Writes to the output stream the eight low-
            order bits of the argument &lt;code&gt;v&lt;/code&gt;.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadByte" />
        <altmember cref="M:Java.IO.IDataInput.ReadUnsignedByte" />
      </Docs>
    </Member>
    <Member MemberName="WriteBytes">
      <MemberSignature Language="C#" Value="public void WriteBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteBytes(System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteBytes : string -&gt; unit" Usage="iDataOutput.WriteBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeBytes", "(Ljava/lang/String;)V", "GetWriteBytes_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string of bytes to be written.</param>
        <summary>Writes a string to the output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChar">
      <MemberSignature Language="C#" Value="public void WriteChar (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChar(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteChar : int -&gt; unit" Usage="iDataOutput.WriteChar v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeChar", "(I)V", "GetWriteChar_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the &lt;code&gt;char&lt;/code&gt; value to be written.</param>
        <summary>Writes a &lt;code&gt;char&lt;/code&gt; value, which
            is comprised of two bytes, to the
            output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadChar" />
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public void WriteChars (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteChars(System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : string -&gt; unit" Usage="iDataOutput.WriteChars s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeChars", "(Ljava/lang/String;)V", "GetWriteChars_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string value to be written.</param>
        <summary>Writes every character in the string &lt;code&gt;s&lt;/code&gt;,
            to the output stream, in order,
            two bytes per character.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadChar" />
      </Docs>
    </Member>
    <Member MemberName="WriteDouble">
      <MemberSignature Language="C#" Value="public void WriteDouble (double v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDouble(float64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteDouble(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member WriteDouble : double -&gt; unit" Usage="iDataOutput.WriteDouble v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeDouble", "(D)V", "GetWriteDouble_DHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="v">the &lt;code&gt;double&lt;/code&gt; value to be written.</param>
        <summary>Writes a &lt;code&gt;double&lt;/code&gt; value,
            which is comprised of eight bytes, to the output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadDouble" />
      </Docs>
    </Member>
    <Member MemberName="WriteFloat">
      <MemberSignature Language="C#" Value="public void WriteFloat (float v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFloat(float32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteFloat(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member WriteFloat : single -&gt; unit" Usage="iDataOutput.WriteFloat v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeFloat", "(F)V", "GetWriteFloat_FHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">the &lt;code&gt;float&lt;/code&gt; value to be written.</param>
        <summary>Writes a &lt;code&gt;float&lt;/code&gt; value,
            which is comprised of four bytes, to the output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadFloat" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt">
      <MemberSignature Language="C#" Value="public void WriteInt (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteInt(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteInt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteInt : int -&gt; unit" Usage="iDataOutput.WriteInt v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeInt", "(I)V", "GetWriteInt_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the &lt;code&gt;int&lt;/code&gt; value to be written.</param>
        <summary>Writes an &lt;code&gt;int&lt;/code&gt; value, which is
            comprised of four bytes, to the output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadInt" />
      </Docs>
    </Member>
    <Member MemberName="WriteLong">
      <MemberSignature Language="C#" Value="public void WriteLong (long v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLong(int64 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteLong(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member WriteLong : int64 -&gt; unit" Usage="iDataOutput.WriteLong v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeLong", "(J)V", "GetWriteLong_JHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="v">the &lt;code&gt;long&lt;/code&gt; value to be written.</param>
        <summary>Writes a &lt;code&gt;long&lt;/code&gt; value, which is
            comprised of eight bytes, to the output stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadLong" />
      </Docs>
    </Member>
    <Member MemberName="WriteShort">
      <MemberSignature Language="C#" Value="public void WriteShort (int v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteShort(int32 v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteShort(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WriteShort : int -&gt; unit" Usage="iDataOutput.WriteShort v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeShort", "(I)V", "GetWriteShort_IHandler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">the &lt;code&gt;short&lt;/code&gt; value to be written.</param>
        <summary>Writes two bytes to the output
            stream to represent the value of the argument.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadShort" />
        <altmember cref="M:Java.IO.IDataInput.ReadUnsignedShort" />
      </Docs>
    </Member>
    <Member MemberName="WriteUTF">
      <MemberSignature Language="C#" Value="public void WriteUTF (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteUTF(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.IDataOutput.WriteUTF(System.String)" />
      <MemberSignature Language="F#" Value="abstract member WriteUTF : string -&gt; unit" Usage="iDataOutput.WriteUTF s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeUTF", "(Ljava/lang/String;)V", "GetWriteUTF_Ljava_lang_String_Handler:Java.IO.IDataOutputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">the string value to be written.</param>
        <summary>Writes two bytes of length information
            to the output stream, followed
            by the
            &lt;a href="DataInput.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while writing.</exception>
        <altmember cref="M:Java.IO.IDataInput.ReadUTF" />
      </Docs>
    </Member>
  </Members>
</Type>
