<Type Name="FileOutputStream" FullName="Java.IO.FileOutputStream">
  <TypeSignature Language="C#" Value="public class FileOutputStream : Java.IO.OutputStream, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileOutputStream extends Java.IO.OutputStream implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.FileOutputStream" />
  <TypeSignature Language="F#" Value="type FileOutputStream = class&#xA;    inherit OutputStream&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.OutputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/io/FileOutputStream", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/io/FileOutputStream", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A file output stream is an output stream for writing data to a
            <c>File</c> or to a <c>FileDescriptor</c>.</summary>
    <remarks>
      <para>A file output stream is an output stream for writing data to a
            <c>File</c> or to a <c>FileDescriptor</c>. Whether or not
            a file is available or may be created depends upon the underlying
            platform.  Some platforms, in particular, allow a file to be opened
            for writing by only one <c>FileOutputStream</c> (or other
            file-writing object) at a time.  In such situations the constructors in
            this class will fail if the file involved is already open.</para>
      <para>
        <c>FileOutputStream</c> is meant for writing streams of raw bytes
            such as image data. For writing streams of characters, consider using
            <c>FileWriter</c>.</para>
      <para>Added in JDK1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/FileOutputStream" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileOutputStream (Java.IO.File? file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.#ctor(Java.IO.File)" />
      <MemberSignature Language="F#" Value="new Java.IO.FileOutputStream : Java.IO.File -&gt; Java.IO.FileOutputStream" Usage="new Java.IO.FileOutputStream file" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">the file to be opened for writing.</param>
        <summary>Creates a file output stream to write to the file represented by
            the specified <c>File</c> object.</summary>
        <remarks>
          <para>Creates a file output stream to write to the file represented by
            the specified <c>File</c> object. A new
            <c>FileDescriptor</c> object is created to represent this
            file connection.</para>
          <para>First, if there is a security manager, its <c>checkWrite</c>
            method is called with the path represented by the <c>file</c>
            argument as its argument.</para>
          <para>If the file exists but is a directory rather than a regular file, does
            not exist but cannot be created, or cannot be opened for any other
            reason then a <c>FileNotFoundException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#FileOutputStream(java.io.File)" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.FileOutputStream(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if file cannot be opened for writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileOutputStream (Java.IO.FileDescriptor? fdObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.FileDescriptor fdObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.#ctor(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="new Java.IO.FileOutputStream : Java.IO.FileDescriptor -&gt; Java.IO.FileOutputStream" Usage="new Java.IO.FileOutputStream fdObj" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/FileDescriptor;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/FileDescriptor;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fdObj" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fdObj">the file descriptor to be opened for writing</param>
        <summary>Creates a file output stream to write to the specified file
            descriptor, which represents an existing connection to an actual
            file in the file system.</summary>
        <remarks>
          <para>Creates a file output stream to write to the specified file
            descriptor, which represents an existing connection to an actual
            file in the file system.</para>
          <para>First, if there is a security manager, its <c>checkWrite</c>
            method is called with the file descriptor <c>fdObj</c>
            argument as its argument.</para>
          <para>If <c>fdObj</c> is null then a <c>NullPointerException</c>
            is thrown.</para>
          <para>This constructor does not throw an exception if <c>fdObj</c>
            is <c>java.io.FileDescriptor#valid() invalid</c>.
            However, if the methods are invoked on the resulting stream to attempt
            I/O on the stream, an <c>IOException</c> is thrown.</para>
          <para>Android-specific warning: <c>#close()</c> method doesn't close the <c>fdObj</c> provided,
            because this object doesn't own the file descriptor, but the caller does. The caller can
            call <c>android.system.Os#close(FileDescriptor)</c> to close the fd.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#FileOutputStream(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.FileOutputStream(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>fd</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileOutputStream (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.IO.FileOutputStream : string -&gt; Java.IO.FileOutputStream" Usage="new Java.IO.FileOutputStream name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the system-dependent filename</param>
        <summary>Creates a file output stream to write to the file with the
            specified name.</summary>
        <remarks>
          <para>Creates a file output stream to write to the file with the
            specified name. A new <c>FileDescriptor</c> object is
            created to represent this file connection.</para>
          <para>First, if there is a security manager, its <c>checkWrite</c>
            method is called with <c>name</c> as its argument.</para>
          <para>If the file exists but is a directory rather than a regular file, does
            not exist but cannot be created, or cannot be opened for any other
            reason then a <c>FileNotFoundException</c> is thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#FileOutputStream(java.lang.String)" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.FileOutputStream(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if file cannot be opened for writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileOutputStream (Java.IO.File? file, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.#ctor(Java.IO.File,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.IO.FileOutputStream : Java.IO.File * bool -&gt; Java.IO.FileOutputStream" Usage="new Java.IO.FileOutputStream (file, append)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/File;Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/File;Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file">the file to be opened for writing.</param>
        <param name="append">if <c>true</c>, then bytes will be written
                              to the end of the file rather than the beginning</param>
        <summary>Creates a file output stream to write to the file represented by
            the specified <c>File</c> object.</summary>
        <remarks>
          <para>Creates a file output stream to write to the file represented by
            the specified <c>File</c> object. If the second argument is
            <c>true</c>, then bytes will be written to the end of the file
            rather than the beginning. A new <c>FileDescriptor</c> object is
            created to represent this file connection.</para>
          <para>First, if there is a security manager, its <c>checkWrite</c>
            method is called with the path represented by the <c>file</c>
            argument as its argument.</para>
          <para>If the file exists but is a directory rather than a regular file, does
            not exist but cannot be created, or cannot be opened for any other
            reason then a <c>FileNotFoundException</c> is thrown.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#FileOutputStream(java.io.File,%20boolean)" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.FileOutputStream(java.io.File, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the file cannot be opened for writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileOutputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.FileOutputStream : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.FileOutputStream" Usage="new Java.IO.FileOutputStream (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileOutputStream (string? name, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.IO.FileOutputStream : string * bool -&gt; Java.IO.FileOutputStream" Usage="new Java.IO.FileOutputStream (name, append)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">the system-dependent file name</param>
        <param name="append">if <c>true</c>, then bytes will be written
                              to the end of the file rather than the beginning</param>
        <summary>Creates a file output stream to write to the file with the specified
            name.</summary>
        <remarks>
          <para>Creates a file output stream to write to the file with the specified
            name.  If the second argument is <c>true</c>, then
            bytes will be written to the end of the file rather than the beginning.
            A new <c>FileDescriptor</c> object is created to represent this
            file connection.</para>
          <para>First, if there is a security manager, its <c>checkWrite</c>
            method is called with <c>name</c> as its argument.</para>
          <para>If the file exists but is a directory rather than a regular file, does
            not exist but cannot be created, or cannot be opened for any other
            reason then a <c>FileNotFoundException</c> is thrown.</para>
          <para>Added in JDK1.1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#FileOutputStream(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.FileOutputStream(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the file cannot be opened for writing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.FileChannel? Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.FileChannel Channel" />
      <MemberSignature Language="DocId" Value="P:Java.IO.FileOutputStream.Channel" />
      <MemberSignature Language="F#" Value="member this.Channel : Java.Nio.Channels.FileChannel" Usage="Java.IO.FileOutputStream.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/FileChannel;", "GetGetChannelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/FileChannel;", "GetGetChannelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.FileChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the unique <c>java.nio.channels.FileChannel FileChannel</c>
            object associated with this file output stream.</summary>
        <value>the file channel associated with this file output stream</value>
        <remarks>
          <para>Returns the unique <c>java.nio.channels.FileChannel FileChannel</c>
            object associated with this file output stream.</para>
          <para>The initial <c>java.nio.channels.FileChannel#position()
            position</c> of the returned channel will be equal to the
            number of bytes written to the file so far unless this stream is in
            append mode, in which case it will be equal to the size of the file.
            Writing bytes to this stream will increment the channel's position
            accordingly.  Changing the channel's position, either explicitly or by
            writing, will change this stream's file position.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#getChannel()" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.getChannel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FD">
      <MemberSignature Language="C#" Value="public Java.IO.FileDescriptor? FD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.FileDescriptor FD" />
      <MemberSignature Language="DocId" Value="P:Java.IO.FileOutputStream.FD" />
      <MemberSignature Language="F#" Value="member this.FD : Java.IO.FileDescriptor" Usage="Java.IO.FileOutputStream.FD" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFD", "()Ljava/io/FileDescriptor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFD", "()Ljava/io/FileDescriptor;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.FileDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the file descriptor associated with this stream.</summary>
        <value>the <c>FileDescriptor</c> object that represents
                     the connection to the file in the file system being used
                     by this <c>FileOutputStream</c> object.</value>
        <remarks>
          <para>Returns the file descriptor associated with this stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#getFD()" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.getFD()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.FileOutputStream.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.FileOutputStream.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.FileOutputStream.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.FileOutputStream.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.FileOutputStream.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.FileOutputStream.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.FileOutputStream.Write(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.Write : int -&gt; unit" Usage="fileOutputStream.Write b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(I)V", "GetWrite_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(I)V", "GetWrite_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="b">the byte to be written.</param>
        <summary>Writes the specified byte to this file output stream.</summary>
        <remarks>
          <para>Writes the specified byte to this file output stream. Implements
            the <c>write</c> method of <c>OutputStream</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/io/FileOutputStream#write(int)" title="Reference documentation">Java documentation for <code>java.io.FileOutputStream.write(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
  </Members>
</Type>
