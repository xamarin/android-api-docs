<Type Name="IInputConnection" FullName="Android.Views.InputMethods.IInputConnection">
  <TypeSignature Language="C#" Value="public interface IInputConnection : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputConnection implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.InputMethods.IInputConnection" />
  <TypeSignature Language="F#" Value="type IInputConnection = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/inputmethod/InputConnection", "", "Android.Views.InputMethods.IInputConnectionInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/inputmethod/InputConnection", "", "Android.Views.InputMethods.IInputConnectionInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>The InputConnection interface is the communication channel from an
            <c>InputMethod</c> back to the application that is receiving its
            input.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName="BeginBatchEdit">
      <MemberSignature Language="C#" Value="public bool BeginBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginBatchEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.BeginBatchEdit" />
      <MemberSignature Language="F#" Value="abstract member BeginBatchEdit : unit -&gt; bool" Usage="iInputConnection.BeginBatchEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beginBatchEdit", "()Z", "GetBeginBatchEditHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beginBatchEdit", "()Z", "GetBeginBatchEditHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tell the editor that you are starting a batch of editor
            operations.</summary>
        <returns>true if a batch edit is now in progress, false otherwise. Since
            this method starts a batch edit, that means it will always return true
            unless the input connection is no longer valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#beginBatchEdit()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.beginBatchEdit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearMetaKeyStates">
      <MemberSignature Language="C#" Value="public bool ClearMetaKeyStates (Android.Views.MetaKeyStates states);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearMetaKeyStates(valuetype Android.Views.MetaKeyStates states) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.ClearMetaKeyStates(Android.Views.MetaKeyStates)" />
      <MemberSignature Language="F#" Value="abstract member ClearMetaKeyStates : Android.Views.MetaKeyStates -&gt; bool" Usage="iInputConnection.ClearMetaKeyStates states" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearMetaKeyStates", "(I)Z", "GetClearMetaKeyStates_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearMetaKeyStates", "(I)Z", "GetClearMetaKeyStates_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="states" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="states">The states to be cleared, may be one or more bits as
            per <c>KeyEvent#getMetaState() KeyEvent.getMetaState()</c>.</param>
        <summary>Clear the given meta key pressed states in the given input
            connection.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#clearMetaKeyStates(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.clearMetaKeyStates(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public void CloseConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CloseConnection" />
      <MemberSignature Language="F#" Value="abstract member CloseConnection : unit -&gt; unit" Usage="iInputConnection.CloseConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closeConnection", "()V", "GetCloseConnectionHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closeConnection", "()V", "GetCloseConnectionHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the system up to only once to notify that the system is about to invalidate
            connection between the input method and the application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#closeConnection()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.closeConnection()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitCompletion">
      <MemberSignature Language="C#" Value="public bool CommitCompletion (Android.Views.InputMethods.CompletionInfo? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitCompletion(class Android.Views.InputMethods.CompletionInfo text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CommitCompletion(Android.Views.InputMethods.CompletionInfo)" />
      <MemberSignature Language="F#" Value="abstract member CommitCompletion : Android.Views.InputMethods.CompletionInfo -&gt; bool" Usage="iInputConnection.CommitCompletion text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("commitCompletion", "(Landroid/view/inputmethod/CompletionInfo;)Z", "GetCommitCompletion_Landroid_view_inputmethod_CompletionInfo_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commitCompletion", "(Landroid/view/inputmethod/CompletionInfo;)Z", "GetCommitCompletion_Landroid_view_inputmethod_CompletionInfo_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Views.InputMethods.CompletionInfo" />
      </Parameters>
      <Docs>
        <param name="text">The committed completion.</param>
        <summary>Commit a completion the user has selected from the possible ones
            previously reported to <c>InputMethodSession#displayCompletions
            InputMethodSession#displayCompletions(CompletionInfo[])</c> or
            <c>InputMethodManager#displayCompletions
            InputMethodManager#displayCompletions(View, CompletionInfo[])</c>.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#commitCompletion(android.view.inputmethod.CompletionInfo)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.commitCompletion(android.view.inputmethod.CompletionInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CommitContent">
      <MemberSignature Language="C#" Value="public bool CommitContent (Android.Views.InputMethods.InputContentInfo inputContentInfo, Android.Views.InputMethods.InputContentFlags flags, Android.OS.Bundle? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitContent(class Android.Views.InputMethods.InputContentInfo inputContentInfo, valuetype Android.Views.InputMethods.InputContentFlags flags, class Android.OS.Bundle opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CommitContent(Android.Views.InputMethods.InputContentInfo,Android.Views.InputMethods.InputContentFlags,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member CommitContent : Android.Views.InputMethods.InputContentInfo * Android.Views.InputMethods.InputContentFlags * Android.OS.Bundle -&gt; bool" Usage="iInputConnection.CommitContent (inputContentInfo, flags, opts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("commitContent", "(Landroid/view/inputmethod/InputContentInfo;ILandroid/os/Bundle;)Z", "GetCommitContent_Landroid_view_inputmethod_InputContentInfo_ILandroid_os_Bundle_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commitContent", "(Landroid/view/inputmethod/InputContentInfo;ILandroid/os/Bundle;)Z", "GetCommitContent_Landroid_view_inputmethod_InputContentInfo_ILandroid_os_Bundle_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputContentInfo" Type="Android.Views.InputMethods.InputContentInfo" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.InputContentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="inputContentInfo">Content to be inserted.</param>
        <param name="flags">
          <c>#INPUT_CONTENT_GRANT_READ_URI_PERMISSION</c> if the content provider
            allows <c>android.R.styleable#AndroidManifestProvider_grantUriPermissions
            grantUriPermissions</c> or <c>0</c> if the application does not need to call
            <c>InputContentInfo#requestPermission()</c>.</param>
        <param name="opts">optional bundle data. This can be <c>null</c>.</param>
        <summary>Called by the input method to commit content such as a PNG image to the editor.</summary>
        <returns>
          <c>true</c> if this request is accepted by the application, whether the request
            is already handled or still being handled in background, <c>false</c> otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#commitContent(android.view.inputmethod.InputContentInfo,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.commitContent(android.view.inputmethod.InputContentInfo, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitCorrection">
      <MemberSignature Language="C#" Value="public bool CommitCorrection (Android.Views.InputMethods.CorrectionInfo? correctionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitCorrection(class Android.Views.InputMethods.CorrectionInfo correctionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CommitCorrection(Android.Views.InputMethods.CorrectionInfo)" />
      <MemberSignature Language="F#" Value="abstract member CommitCorrection : Android.Views.InputMethods.CorrectionInfo -&gt; bool" Usage="iInputConnection.CommitCorrection correctionInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("commitCorrection", "(Landroid/view/inputmethod/CorrectionInfo;)Z", "GetCommitCorrection_Landroid_view_inputmethod_CorrectionInfo_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commitCorrection", "(Landroid/view/inputmethod/CorrectionInfo;)Z", "GetCommitCorrection_Landroid_view_inputmethod_CorrectionInfo_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correctionInfo" Type="Android.Views.InputMethods.CorrectionInfo" />
      </Parameters>
      <Docs>
        <param name="correctionInfo">Detailed information about the correction.</param>
        <summary>Commit a correction automatically performed on the raw user's input.</summary>
        <returns>
          <c>true</c> on success, <c>false</c> if the input connection is no longer valid.
                    Since Android <c>android.os.Build.VERSION_CODES#N</c> until
                    <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, this API returned <c>false</c> when
                    the target application does not implement this method.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#commitCorrection(android.view.inputmethod.CorrectionInfo)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.commitCorrection(android.view.inputmethod.CorrectionInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CommitText">
      <MemberSignature Language="C#" Value="public bool CommitText (Java.Lang.ICharSequence? text, int newCursorPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitText(class Java.Lang.ICharSequence text, int32 newCursorPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CommitText(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CommitText : Java.Lang.ICharSequence * int -&gt; bool" Usage="iInputConnection.CommitText (text, newCursorPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("commitText", "(Ljava/lang/CharSequence;I)Z", "GetCommitText_Ljava_lang_CharSequence_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commitText", "(Ljava/lang/CharSequence;I)Z", "GetCommitText_Ljava_lang_CharSequence_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to commit. This may include styles.</param>
        <param name="newCursorPosition">The new cursor position around the text,
                   in Java characters. If &gt; 0, this is relative to the end
                   of the text - 1; if &lt;= 0, this is relative to the start
                   of the text. So a value of 1 will always advance the cursor
                   to the position after the full text being inserted. Note that
                   this means you can't position the cursor within the text,
                   because the editor can make modifications to the text
                   you are providing so it is not possible to correctly specify
                   locations there.</param>
        <summary>Commit text to the text box and set the new cursor position.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#commitText(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.commitText(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CommitText">
      <MemberSignature Language="C#" Value="public virtual bool CommitText (Java.Lang.ICharSequence text, int newCursorPosition, Android.Views.InputMethods.TextAttribute? textAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitText(class Java.Lang.ICharSequence text, int32 newCursorPosition, class Android.Views.InputMethods.TextAttribute textAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CommitText(Java.Lang.ICharSequence,System.Int32,Android.Views.InputMethods.TextAttribute)" />
      <MemberSignature Language="F#" Value="abstract member CommitText : Java.Lang.ICharSequence * int * Android.Views.InputMethods.TextAttribute -&gt; bool&#xA;override this.CommitText : Java.Lang.ICharSequence * int * Android.Views.InputMethods.TextAttribute -&gt; bool" Usage="iInputConnection.CommitText (text, newCursorPosition, textAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("commitText", "(Ljava/lang/CharSequence;ILandroid/view/inputmethod/TextAttribute;)Z", "GetCommitText_Ljava_lang_CharSequence_ILandroid_view_inputmethod_TextAttribute_Handler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("commitText", "(Ljava/lang/CharSequence;ILandroid/view/inputmethod/TextAttribute;)Z", "GetCommitText_Ljava_lang_CharSequence_ILandroid_view_inputmethod_TextAttribute_Handler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
        <Parameter Name="textAttribute" Type="Android.Views.InputMethods.TextAttribute" />
      </Parameters>
      <Docs>
        <param name="text">The text to commit. This may include styles.</param>
        <param name="newCursorPosition">The new cursor position around the text,
                   in Java characters. If &gt; 0, this is relative to the end
                   of the text - 1; if &lt;= 0, this is relative to the start
                   of the text. So a value of 1 will always advance the cursor
                   to the position after the full text being inserted. Note that
                   this means you can't position the cursor within the text,
                   because the editor can make modifications to the text
                   you are providing so it is not possible to correctly specify
                   locations there.</param>
        <param name="textAttribute">The extra information about the text.</param>
        <summary>The variant of <c>InputConnection#commitText(CharSequence, int)</c>.</summary>
        <returns>true on success, false if the input connection is no longer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#commitText(java.lang.CharSequence,%20int,%20android.view.inputmethod.TextAttribute)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.commitText(java.lang.CharSequence, int, android.view.inputmethod.TextAttribute)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitText">
      <MemberSignature Language="C#" Value="public virtual bool CommitText (string text, int newCursorPosition, Android.Views.InputMethods.TextAttribute? textAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitText(string text, int32 newCursorPosition, class Android.Views.InputMethods.TextAttribute textAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.CommitText(System.String,System.Int32,Android.Views.InputMethods.TextAttribute)" />
      <MemberSignature Language="F#" Value="abstract member CommitText : string * int * Android.Views.InputMethods.TextAttribute -&gt; bool&#xA;override this.CommitText : string * int * Android.Views.InputMethods.TextAttribute -&gt; bool" Usage="iInputConnection.CommitText (text, newCursorPosition, textAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
        <Parameter Name="textAttribute" Type="Android.Views.InputMethods.TextAttribute" />
      </Parameters>
      <Docs>
        <param name="text">The text to commit. This may include styles.</param>
        <param name="newCursorPosition">The new cursor position around the text,
                   in Java characters. If &gt; 0, this is relative to the end
                   of the text - 1; if &lt;= 0, this is relative to the start
                   of the text. So a value of 1 will always advance the cursor
                   to the position after the full text being inserted. Note that
                   this means you can't position the cursor within the text,
                   because the editor can make modifications to the text
                   you are providing so it is not possible to correctly specify
                   locations there.</param>
        <param name="textAttribute">The extra information about the text.</param>
        <summary>The variant of <c>InputConnection#commitText(CharSequence, int)</c>.</summary>
        <returns>true on success, false if the input connection is no longer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#commitText(java.lang.CharSequence,%20int,%20android.view.inputmethod.TextAttribute)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.commitText(java.lang.CharSequence, int, android.view.inputmethod.TextAttribute)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSurroundingText">
      <MemberSignature Language="C#" Value="public bool DeleteSurroundingText (int beforeLength, int afterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteSurroundingText(int32 beforeLength, int32 afterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.DeleteSurroundingText(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSurroundingText : int * int -&gt; bool" Usage="iInputConnection.DeleteSurroundingText (beforeLength, afterLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteSurroundingText", "(II)Z", "GetDeleteSurroundingText_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteSurroundingText", "(II)Z", "GetDeleteSurroundingText_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beforeLength" Type="System.Int32" />
        <Parameter Name="afterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="beforeLength">The number of characters before the cursor to be deleted, in code unit.
                   If this is greater than the number of existing characters between the beginning of the
                   text and the cursor, then this method does not fail but deletes all the characters in
                   that range.</param>
        <param name="afterLength">The number of characters after the cursor to be deleted, in code unit.
                   If this is greater than the number of existing characters between the cursor and
                   the end of the text, then this method does not fail but deletes all the characters in
                   that range.</param>
        <summary>Delete &lt;var&gt;beforeLength&lt;/var&gt; characters of text before the
            current cursor position, and delete &lt;var&gt;afterLength&lt;/var&gt;
            characters of text after the current cursor position, excluding
            the selection.</summary>
        <returns>true on success, false if the input connection is no longer valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#deleteSurroundingText(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.deleteSurroundingText(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSurroundingTextInCodePoints">
      <MemberSignature Language="C#" Value="public bool DeleteSurroundingTextInCodePoints (int beforeLength, int afterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteSurroundingTextInCodePoints(int32 beforeLength, int32 afterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.DeleteSurroundingTextInCodePoints(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSurroundingTextInCodePoints : int * int -&gt; bool" Usage="iInputConnection.DeleteSurroundingTextInCodePoints (beforeLength, afterLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deleteSurroundingTextInCodePoints", "(II)Z", "GetDeleteSurroundingTextInCodePoints_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deleteSurroundingTextInCodePoints", "(II)Z", "GetDeleteSurroundingTextInCodePoints_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beforeLength" Type="System.Int32" />
        <Parameter Name="afterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="beforeLength">The number of characters before the cursor to be deleted, in code points.
                   If this is greater than the number of existing characters between the beginning of the
                   text and the cursor, then this method does not fail but deletes all the characters in
                   that range.</param>
        <param name="afterLength">The number of characters after the cursor to be deleted, in code points.
                   If this is greater than the number of existing characters between the cursor and
                   the end of the text, then this method does not fail but deletes all the characters in
                   that range.</param>
        <summary>A variant of <c>#deleteSurroundingText(int, int)</c>.</summary>
        <returns>
          <c>true</c> on success, <c>false</c> if the input connection is no longer valid.
                    Before Android <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, this API returned
                    <c>false</c> when the target application does not implement this method.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#deleteSurroundingTextInCodePoints(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.deleteSurroundingTextInCodePoints(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBatchEdit">
      <MemberSignature Language="C#" Value="public bool EndBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndBatchEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.EndBatchEdit" />
      <MemberSignature Language="F#" Value="abstract member EndBatchEdit : unit -&gt; bool" Usage="iInputConnection.EndBatchEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endBatchEdit", "()Z", "GetEndBatchEditHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endBatchEdit", "()Z", "GetEndBatchEditHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tell the editor that you are done with a batch edit previously initiated with
            <c>#beginBatchEdit()</c>.</summary>
        <returns>For editor authors, you must return <c>true</c> if a batch edit is still in progress
                    after closing the latest one (in other words, if the nesting count is still a
                    positive number). Return <c>false</c> otherwise.  For IME authors, you will
                    always receive <c>true</c> as long as the request was sent to the editor, and
                    receive <c>false</c> only if the input connection is no longer valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#endBatchEdit()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.endBatchEdit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FinishComposingText">
      <MemberSignature Language="C#" Value="public bool FinishComposingText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FinishComposingText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.FinishComposingText" />
      <MemberSignature Language="F#" Value="abstract member FinishComposingText : unit -&gt; bool" Usage="iInputConnection.FinishComposingText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishComposingText", "()Z", "GetFinishComposingTextHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishComposingText", "()Z", "GetFinishComposingTextHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Have the text editor finish whatever composing text is
            currently active.</summary>
        <returns>true on success, false if the input connection
            is no longer valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#finishComposingText()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.finishComposingText()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetCursorCapsMode">
      <MemberSignature Language="C#" Value="public Android.Text.CapitalizationMode GetCursorCapsMode (Android.Text.CapitalizationMode reqModes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Text.CapitalizationMode GetCursorCapsMode(valuetype Android.Text.CapitalizationMode reqModes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.GetCursorCapsMode(Android.Text.CapitalizationMode)" />
      <MemberSignature Language="F#" Value="abstract member GetCursorCapsMode : Android.Text.CapitalizationMode -&gt; Android.Text.CapitalizationMode" Usage="iInputConnection.GetCursorCapsMode reqModes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCursorCapsMode", "(I)I", "GetGetCursorCapsMode_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCursorCapsMode", "(I)I", "GetGetCursorCapsMode_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.CapitalizationMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqModes" Type="Android.Text.CapitalizationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reqModes">The desired modes to retrieve, as defined by
            <c>android.text.TextUtils#getCapsMode TextUtils.getCapsMode</c>. These
            constants are defined so that you can simply pass the current
            <c>EditorInfo#inputType TextBoxAttribute.contentType</c> value
            directly in to here.</param>
        <summary>Retrieve the current capitalization mode in effect at the
            current cursor position in the text.</summary>
        <returns>the caps mode flags that are in effect at the current
            cursor position. See TYPE_TEXT_FLAG_CAPS_* in <c>android.text.InputType</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#getCursorCapsMode(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.getCursorCapsMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetExtractedText">
      <MemberSignature Language="C#" Value="public Android.Views.InputMethods.ExtractedText? GetExtractedText (Android.Views.InputMethods.ExtractedTextRequest? request, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.ExtractedText GetExtractedText(class Android.Views.InputMethods.ExtractedTextRequest request, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.GetExtractedText(Android.Views.InputMethods.ExtractedTextRequest,Android.Views.InputMethods.GetTextFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetExtractedText : Android.Views.InputMethods.ExtractedTextRequest * Android.Views.InputMethods.GetTextFlags -&gt; Android.Views.InputMethods.ExtractedText" Usage="iInputConnection.GetExtractedText (request, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExtractedText", "(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;", "GetGetExtractedText_Landroid_view_inputmethod_ExtractedTextRequest_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getExtractedText", "(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;", "GetGetExtractedText_Landroid_view_inputmethod_ExtractedTextRequest_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.ExtractedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Views.InputMethods.ExtractedTextRequest" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="request">Description of how the text should be returned.
            <c>android.view.inputmethod.ExtractedTextRequest</c></param>
        <param name="flags">Additional options to control the client, either <c>0</c> or
            <c>#GET_EXTRACTED_TEXT_MONITOR</c>.</param>
        <summary>Retrieve the current text in the input connection's editor, and
            monitor for any changes to it.</summary>
        <returns>an <c>android.view.inputmethod.ExtractedText</c>
            object describing the state of the text view and containing the
            extracted text itself, or null if the input connection is no
            longer valid of the editor can't comply with the request for
            some reason.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#getExtractedText(android.view.inputmethod.ExtractedTextRequest,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedTextFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? GetSelectedTextFormatted (Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetSelectedTextFormatted(valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.GetSelectedTextFormatted(Android.Views.InputMethods.GetTextFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetSelectedTextFormatted : Android.Views.InputMethods.GetTextFlags -&gt; Java.Lang.ICharSequence" Usage="iInputConnection.GetSelectedTextFormatted flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSelectedText", "(I)Ljava/lang/CharSequence;", "GetGetSelectedText_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSelectedText", "(I)Ljava/lang/CharSequence;", "GetGetSelectedText_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Supplies additional options controlling how the text is
            returned. May be either <c>0</c> or <c>#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Gets the selected text, if any.</summary>
        <returns>the text that is currently selected, if any, or <c>null</c> if no text is selected.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#getSelectedText(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.getSelectedText(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetSurroundingText">
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.SurroundingText? GetSurroundingText (int beforeLength, int afterLength, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.SurroundingText GetSurroundingText(int32 beforeLength, int32 afterLength, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.GetSurroundingText(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetSurroundingText : int * int * int -&gt; Android.Views.InputMethods.SurroundingText&#xA;override this.GetSurroundingText : int * int * int -&gt; Android.Views.InputMethods.SurroundingText" Usage="iInputConnection.GetSurroundingText (beforeLength, afterLength, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSurroundingText", "(III)Landroid/view/inputmethod/SurroundingText;", "GetGetSurroundingText_IIIHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSurroundingText", "(III)Landroid/view/inputmethod/SurroundingText;", "GetGetSurroundingText_IIIHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.SurroundingText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beforeLength" Type="System.Int32" />
        <Parameter Name="afterLength" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="beforeLength">The expected length of the text before the cursor.</param>
        <param name="afterLength">The expected length of the text after the cursor.</param>
        <param name="flags">Supplies additional options controlling how the text is returned. May be either
                         <c>0</c> or <c>#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Gets the surrounding text around the current cursor, with &lt;var&gt;beforeLength&lt;/var&gt; characters
            of text before the cursor (start of the selection), &lt;var&gt;afterLength&lt;/var&gt; characters of text
            after the cursor (end of the selection), and all of the selected text.</summary>
        <returns>an <c>android.view.inputmethod.SurroundingText</c> object describing the surrounding
            text and state of selection, or null if the input connection is no longer valid, or the
            editor can't comply with the request for some reason, or the application does not implement
            this method. The length of the returned text might be less than the sum of
            &lt;var&gt;beforeLength&lt;/var&gt; and &lt;var&gt;afterLength&lt;/var&gt; .</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#getSurroundingText(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.getSurroundingText(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextAfterCursorFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? GetTextAfterCursorFormatted (int n, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextAfterCursorFormatted(int32 n, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.GetTextAfterCursorFormatted(System.Int32,Android.Views.InputMethods.GetTextFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetTextAfterCursorFormatted : int * Android.Views.InputMethods.GetTextFlags -&gt; Java.Lang.ICharSequence" Usage="iInputConnection.GetTextAfterCursorFormatted (n, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextAfterCursor", "(II)Ljava/lang/CharSequence;", "GetGetTextAfterCursor_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextAfterCursor", "(II)Ljava/lang/CharSequence;", "GetGetTextAfterCursor_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="n">The expected length of the text. This must be non-negative.</param>
        <param name="flags">Supplies additional options controlling how the text is
            returned. May be either <c>0</c> or <c>#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Get &lt;var&gt;n&lt;/var&gt; characters of text after the current cursor
            position.</summary>
        <returns>the text after the cursor position; the length of the
            returned text might be less than &lt;var&gt;n&lt;/var&gt;.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#getTextAfterCursor(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.getTextAfterCursor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetTextBeforeCursorFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? GetTextBeforeCursorFormatted (int n, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextBeforeCursorFormatted(int32 n, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.GetTextBeforeCursorFormatted(System.Int32,Android.Views.InputMethods.GetTextFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetTextBeforeCursorFormatted : int * Android.Views.InputMethods.GetTextFlags -&gt; Java.Lang.ICharSequence" Usage="iInputConnection.GetTextBeforeCursorFormatted (n, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextBeforeCursor", "(II)Ljava/lang/CharSequence;", "GetGetTextBeforeCursor_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextBeforeCursor", "(II)Ljava/lang/CharSequence;", "GetGetTextBeforeCursor_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="n">The expected length of the text. This must be non-negative.</param>
        <param name="flags">Supplies additional options controlling how the text is
            returned. May be either <c>0</c> or <c>#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Get &lt;var&gt;n&lt;/var&gt; characters of text before the current cursor
            position.</summary>
        <returns>the text before the cursor position; the length of the
            returned text might be less than &lt;var&gt;n&lt;/var&gt;.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#getTextBeforeCursor(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.getTextBeforeCursor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Android.OS.Handler? Handler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Handler Handler" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.IInputConnection.Handler" />
      <MemberSignature Language="F#" Value="member this.Handler : Android.OS.Handler" Usage="Android.Views.InputMethods.IInputConnection.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandler", "()Landroid/os/Handler;", "GetGetHandlerHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandler", "()Landroid/os/Handler;", "GetGetHandlerHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Handler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformContextMenuAction">
      <MemberSignature Language="C#" Value="public bool PerformContextMenuAction (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformContextMenuAction(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.PerformContextMenuAction(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PerformContextMenuAction : int -&gt; bool" Usage="iInputConnection.PerformContextMenuAction id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performContextMenuAction", "(I)Z", "GetPerformContextMenuAction_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performContextMenuAction", "(I)Z", "GetPerformContextMenuAction_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Perform a context menu action on the field.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#performContextMenuAction(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.performContextMenuAction(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformEditorAction">
      <MemberSignature Language="C#" Value="public bool PerformEditorAction (Android.Views.InputMethods.ImeAction editorAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformEditorAction(valuetype Android.Views.InputMethods.ImeAction editorAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.PerformEditorAction(Android.Views.InputMethods.ImeAction)" />
      <MemberSignature Language="F#" Value="abstract member PerformEditorAction : Android.Views.InputMethods.ImeAction -&gt; bool" Usage="iInputConnection.PerformEditorAction editorAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performEditorAction", "(I)Z", "GetPerformEditorAction_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performEditorAction", "(I)Z", "GetPerformEditorAction_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorAction" Type="Android.Views.InputMethods.ImeAction">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="editorAction">This must be one of the action constants for
            <c>EditorInfo#imeOptions EditorInfo.imeOptions</c>, such as
            <c>EditorInfo#IME_ACTION_GO EditorInfo.EDITOR_ACTION_GO</c>, or the value of
            <c>EditorInfo#actionId EditorInfo.actionId</c> if a custom action is available.</param>
        <summary>Have the editor perform an action it has said it can do.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#performEditorAction(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.performEditorAction(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformPrivateCommand">
      <MemberSignature Language="C#" Value="public bool PerformPrivateCommand (string? action, Android.OS.Bundle? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformPrivateCommand(string action, class Android.OS.Bundle data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.PerformPrivateCommand(System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member PerformPrivateCommand : string * Android.OS.Bundle -&gt; bool" Usage="iInputConnection.PerformPrivateCommand (action, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)Z", "GetPerformPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)Z", "GetPerformPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">Name of the command to be performed. This <i>must</i>
            be a scoped name, i.e. prefixed with a package name you own, so that
            different developers will not create conflicting commands.</param>
        <param name="data">Any data to include with the command.</param>
        <summary>API to send private commands from an input method to its
            connected editor.</summary>
        <returns>true if the command was sent (whether or not the
            associated editor understood it), false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#performPrivateCommand(java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.performPrivateCommand(java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformSpellCheck">
      <MemberSignature Language="C#" Value="public virtual bool PerformSpellCheck ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformSpellCheck() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.PerformSpellCheck" />
      <MemberSignature Language="F#" Value="abstract member PerformSpellCheck : unit -&gt; bool&#xA;override this.PerformSpellCheck : unit -&gt; bool" Usage="iInputConnection.PerformSpellCheck " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performSpellCheck", "()Z", "GetPerformSpellCheckHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performSpellCheck", "()Z", "GetPerformSpellCheckHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Have the editor perform spell checking for the full content.</summary>
        <returns>For editor authors, the return value will always be ignored. For IME authors, this
                    method returns true if the spell check request was sent (whether or not the
                    associated editor supports spell checking), false if the input connection is no
                    longer valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#performSpellCheck()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.performSpellCheck()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportFullscreenMode">
      <MemberSignature Language="C#" Value="public bool ReportFullscreenMode (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReportFullscreenMode(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.ReportFullscreenMode(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ReportFullscreenMode : bool -&gt; bool" Usage="iInputConnection.ReportFullscreenMode enabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reportFullscreenMode", "(Z)Z", "GetReportFullscreenMode_ZHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reportFullscreenMode", "(Z)Z", "GetReportFullscreenMode_ZHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>Called back when the connected IME switches between fullscreen and normal modes.</summary>
        <returns>For editor authors, the return value will always be ignored. For IME authors, this
                    always returns <c>true</c> on <c>android.os.Build.VERSION_CODES#N_MR1</c> and prior
                    devices and <c>false</c> on <c>android.os.Build.VERSION_CODES#O</c> and later
                    devices.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#reportFullscreenMode(boolean)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.reportFullscreenMode(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RequestCursorUpdates">
      <MemberSignature Language="C#" Value="public bool RequestCursorUpdates (int cursorUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestCursorUpdates(int32 cursorUpdateMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.RequestCursorUpdates(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RequestCursorUpdates : int -&gt; bool" Usage="iInputConnection.RequestCursorUpdates cursorUpdateMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestCursorUpdates", "(I)Z", "GetRequestCursorUpdates_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestCursorUpdates", "(I)Z", "GetRequestCursorUpdates_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorUpdateMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cursorUpdateMode">any combination of update modes and filters:
            <c>#CURSOR_UPDATE_IMMEDIATE</c>, <c>#CURSOR_UPDATE_MONITOR</c>, and date filters:
            <c>#CURSOR_UPDATE_FILTER_CHARACTER_BOUNDS</c>, <c>#CURSOR_UPDATE_FILTER_EDITOR_BOUNDS</c>,
            <c>#CURSOR_UPDATE_FILTER_INSERTION_MARKER</c>.
            Pass <c>0</c> to disable them. However, if an unknown flag is provided, request will be
            rejected and method will return <c>false</c>.</param>
        <summary>Called by the input method to ask the editor for calling back
            <c>InputMethodManager#updateCursorAnchorInfo(android.view.View, CursorAnchorInfo)</c> to
            notify cursor/anchor locations.</summary>
        <returns>
          <c>true</c> if the request is scheduled. <c>false</c> to indicate that when the
                    application will not call <c>InputMethodManager#updateCursorAnchorInfo(
                    android.view.View, CursorAnchorInfo)</c>.
                    Since Android <c>android.os.Build.VERSION_CODES#N</c> until
                    <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, this API returned <c>false</c> when
                    the target application does not implement this method.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#requestCursorUpdates(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.requestCursorUpdates(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestCursorUpdates">
      <MemberSignature Language="C#" Value="public virtual bool RequestCursorUpdates (int cursorUpdateMode, int cursorUpdateFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestCursorUpdates(int32 cursorUpdateMode, int32 cursorUpdateFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.RequestCursorUpdates(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RequestCursorUpdates : int * int -&gt; bool&#xA;override this.RequestCursorUpdates : int * int -&gt; bool" Usage="iInputConnection.RequestCursorUpdates (cursorUpdateMode, cursorUpdateFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestCursorUpdates", "(II)Z", "GetRequestCursorUpdates_IIHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestCursorUpdates", "(II)Z", "GetRequestCursorUpdates_IIHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorUpdateMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cursorUpdateFilter" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "CursorUpdateFilterEditorBounds", "CursorUpdateFilterCharacterBounds", "CursorUpdateFilterInsertionMarker" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "CursorUpdateFilterEditorBounds", "CursorUpdateFilterCharacterBounds", "CursorUpdateFilterInsertionMarker" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cursorUpdateMode">combination of update modes:
            <c>#CURSOR_UPDATE_IMMEDIATE</c>, <c>#CURSOR_UPDATE_MONITOR</c></param>
        <param name="cursorUpdateFilter">any combination of data filters:
            <c>#CURSOR_UPDATE_FILTER_CHARACTER_BOUNDS</c>, <c>#CURSOR_UPDATE_FILTER_EDITOR_BOUNDS</c>,
            <c>#CURSOR_UPDATE_FILTER_INSERTION_MARKER</c>.
            
            &lt;p&gt;Pass <c>0</c> to disable them. However, if an unknown flag is provided, request will be
            rejected and method will return <c>false</c>.&lt;/p&gt;</param>
        <summary>Called by the input method to ask the editor for calling back
            <c>InputMethodManager#updateCursorAnchorInfo(android.view.View, CursorAnchorInfo)</c> to
            notify cursor/anchor locations.</summary>
        <returns>
          <c>true</c> if the request is scheduled. <c>false</c> to indicate that when the
                    application will not call <c>InputMethodManager#updateCursorAnchorInfo(
                    android.view.View, CursorAnchorInfo)</c>.
                    Since Android <c>android.os.Build.VERSION_CODES#N</c> until
                    <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, this API returned <c>false</c> when
                    the target application does not implement this method.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#requestCursorUpdates(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.requestCursorUpdates(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeyEvent">
      <MemberSignature Language="C#" Value="public bool SendKeyEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SendKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member SendKeyEvent : Android.Views.KeyEvent -&gt; bool" Usage="iInputConnection.SendKeyEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSendKeyEvent_Landroid_view_KeyEvent_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSendKeyEvent_Landroid_view_KeyEvent_Handler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event.</param>
        <param name="event">The key event.</param>
        <summary>Send a key event to the process that is currently attached
            through this input connection.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#sendKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.sendKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="T:Android.Views.KeyEvent" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingRegion">
      <MemberSignature Language="C#" Value="public bool SetComposingRegion (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingRegion(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetComposingRegion(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetComposingRegion : int * int -&gt; bool" Usage="iInputConnection.SetComposingRegion (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setComposingRegion", "(II)Z", "GetSetComposingRegion_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setComposingRegion", "(II)Z", "GetSetComposingRegion_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the position in the text at which the composing region begins</param>
        <param name="end">the position in the text at which the composing region ends</param>
        <summary>Mark a certain region of text as composing text.</summary>
        <returns>
          <c>true</c> on success, <c>false</c> if the input connection is no longer valid.
                    Since Android <c>android.os.Build.VERSION_CODES#N</c> until
                    <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, this API returned <c>false</c> when
                    the target application does not implement this method.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setComposingRegion(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setComposingRegion(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingRegion">
      <MemberSignature Language="C#" Value="public virtual bool SetComposingRegion (int start, int end, Android.Views.InputMethods.TextAttribute? textAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingRegion(int32 start, int32 end, class Android.Views.InputMethods.TextAttribute textAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetComposingRegion(System.Int32,System.Int32,Android.Views.InputMethods.TextAttribute)" />
      <MemberSignature Language="F#" Value="abstract member SetComposingRegion : int * int * Android.Views.InputMethods.TextAttribute -&gt; bool&#xA;override this.SetComposingRegion : int * int * Android.Views.InputMethods.TextAttribute -&gt; bool" Usage="iInputConnection.SetComposingRegion (start, end, textAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setComposingRegion", "(IILandroid/view/inputmethod/TextAttribute;)Z", "GetSetComposingRegion_IILandroid_view_inputmethod_TextAttribute_Handler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setComposingRegion", "(IILandroid/view/inputmethod/TextAttribute;)Z", "GetSetComposingRegion_IILandroid_view_inputmethod_TextAttribute_Handler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="textAttribute" Type="Android.Views.InputMethods.TextAttribute" />
      </Parameters>
      <Docs>
        <param name="start">the position in the text at which the composing region begins</param>
        <param name="end">the position in the text at which the composing region ends</param>
        <param name="textAttribute">The extra information about the text.</param>
        <summary>The variant of <c>InputConnection#setComposingRegion(int, int)</c>.</summary>
        <returns>
          <c>true</c> on success, <c>false</c> if the input connection is no longer valid.
                    Since Android <c>android.os.Build.VERSION_CODES#N</c> until
                    <c>android.os.Build.VERSION_CODES#TIRAMISU</c>, this API returned <c>false</c> when
                    the target application does not implement this method.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setComposingRegion(int,%20int,%20android.view.inputmethod.TextAttribute)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setComposingRegion(int, int, android.view.inputmethod.TextAttribute)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComposingText">
      <MemberSignature Language="C#" Value="public bool SetComposingText (Java.Lang.ICharSequence? text, int newCursorPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingText(class Java.Lang.ICharSequence text, int32 newCursorPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetComposingText(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetComposingText : Java.Lang.ICharSequence * int -&gt; bool" Usage="iInputConnection.SetComposingText (text, newCursorPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setComposingText", "(Ljava/lang/CharSequence;I)Z", "GetSetComposingText_Ljava_lang_CharSequence_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setComposingText", "(Ljava/lang/CharSequence;I)Z", "GetSetComposingText_Ljava_lang_CharSequence_IHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The composing text with styles if necessary. If no style
                   object attached to the text, the default style for composing text
                   is used. See <c>android.text.Spanned</c> for how to attach style
                   object to the text. <c>android.text.SpannableString</c> and
                   <c>android.text.SpannableStringBuilder</c> are two
                   implementations of the interface <c>android.text.Spanned</c>.</param>
        <param name="newCursorPosition">The new cursor position around the text. If
                   &gt; 0, this is relative to the end of the text - 1; if &lt;= 0, this
                   is relative to the start of the text. So a value of 1 will
                   always advance you to the position after the full text being
                   inserted. Note that this means you can't position the cursor
                   within the text, because the editor can make modifications to
                   the text you are providing so it is not possible to correctly
                   specify locations there.</param>
        <summary>Replace the currently composing text with the given text, and
            set the new cursor position.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setComposingText(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setComposingText(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingText">
      <MemberSignature Language="C#" Value="public virtual bool SetComposingText (Java.Lang.ICharSequence text, int newCursorPosition, Android.Views.InputMethods.TextAttribute? textAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingText(class Java.Lang.ICharSequence text, int32 newCursorPosition, class Android.Views.InputMethods.TextAttribute textAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetComposingText(Java.Lang.ICharSequence,System.Int32,Android.Views.InputMethods.TextAttribute)" />
      <MemberSignature Language="F#" Value="abstract member SetComposingText : Java.Lang.ICharSequence * int * Android.Views.InputMethods.TextAttribute -&gt; bool&#xA;override this.SetComposingText : Java.Lang.ICharSequence * int * Android.Views.InputMethods.TextAttribute -&gt; bool" Usage="iInputConnection.SetComposingText (text, newCursorPosition, textAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setComposingText", "(Ljava/lang/CharSequence;ILandroid/view/inputmethod/TextAttribute;)Z", "GetSetComposingText_Ljava_lang_CharSequence_ILandroid_view_inputmethod_TextAttribute_Handler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setComposingText", "(Ljava/lang/CharSequence;ILandroid/view/inputmethod/TextAttribute;)Z", "GetSetComposingText_Ljava_lang_CharSequence_ILandroid_view_inputmethod_TextAttribute_Handler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
        <Parameter Name="textAttribute" Type="Android.Views.InputMethods.TextAttribute" />
      </Parameters>
      <Docs>
        <param name="text">The composing text with styles if necessary. If no style
                   object attached to the text, the default style for composing text
                   is used. See <c>android.text.Spanned</c> for how to attach style
                   object to the text. <c>android.text.SpannableString</c> and
                   <c>android.text.SpannableStringBuilder</c> are two
                   implementations of the interface <c>android.text.Spanned</c>.</param>
        <param name="newCursorPosition">The new cursor position around the text. If
                   &gt; 0, this is relative to the end of the text - 1; if &lt;= 0, this
                   is relative to the start of the text. So a value of 1 will
                   always advance you to the position after the full text being
                   inserted. Note that this means you can't position the cursor
                   within the text, because the editor can make modifications to
                   the text you are providing so it is not possible to correctly
                   specify locations there.</param>
        <param name="textAttribute">The extra information about the text.</param>
        <summary>The variant of <c>#setComposingText(CharSequence, int)</c>.</summary>
        <returns>true on success, false if the input connection is no longer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setComposingText(java.lang.CharSequence,%20int,%20android.view.inputmethod.TextAttribute)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setComposingText(java.lang.CharSequence, int, android.view.inputmethod.TextAttribute)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComposingText">
      <MemberSignature Language="C#" Value="public virtual bool SetComposingText (string text, int newCursorPosition, Android.Views.InputMethods.TextAttribute? textAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingText(string text, int32 newCursorPosition, class Android.Views.InputMethods.TextAttribute textAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetComposingText(System.String,System.Int32,Android.Views.InputMethods.TextAttribute)" />
      <MemberSignature Language="F#" Value="abstract member SetComposingText : string * int * Android.Views.InputMethods.TextAttribute -&gt; bool&#xA;override this.SetComposingText : string * int * Android.Views.InputMethods.TextAttribute -&gt; bool" Usage="iInputConnection.SetComposingText (text, newCursorPosition, textAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
        <Parameter Name="textAttribute" Type="Android.Views.InputMethods.TextAttribute" />
      </Parameters>
      <Docs>
        <param name="text">The composing text with styles if necessary. If no style
                   object attached to the text, the default style for composing text
                   is used. See <c>android.text.Spanned</c> for how to attach style
                   object to the text. <c>android.text.SpannableString</c> and
                   <c>android.text.SpannableStringBuilder</c> are two
                   implementations of the interface <c>android.text.Spanned</c>.</param>
        <param name="newCursorPosition">The new cursor position around the text. If
                   &gt; 0, this is relative to the end of the text - 1; if &lt;= 0, this
                   is relative to the start of the text. So a value of 1 will
                   always advance you to the position after the full text being
                   inserted. Note that this means you can't position the cursor
                   within the text, because the editor can make modifications to
                   the text you are providing so it is not possible to correctly
                   specify locations there.</param>
        <param name="textAttribute">The extra information about the text.</param>
        <summary>The variant of <c>#setComposingText(CharSequence, int)</c>.</summary>
        <returns>true on success, false if the input connection is no longer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setComposingText(java.lang.CharSequence,%20int,%20android.view.inputmethod.TextAttribute)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setComposingText(java.lang.CharSequence, int, android.view.inputmethod.TextAttribute)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImeConsumesInput">
      <MemberSignature Language="C#" Value="public virtual bool SetImeConsumesInput (bool imeConsumesInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetImeConsumesInput(bool imeConsumesInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetImeConsumesInput(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetImeConsumesInput : bool -&gt; bool&#xA;override this.SetImeConsumesInput : bool -&gt; bool" Usage="iInputConnection.SetImeConsumesInput imeConsumesInput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setImeConsumesInput", "(Z)Z", "GetSetImeConsumesInput_ZHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setImeConsumesInput", "(Z)Z", "GetSetImeConsumesInput_ZHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeConsumesInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="imeConsumesInput">
          <c>true</c> when the IME is consuming input and the cursor should be
            hidden, <c>false</c> when input to the editor resumes and the cursor should be shown again.</param>
        <summary>Called by the input method to indicate that it consumes all input for itself, or no longer
            does so.</summary>
        <returns>For editor authors, the return value will always be ignored. For IME authors, this
                    method returns <c>true</c> if the request was sent (whether or not the associated
                    editor does something based on this request), <c>false</c> if the input connection
                    is no longer valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setImeConsumesInput(boolean)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setImeConsumesInput(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelection">
      <MemberSignature Language="C#" Value="public bool SetSelection (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSelection(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.SetSelection(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetSelection : int * int -&gt; bool" Usage="iInputConnection.SetSelection (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSelection", "(II)Z", "GetSetSelection_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSelection", "(II)Z", "GetSetSelection_IIHandler:Android.Views.InputMethods.IInputConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the character index where the selection should start.</param>
        <param name="end">the character index where the selection should end.</param>
        <summary>Set the selection of the text editor.</summary>
        <returns>true on success, false if the input connection is no longer
            valid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#setSelection(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.setSelection(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="TakeSnapshot">
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.TextSnapshot? TakeSnapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.TextSnapshot TakeSnapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.IInputConnection.TakeSnapshot" />
      <MemberSignature Language="F#" Value="abstract member TakeSnapshot : unit -&gt; Android.Views.InputMethods.TextSnapshot&#xA;override this.TakeSnapshot : unit -&gt; Android.Views.InputMethods.TextSnapshot" Usage="iInputConnection.TakeSnapshot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeSnapshot", "()Landroid/view/inputmethod/TextSnapshot;", "GetTakeSnapshotHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeSnapshot", "()Landroid/view/inputmethod/TextSnapshot;", "GetTakeSnapshotHandler:Android.Views.InputMethods.IInputConnection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.TextSnapshot</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the system when it needs to take a snapshot of multiple text-related data in an
            atomic manner.</summary>
        <returns>
          <c>null</c> if <c>TextSnapshot</c> is unavailable and/or this API is called from
                    IMEs.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputConnection#takeSnapshot()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputConnection.takeSnapshot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
