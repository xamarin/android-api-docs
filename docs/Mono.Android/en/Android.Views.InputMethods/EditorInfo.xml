<Type Name="EditorInfo" FullName="Android.Views.InputMethods.EditorInfo">
  <TypeSignature Language="C#" Value="public class EditorInfo : Java.Lang.Object, Android.OS.IParcelable, Android.Text.IInputType, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorInfo extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Android.Text.IInputType, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.InputMethods.EditorInfo" />
  <TypeSignature Language="F#" Value="type EditorInfo = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IInputType" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.IInputType</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/inputmethod/EditorInfo", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/inputmethod/EditorInfo", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>An EditorInfo describes several attributes of a text editing object
            that an input method is communicating with (typically an EditText), most
            importantly the type of text content it contains and the current cursor position.</summary>
    <remarks>
      <para>An EditorInfo describes several attributes of a text editing object
            that an input method is communicating with (typically an EditText), most
            importantly the type of text content it contains and the current cursor position.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorInfo (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.InputMethods.EditorInfo : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.InputMethods.EditorInfo" Usage="new Android.Views.InputMethods.EditorInfo (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionId">
      <MemberSignature Language="C#" Value="public int ActionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActionId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.ActionId" />
      <MemberSignature Language="F#" Value="member this.ActionId : int with get, set" Usage="Android.Views.InputMethods.EditorInfo.ActionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("actionId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("actionId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If <c>#actionLabel</c> has been given, this is the id for that command
            when the user presses its button that is delivered back with
            <c>InputConnection#performEditorAction(int)
            InputConnection.performEditorAction()</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If <c>#actionLabel</c> has been given, this is the id for that command
            when the user presses its button that is delivered back with
            <c>InputConnection#performEditorAction(int)
            InputConnection.performEditorAction()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#actionId" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.actionId</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ActionLabel">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? ActionLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence ActionLabel" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.ActionLabel" />
      <MemberSignature Language="F#" Value="member this.ActionLabel : Java.Lang.ICharSequence with get, set" Usage="Android.Views.InputMethods.EditorInfo.ActionLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("actionLabel")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("actionLabel")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>In some cases an IME may be able to display an arbitrary label for
            a command the user can perform, which you can specify here.</summary>
        <value>To be added.</value>
        <remarks>
          <para>In some cases an IME may be able to display an arbitrary label for
            a command the user can perform, which you can specify here. This is
            typically used as the label for the action to use in-line as a replacement
            for the "enter" key (see <c>#actionId</c>). Remember the key where
            this will be displayed is typically very small, and there are significant
            localization challenges to make this fit in all supported languages. Also
            you can not count absolutely on this being used, as some IMEs may
            ignore this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#actionLabel" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.actionLabel</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ContentMimeTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt;? ContentMimeTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ContentMimeTypes" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.ContentMimeTypes" />
      <MemberSignature Language="F#" Value="member this.ContentMimeTypes : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Android.Views.InputMethods.EditorInfo.ContentMimeTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("contentMimeTypes", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("contentMimeTypes", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android25.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android25.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List of acceptable MIME types for
            <c>InputConnection#commitContent(InputContentInfo, int, Bundle)</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>List of acceptable MIME types for
            <c>InputConnection#commitContent(InputContentInfo, int, Bundle)</c>.</para>
          <para>
            <c>null</c> or an empty array means that
            <c>InputConnection#commitContent(InputContentInfo, int, Bundle)</c> is not supported in this
            editor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#contentMimeTypes" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.contentMimeTypes</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.Creator" />
      <MemberSignature Language="F#" Value="static member Creator : Android.OS.IParcelableCreator" Usage="Android.Views.InputMethods.EditorInfo.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used to make this class parcelable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#CREATOR" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.CREATOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="editorInfo.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public virtual void Dump (Android.Util.IPrinter? pw, string? prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(class Android.Util.IPrinter pw, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.Dump(Android.Util.IPrinter,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Dump : Android.Util.IPrinter * string -&gt; unit&#xA;override this.Dump : Android.Util.IPrinter * string -&gt; unit" Usage="editorInfo.Dump (pw, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dump", "(Landroid/util/Printer;Ljava/lang/String;)V", "GetDump_Landroid_util_Printer_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dump", "(Landroid/util/Printer;Ljava/lang/String;)V", "GetDump_Landroid_util_Printer_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pw" Type="Android.Util.IPrinter" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pw">To be added.</param>
        <param name="prefix">To be added.</param>
        <summary>Write debug output of this object.</summary>
        <remarks>
          <para>Write debug output of this object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#dump(android.util.Printer,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.dump(android.util.Printer, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Extras">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle? Extras { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle Extras" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.Extras" />
      <MemberSignature Language="F#" Value="member this.Extras : Android.OS.Bundle with get, set" Usage="Android.Views.InputMethods.EditorInfo.Extras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extras")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("extras")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Any extra data to supply to the input method.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Any extra data to supply to the input method.  This is for extended
            communication with specific input methods; the name fields in the
            bundle should be scoped (such as "com.mydomain.im.SOME_FIELD") so
            that they don't conflict with others.  This field can be
            filled in from the <c>android.R.attr#editorExtras</c>
            attribute of a TextView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#extras" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.extras</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FieldId">
      <MemberSignature Language="C#" Value="public int FieldId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.FieldId" />
      <MemberSignature Language="F#" Value="member this.FieldId : int with get, set" Usage="Android.Views.InputMethods.EditorInfo.FieldId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fieldId")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fieldId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifier for the editor's field.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Identifier for the editor's field.  This is optional, and may be
            0.  By default it is filled in with the result of
            <c>android.view.View#getId() View.getId()</c> on the View that
            is being edited.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#fieldId" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.fieldId</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FieldName">
      <MemberSignature Language="C#" Value="public string? FieldName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FieldName" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.FieldName" />
      <MemberSignature Language="F#" Value="member this.FieldName : string with get, set" Usage="Android.Views.InputMethods.EditorInfo.FieldName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fieldName")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fieldName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Additional name for the editor's field.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Additional name for the editor's field.  This can supply additional
            name information for the field.  By default it is null.  The actual
            contents have no meaning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#fieldName" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.fieldName</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetInitialSelectedText">
      <MemberSignature Language="C#" Value="public string? GetInitialSelectedText (int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetInitialSelectedText(int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialSelectedText(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetInitialSelectedText : int -&gt; string" Usage="editorInfo.GetInitialSelectedText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Supplies additional options controlling how the text is returned. May be
            either 0 or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Gets the selected text, if any.</summary>
        <returns>the text that is currently selected, if any. It could be an empty string when there
            is no text selected. When <c>null</c> is returned, the selected text might be too long or
            this protocol is not supported.</returns>
        <remarks>
          <para>Gets the selected text, if any. May be <c>null</c> when the protocol is not supported or the
            selected text is way too long.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialSelectedText(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialSelectedText(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialSelectedTextFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetInitialSelectedTextFormatted (int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetInitialSelectedTextFormatted(int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialSelectedTextFormatted(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetInitialSelectedTextFormatted : int -&gt; Java.Lang.ICharSequence&#xA;override this.GetInitialSelectedTextFormatted : int -&gt; Java.Lang.ICharSequence" Usage="editorInfo.GetInitialSelectedTextFormatted flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInitialSelectedText", "(I)Ljava/lang/CharSequence;", "GetGetInitialSelectedText_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInitialSelectedText", "(I)Ljava/lang/CharSequence;", "GetGetInitialSelectedText_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Supplies additional options controlling how the text is returned. May be
            either 0 or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Gets the selected text, if any.</summary>
        <returns>the text that is currently selected, if any. It could be an empty string when there
            is no text selected. When <c>null</c> is returned, the selected text might be too long or
            this protocol is not supported.</returns>
        <remarks>
          <para>Gets the selected text, if any. May be <c>null</c> when the protocol is not supported or the
            selected text is way too long.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialSelectedText(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialSelectedText(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialSurroundingText">
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.SurroundingText? GetInitialSurroundingText (int beforeLength, int afterLength, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.SurroundingText GetInitialSurroundingText(int32 beforeLength, int32 afterLength, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialSurroundingText(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetInitialSurroundingText : int * int * int -&gt; Android.Views.InputMethods.SurroundingText&#xA;override this.GetInitialSurroundingText : int * int * int -&gt; Android.Views.InputMethods.SurroundingText" Usage="editorInfo.GetInitialSurroundingText (beforeLength, afterLength, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInitialSurroundingText", "(III)Landroid/view/inputmethod/SurroundingText;", "GetGetInitialSurroundingText_IIIHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInitialSurroundingText", "(III)Landroid/view/inputmethod/SurroundingText;", "GetGetInitialSurroundingText_IIIHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.SurroundingText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beforeLength" Type="System.Int32" />
        <Parameter Name="afterLength" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="beforeLength">The expected length of the text before the cursor.</param>
        <param name="afterLength">The expected length of the text after the cursor.</param>
        <param name="flags">Supplies additional options controlling how the text is returned. May be either
            <c>0</c> or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Gets the surrounding text around the current cursor, with &lt;var&gt;beforeLength&lt;/var&gt; characters
            of text before the cursor (start of the selection), &lt;var&gt;afterLength&lt;/var&gt; characters of text
            after the cursor (end of the selection), and all of the selected text.</summary>
        <returns>an <c>android.view.inputmethod.SurroundingText</c> object describing the surrounding
            text and state of selection, or  <c>null</c> if the editor or system could not support this
            protocol.</returns>
        <remarks>
          <para>Gets the surrounding text around the current cursor, with &lt;var&gt;beforeLength&lt;/var&gt; characters
            of text before the cursor (start of the selection), &lt;var&gt;afterLength&lt;/var&gt; characters of text
            after the cursor (end of the selection), and all of the selected text.</para>
          <para>The initial surrounding text for return could be trimmed if oversize. Fundamental trimming
            rules are:</para>
          <para>&lt;ul&gt;
                &lt;li&gt;The text before the cursor is the most important information to IMEs.&lt;/li&gt;
                &lt;li&gt;The text after the cursor is the second important information to IMEs.&lt;/li&gt;
                &lt;li&gt;The selected text is the least important information but it shall NEVER be truncated.
                When it is too long, just drop it.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>For example, the subText can be viewed as TextBeforeCursor + Selection + TextAfterCursor.
            The result could be:</para>
          <para>&lt;ol&gt;
                &lt;li&gt;(maybeTrimmedAtHead)TextBeforeCursor + Selection
                + TextAfterCursor(maybeTrimmedAtTail)&lt;/li&gt;
                &lt;li&gt;(maybeTrimmedAtHead)TextBeforeCursor + TextAfterCursor(maybeTrimmedAtTail)&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialSurroundingText(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialSurroundingText(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialTextAfterCursor">
      <MemberSignature Language="C#" Value="public string? GetInitialTextAfterCursor (int length, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetInitialTextAfterCursor(int32 length, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialTextAfterCursor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetInitialTextAfterCursor : int * int -&gt; string" Usage="editorInfo.GetInitialTextAfterCursor (length, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="length">The expected length of the text.</param>
        <param name="flags">Supplies additional options controlling how the text is returned. May be
            either 0 or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Get &lt;var&gt;length&lt;/var&gt; characters of text after the current cursor position.</summary>
        <returns>the text after the cursor position; the length of the returned text might be less
            than &lt;var&gt;length&lt;/var&gt;. When there is no text after the cursor, an empty string will be
            returned. It could also be <c>null</c> when the editor or system could not support this
            protocol.</returns>
        <remarks>
          <para>Get &lt;var&gt;length&lt;/var&gt; characters of text after the current cursor position. May be
            <c>null</c> when the protocol is not supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialTextAfterCursor(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialTextAfterCursor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialTextAfterCursorFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetInitialTextAfterCursorFormatted (int length, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetInitialTextAfterCursorFormatted(int32 length, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialTextAfterCursorFormatted(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetInitialTextAfterCursorFormatted : int * int -&gt; Java.Lang.ICharSequence&#xA;override this.GetInitialTextAfterCursorFormatted : int * int -&gt; Java.Lang.ICharSequence" Usage="editorInfo.GetInitialTextAfterCursorFormatted (length, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInitialTextAfterCursor", "(II)Ljava/lang/CharSequence;", "GetGetInitialTextAfterCursor_IIHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInitialTextAfterCursor", "(II)Ljava/lang/CharSequence;", "GetGetInitialTextAfterCursor_IIHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="length">The expected length of the text.</param>
        <param name="flags">Supplies additional options controlling how the text is returned. May be
            either 0 or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Get &lt;var&gt;length&lt;/var&gt; characters of text after the current cursor position.</summary>
        <returns>the text after the cursor position; the length of the returned text might be less
            than &lt;var&gt;length&lt;/var&gt;. When there is no text after the cursor, an empty string will be
            returned. It could also be <c>null</c> when the editor or system could not support this
            protocol.</returns>
        <remarks>
          <para>Get &lt;var&gt;length&lt;/var&gt; characters of text after the current cursor position. May be
            <c>null</c> when the protocol is not supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialTextAfterCursor(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialTextAfterCursor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialTextBeforeCursor">
      <MemberSignature Language="C#" Value="public string? GetInitialTextBeforeCursor (int length, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetInitialTextBeforeCursor(int32 length, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialTextBeforeCursor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetInitialTextBeforeCursor : int * int -&gt; string" Usage="editorInfo.GetInitialTextBeforeCursor (length, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="length">The expected length of the text.</param>
        <param name="flags">Supplies additional options controlling how the text is returned. May be
            either 0 or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Get &lt;var&gt;length&lt;/var&gt; characters of text before the current cursor position.</summary>
        <returns>the text before the cursor position; the length of the returned text might be less
            than &lt;var&gt;length&lt;/var&gt;. When there is no text before the cursor, an empty string will be
            returned. It could also be <c>null</c> when the editor or system could not support this
            protocol.</returns>
        <remarks>
          <para>Get &lt;var&gt;length&lt;/var&gt; characters of text before the current cursor position. May be
            <c>null</c> when the protocol is not supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialTextBeforeCursor(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialTextBeforeCursor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialTextBeforeCursorFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetInitialTextBeforeCursorFormatted (int length, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetInitialTextBeforeCursorFormatted(int32 length, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.GetInitialTextBeforeCursorFormatted(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetInitialTextBeforeCursorFormatted : int * int -&gt; Java.Lang.ICharSequence&#xA;override this.GetInitialTextBeforeCursorFormatted : int * int -&gt; Java.Lang.ICharSequence" Usage="editorInfo.GetInitialTextBeforeCursorFormatted (length, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInitialTextBeforeCursor", "(II)Ljava/lang/CharSequence;", "GetGetInitialTextBeforeCursor_IIHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInitialTextBeforeCursor", "(II)Ljava/lang/CharSequence;", "GetGetInitialTextBeforeCursor_IIHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "GetTextWithStyles" }, Flag=true, Type="Android.Views.InputMethods.IInputConnection")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="length">The expected length of the text.</param>
        <param name="flags">Supplies additional options controlling how the text is returned. May be
            either 0 or <c>InputConnection#GET_TEXT_WITH_STYLES</c>.</param>
        <summary>Get &lt;var&gt;length&lt;/var&gt; characters of text before the current cursor position.</summary>
        <returns>the text before the cursor position; the length of the returned text might be less
            than &lt;var&gt;length&lt;/var&gt;. When there is no text before the cursor, an empty string will be
            returned. It could also be <c>null</c> when the editor or system could not support this
            protocol.</returns>
        <remarks>
          <para>Get &lt;var&gt;length&lt;/var&gt; characters of text before the current cursor position. May be
            <c>null</c> when the protocol is not supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialTextBeforeCursor(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialTextBeforeCursor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintLocales">
      <MemberSignature Language="C#" Value="public Android.OS.LocaleList? HintLocales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.LocaleList HintLocales" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.HintLocales" />
      <MemberSignature Language="F#" Value="member this.HintLocales : Android.OS.LocaleList with get, set" Usage="Android.Views.InputMethods.EditorInfo.HintLocales" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hintLocales", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hintLocales", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.LocaleList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>List of the languages that the user is supposed to switch to no matter what input method
            subtype is currently used.</summary>
        <value>To be added.</value>
        <remarks>
          <para>List of the languages that the user is supposed to switch to no matter what input method
            subtype is currently used.  This special "hint" can be used mainly for, but not limited to,
            multilingual users who want IMEs to switch language context automatically.</para>
          <para>
            <c>null</c> means that no special language "hint" is needed.</para>
          <para>&lt;strong&gt;Editor authors:&lt;/strong&gt; Specify this only when you are confident that the user
            will switch to certain languages in this context no matter what input method subtype is
            currently selected.  Otherwise, keep this <c>null</c>.  Explicit user actions and/or
            preferences would be good signals to specify this special "hint",  For example, a chat
            application may be able to put the last used language at the top of <c>#hintLocales</c>
            based on whom the user is going to talk, by remembering what language is used in the last
            conversation.  Do not specify <c>android.widget.TextView#getTextLocales()</c> only because
            it is used for text rendering.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#hintLocales" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.hintLocales</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence HintText" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.HintText" />
      <MemberSignature Language="F#" Value="member this.HintText : Java.Lang.ICharSequence with get, set" Usage="Android.Views.InputMethods.EditorInfo.HintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hintText")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hintText")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The "hint" text of the text view, typically shown in-line when the
            text is empty to tell the user what to enter.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The "hint" text of the text view, typically shown in-line when the
            text is empty to tell the user what to enter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#hintText" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.hintText</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ImeOptions">
      <MemberSignature Language="C#" Value="public Android.Views.InputMethods.ImeFlags ImeOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.InputMethods.ImeFlags ImeOptions" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.ImeOptions" />
      <MemberSignature Language="F#" Value="member this.ImeOptions : Android.Views.InputMethods.ImeFlags with get, set" Usage="Android.Views.InputMethods.EditorInfo.ImeOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("imeOptions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("imeOptions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.ImeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extended type information for the editor, to help the IME better
            integrate with it.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Extended type information for the editor, to help the IME better
            integrate with it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#imeOptions" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.imeOptions</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InitialCapsMode">
      <MemberSignature Language="C#" Value="public Android.Text.CapitalizationMode InitialCapsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.CapitalizationMode InitialCapsMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.InitialCapsMode" />
      <MemberSignature Language="F#" Value="member this.InitialCapsMode : Android.Text.CapitalizationMode with get, set" Usage="Android.Views.InputMethods.EditorInfo.InitialCapsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initialCapsMode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initialCapsMode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.CapitalizationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The capitalization mode of the first character being edited in the
            text.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The capitalization mode of the first character being edited in the
            text.  Values may be any combination of
            <c>TextUtils#CAP_MODE_CHARACTERS TextUtils.CAP_MODE_CHARACTERS</c>,
            <c>TextUtils#CAP_MODE_WORDS TextUtils.CAP_MODE_WORDS</c>, and
            <c>TextUtils#CAP_MODE_SENTENCES TextUtils.CAP_MODE_SENTENCES</c>, though
            you should generally just take a non-zero value to mean "start out in
            caps mode".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#initialCapsMode" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.initialCapsMode</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InitialSelEnd">
      <MemberSignature Language="C#" Value="public int InitialSelEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialSelEnd" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.InitialSelEnd" />
      <MemberSignature Language="F#" Value="member this.InitialSelEnd : int with get, set" Usage="Android.Views.InputMethods.EditorInfo.InitialSelEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initialSelEnd")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initialSelEnd")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The text offset of the end of the selection at the time editing
            begins; -1 if not known.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The text offset of the end of the selection at the time editing
            begins; -1 if not known. Keep in mind that, without knowing the cursor
            position, many IMEs will not be able to offer their full feature set and
            may behave in unpredictable ways: pass the actual cursor position
            here if possible at all.</para>
          <para>Also, this needs to be the cursor position &lt;strong&gt;right now&lt;/strong&gt;,
            not at some point in the past, even if input is starting in the same text field
            as before. When the app is filling this object, input is about to start by
            definition, and this value will override any value the app may have passed to
            <c>InputMethodManager#updateSelection(android.view.View, int, int, int, int)</c>
            before.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#initialSelEnd" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.initialSelEnd</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InitialSelStart">
      <MemberSignature Language="C#" Value="public int InitialSelStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialSelStart" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.InitialSelStart" />
      <MemberSignature Language="F#" Value="member this.InitialSelStart : int with get, set" Usage="Android.Views.InputMethods.EditorInfo.InitialSelStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initialSelStart")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initialSelStart")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The text offset of the start of the selection at the time editing
            begins; -1 if not known.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The text offset of the start of the selection at the time editing
            begins; -1 if not known. Keep in mind that, without knowing the cursor
            position, many IMEs will not be able to offer their full feature set and
            may even behave in unpredictable ways: pass the actual cursor position
            here if possible at all.</para>
          <para>Also, this needs to be the cursor position &lt;strong&gt;right now&lt;/strong&gt;,
            not at some point in the past, even if input is starting in the same text field
            as before. When the app is filling this object, input is about to start by
            definition, and this value will override any value the app may have passed to
            <c>InputMethodManager#updateSelection(android.view.View, int, int, int, int)</c>
            before.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#initialSelStart" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.initialSelStart</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InitialToolType">
      <MemberSignature Language="C#" Value="public virtual Android.Views.MotionEventToolType InitialToolType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.MotionEventToolType InitialToolType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.InitialToolType" />
      <MemberSignature Language="F#" Value="member this.InitialToolType : Android.Views.MotionEventToolType with get, set" Usage="Android.Views.InputMethods.EditorInfo.InitialToolType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInitialToolType", "()I", "GetGetInitialToolTypeHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInitialToolType", "()I", "GetGetInitialToolTypeHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setInitialToolType", "(I)V", "GetSetInitialToolType_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setInitialToolType", "(I)V", "GetSetInitialToolType_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.MotionEventToolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the initial <c>MotionEvent#ACTION_UP</c> tool type
            <c>MotionEvent#getToolType(int)</c> responsible for focus on the current editor. -or- Set the initial <c>MotionEvent#ACTION_UP</c> tool type <c>MotionEvent#getToolType(int)</c>.</summary>
        <value>toolType <c>MotionEvent#getToolType(int)</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the initial <c>MotionEvent#ACTION_UP</c> tool type
            <c>MotionEvent#getToolType(int)</c> responsible for focus on the current editor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getInitialToolType()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getInitialToolType()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the initial <c>MotionEvent#ACTION_UP</c> tool type <c>MotionEvent#getToolType(int)</c>.
            that brought focus to the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setInitialToolType(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setInitialToolType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public Android.Text.InputTypes InputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.InputTypes InputType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.InputType" />
      <MemberSignature Language="F#" Value="member this.InputType : Android.Text.InputTypes with get, set" Usage="Android.Views.InputMethods.EditorInfo.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inputType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inputType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.InputTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content type of the text box, whose bits are defined by
            <c>InputType</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The content type of the text box, whose bits are defined by
            <c>InputType</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#inputType" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.inputType</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="T:Android.Text.IInputType" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.InputMethods.EditorInfo.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence Label" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.Label" />
      <MemberSignature Language="F#" Value="member this.Label : Java.Lang.ICharSequence with get, set" Usage="Android.Views.InputMethods.EditorInfo.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("label")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("label")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A label to show to the user describing the text they are writing.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A label to show to the user describing the text they are writing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#label" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.label</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MakeCompatible">
      <MemberSignature Language="C#" Value="public void MakeCompatible (Android.OS.BuildVersionCodes targetSdkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeCompatible(valuetype Android.OS.BuildVersionCodes targetSdkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.MakeCompatible(Android.OS.BuildVersionCodes)" />
      <MemberSignature Language="F#" Value="member this.MakeCompatible : Android.OS.BuildVersionCodes -&gt; unit" Usage="editorInfo.MakeCompatible targetSdkVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeCompatible", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeCompatible", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSdkVersion" Type="Android.OS.BuildVersionCodes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetSdkVersion">The API version number that the compatible
            application was developed against.</param>
        <summary>Ensure that the data in this EditorInfo is compatible with an application
            that was developed against the given target API version.</summary>
        <remarks>
          <para>Ensure that the data in this EditorInfo is compatible with an application
            that was developed against the given target API version.  This can
            impact the following input types:
            <c>InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS</c>,
            <c>InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD</c>,
            <c>InputType#TYPE_NUMBER_VARIATION_NORMAL</c>,
            <c>InputType#TYPE_NUMBER_VARIATION_PASSWORD</c>.</para>
          <para>This is called by the framework for input method implementations;
            you should not generally need to call it yourself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#makeCompatible(int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.makeCompatible(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PackageName">
      <MemberSignature Language="C#" Value="public string? PackageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageName" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.PackageName" />
      <MemberSignature Language="F#" Value="member this.PackageName : string with get, set" Usage="Android.Views.InputMethods.EditorInfo.PackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("packageName")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("packageName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of the package that owns this editor.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Name of the package that owns this editor.</para>
          <para>&lt;strong&gt;IME authors:&lt;/strong&gt; In API level 22
            <c>android.os.Build.VERSION_CODES#LOLLIPOP_MR1</c> and prior, do not trust this package
            name. The system had not verified the consistency between the package name here and
            application's uid. Consider to use <c>InputBinding#getUid()</c>, which is trustworthy.
            Starting from <c>android.os.Build.VERSION_CODES#M</c>, the system verifies the consistency
            between this package name and application uid before <c>EditorInfo</c> is passed to the
            input method.</para>
          <para>&lt;strong&gt;Editor authors:&lt;/strong&gt; Starting from <c>android.os.Build.VERSION_CODES#M</c>,
            the application is no longer
            able to establish input connections if the package name provided here is inconsistent with
            application's uid.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#packageName" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.packageName</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PrivateImeOptions">
      <MemberSignature Language="C#" Value="public string? PrivateImeOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateImeOptions" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.PrivateImeOptions" />
      <MemberSignature Language="F#" Value="member this.PrivateImeOptions : string with get, set" Usage="Android.Views.InputMethods.EditorInfo.PrivateImeOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("privateImeOptions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("privateImeOptions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A string supplying additional information options that are
            private to a particular IME implementation.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A string supplying additional information options that are
            private to a particular IME implementation.  The string must be
            scoped to a package owned by the implementation, to ensure there are
            no conflicts between implementations, but other than that you can put
            whatever you want in it to communicate with the IME.  For example,
            you could have a string that supplies an argument like
            <c>"com.example.myapp.SpecialMode=3"</c>.  This field is can be
            filled in from the <c>android.R.attr#privateImeOptions</c>
            attribute of a TextView.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#privateImeOptions" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.privateImeOptions</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetInitialSurroundingSubText">
      <MemberSignature Language="C#" Value="public virtual void SetInitialSurroundingSubText (Java.Lang.ICharSequence subText, int subTextStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInitialSurroundingSubText(class Java.Lang.ICharSequence subText, int32 subTextStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.SetInitialSurroundingSubText(Java.Lang.ICharSequence,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetInitialSurroundingSubText : Java.Lang.ICharSequence * int -&gt; unit&#xA;override this.SetInitialSurroundingSubText : Java.Lang.ICharSequence * int -&gt; unit" Usage="editorInfo.SetInitialSurroundingSubText (subText, subTextStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInitialSurroundingSubText", "(Ljava/lang/CharSequence;I)V", "GetSetInitialSurroundingSubText_Ljava_lang_CharSequence_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInitialSurroundingSubText", "(Ljava/lang/CharSequence;I)V", "GetSetInitialSurroundingSubText_Ljava_lang_CharSequence_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subText" Type="Java.Lang.ICharSequence" />
        <Parameter Name="subTextStart" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="subText">The input text. When it was trimmed, <c>subTextStart</c> must be provided
                           correctly.</param>
        <param name="subTextStart">The position that the input text got trimmed. For example, when the
                                 editor wants to trim out the first 10 chars, subTextStart should be 10.</param>
        <summary>Editors may use this method to provide initial input text to IMEs.</summary>
        <remarks>
          <para>Editors may use this method to provide initial input text to IMEs. As the surrounding text
            could be used to provide various input assistance, we recommend editors to provide the
            complete initial input text in its <c>View#onCreateInputConnection(EditorInfo)</c> callback.
            When trimming the input text is needed, call this method instead of
            <c>setInitialSurroundingText(CharSequence)</c> and provide the trimmed position info. Always
            try to include the selected text within <c>subText</c> to give the system best flexibility
            to choose where and how to trim <c>subText</c> when necessary.
            
            Starting from <c>VERSION_CODES#S</c>, spans that do not implement <c>Parcelable</c> will
            be automatically dropped.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setInitialSurroundingSubText(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setInitialSurroundingSubText(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInitialSurroundingSubText">
      <MemberSignature Language="C#" Value="public void SetInitialSurroundingSubText (string subText, int subTextStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInitialSurroundingSubText(string subText, int32 subTextStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.SetInitialSurroundingSubText(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetInitialSurroundingSubText : string * int -&gt; unit" Usage="editorInfo.SetInitialSurroundingSubText (subText, subTextStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subText" Type="System.String" />
        <Parameter Name="subTextStart" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="subText">The input text. When it was trimmed, <c>subTextStart</c> must be provided
                           correctly.</param>
        <param name="subTextStart">The position that the input text got trimmed. For example, when the
                                 editor wants to trim out the first 10 chars, subTextStart should be 10.</param>
        <summary>Editors may use this method to provide initial input text to IMEs.</summary>
        <remarks>
          <para>Editors may use this method to provide initial input text to IMEs. As the surrounding text
            could be used to provide various input assistance, we recommend editors to provide the
            complete initial input text in its <c>View#onCreateInputConnection(EditorInfo)</c> callback.
            When trimming the input text is needed, call this method instead of
            <c>setInitialSurroundingText(CharSequence)</c> and provide the trimmed position info. Always
            try to include the selected text within <c>subText</c> to give the system best flexibility
            to choose where and how to trim <c>subText</c> when necessary.
            
            Starting from <c>VERSION_CODES#S</c>, spans that do not implement <c>Parcelable</c> will
            be automatically dropped.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setInitialSurroundingSubText(java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setInitialSurroundingSubText(java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInitialSurroundingText">
      <MemberSignature Language="C#" Value="public virtual void SetInitialSurroundingText (Java.Lang.ICharSequence sourceText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInitialSurroundingText(class Java.Lang.ICharSequence sourceText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.SetInitialSurroundingText(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetInitialSurroundingText : Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetInitialSurroundingText : Java.Lang.ICharSequence -&gt; unit" Usage="editorInfo.SetInitialSurroundingText sourceText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInitialSurroundingText", "(Ljava/lang/CharSequence;)V", "GetSetInitialSurroundingText_Ljava_lang_CharSequence_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInitialSurroundingText", "(Ljava/lang/CharSequence;)V", "GetSetInitialSurroundingText_Ljava_lang_CharSequence_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceText" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="sourceText">The complete input text.</param>
        <summary>Editors may use this method to provide initial input text to IMEs.</summary>
        <remarks>
          <para>Editors may use this method to provide initial input text to IMEs. As the surrounding text
            could be used to provide various input assistance, we recommend editors to provide the
            complete initial input text in its <c>View#onCreateInputConnection(EditorInfo)</c> callback.
            The supplied text will then be processed to serve <c>#getInitialTextBeforeCursor</c>,
            <c>#getInitialSelectedText</c>, and <c>#getInitialTextBeforeCursor</c>. System is allowed
            to trim <c>sourceText</c> for various reasons while keeping the most valuable data to IMEs.
            
            Starting from <c>VERSION_CODES#S</c>, spans that do not implement <c>Parcelable</c> will
            be automatically dropped.</para>
          <para>&lt;strong&gt;Editor authors: &lt;/strong&gt;Providing the initial input text helps reducing IPC calls
            for IMEs to provide many modern features right after the connection setup. We recommend
            calling this method in your implementation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setInitialSurroundingText(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setInitialSurroundingText(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInitialSurroundingText">
      <MemberSignature Language="C#" Value="public void SetInitialSurroundingText (string sourceText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInitialSurroundingText(string sourceText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.SetInitialSurroundingText(System.String)" />
      <MemberSignature Language="F#" Value="member this.SetInitialSurroundingText : string -&gt; unit" Usage="editorInfo.SetInitialSurroundingText sourceText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceText">The complete input text.</param>
        <summary>Editors may use this method to provide initial input text to IMEs.</summary>
        <remarks>
          <para>Editors may use this method to provide initial input text to IMEs. As the surrounding text
            could be used to provide various input assistance, we recommend editors to provide the
            complete initial input text in its <c>View#onCreateInputConnection(EditorInfo)</c> callback.
            The supplied text will then be processed to serve <c>#getInitialTextBeforeCursor</c>,
            <c>#getInitialSelectedText</c>, and <c>#getInitialTextBeforeCursor</c>. System is allowed
            to trim <c>sourceText</c> for various reasons while keeping the most valuable data to IMEs.
            
            Starting from <c>VERSION_CODES#S</c>, spans that do not implement <c>Parcelable</c> will
            be automatically dropped.</para>
          <para>&lt;strong&gt;Editor authors: &lt;/strong&gt;Providing the initial input text helps reducing IPC calls
            for IMEs to provide many modern features right after the connection setup. We recommend
            calling this method in your implementation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setInitialSurroundingText(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setInitialSurroundingText(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedHandwritingGesturePreviews">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Java.Lang.Class&gt; SupportedHandwritingGesturePreviews { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Java.Lang.Class&gt; SupportedHandwritingGesturePreviews" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.SupportedHandwritingGesturePreviews" />
      <MemberSignature Language="F#" Value="member this.SupportedHandwritingGesturePreviews : System.Collections.Generic.ICollection&lt;Java.Lang.Class&gt; with get, set" Usage="Android.Views.InputMethods.EditorInfo.SupportedHandwritingGesturePreviews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSupportedHandwritingGesturePreviews", "()Ljava/util/Set;", "GetGetSupportedHandwritingGesturePreviewsHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSupportedHandwritingGesturePreviews", "()Ljava/util/Set;", "GetGetSupportedHandwritingGesturePreviewsHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSupportedHandwritingGesturePreviews", "(Ljava/util/Set;)V", "GetSetSupportedHandwritingGesturePreviews_Ljava_util_Set_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSupportedHandwritingGesturePreviews", "(Ljava/util/Set;)V", "GetSetSupportedHandwritingGesturePreviews_Ljava_util_Set_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Java.Lang.Class&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="gestures">Set of supported gesture classes. One of <c>SelectGesture</c>,
            <c>SelectRangeGesture</c>, <c>DeleteGesture</c>, <c>DeleteRangeGesture</c>.</param>
        <summary>Returns the combination of Stylus handwriting gesture preview types
            supported by the current <c>Editor</c>. -or- Set the Handwriting gesture previews supported by the current <c>Editor</c>.</summary>
        <value>Set of supported gesture preview classes. One of <c>SelectGesture</c>,
            <c>SelectRangeGesture</c>, <c>DeleteGesture</c>, <c>DeleteRangeGesture</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the combination of Stylus handwriting gesture preview types
            supported by the current <c>Editor</c>.
            For an editor that supports Stylus Handwriting.
            <c>InputMethodManager#startStylusHandwriting</c>, it also declares supported gesture
            previews.</para>
          <para>Note: A supported gesture <c>EditorInfo#getSupportedHandwritingGestures()</c> may not
            have preview supported <c>EditorInfo#getSupportedHandwritingGesturePreviews()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getSupportedHandwritingGesturePreviews()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getSupportedHandwritingGesturePreviews()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the Handwriting gesture previews supported by the current <c>Editor</c>.
            For an editor that supports Stylus Handwriting
            <c>InputMethodManager#startStylusHandwriting</c>, it is also recommended that it declares
            supported gesture previews.</para>
          <para>Note: A supported gesture <c>EditorInfo#getSupportedHandwritingGestures()</c> may not
            have preview supported <c>EditorInfo#getSupportedHandwritingGesturePreviews()</c>.</para>
          <para>If editor doesn't support one of the declared types, gesture preview will be ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setSupportedHandwritingGesturePreviews(java.util.Set%3Cjava.lang.Class%3C?%20extends%20android.view.inputmethod.PreviewableHandwritingGesture%3E%3E)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setSupportedHandwritingGesturePreviews(java.util.Set&lt;java.lang.Class&lt;? extends android.view.inputmethod.PreviewableHandwritingGesture&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedHandwritingGestures">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Java.Lang.Class&gt; SupportedHandwritingGestures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Java.Lang.Class&gt; SupportedHandwritingGestures" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.SupportedHandwritingGestures" />
      <MemberSignature Language="F#" Value="member this.SupportedHandwritingGestures : System.Collections.Generic.IList&lt;Java.Lang.Class&gt; with get, set" Usage="Android.Views.InputMethods.EditorInfo.SupportedHandwritingGestures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSupportedHandwritingGestures", "()Ljava/util/List;", "GetGetSupportedHandwritingGesturesHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSupportedHandwritingGestures", "()Ljava/util/List;", "GetGetSupportedHandwritingGesturesHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSupportedHandwritingGestures", "(Ljava/util/List;)V", "GetSetSupportedHandwritingGestures_Ljava_util_List_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSupportedHandwritingGestures", "(Ljava/util/List;)V", "GetSetSupportedHandwritingGestures_Ljava_util_List_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Lang.Class&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="gestures">List of supported gesture classes including any of <c>SelectGesture</c>,
            <c>InsertGesture</c>, <c>DeleteGesture</c>.</param>
        <summary>Returns the combination of Stylus handwriting gesture types
            supported by the current <c>Editor</c>. -or- Set the Handwriting gestures supported by the current <c>Editor</c>.</summary>
        <value>List of supported gesture classes including any of <c>SelectGesture</c>,
            <c>InsertGesture</c>, <c>DeleteGesture</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the combination of Stylus handwriting gesture types
            supported by the current <c>Editor</c>.
            For an editor that supports Stylus Handwriting.
            <c>InputMethodManager#startStylusHandwriting</c>, it also declares supported gestures.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#getSupportedHandwritingGestures()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.getSupportedHandwritingGestures()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the Handwriting gestures supported by the current <c>Editor</c>.
            For an editor that supports Stylus Handwriting
            <c>InputMethodManager#startStylusHandwriting</c>, it is also recommended that it declares
            supported gestures.</para>
          <para>If editor doesn't support one of the declared types, IME will not send those Gestures
             to the editor. Instead they will fallback to using normal text input.</para>
          <para>Note: A supported gesture may not have preview supported
            <c>#getSupportedHandwritingGesturePreviews()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#setSupportedHandwritingGestures(java.util.List%3Cjava.lang.Class%3C?%20extends%20android.view.inputmethod.HandwritingGesture%3E%3E)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.setSupportedHandwritingGestures(java.util.List&lt;java.lang.Class&lt;? extends android.view.inputmethod.HandwritingGesture&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.InputMethods.EditorInfo.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.EditorInfo.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.InputMethods.EditorInfo.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel dest, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.EditorInfo.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="editorInfo.WriteToParcel (dest, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dest">The <c>Parcel</c> to be written.</param>
        <param name="flags">The flags used for parceling.</param>
        <summary>Used to package this object into a <c>Parcel</c>.</summary>
        <remarks>
          <para>Used to package this object into a <c>Parcel</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/EditorInfo#writeToParcel(android.os.Parcel,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.EditorInfo.writeToParcel(android.os.Parcel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
  </Members>
</Type>
