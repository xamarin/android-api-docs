<Type Name="InputMethodManager" FullName="Android.Views.InputMethods.InputMethodManager">
  <TypeSignature Language="C#" Value="public sealed class InputMethodManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InputMethodManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.InputMethods.InputMethodManager" />
  <TypeSignature Language="F#" Value="type InputMethodManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/inputmethod/InputMethodManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/inputmethod/InputMethodManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>Central system API to the overall input method framework (IMF) architecture,
            which arbitrates interaction between applications and the current input method.</summary>
    <remarks>
      <para>Central system API to the overall input method framework (IMF) architecture,
            which arbitrates interaction between applications and the current input method.</para>
      <para>Topics covered here:
            &lt;ol&gt;
            &lt;li&gt;Architecture Overview&lt;li&gt;Applications&lt;li&gt;Input Methods&lt;li&gt;Security&lt;/ol&gt;
            
            "ArchitectureOverview"&gt;&lt;h3&gt;Architecture Overview&lt;/h3&gt;</para>
      <para>There are three primary parties involved in the input method
            framework (IMF) architecture:</para>
      <para>&lt;ul&gt;
            &lt;li&gt; The &lt;strong&gt;input method manager&lt;/strong&gt; as expressed by this class
            is the central point of the system that manages interaction between all
            other parts.  It is expressed as the client-side API here which exists
            in each application context and communicates with a global system service
            that manages the interaction across all processes.
            &lt;li&gt; An &lt;strong&gt;input method (IME)&lt;/strong&gt; implements a particular
            interaction model allowing the user to generate text.  The system binds
            to the current input method that is in use, causing it to be created and run,
            and tells it when to hide and show its UI.  Only one IME is running at a time.
            &lt;li&gt; Multiple &lt;strong&gt;client applications&lt;/strong&gt; arbitrate with the input
            method manager for input focus and control over the state of the IME.  Only
            one such client is ever active (working with the IME) at a time.
            &lt;/ul&gt;
            
            
            "Applications"&gt;&lt;h3&gt;Applications&lt;/h3&gt;</para>
      <para>In most cases, applications that are using the standard
            <c>android.widget.TextView</c> or its subclasses will have little they need
            to do to work well with soft input methods.  The main things you need to
            be aware of are:</para>
      <para>&lt;ul&gt;
            &lt;li&gt; Properly set the <c>android.R.attr#inputType</c> in your editable
            text views, so that the input method will have enough context to help the
            user in entering text into them.
            &lt;li&gt; Deal well with losing screen space when the input method is
            displayed.  Ideally an application should handle its window being resized
            smaller, but it can rely on the system performing panning of the window
            if needed.  You should set the <c>android.R.attr#windowSoftInputMode</c>
            attribute on your activity or the corresponding values on windows you
            create to help the system determine whether to pan or resize (it will
            try to determine this automatically but may get it wrong).
            &lt;li&gt; You can also control the preferred soft input state (open, closed, etc)
            for your window using the same <c>android.R.attr#windowSoftInputMode</c>
            attribute.
            &lt;/ul&gt;</para>
      <para>More finer-grained control is available through the APIs here to directly
            interact with the IMF and its IME -- either showing or hiding the input
            area, letting the user pick an input method, etc.</para>
      <para>For the rare people amongst us writing their own text editors, you
            will need to implement <c>android.view.View#onCreateInputConnection</c>
            to return a new instance of your own <c>InputConnection</c> interface
            allowing the IME to interact with your editor.</para>
      <para>"InputMethods"&gt;&lt;h3&gt;Input Methods&lt;/h3&gt;</para>
      <para>An input method (IME) is implemented
            as a <c>android.app.Service</c>, typically deriving from
            <c>android.inputmethodservice.InputMethodService</c>.  It must provide
            the core <c>InputMethod</c> interface, though this is normally handled by
            <c>android.inputmethodservice.InputMethodService</c> and implementors will
            only need to deal with the higher-level API there.</para>
      <para>See the <c>android.inputmethodservice.InputMethodService</c> class for
            more information on implementing IMEs.
            
            
            "Security"&gt;&lt;h3&gt;Security&lt;/h3&gt;</para>
      <para>There are a lot of security issues associated with input methods,
            since they essentially have freedom to completely drive the UI and monitor
            everything the user enters.  The Android input method framework also allows
            arbitrary third party IMEs, so care must be taken to restrict their
            selection and interactions.</para>
      <para>Here are some key points about the security architecture behind the
            IMF:</para>
      <para>&lt;ul&gt;
            &lt;li&gt;</para>
      <para>Only the system is allowed to directly access an IME's
            <c>InputMethod</c> interface, via the
            <c>android.Manifest.permission#BIND_INPUT_METHOD</c> permission.  This is
            enforced in the system by not binding to an input method service that does
            not require this permission, so the system can guarantee no other untrusted
            clients are accessing the current input method outside of its control.</para>
      <para>&lt;li&gt;</para>
      <para>There may be many client processes of the IMF, but only one may
            be active at a time.  The inactive clients can not interact with key
            parts of the IMF through the mechanisms described below.</para>
      <para>&lt;li&gt;</para>
      <para>Clients of an input method are only given access to its
            <c>InputMethodSession</c> interface.  One instance of this interface is
            created for each client, and only calls from the session associated with
            the active client will be processed by the current IME.  This is enforced
            by <c>android.inputmethodservice.AbstractInputMethodService</c> for normal
            IMEs, but must be explicitly handled by an IME that is customizing the
            raw <c>InputMethodSession</c> implementation.</para>
      <para>&lt;li&gt;</para>
      <para>Only the active client's <c>InputConnection</c> will accept
            operations.  The IMF tells each client process whether it is active, and
            the framework enforces that in inactive processes calls on to the current
            InputConnection will be ignored.  This ensures that the current IME can
            only deliver events and text edits to the UI that the user sees as
            being in focus.</para>
      <para>&lt;li&gt;</para>
      <para>An IME can never interact with an <c>InputConnection</c> while
            the screen is off.  This is enforced by making all clients inactive while
            the screen is off, and prevents bad IMEs from driving the UI when the user
            can not be aware of its behavior.</para>
      <para>&lt;li&gt;</para>
      <para>A client application can ask that the system let the user pick a
            new IME, but can not programmatically switch to one itself.  This avoids
            malicious applications from switching the user to their own IME, which
            remains running when the user navigates away to another application.  An
            IME, on the other hand, &lt;em&gt;is&lt;/em&gt; allowed to programmatically switch
            the system to another IME, since it already has full control of user
            input.</para>
      <para>&lt;li&gt;</para>
      <para>The user must explicitly enable a new IME in settings before
            they can switch to it, to confirm with the system that they know about it
            and want to make it available for use.</para>
      <para>&lt;/ul&gt;</para>
      <para>If your app targets Android 11 (API level 30) or higher, the methods in
            this class each return a filtered result by the rules of
            package visibility,
            except for the currently connected IME. Apps having a query for the
            <c>InputMethod#SERVICE_INTERFACE</c> see all IMEs.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName="AcceptStylusHandwritingDelegation">
      <MemberSignature Language="C#" Value="public bool AcceptStylusHandwritingDelegation (Android.Views.View delegateView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AcceptStylusHandwritingDelegation(class Android.Views.View delegateView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.AcceptStylusHandwritingDelegation(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.AcceptStylusHandwritingDelegation : Android.Views.View -&gt; bool" Usage="inputMethodManager.AcceptStylusHandwritingDelegation delegateView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptStylusHandwritingDelegation", "(Landroid/view/View;)Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptStylusHandwritingDelegation", "(Landroid/view/View;)Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateView" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="delegateView">delegate view capable of receiving input via <c>InputConnection</c>
             on which <c>#startStylusHandwriting(View)</c> will be called.</param>
        <summary>Accepts and starts a stylus handwriting session on the delegate view, if handwriting
            initiation delegation was previously requested using
            <c>#prepareStylusHandwritingDelegation(View)</c> from the delegator.</summary>
        <returns>
          <c>true</c> if view belongs to same application package as used in
             <c>#prepareStylusHandwritingDelegation(View)</c> and handwriting session can start.</returns>
        <remarks>
          <para>Accepts and starts a stylus handwriting session on the delegate view, if handwriting
            initiation delegation was previously requested using
            <c>#prepareStylusHandwritingDelegation(View)</c> from the delegator.</para>
          <para>Note: If delegator and delegate are in different application packages, use
            <c>#acceptStylusHandwritingDelegation(View, String)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#acceptStylusHandwritingDelegation(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.acceptStylusHandwritingDelegation(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptStylusHandwritingDelegation">
      <MemberSignature Language="C#" Value="public bool AcceptStylusHandwritingDelegation (Android.Views.View delegateView, string delegatorPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AcceptStylusHandwritingDelegation(class Android.Views.View delegateView, string delegatorPackageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.AcceptStylusHandwritingDelegation(Android.Views.View,System.String)" />
      <MemberSignature Language="F#" Value="member this.AcceptStylusHandwritingDelegation : Android.Views.View * string -&gt; bool" Usage="inputMethodManager.AcceptStylusHandwritingDelegation (delegateView, delegatorPackageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acceptStylusHandwritingDelegation", "(Landroid/view/View;Ljava/lang/String;)Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acceptStylusHandwritingDelegation", "(Landroid/view/View;Ljava/lang/String;)Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateView" Type="Android.Views.View" />
        <Parameter Name="delegatorPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateView">delegate view capable of receiving input via <c>InputConnection</c>
             on which <c>#startStylusHandwriting(View)</c> will be called.</param>
        <param name="delegatorPackageName">package name of the delegator that handled initial stylus stroke.</param>
        <summary>Accepts and starts a stylus handwriting session on the delegate view, if handwriting
            initiation delegation was previously requested using
            <c>#prepareStylusHandwritingDelegation(View, String)</c> from te delegator and the view
            belongs to a specified delegate package.</summary>
        <returns>
          <c>true</c> if view belongs to allowed delegate package declared in
             <c>#prepareStylusHandwritingDelegation(View, String)</c> and handwriting session can start.</returns>
        <remarks>
          <para>Accepts and starts a stylus handwriting session on the delegate view, if handwriting
            initiation delegation was previously requested using
            <c>#prepareStylusHandwritingDelegation(View, String)</c> from te delegator and the view
            belongs to a specified delegate package.</para>
          <para>Note: If delegator and delegate are in same application package use
            <c>#acceptStylusHandwritingDelegation(View)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#acceptStylusHandwritingDelegation(android.view.View,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.acceptStylusHandwritingDelegation(android.view.View, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInputMethodInfo">
      <MemberSignature Language="C#" Value="public Android.Views.InputMethods.InputMethodInfo? CurrentInputMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.InputMethods.InputMethodInfo CurrentInputMethodInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.CurrentInputMethodInfo" />
      <MemberSignature Language="F#" Value="member this.CurrentInputMethodInfo : Android.Views.InputMethods.InputMethodInfo" Usage="Android.Views.InputMethods.InputMethodManager.CurrentInputMethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInputMethodInfo", "()Landroid/view/inputmethod/InputMethodInfo;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInputMethodInfo", "()Landroid/view/inputmethod/InputMethodInfo;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.InputMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>InputMethodInfo</c> of the currently selected input method (for the process's
            user).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the <c>InputMethodInfo</c> of the currently selected input method (for the process's
            user).</para>
          <para>On multi user environment, this API returns a result for the calling process user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getCurrentInputMethodInfo()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getCurrentInputMethodInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInputMethodSubtype">
      <MemberSignature Language="C#" Value="public Android.Views.InputMethods.InputMethodSubtype? CurrentInputMethodSubtype { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.InputMethods.InputMethodSubtype CurrentInputMethodSubtype" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.CurrentInputMethodSubtype" />
      <MemberSignature Language="F#" Value="member this.CurrentInputMethodSubtype : Android.Views.InputMethods.InputMethodSubtype" Usage="Android.Views.InputMethods.InputMethodManager.CurrentInputMethodSubtype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentInputMethodSubtype", "()Landroid/view/inputmethod/InputMethodSubtype;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentInputMethodSubtype", "()Landroid/view/inputmethod/InputMethodSubtype;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.InputMethodSubtype</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current input method subtype.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the current input method subtype. This subtype is one of the subtypes in
            the current input method. This method returns null when the current input method doesn't
            have any input method subtype.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getCurrentInputMethodSubtype()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getCurrentInputMethodSubtype()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEventFromInputMethod">
      <MemberSignature Language="C#" Value="public void DispatchKeyEventFromInputMethod (Android.Views.View? targetView, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DispatchKeyEventFromInputMethod(class Android.Views.View targetView, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.DispatchKeyEventFromInputMethod(Android.Views.View,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="member this.DispatchKeyEventFromInputMethod : Android.Views.View * Android.Views.KeyEvent -&gt; unit" Usage="inputMethodManager.DispatchKeyEventFromInputMethod (targetView, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyEventFromInputMethod", "(Landroid/view/View;Landroid/view/KeyEvent;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyEventFromInputMethod", "(Landroid/view/View;Landroid/view/KeyEvent;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetView" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="targetView">the default target view. If <c>null</c> is specified, then this method
            tries to find a good event target based on the current focus state.</param>
        <param name="event">the key event to be dispatched.</param>
        <summary>Provides the default implementation of <c>InputConnection#sendKeyEvent(KeyEvent)</c>, which
            is expected to dispatch an keyboard event sent from the IME to an appropriate event target
            depending on the given <c>View</c> and the current focus state.</summary>
        <remarks>
          <para>Provides the default implementation of <c>InputConnection#sendKeyEvent(KeyEvent)</c>, which
            is expected to dispatch an keyboard event sent from the IME to an appropriate event target
            depending on the given <c>View</c> and the current focus state.</para>
          <para>CAUTION: This method is provided only for the situation where
            <c>InputConnection#sendKeyEvent(KeyEvent)</c> needs to be implemented without relying on
            <c>BaseInputConnection</c>. Do not use this API for anything else.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#dispatchKeyEventFromInputMethod(android.view.View,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.dispatchKeyEventFromInputMethod(android.view.View, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCompletions">
      <MemberSignature Language="C#" Value="public void DisplayCompletions (Android.Views.View? view, Android.Views.InputMethods.CompletionInfo[]? completions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisplayCompletions(class Android.Views.View view, class Android.Views.InputMethods.CompletionInfo[] completions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.DisplayCompletions(Android.Views.View,Android.Views.InputMethods.CompletionInfo[])" />
      <MemberSignature Language="F#" Value="member this.DisplayCompletions : Android.Views.View * Android.Views.InputMethods.CompletionInfo[] -&gt; unit" Usage="inputMethodManager.DisplayCompletions (view, completions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("displayCompletions", "(Landroid/view/View;[Landroid/view/inputmethod/CompletionInfo;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("displayCompletions", "(Landroid/view/View;[Landroid/view/inputmethod/CompletionInfo;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="completions" Type="Android.Views.InputMethods.CompletionInfo[]" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="completions">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="EnabledInputMethodList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodInfo&gt; EnabledInputMethodList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Views.InputMethods.InputMethodInfo&gt; EnabledInputMethodList" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.EnabledInputMethodList" />
      <MemberSignature Language="F#" Value="member this.EnabledInputMethodList : System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodInfo&gt;" Usage="Android.Views.InputMethods.InputMethodManager.EnabledInputMethodList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnabledInputMethodList", "()Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnabledInputMethodList", "()Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of enabled input methods.</summary>
        <value>
          <c>List</c> of <c>InputMethodInfo</c>.</value>
        <remarks>
          <para>Returns the list of enabled input methods.</para>
          <para>On multi user environment, this API returns a result for the calling process user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getEnabledInputMethodList()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getEnabledInputMethodList()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.Views.InputMethods.InputMethodManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.InputMethods.InputMethodManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Views.InputMethods.InputMethodManager" Usage="Android.Views.InputMethods.InputMethodManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.InputMethodManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledInputMethodSubtypeList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodSubtype&gt; GetEnabledInputMethodSubtypeList (Android.Views.InputMethods.InputMethodInfo? imi, bool allowsImplicitlyEnabledSubtypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.Views.InputMethods.InputMethodSubtype&gt; GetEnabledInputMethodSubtypeList(class Android.Views.InputMethods.InputMethodInfo imi, bool allowsImplicitlyEnabledSubtypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.GetEnabledInputMethodSubtypeList(Android.Views.InputMethods.InputMethodInfo,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.GetEnabledInputMethodSubtypeList : Android.Views.InputMethods.InputMethodInfo * bool -&gt; System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodSubtype&gt;" Usage="inputMethodManager.GetEnabledInputMethodSubtypeList (imi, allowsImplicitlyEnabledSubtypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEnabledInputMethodSubtypeList", "(Landroid/view/inputmethod/InputMethodInfo;Z)Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEnabledInputMethodSubtypeList", "(Landroid/view/inputmethod/InputMethodInfo;Z)Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodSubtype&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imi" Type="Android.Views.InputMethods.InputMethodInfo" />
        <Parameter Name="allowsImplicitlyEnabledSubtypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="imi">The <c>InputMethodInfo</c> whose subtypes list will be returned. If <c>null</c>,
            returns enabled subtypes for the currently selected <c>InputMethodInfo</c>.</param>
        <param name="allowsImplicitlyEnabledSubtypes">A boolean flag to allow to return the implicitly
            enabled subtypes. If an input method info doesn't have enabled subtypes, the framework
            will implicitly enable subtypes according to the current system language.</param>
        <summary>Returns a list of enabled input method subtypes for the specified input method info.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a list of enabled input method subtypes for the specified input method info.</para>
          <para>On multi user environment, this API returns a result for the calling process user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HideSoftInputFromInputMethod">
      <MemberSignature Language="C#" Value="public void HideSoftInputFromInputMethod (Android.OS.IBinder? token, Android.Views.InputMethods.HideSoftInputFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HideSoftInputFromInputMethod(class Android.OS.IBinder token, valuetype Android.Views.InputMethods.HideSoftInputFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.HideSoftInputFromInputMethod(Android.OS.IBinder,Android.Views.InputMethods.HideSoftInputFlags)" />
      <MemberSignature Language="F#" Value="member this.HideSoftInputFromInputMethod : Android.OS.IBinder * Android.Views.InputMethods.HideSoftInputFlags -&gt; unit" Usage="inputMethodManager.HideSoftInputFromInputMethod (token, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hideSoftInputFromInputMethod", "(Landroid/os/IBinder;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hideSoftInputFromInputMethod", "(Landroid/os/IBinder;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.OS.IBinder" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="token">Supplies the identifying token given to an input method
            when it was started, which allows it to perform this operation on
            itself.</param>
        <param name="flags">Provides additional operating flags.  Currently may be
            0 or have the <c>#HIDE_IMPLICIT_ONLY</c>,
            <c>#HIDE_NOT_ALWAYS</c> bit set.</param>
        <summary>Close/hide the input method's soft input area, so the user no longer
            sees it or can interact with it.</summary>
        <remarks>
          <para>Close/hide the input method's soft input area, so the user no longer
            sees it or can interact with it.  This can only be called
            from the currently active input method, as validated by the given token.</para>
          <para>This member is deprecated. Use <c>InputMethodService#requestHideSelf(int)</c> instead. This method was
            intended for IME developers who should be accessing APIs through the service. APIs in this
            class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#hideSoftInputFromInputMethod(android.os.IBinder,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.hideSoftInputFromInputMethod(android.os.IBinder, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="HideSoftInputFromWindow">
      <MemberSignature Language="C#" Value="public bool HideSoftInputFromWindow (Android.OS.IBinder? windowToken, Android.Views.InputMethods.HideSoftInputFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HideSoftInputFromWindow(class Android.OS.IBinder windowToken, valuetype Android.Views.InputMethods.HideSoftInputFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.HideSoftInputFromWindow(Android.OS.IBinder,Android.Views.InputMethods.HideSoftInputFlags)" />
      <MemberSignature Language="F#" Value="member this.HideSoftInputFromWindow : Android.OS.IBinder * Android.Views.InputMethods.HideSoftInputFlags -&gt; bool" Usage="inputMethodManager.HideSoftInputFromWindow (windowToken, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hideSoftInputFromWindow", "(Landroid/os/IBinder;I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hideSoftInputFromWindow", "(Landroid/os/IBinder;I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="windowToken">The token of the window that is making the request,
            as returned by <c>View#getWindowToken() View.getWindowToken()</c>.</param>
        <param name="flags">Provides additional operating flags.  Currently may be
            0 or have the <c>#HIDE_IMPLICIT_ONLY</c> bit set.</param>
        <summary>Synonym for <c>#hideSoftInputFromWindow(IBinder, int, ResultReceiver)</c>
            without a result: request to hide the soft input window from the
            context of the window that is currently accepting input.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Synonym for <c>#hideSoftInputFromWindow(IBinder, int, ResultReceiver)</c>
            without a result: request to hide the soft input window from the
            context of the window that is currently accepting input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#hideSoftInputFromWindow(android.os.IBinder,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(android.os.IBinder, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="HideSoftInputFromWindow">
      <MemberSignature Language="C#" Value="public bool HideSoftInputFromWindow (Android.OS.IBinder? windowToken, Android.Views.InputMethods.HideSoftInputFlags flags, Android.OS.ResultReceiver? resultReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HideSoftInputFromWindow(class Android.OS.IBinder windowToken, valuetype Android.Views.InputMethods.HideSoftInputFlags flags, class Android.OS.ResultReceiver resultReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.HideSoftInputFromWindow(Android.OS.IBinder,Android.Views.InputMethods.HideSoftInputFlags,Android.OS.ResultReceiver)" />
      <MemberSignature Language="F#" Value="member this.HideSoftInputFromWindow : Android.OS.IBinder * Android.Views.InputMethods.HideSoftInputFlags * Android.OS.ResultReceiver -&gt; bool" Usage="inputMethodManager.HideSoftInputFromWindow (windowToken, flags, resultReceiver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hideSoftInputFromWindow", "(Landroid/os/IBinder;ILandroid/os/ResultReceiver;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hideSoftInputFromWindow", "(Landroid/os/IBinder;ILandroid/os/ResultReceiver;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resultReceiver" Type="Android.OS.ResultReceiver" />
      </Parameters>
      <Docs>
        <param name="windowToken">The token of the window that is making the request,
            as returned by <c>View#getWindowToken() View.getWindowToken()</c>.</param>
        <param name="flags">Provides additional operating flags.  Currently may be
            0 or have the <c>#HIDE_IMPLICIT_ONLY</c> bit set.</param>
        <param name="resultReceiver">If non-null, this will be called by the IME when
            it has processed your request to tell you what it has done.  The result
            code you receive may be either <c>#RESULT_UNCHANGED_SHOWN</c>,
            <c>#RESULT_UNCHANGED_HIDDEN</c>, <c>#RESULT_SHOWN</c>, or
            <c>#RESULT_HIDDEN</c>.</param>
        <summary>Request to hide the soft input window from the context of the window
            that is currently accepting input.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Request to hide the soft input window from the context of the window
            that is currently accepting input.  This should be called as a result
            of the user doing some actually than fairly explicitly requests to
            have the input window hidden.</para>
          <para>&lt;strong&gt;Caveat:&lt;/strong&gt; <c>ResultReceiver</c> instance passed to
            this method can be a long-lived object, because it may not be
            garbage-collected until all the corresponding <c>ResultReceiver</c>
            objects transferred to different processes get garbage-collected.
            Follow the general patterns to avoid memory leaks in Android.
            Consider to use <c>java.lang.ref.WeakReference</c> so that application
            logic objects such as <c>android.app.Activity</c> and <c>Context</c>
            can be garbage collected regardless of the lifetime of
            <c>ResultReceiver</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#hideSoftInputFromWindow(android.os.IBinder,%20int,%20android.os.ResultReceiver)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(android.os.IBinder, int, android.os.ResultReceiver)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="HideStatusIcon">
      <MemberSignature Language="C#" Value="public void HideStatusIcon (Android.OS.IBinder? imeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HideStatusIcon(class Android.OS.IBinder imeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.HideStatusIcon(Android.OS.IBinder)" />
      <MemberSignature Language="F#" Value="member this.HideStatusIcon : Android.OS.IBinder -&gt; unit" Usage="inputMethodManager.HideStatusIcon imeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hideStatusIcon", "(Landroid/os/IBinder;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hideStatusIcon", "(Landroid/os/IBinder;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeToken" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="imeToken">To be added.</param>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. Use <c>InputMethodService#hideStatusIcon()</c> instead. This method was
            intended for IME developers who should be accessing APIs through the service. APIs in
            this class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#hideStatusIcon(android.os.IBinder)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.hideStatusIcon(android.os.IBinder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InputMethodList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodInfo&gt; InputMethodList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Views.InputMethods.InputMethodInfo&gt; InputMethodList" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.InputMethodList" />
      <MemberSignature Language="F#" Value="member this.InputMethodList : System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodInfo&gt;" Usage="Android.Views.InputMethods.InputMethodManager.InputMethodList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputMethodList", "()Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputMethodList", "()Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of installed input methods.</summary>
        <value>
          <c>List</c> of <c>InputMethodInfo</c>.</value>
        <remarks>
          <para>Returns the list of installed input methods.</para>
          <para>On multi user environment, this API returns a result for the calling process user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getInputMethodList()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getInputMethodList()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateInput">
      <MemberSignature Language="C#" Value="public void InvalidateInput (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateInput(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.InvalidateInput(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.InvalidateInput : Android.Views.View -&gt; unit" Usage="inputMethodManager.InvalidateInput view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidateInput", "(Landroid/view/View;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidateInput", "(Landroid/view/View;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view whose text has changed.</param>
        <summary>Gives a hint to the system that the text associated with <c>view</c> is updated by something
            that is not an input method editor (IME), so that the system can cancel any pending text
            editing requests from the IME until it receives the new editing context such as surrounding
            text provided by <c>InputConnection#takeSnapshot()</c>.</summary>
        <remarks>
          <para>Gives a hint to the system that the text associated with <c>view</c> is updated by something
            that is not an input method editor (IME), so that the system can cancel any pending text
            editing requests from the IME until it receives the new editing context such as surrounding
            text provided by <c>InputConnection#takeSnapshot()</c>.</para>
          <para>When <c>view</c> does not support <c>InputConnection#takeSnapshot()</c> protocol,
            calling this method may trigger <c>View#onCreateInputConnection(EditorInfo)</c>.</para>
          <para>Unlike <c>#restartInput(View)</c>, this API does not immediately interact with
            <c>InputConnection</c>.  Instead, the application may later receive
            <c>InputConnection#takeSnapshot()</c> as needed so that the system can capture new editing
            context for the IME.  For instance, successive invocations of this API can be coerced into a
            single (or zero) callback of <c>InputConnection#takeSnapshot()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#invalidateInput(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.invalidateInput(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsActive">
      <MemberSignature Language="C#" Value="public bool InvokeIsActive (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InvokeIsActive(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.InvokeIsActive(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.InvokeIsActive : Android.Views.View -&gt; bool" Usage="inputMethodManager.InvokeIsActive view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isActive", "(Landroid/view/View;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isActive", "(Landroid/view/View;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>Return <c>true</c> if the given view is the currently active view for the input method.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return <c>true</c> if the given view is the currently active view for the input method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isActive(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isActive(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsAcceptingText">
      <MemberSignature Language="C#" Value="public bool IsAcceptingText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAcceptingText" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.IsAcceptingText" />
      <MemberSignature Language="F#" Value="member this.IsAcceptingText : bool" Usage="Android.Views.InputMethods.InputMethodManager.IsAcceptingText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAcceptingText", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAcceptingText", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return <c>true</c> if the currently served view is accepting full text edits.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return <c>true</c> if the currently served view is accepting full text edits.
            If <c>false</c>, it has no input connection, so it can only handle raw key events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isAcceptingText()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isAcceptingText()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.IsActive" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="Android.Views.InputMethods.InputMethodManager.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActive", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isActive", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return <c>true</c> if any view is currently active for the input method.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return <c>true</c> if any view is currently active for the input method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isActive()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isActive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsFullscreenMode">
      <MemberSignature Language="C#" Value="public bool IsFullscreenMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullscreenMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.IsFullscreenMode" />
      <MemberSignature Language="F#" Value="member this.IsFullscreenMode : bool" Usage="Android.Views.InputMethods.InputMethodManager.IsFullscreenMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFullscreenMode", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFullscreenMode", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Allows you to discover whether the attached input method is running
            in fullscreen mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Allows you to discover whether the attached input method is running
            in fullscreen mode.  Return true if it is fullscreen, entirely covering
            your UI, else returns false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isFullscreenMode()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isFullscreenMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodSuppressingSpellChecker">
      <MemberSignature Language="C#" Value="public bool IsInputMethodSuppressingSpellChecker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodSuppressingSpellChecker" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.IsInputMethodSuppressingSpellChecker" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodSuppressingSpellChecker : bool" Usage="Android.Views.InputMethods.InputMethodManager.IsInputMethodSuppressingSpellChecker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInputMethodSuppressingSpellChecker", "()Z", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInputMethodSuppressingSpellChecker", "()Z", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return <c>true</c> if the input method is suppressing system spell checker.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return <c>true</c> if the input method is suppressing system spell checker.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isInputMethodSuppressingSpellChecker()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isInputMethodSuppressingSpellChecker()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusHandwritingAvailable">
      <MemberSignature Language="C#" Value="public bool IsStylusHandwritingAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusHandwritingAvailable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.IsStylusHandwritingAvailable" />
      <MemberSignature Language="F#" Value="member this.IsStylusHandwritingAvailable : bool" Usage="Android.Views.InputMethods.InputMethodManager.IsStylusHandwritingAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStylusHandwritingAvailable", "()Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStylusHandwritingAvailable", "()Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if currently selected IME supports Stylus handwriting &amp; is enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if currently selected IME supports Stylus handwriting &amp; is enabled.
            If the method returns <c>false</c>, <c>#startStylusHandwriting(View)</c> shouldn't be
            called and Stylus touch should continue as normal touch input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isStylusHandwritingAvailable()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isStylusHandwritingAvailable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWatchingCursor">
      <MemberSignature Language="C#" Value="public bool IsWatchingCursor (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWatchingCursor(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.IsWatchingCursor(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.IsWatchingCursor : Android.Views.View -&gt; bool" Usage="inputMethodManager.IsWatchingCursor view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isWatchingCursor", "(Landroid/view/View;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isWatchingCursor", "(Landroid/view/View;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>Return true if the current input method wants to watch the location
            of the input editor's cursor in its window.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return true if the current input method wants to watch the location
            of the input editor's cursor in its window.</para>
          <para>This member is deprecated. Use <c>InputConnection#requestCursorUpdates(int)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#isWatchingCursor(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.isWatchingCursor(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.InputMethods.InputMethodManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastInputMethodSubtype">
      <MemberSignature Language="C#" Value="public Android.Views.InputMethods.InputMethodSubtype? LastInputMethodSubtype { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.InputMethods.InputMethodSubtype LastInputMethodSubtype" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.LastInputMethodSubtype" />
      <MemberSignature Language="F#" Value="member this.LastInputMethodSubtype : Android.Views.InputMethods.InputMethodSubtype" Usage="Android.Views.InputMethods.InputMethodManager.LastInputMethodSubtype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLastInputMethodSubtype", "()Landroid/view/inputmethod/InputMethodSubtype;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLastInputMethodSubtype", "()Landroid/view/inputmethod/InputMethodSubtype;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.InputMethodSubtype</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the last used <c>InputMethodSubtype</c> in system history.</summary>
        <value>the last <c>InputMethodSubtype</c>, <c>null</c> if last IME have no subtype.</value>
        <remarks>
          <para>Returns the last used <c>InputMethodSubtype</c> in system history.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getLastInputMethodSubtype()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getLastInputMethodSubtype()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="PrepareStylusHandwritingDelegation">
      <MemberSignature Language="C#" Value="public void PrepareStylusHandwritingDelegation (Android.Views.View delegatorView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareStylusHandwritingDelegation(class Android.Views.View delegatorView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.PrepareStylusHandwritingDelegation(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.PrepareStylusHandwritingDelegation : Android.Views.View -&gt; unit" Usage="inputMethodManager.PrepareStylusHandwritingDelegation delegatorView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prepareStylusHandwritingDelegation", "(Landroid/view/View;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prepareStylusHandwritingDelegation", "(Landroid/view/View;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegatorView" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="delegatorView">the view that receives initial stylus stroke and delegates it to the
             actual editor. Its window must <c>View#hasWindowFocus have focus</c>.</param>
        <summary>Prepares delegation of starting stylus handwriting session to a different editor in same
            or different window than the view on which initial handwriting stroke was detected.</summary>
        <remarks>
          <para>Prepares delegation of starting stylus handwriting session to a different editor in same
            or different window than the view on which initial handwriting stroke was detected.
            
            Delegation can be used to start stylus handwriting session before the <c>Editor</c> view or
            its <c>InputConnection</c> is started. Calling this method starts buffering of stylus
            motion events until <c>#acceptStylusHandwritingDelegation(View)</c> is called, at which
            point the handwriting session can be started and the buffered stylus motion events will be
            delivered to the IME.
            e.g. Delegation can be used when initial handwriting stroke is
            on a pseudo <c>Editor</c> like widget (with no <c>InputConnection</c>) but actual
            <c>Editor</c> is on a different window.</para>
          <para>Note: If an actual <c>Editor</c> capable of <c>InputConnection</c> is being scribbled
            upon using stylus, use <c>#startStylusHandwriting(View)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#prepareStylusHandwritingDelegation(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.prepareStylusHandwritingDelegation(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareStylusHandwritingDelegation">
      <MemberSignature Language="C#" Value="public void PrepareStylusHandwritingDelegation (Android.Views.View delegatorView, string delegatePackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareStylusHandwritingDelegation(class Android.Views.View delegatorView, string delegatePackageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.PrepareStylusHandwritingDelegation(Android.Views.View,System.String)" />
      <MemberSignature Language="F#" Value="member this.PrepareStylusHandwritingDelegation : Android.Views.View * string -&gt; unit" Usage="inputMethodManager.PrepareStylusHandwritingDelegation (delegatorView, delegatePackageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prepareStylusHandwritingDelegation", "(Landroid/view/View;Ljava/lang/String;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prepareStylusHandwritingDelegation", "(Landroid/view/View;Ljava/lang/String;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegatorView" Type="Android.Views.View" />
        <Parameter Name="delegatePackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegatorView">the view that receives initial stylus stroke and delegates it to the
            actual editor. Its window must <c>View#hasWindowFocus have focus</c>.</param>
        <param name="delegatePackageName">package name that contains actual <c>Editor</c> which should
             start stylus handwriting session by calling <c>#acceptStylusHandwritingDelegation</c>.</param>
        <summary>Prepares delegation of starting stylus handwriting session to a different editor in same or a
            different window in a different package than the view on which initial handwriting stroke
            was detected.</summary>
        <remarks>
          <para>Prepares delegation of starting stylus handwriting session to a different editor in same or a
            different window in a different package than the view on which initial handwriting stroke
            was detected.
            
            Delegation can be used to start stylus handwriting session before the <c>Editor</c> view or
            its <c>InputConnection</c> is started. Calling this method starts buffering of stylus
            motion events until <c>#acceptStylusHandwritingDelegation(View, String)</c> is called, at
            which point the handwriting session can be started and the buffered stylus motion events will
            be delivered to the IME.
            e.g. Delegation can be used when initial handwriting stroke is
            on a pseudo <c>Editor</c> like widget (with no <c>InputConnection</c>) but actual
            <c>Editor</c> is on a different window in the given package.</para>
          <para>Note: If delegator and delegate are in same package use
            <c>#prepareStylusHandwritingDelegation(View)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#prepareStylusHandwritingDelegation(android.view.View,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.prepareStylusHandwritingDelegation(android.view.View, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartInput">
      <MemberSignature Language="C#" Value="public void RestartInput (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RestartInput(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.RestartInput(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.RestartInput : Android.Views.View -&gt; unit" Usage="inputMethodManager.RestartInput view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restartInput", "(Landroid/view/View;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restartInput", "(Landroid/view/View;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view whose text has changed.</param>
        <summary>If the input method is currently connected to the given view,
            restart it with its new contents.</summary>
        <remarks>
          <para>If the input method is currently connected to the given view,
            restart it with its new contents.  You should call this when the text
            within your view changes outside of the normal input method or key
            input flow, such as when an application calls TextView.setText().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#restartInput(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.restartInput(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SendAppPrivateCommand">
      <MemberSignature Language="C#" Value="public void SendAppPrivateCommand (Android.Views.View? view, string? action, Android.OS.Bundle? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAppPrivateCommand(class Android.Views.View view, string action, class Android.OS.Bundle data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SendAppPrivateCommand(Android.Views.View,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="member this.SendAppPrivateCommand : Android.Views.View * string * Android.OS.Bundle -&gt; unit" Usage="inputMethodManager.SendAppPrivateCommand (view, action, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendAppPrivateCommand", "(Landroid/view/View;Ljava/lang/String;Landroid/os/Bundle;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendAppPrivateCommand", "(Landroid/view/View;Ljava/lang/String;Landroid/os/Bundle;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="view">Optional View that is sending the command, or null if
            you want to send the command regardless of the view that is attached
            to the input method.</param>
        <param name="action">Name of the command to be performed.  This &lt;em&gt;must&lt;/em&gt;
            be a scoped name, i.e. prefixed with a package name you own, so that
            different developers will not create conflicting commands.</param>
        <param name="data">Any data to include with the command.</param>
        <summary>Call <c>InputMethodSession#appPrivateCommand(String, Bundle)
            InputMethodSession.appPrivateCommand()</c> on the current Input Method.</summary>
        <remarks>
          <para>Call <c>InputMethodSession#appPrivateCommand(String, Bundle)
            InputMethodSession.appPrivateCommand()</c> on the current Input Method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#sendAppPrivateCommand(android.view.View,%20java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.sendAppPrivateCommand(android.view.View, java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetAdditionalInputMethodSubtypes">
      <MemberSignature Language="C#" Value="public void SetAdditionalInputMethodSubtypes (string imiId, Android.Views.InputMethods.InputMethodSubtype[] subtypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdditionalInputMethodSubtypes(string imiId, class Android.Views.InputMethods.InputMethodSubtype[] subtypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SetAdditionalInputMethodSubtypes(System.String,Android.Views.InputMethods.InputMethodSubtype[])" />
      <MemberSignature Language="F#" Value="member this.SetAdditionalInputMethodSubtypes : string * Android.Views.InputMethods.InputMethodSubtype[] -&gt; unit" Usage="inputMethodManager.SetAdditionalInputMethodSubtypes (imiId, subtypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAdditionalInputMethodSubtypes", "(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAdditionalInputMethodSubtypes", "(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imiId" Type="System.String" />
        <Parameter Name="subtypes" Type="Android.Views.InputMethods.InputMethodSubtype[]" />
      </Parameters>
      <Docs>
        <param name="imiId">Id of InputMethodInfo which additional input method subtypes will be added to.
            If the imiId is <c>null</c>, system would do nothing for this operation.</param>
        <param name="subtypes">subtypes will be added as additional subtypes of the current input method.
            If the subtypes is <c>null</c>, system would do nothing for this operation.</param>
        <summary>Set additional input method subtypes.</summary>
        <remarks>
          <para>Set additional input method subtypes. Only a process which shares the same uid with the IME
            can add additional input method subtypes to the IME.
            Please note that a subtype's status is stored in the system.
            For example, enabled subtypes are remembered by the framework even after they are removed
            by using this method. If you re-add the same subtypes again,
            they will just get enabled. If you want to avoid such conflicts, for instance, you may
            want to create a "different" new subtype even with the same locale and mode,
            by changing its extra value. The different subtype won't get affected by the stored past
            status. (You may want to take a look at <c>InputMethodSubtype#hashCode()</c> to refer
            to the current implementation.)</para>
          <para>NOTE: If the same subtype exists in both the manifest XML file and additional subtypes
            specified by <c>subtypes</c>, those multiple instances are automatically merged into one
            instance.</para>
          <para>CAVEAT: In API Level 23 and prior, the system may do nothing if an empty
            <c>InputMethodSubtype</c> is specified in <c>subtypes</c>, which prevents you from removing
            the last one entry of additional subtypes. If your IME statically defines one or more
            subtypes in the manifest XML file, you may be able to work around this limitation by
            specifying one of those statically defined subtypes in <c>subtypes</c>.</para>
          <para>This member is deprecated. For IMEs that have already implemented features like customizable/downloadable
                        keyboard layouts/languages, please start migration to other approaches. One idea
                        would be exposing only one unified <c>InputMethodSubtype</c> then implement
                        IME's own language switching mechanism within that unified subtype. The support
                        of "Additional Subtype" may be completely dropped in a future version of Android.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#setAdditionalInputMethodSubtypes(java.lang.String,%20android.view.inputmethod.InputMethodSubtype[])" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentInputMethodSubtype">
      <MemberSignature Language="C#" Value="public bool SetCurrentInputMethodSubtype (Android.Views.InputMethods.InputMethodSubtype? subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetCurrentInputMethodSubtype(class Android.Views.InputMethods.InputMethodSubtype subtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SetCurrentInputMethodSubtype(Android.Views.InputMethods.InputMethodSubtype)" />
      <MemberSignature Language="F#" Value="member this.SetCurrentInputMethodSubtype : Android.Views.InputMethods.InputMethodSubtype -&gt; bool" Usage="inputMethodManager.SetCurrentInputMethodSubtype subtype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCurrentInputMethodSubtype", "(Landroid/view/inputmethod/InputMethodSubtype;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCurrentInputMethodSubtype", "(Landroid/view/inputmethod/InputMethodSubtype;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.WRITE_SECURE_SETTINGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.WRITE_SECURE_SETTINGS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subtype" Type="Android.Views.InputMethods.InputMethodSubtype" />
      </Parameters>
      <Docs>
        <param name="subtype">A new input method subtype to switch.</param>
        <summary>Switch to a new input method subtype of the current input method.</summary>
        <returns>true if the current subtype was successfully switched. When the specified subtype is
            null, this method returns false.</returns>
        <remarks>
          <para>Switch to a new input method subtype of the current input method.</para>
          <para>This member is deprecated. If the calling process is an IME, use
                        <c>InputMethodService#switchInputMethod(String, InputMethodSubtype)</c>, which
                        does not require any permission as long as the caller is the current IME.
                        If the calling process is some privileged app that already has
                        <c>Manifest.permission#WRITE_SECURE_SETTINGS</c> permission, just
                        directly update <c>Settings.Secure#SELECTED_INPUT_METHOD_SUBTYPE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetExplicitlyEnabledInputMethodSubtypes">
      <MemberSignature Language="C#" Value="public void SetExplicitlyEnabledInputMethodSubtypes (string imiId, int[] subtypeHashCodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExplicitlyEnabledInputMethodSubtypes(string imiId, int32[] subtypeHashCodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SetExplicitlyEnabledInputMethodSubtypes(System.String,System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.SetExplicitlyEnabledInputMethodSubtypes : string * int[] -&gt; unit" Usage="inputMethodManager.SetExplicitlyEnabledInputMethodSubtypes (imiId, subtypeHashCodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setExplicitlyEnabledInputMethodSubtypes", "(Ljava/lang/String;[I)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setExplicitlyEnabledInputMethodSubtypes", "(Ljava/lang/String;[I)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imiId" Type="System.String" />
        <Parameter Name="subtypeHashCodes" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="imiId">IME ID. The specified IME and the calling process need to belong to the same
                         package.  Otherwise <c>SecurityException</c> will be thrown.</param>
        <param name="subtypeHashCodes">An arrays of <c>InputMethodSubtype#hashCode()</c> to be explicitly
                                    enabled. Entries that are found in the specified IME will be silently
                                    ignored. Pass an empty array to reset the state to default.</param>
        <summary>Updates the list of explicitly enabled <c>InputMethodSubtype</c> for a given IME owned by
            the calling process.</summary>
        <remarks>
          <para>Updates the list of explicitly enabled <c>InputMethodSubtype</c> for a given IME owned by
            the calling process.</para>
          <para>By default each IME has no explicitly enabled <c>InputMethodSubtype</c>.  In this state
            the system will decide what <c>InputMethodSubtype</c> should be enabled by using information
            available at runtime as per-user language settings.  Users can, however, manually pick up one
            or more <c>InputMethodSubtype</c> to be enabled on an Activity shown by
            <c>#showInputMethodAndSubtypeEnabler(String)</c>. Such a manual change is stored in
            <c>Settings.Secure#ENABLED_INPUT_METHODS</c> so that the change can persist across reboots.
            <c>Settings.Secure#ENABLED_INPUT_METHODS</c> stores <c>InputMethodSubtype#hashCode()</c> as
            the identifier of <c>InputMethodSubtype</c> for historical reasons.</para>
          <para>This API provides a safe and managed way for IME developers to modify what
            <c>InputMethodSubtype</c> are referenced in <c>Settings.Secure#ENABLED_INPUT_METHODS</c>
            for their own IME.  One use case is when IME developers want to use their own Activity for
            users to pick up <c>InputMethodSubtype</c>. Another use case is for IME developers to fix up
            any stale and/or invalid value stored in <c>Settings.Secure#ENABLED_INPUT_METHODS</c>
            without bothering users. Passing an empty <c>subtypeHashCodes</c> is guaranteed to reset
            the state to default.</para>
          <para>&lt;h3&gt;To control the return value of <c>InputMethodSubtype#hashCode()</c>&lt;/h3&gt;</para>
          <para>
            <c>android.R.attr#subtypeId</c> and <c>android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder#setSubtypeId(int)</c> are
            available for IME developers to control the return value of
            <c>InputMethodSubtype#hashCode()</c>. Beware that <c>-1</c> is not a valid value of
            <c>InputMethodSubtype#hashCode()</c> for historical reasons.</para>
          <para>&lt;h3&gt;Note for Direct Boot support&lt;/h3&gt;</para>
          <para>While IME developers can call this API even before
            <c>android.os.UserManager#isUserUnlocked()</c> becomes <c>true</c>, such a change is
            volatile thus remains effective only until <c>android.os.UserManager#isUserUnlocked()</c>
            becomes <c>true</c> or the device is rebooted. To make the change persistent IME developers
            need to call this API again after receiving <c>Intent#ACTION_USER_UNLOCKED</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#setExplicitlyEnabledInputMethodSubtypes(java.lang.String,%20int[])" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.setExplicitlyEnabledInputMethodSubtypes(java.lang.String, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputMethod">
      <MemberSignature Language="C#" Value="public void SetInputMethod (Android.OS.IBinder? token, string? id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInputMethod(class Android.OS.IBinder token, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SetInputMethod(Android.OS.IBinder,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetInputMethod : Android.OS.IBinder * string -&gt; unit" Usage="inputMethodManager.SetInputMethod (token, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInputMethod", "(Landroid/os/IBinder;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInputMethod", "(Landroid/os/IBinder;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.OS.IBinder" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">Supplies the identifying token given to an input method
            when it was started, which allows it to perform this operation on
            itself.</param>
        <param name="id">The unique identifier for the new input method to be switched to.</param>
        <summary>Force switch to a new input method component.</summary>
        <remarks>
          <para>Force switch to a new input method component. This can only be called
            from an application or a service which has a token of the currently active input method.</para>
          <para>On Android <c>Build.VERSION_CODES#Q</c> and later devices, the undocumented behavior that
            token can be <c>null</c> when the caller has
            <c>Manifest.permission#WRITE_SECURE_SETTINGS</c> is deprecated. Instead, update
            <c>android.provider.Settings.Secure#DEFAULT_INPUT_METHOD</c> and
            <c>android.provider.Settings.Secure#SELECTED_INPUT_METHOD_SUBTYPE</c> directly.</para>
          <para>This member is deprecated. Use <c>InputMethodService#switchInputMethod(String)</c>
            instead. This method was intended for IME developers who should be accessing APIs through
            the service. APIs in this class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#setInputMethod(android.os.IBinder,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.setInputMethod(android.os.IBinder, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetInputMethodAndSubtype">
      <MemberSignature Language="C#" Value="public void SetInputMethodAndSubtype (Android.OS.IBinder token, string? id, Android.Views.InputMethods.InputMethodSubtype? subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInputMethodAndSubtype(class Android.OS.IBinder token, string id, class Android.Views.InputMethods.InputMethodSubtype subtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SetInputMethodAndSubtype(Android.OS.IBinder,System.String,Android.Views.InputMethods.InputMethodSubtype)" />
      <MemberSignature Language="F#" Value="member this.SetInputMethodAndSubtype : Android.OS.IBinder * string * Android.Views.InputMethods.InputMethodSubtype -&gt; unit" Usage="inputMethodManager.SetInputMethodAndSubtype (token, id, subtype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInputMethodAndSubtype", "(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInputMethodAndSubtype", "(Landroid/os/IBinder;Ljava/lang/String;Landroid/view/inputmethod/InputMethodSubtype;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.OS.IBinder" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="subtype" Type="Android.Views.InputMethods.InputMethodSubtype" />
      </Parameters>
      <Docs>
        <param name="token">Supplies the identifying token given to an input method
            when it was started, which allows it to perform this operation on
            itself.</param>
        <param name="id">The unique identifier for the new input method to be switched to.</param>
        <param name="subtype">The new subtype of the new input method to be switched to.</param>
        <summary>Force switch to a new input method and subtype.</summary>
        <remarks>
          <para>Force switch to a new input method and subtype. This can only be called
            from an application or a service which has a token of the currently active input method.</para>
          <para>On Android <c>Build.VERSION_CODES#Q</c> and later devices, <c>token</c> cannot be
            <c>null</c> even with <c>Manifest.permission#WRITE_SECURE_SETTINGS</c>. Instead,
            update <c>android.provider.Settings.Secure#DEFAULT_INPUT_METHOD</c> and
            <c>android.provider.Settings.Secure#SELECTED_INPUT_METHOD_SUBTYPE</c> directly.</para>
          <para>This member is deprecated. Use
            <c>InputMethodService#switchInputMethod(String, InputMethodSubtype)</c>
            instead. This method was intended for IME developers who should be accessing APIs through
            the service. APIs in this class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#setInputMethodAndSubtype(android.os.IBinder,%20java.lang.String,%20android.view.inputmethod.InputMethodSubtype)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.setInputMethodAndSubtype(android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ShortcutInputMethodsAndSubtypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;Android.Views.InputMethods.InputMethodInfo,System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodSubtype&gt;&gt;? ShortcutInputMethodsAndSubtypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class Android.Views.InputMethods.InputMethodInfo, class System.Collections.Generic.IList`1&lt;class Android.Views.InputMethods.InputMethodSubtype&gt;&gt; ShortcutInputMethodsAndSubtypes" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.ShortcutInputMethodsAndSubtypes" />
      <MemberSignature Language="F#" Value="member this.ShortcutInputMethodsAndSubtypes : System.Collections.Generic.IDictionary&lt;Android.Views.InputMethods.InputMethodInfo, System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodSubtype&gt;&gt;" Usage="Android.Views.InputMethods.InputMethodManager.ShortcutInputMethodsAndSubtypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShortcutInputMethodsAndSubtypes", "()Ljava/util/Map;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShortcutInputMethodsAndSubtypes", "()Ljava/util/Map;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Android.Views.InputMethods.InputMethodInfo,System.Collections.Generic.IList&lt;Android.Views.InputMethods.InputMethodSubtype&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a map of all shortcut input method info and their subtypes.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns a map of all shortcut input method info and their subtypes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#getShortcutInputMethodsAndSubtypes()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.getShortcutInputMethodsAndSubtypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ShouldOfferSwitchingToNextInputMethod">
      <MemberSignature Language="C#" Value="public bool ShouldOfferSwitchingToNextInputMethod (Android.OS.IBinder? imeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldOfferSwitchingToNextInputMethod(class Android.OS.IBinder imeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShouldOfferSwitchingToNextInputMethod(Android.OS.IBinder)" />
      <MemberSignature Language="F#" Value="member this.ShouldOfferSwitchingToNextInputMethod : Android.OS.IBinder -&gt; bool" Usage="inputMethodManager.ShouldOfferSwitchingToNextInputMethod imeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldOfferSwitchingToNextInputMethod", "(Landroid/os/IBinder;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldOfferSwitchingToNextInputMethod", "(Landroid/os/IBinder;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeToken" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="imeToken">Supplies the identifying token given to an input method when it was started,
            which allows it to perform this operation on itself.</param>
        <summary>Returns true if the current IME needs to offer the users ways to switch to a next input
            method (e.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns true if the current IME needs to offer the users ways to switch to a next input
            method (e.g. a globe key.).
            When an IME sets supportsSwitchingToNextInputMethod and this method returns true,
            the IME has to offer ways to to invoke <c>#switchToNextInputMethod</c> accordingly.</para>
          <para>Note that the system determines the most appropriate next input method
            and subtype in order to provide the consistent user experience in switching
            between IMEs and subtypes.</para>
          <para>This member is deprecated. Use <c>InputMethodService#shouldOfferSwitchingToNextInputMethod()</c>
            instead. This method was intended for IME developers who should be accessing APIs through
            the service. APIs in this class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#shouldOfferSwitchingToNextInputMethod(android.os.IBinder)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.shouldOfferSwitchingToNextInputMethod(android.os.IBinder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowForced">
      <MemberSignature Language="C#" Value="public const Android.Views.InputMethods.ShowFlags ShowForced = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.InputMethods.ShowFlags ShowForced = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.InputMethods.InputMethodManager.ShowForced" />
      <MemberSignature Language="F#" Value="val mutable ShowForced : Android.Views.InputMethods.ShowFlags" Usage="Android.Views.InputMethods.InputMethodManager.ShowForced" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SHOW_FORCED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SHOW_FORCED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Android.Views.InputMethods.ShowFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Android.Views.InputMethods.ShowFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.ShowFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c>#showSoftInput</c> to indicate that the user has forced
            the input method open (such as by long-pressing menu) so it should
            not be closed until they explicitly do so.</summary>
        <remarks>
          <para>Flag for <c>#showSoftInput</c> to indicate that the user has forced
            the input method open (such as by long-pressing menu) so it should
            not be closed until they explicitly do so.</para>
          <para>This member is deprecated. Use <c>#showSoftInput</c> without this flag instead. Using this flag can lead
            to the soft input remaining visible even when the calling application is closed. The
            use of this flag can make the soft input remains visible globally. Starting in
            <c>Build.VERSION_CODES#TIRAMISU Android T</c>, this flag only has an effect while the
            caller is currently focused.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#SHOW_FORCED" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.SHOW_FORCED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowImplicit">
      <MemberSignature Language="C#" Value="public const Android.Views.InputMethods.ShowFlags ShowImplicit = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.InputMethods.ShowFlags ShowImplicit = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.InputMethods.InputMethodManager.ShowImplicit" />
      <MemberSignature Language="F#" Value="val mutable ShowImplicit : Android.Views.InputMethods.ShowFlags" Usage="Android.Views.InputMethods.InputMethodManager.ShowImplicit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SHOW_IMPLICIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SHOW_IMPLICIT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.InputMethods.ShowFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.InputMethods.ShowFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.ShowFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#showSoftInput</c> to indicate that this is an implicit
            request to show the input window, not as the result of a direct request
            by the user.</summary>
        <remarks>
          <para>Flag for <c>#showSoftInput</c> to indicate that this is an implicit
            request to show the input window, not as the result of a direct request
            by the user.  The window may not be shown in this case.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#SHOW_IMPLICIT" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.SHOW_IMPLICIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowInputMethodAndSubtypeEnabler">
      <MemberSignature Language="C#" Value="public void ShowInputMethodAndSubtypeEnabler (string? imiId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInputMethodAndSubtypeEnabler(string imiId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShowInputMethodAndSubtypeEnabler(System.String)" />
      <MemberSignature Language="F#" Value="member this.ShowInputMethodAndSubtypeEnabler : string -&gt; unit" Usage="inputMethodManager.ShowInputMethodAndSubtypeEnabler imiId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showInputMethodAndSubtypeEnabler", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showInputMethodAndSubtypeEnabler", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imiId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imiId">An input method, whose subtypes settings will be shown. If imiId is null,
            subtypes of all input methods will be shown.</param>
        <summary>Show the settings for enabling subtypes of the specified input method.</summary>
        <remarks>
          <para>Show the settings for enabling subtypes of the specified input method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#showInputMethodAndSubtypeEnabler(java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.showInputMethodAndSubtypeEnabler(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ShowInputMethodPicker">
      <MemberSignature Language="C#" Value="public void ShowInputMethodPicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInputMethodPicker() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShowInputMethodPicker" />
      <MemberSignature Language="F#" Value="member this.ShowInputMethodPicker : unit -&gt; unit" Usage="inputMethodManager.ShowInputMethodPicker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showInputMethodPicker", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showInputMethodPicker", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Show IME picker popup window.</summary>
        <remarks>
          <para>Show IME picker popup window.</para>
          <para>Requires the <c>PackageManager#FEATURE_INPUT_METHODS</c> feature which can be detected
            using <c>PackageManager#hasSystemFeature(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#showInputMethodPicker()" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.showInputMethodPicker()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowSoftInput">
      <MemberSignature Language="C#" Value="public bool ShowSoftInput (Android.Views.View? view, Android.Views.InputMethods.ShowFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShowSoftInput(class Android.Views.View view, valuetype Android.Views.InputMethods.ShowFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShowSoftInput(Android.Views.View,Android.Views.InputMethods.ShowFlags)" />
      <MemberSignature Language="F#" Value="member this.ShowSoftInput : Android.Views.View * Android.Views.InputMethods.ShowFlags -&gt; bool" Usage="inputMethodManager.ShowSoftInput (view, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showSoftInput", "(Landroid/view/View;I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showSoftInput", "(Landroid/view/View;I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The currently focused view, which would like to receive soft keyboard input.
                        Note that this view is only considered focused here if both it itself has
                        <c>View#isFocused view focus</c>, and its containing window has
                        <c>View#hasWindowFocus window focus</c>. Otherwise the call fails and
                        returns <c>false</c>.</param>
        <param name="flags">Provides additional operating flags.  Currently may be
            0 or have the <c>#SHOW_IMPLICIT</c> bit set.</param>
        <summary>Synonym for <c>#showSoftInput(View, int, ResultReceiver)</c> without
            a result receiver: explicitly request that the current input method's
            soft input area be shown to the user, if needed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Synonym for <c>#showSoftInput(View, int, ResultReceiver)</c> without
            a result receiver: explicitly request that the current input method's
            soft input area be shown to the user, if needed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#showSoftInput(android.view.View,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.showSoftInput(android.view.View, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowSoftInput">
      <MemberSignature Language="C#" Value="public bool ShowSoftInput (Android.Views.View? view, Android.Views.InputMethods.ShowFlags flags, Android.OS.ResultReceiver? resultReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShowSoftInput(class Android.Views.View view, valuetype Android.Views.InputMethods.ShowFlags flags, class Android.OS.ResultReceiver resultReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShowSoftInput(Android.Views.View,Android.Views.InputMethods.ShowFlags,Android.OS.ResultReceiver)" />
      <MemberSignature Language="F#" Value="member this.ShowSoftInput : Android.Views.View * Android.Views.InputMethods.ShowFlags * Android.OS.ResultReceiver -&gt; bool" Usage="inputMethodManager.ShowSoftInput (view, flags, resultReceiver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showSoftInput", "(Landroid/view/View;ILandroid/os/ResultReceiver;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showSoftInput", "(Landroid/view/View;ILandroid/os/ResultReceiver;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resultReceiver" Type="Android.OS.ResultReceiver" />
      </Parameters>
      <Docs>
        <param name="view">The currently focused view, which would like to receive soft keyboard input.
                        Note that this view is only considered focused here if both it itself has
                        <c>View#isFocused view focus</c>, and its containing window has
                        <c>View#hasWindowFocus window focus</c>. Otherwise the call fails and
                        returns <c>false</c>.</param>
        <param name="flags">Provides additional operating flags.  Currently may be
            0 or have the <c>#SHOW_IMPLICIT</c> bit set.</param>
        <param name="resultReceiver">If non-null, this will be called by the IME when
            it has processed your request to tell you what it has done.  The result
            code you receive may be either <c>#RESULT_UNCHANGED_SHOWN</c>,
            <c>#RESULT_UNCHANGED_HIDDEN</c>, <c>#RESULT_SHOWN</c>, or
            <c>#RESULT_HIDDEN</c>.</param>
        <summary>Explicitly request that the current input method's soft input area be
            shown to the user, if needed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Explicitly request that the current input method's soft input area be
            shown to the user, if needed.  Call this if the user interacts with
            your view in such a way that they have expressed they would like to
            start performing input into it.</para>
          <para>&lt;strong&gt;Caveat:&lt;/strong&gt; <c>ResultReceiver</c> instance passed to
            this method can be a long-lived object, because it may not be
            garbage-collected until all the corresponding <c>ResultReceiver</c>
            objects transferred to different processes get garbage-collected.
            Follow the general patterns to avoid memory leaks in Android.
            Consider to use <c>java.lang.ref.WeakReference</c> so that application
            logic objects such as <c>android.app.Activity</c> and <c>Context</c>
            can be garbage collected regardless of the lifetime of
            <c>ResultReceiver</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#showSoftInput(android.view.View,%20int,%20android.os.ResultReceiver)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.showSoftInput(android.view.View, int, android.os.ResultReceiver)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowSoftInputFromInputMethod">
      <MemberSignature Language="C#" Value="public void ShowSoftInputFromInputMethod (Android.OS.IBinder? token, Android.Views.InputMethods.ShowFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSoftInputFromInputMethod(class Android.OS.IBinder token, valuetype Android.Views.InputMethods.ShowFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShowSoftInputFromInputMethod(Android.OS.IBinder,Android.Views.InputMethods.ShowFlags)" />
      <MemberSignature Language="F#" Value="member this.ShowSoftInputFromInputMethod : Android.OS.IBinder * Android.Views.InputMethods.ShowFlags -&gt; unit" Usage="inputMethodManager.ShowSoftInputFromInputMethod (token, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showSoftInputFromInputMethod", "(Landroid/os/IBinder;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showSoftInputFromInputMethod", "(Landroid/os/IBinder;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.OS.IBinder" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="token">Supplies the identifying token given to an input method
            when it was started, which allows it to perform this operation on
            itself.</param>
        <param name="flags">Provides additional operating flags.  Currently may be
            0 or have the <c>#SHOW_IMPLICIT</c> or
            <c>#SHOW_FORCED</c> bit set.</param>
        <summary>Show the input method's soft input area, so the user
            sees the input method window and can interact with it.</summary>
        <remarks>
          <para>Show the input method's soft input area, so the user
            sees the input method window and can interact with it.
            This can only be called from the currently active input method,
            as validated by the given token.</para>
          <para>This member is deprecated. Use <c>InputMethodService#requestShowSelf(int)</c> instead. This method was
            intended for IME developers who should be accessing APIs through the service. APIs in this
            class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#showSoftInputFromInputMethod(android.os.IBinder,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.showSoftInputFromInputMethod(android.os.IBinder, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowStatusIcon">
      <MemberSignature Language="C#" Value="public void ShowStatusIcon (Android.OS.IBinder? imeToken, string? packageName, int iconId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowStatusIcon(class Android.OS.IBinder imeToken, string packageName, int32 iconId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ShowStatusIcon(Android.OS.IBinder,System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ShowStatusIcon : Android.OS.IBinder * string * int -&gt; unit" Usage="inputMethodManager.ShowStatusIcon (imeToken, packageName, iconId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showStatusIcon", "(Landroid/os/IBinder;Ljava/lang/String;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showStatusIcon", "(Landroid/os/IBinder;Ljava/lang/String;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeToken" Type="Android.OS.IBinder" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="iconId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="imeToken">To be added.</param>
        <param name="packageName">To be added.</param>
        <param name="iconId">To be added.</param>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. Use <c>InputMethodService#showStatusIcon(int)</c> instead. This method was
            intended for IME developers who should be accessing APIs through the service. APIs in this
            class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#showStatusIcon(android.os.IBinder,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.showStatusIcon(android.os.IBinder, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="StartStylusHandwriting">
      <MemberSignature Language="C#" Value="public void StartStylusHandwriting (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStylusHandwriting(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.StartStylusHandwriting(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.StartStylusHandwriting : Android.Views.View -&gt; unit" Usage="inputMethodManager.StartStylusHandwriting view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startStylusHandwriting", "(Landroid/view/View;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startStylusHandwriting", "(Landroid/view/View;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">the View for which stylus handwriting is requested. It and
            <c>View#hasWindowFocus its window</c> must be <c>View#hasFocus focused</c>.</param>
        <summary>Start stylus handwriting session.</summary>
        <remarks>
          <para>Start stylus handwriting session.
            
            If supported by the current input method, a stylus handwriting session is started on the
            given View, capturing all stylus input and converting it to InputConnection commands.
            
            If handwriting mode is started successfully by the IME, any currently dispatched stylus
            pointers will be <c>android.view.MotionEvent#FLAG_CANCELED</c> cancelled.
            
            If Stylus handwriting mode is not supported or cannot be fulfilled for any reason by IME,
            request will be ignored and Stylus touch will continue as normal touch input. Ideally,
            <c>#isStylusHandwritingAvailable()</c> should be called first to determine if stylus
            handwriting is supported by IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#startStylusHandwriting(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.startStylusHandwriting(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchToLastInputMethod">
      <MemberSignature Language="C#" Value="public bool SwitchToLastInputMethod (Android.OS.IBinder? imeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SwitchToLastInputMethod(class Android.OS.IBinder imeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SwitchToLastInputMethod(Android.OS.IBinder)" />
      <MemberSignature Language="F#" Value="member this.SwitchToLastInputMethod : Android.OS.IBinder -&gt; bool" Usage="inputMethodManager.SwitchToLastInputMethod imeToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchToLastInputMethod", "(Landroid/os/IBinder;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchToLastInputMethod", "(Landroid/os/IBinder;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeToken" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="imeToken">Supplies the identifying token given to an input method when it was started,
            which allows it to perform this operation on itself.</param>
        <summary>Force switch to the last used input method and subtype.</summary>
        <returns>true if the current input method and subtype was successfully switched to the last
            used input method and subtype.</returns>
        <remarks>
          <para>Force switch to the last used input method and subtype. If the last input method didn't have
            any subtypes, the framework will simply switch to the last input method with no subtype
            specified.</para>
          <para>This member is deprecated. Use <c>InputMethodService#switchToPreviousInputMethod()</c> instead. This method
            was intended for IME developers who should be accessing APIs through the service. APIs in
            this class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#switchToLastInputMethod(android.os.IBinder)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.switchToLastInputMethod(android.os.IBinder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SwitchToNextInputMethod">
      <MemberSignature Language="C#" Value="public bool SwitchToNextInputMethod (Android.OS.IBinder? imeToken, bool onlyCurrentIme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SwitchToNextInputMethod(class Android.OS.IBinder imeToken, bool onlyCurrentIme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.SwitchToNextInputMethod(Android.OS.IBinder,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SwitchToNextInputMethod : Android.OS.IBinder * bool -&gt; bool" Usage="inputMethodManager.SwitchToNextInputMethod (imeToken, onlyCurrentIme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchToNextInputMethod", "(Landroid/os/IBinder;Z)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchToNextInputMethod", "(Landroid/os/IBinder;Z)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imeToken" Type="Android.OS.IBinder" />
        <Parameter Name="onlyCurrentIme" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="imeToken">Supplies the identifying token given to an input method when it was started,
            which allows it to perform this operation on itself.</param>
        <param name="onlyCurrentIme">if true, the framework will find the next subtype which
            belongs to the current IME</param>
        <summary>Force switch to the next input method and subtype.</summary>
        <returns>true if the current input method and subtype was successfully switched to the next
            input method and subtype.</returns>
        <remarks>
          <para>Force switch to the next input method and subtype. If there is no IME enabled except
            current IME and subtype, do nothing.</para>
          <para>This member is deprecated. Use <c>InputMethodService#switchToNextInputMethod(boolean)</c> instead. This
            method was intended for IME developers who should be accessing APIs through the service.
            APIs in this class are intended for app developers interacting with the IME.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#switchToNextInputMethod(android.os.IBinder,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.switchToNextInputMethod(android.os.IBinder, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.InputMethods.InputMethodManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.InputMethods.InputMethodManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.InputMethods.InputMethodManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleSoftInput">
      <MemberSignature Language="C#" Value="public void ToggleSoftInput (Android.Views.InputMethods.ShowFlags showFlags, Android.Views.InputMethods.HideSoftInputFlags hideFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleSoftInput(valuetype Android.Views.InputMethods.ShowFlags showFlags, valuetype Android.Views.InputMethods.HideSoftInputFlags hideFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ToggleSoftInput(Android.Views.InputMethods.ShowFlags,Android.Views.InputMethods.HideSoftInputFlags)" />
      <MemberSignature Language="F#" Value="member this.ToggleSoftInput : Android.Views.InputMethods.ShowFlags * Android.Views.InputMethods.HideSoftInputFlags -&gt; unit" Usage="inputMethodManager.ToggleSoftInput (showFlags, hideFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toggleSoftInput", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toggleSoftInput", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showFlags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hideFlags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="showFlags">Provides additional operating flags.  May be
            0 or have the <c>#SHOW_IMPLICIT</c>,
            <c>#SHOW_FORCED</c> bit set.</param>
        <param name="hideFlags">Provides additional operating flags.  May be
            0 or have the <c>#HIDE_IMPLICIT_ONLY</c>,
            <c>#HIDE_NOT_ALWAYS</c> bit set.</param>
        <summary>This method toggles the input method window display.</summary>
        <remarks>
          <para>This method toggles the input method window display.</para>
          <para>If the input window is already displayed, it gets hidden.
            If not the input window will be displayed.</para>
          <para>This member is deprecated. Use <c>#showSoftInput(View, int)</c> or
            <c>#hideSoftInputFromWindow(IBinder, int)</c> explicitly instead.
            In particular during focus changes, the current visibility of the IME is not
            well defined. Starting in <c>Build.VERSION_CODES#S Android S</c>, this only
            has an effect if the calling app is the current IME focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#toggleSoftInput(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.toggleSoftInput(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSoftInputFromWindow">
      <MemberSignature Language="C#" Value="public void ToggleSoftInputFromWindow (Android.OS.IBinder? windowToken, Android.Views.InputMethods.ShowSoftInputFlags showFlags, Android.Views.InputMethods.HideSoftInputFlags hideFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleSoftInputFromWindow(class Android.OS.IBinder windowToken, valuetype Android.Views.InputMethods.ShowSoftInputFlags showFlags, valuetype Android.Views.InputMethods.HideSoftInputFlags hideFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ToggleSoftInputFromWindow(Android.OS.IBinder,Android.Views.InputMethods.ShowSoftInputFlags,Android.Views.InputMethods.HideSoftInputFlags)" />
      <MemberSignature Language="F#" Value="member this.ToggleSoftInputFromWindow : Android.OS.IBinder * Android.Views.InputMethods.ShowSoftInputFlags * Android.Views.InputMethods.HideSoftInputFlags -&gt; unit" Usage="inputMethodManager.ToggleSoftInputFromWindow (windowToken, showFlags, hideFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toggleSoftInputFromWindow", "(Landroid/os/IBinder;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toggleSoftInputFromWindow", "(Landroid/os/IBinder;II)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="showFlags" Type="Android.Views.InputMethods.ShowSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hideFlags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="windowToken">The token of the window that is making the request,
            as returned by <c>View#getWindowToken() View.getWindowToken()</c>.</param>
        <param name="showFlags">Provides additional operating flags.  May be
            0 or have the <c>#SHOW_IMPLICIT</c>,
            <c>#SHOW_FORCED</c> bit set.</param>
        <param name="hideFlags">Provides additional operating flags.  May be
            0 or have the <c>#HIDE_IMPLICIT_ONLY</c>,
            <c>#HIDE_NOT_ALWAYS</c> bit set.</param>
        <summary>This method toggles the input method window display.</summary>
        <remarks>
          <para>This method toggles the input method window display.
            If the input window is already displayed, it gets hidden.
            If not the input window will be displayed.</para>
          <para>This member is deprecated. Use <c>#showSoftInput(View, int)</c> or
            <c>#hideSoftInputFromWindow(IBinder, int)</c> explicitly instead.
            In particular during focus changes, the current visibility of the IME is not
            well defined. Starting in <c>Build.VERSION_CODES#S Android S</c>, this only
            has an effect if the calling app is the current IME focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#toggleSoftInputFromWindow(android.os.IBinder,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.toggleSoftInputFromWindow(android.os.IBinder, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor (Android.Views.View? view, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor(class Android.Views.View view, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.UpdateCursor(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.UpdateCursor : Android.Views.View * int * int * int * int -&gt; unit" Usage="inputMethodManager.UpdateCursor (view, left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateCursor", "(Landroid/view/View;IIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateCursor", "(Landroid/view/View;IIII)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Report the current cursor location in its window.</summary>
        <remarks>
          <para>Report the current cursor location in its window.</para>
          <para>This member is deprecated. Use <c>#updateCursorAnchorInfo(View, CursorAnchorInfo)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#updateCursor(android.view.View,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.updateCursor(android.view.View, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursorAnchorInfo">
      <MemberSignature Language="C#" Value="public void UpdateCursorAnchorInfo (Android.Views.View? view, Android.Views.InputMethods.CursorAnchorInfo? cursorAnchorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursorAnchorInfo(class Android.Views.View view, class Android.Views.InputMethods.CursorAnchorInfo cursorAnchorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.UpdateCursorAnchorInfo(Android.Views.View,Android.Views.InputMethods.CursorAnchorInfo)" />
      <MemberSignature Language="F#" Value="member this.UpdateCursorAnchorInfo : Android.Views.View * Android.Views.InputMethods.CursorAnchorInfo -&gt; unit" Usage="inputMethodManager.UpdateCursorAnchorInfo (view, cursorAnchorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateCursorAnchorInfo", "(Landroid/view/View;Landroid/view/inputmethod/CursorAnchorInfo;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateCursorAnchorInfo", "(Landroid/view/View;Landroid/view/inputmethod/CursorAnchorInfo;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="cursorAnchorInfo" Type="Android.Views.InputMethods.CursorAnchorInfo" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="cursorAnchorInfo">To be added.</param>
        <summary>Report positional change of the text insertion point and/or characters in the composition
            string.</summary>
        <remarks>
          <para>Report positional change of the text insertion point and/or characters in the composition
            string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#updateCursorAnchorInfo(android.view.View,%20android.view.inputmethod.CursorAnchorInfo)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.updateCursorAnchorInfo(android.view.View, android.view.inputmethod.CursorAnchorInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtractedText">
      <MemberSignature Language="C#" Value="public void UpdateExtractedText (Android.Views.View? view, int token, Android.Views.InputMethods.ExtractedText? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateExtractedText(class Android.Views.View view, int32 token, class Android.Views.InputMethods.ExtractedText text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.UpdateExtractedText(Android.Views.View,System.Int32,Android.Views.InputMethods.ExtractedText)" />
      <MemberSignature Language="F#" Value="member this.UpdateExtractedText : Android.Views.View * int * Android.Views.InputMethods.ExtractedText -&gt; unit" Usage="inputMethodManager.UpdateExtractedText (view, token, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateExtractedText", "(Landroid/view/View;ILandroid/view/inputmethod/ExtractedText;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateExtractedText", "(Landroid/view/View;ILandroid/view/inputmethod/ExtractedText;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="token" Type="System.Int32" />
        <Parameter Name="text" Type="Android.Views.InputMethods.ExtractedText" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="token">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="UpdateSelection">
      <MemberSignature Language="C#" Value="public void UpdateSelection (Android.Views.View? view, int selStart, int selEnd, int candidatesStart, int candidatesEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateSelection(class Android.Views.View view, int32 selStart, int32 selEnd, int32 candidatesStart, int32 candidatesEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.UpdateSelection(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.UpdateSelection : Android.Views.View * int * int * int * int -&gt; unit" Usage="inputMethodManager.UpdateSelection (view, selStart, selEnd, candidatesStart, candidatesEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateSelection", "(Landroid/view/View;IIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateSelection", "(Landroid/view/View;IIII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="selStart" Type="System.Int32" />
        <Parameter Name="selEnd" Type="System.Int32" />
        <Parameter Name="candidatesStart" Type="System.Int32" />
        <Parameter Name="candidatesEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="selStart">To be added.</param>
        <param name="selEnd">To be added.</param>
        <param name="candidatesStart">To be added.</param>
        <param name="candidatesEnd">To be added.</param>
        <summary>Report the current selection range.</summary>
        <remarks>
          <para>Report the current selection range.</para>
          <para>&lt;strong&gt;Editor authors&lt;/strong&gt;, you need to call this method whenever
            the cursor moves in your editor. Remember that in addition to doing this, your
            editor needs to always supply current cursor values in
            <c>EditorInfo#initialSelStart</c> and <c>EditorInfo#initialSelEnd</c> every
            time <c>android.view.View#onCreateInputConnection(EditorInfo)</c> is
            called, which happens whenever the keyboard shows up or the focus changes
            to a text field, among other cases.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#updateSelection(android.view.View,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.updateSelection(android.view.View, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ViewClicked">
      <MemberSignature Language="C#" Value="public void ViewClicked (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ViewClicked(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.InputMethods.InputMethodManager.ViewClicked(Android.Views.View)" />
      <MemberSignature Language="F#" Value="member this.ViewClicked : Android.Views.View -&gt; unit" Usage="inputMethodManager.ViewClicked view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("viewClicked", "(Landroid/view/View;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("viewClicked", "(Landroid/view/View;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">
          <c>View</c> which is being clicked.</param>
        <summary>Notify the event when the user tapped or clicked the text view.</summary>
        <remarks>
          <para>Notify the event when the user tapped or clicked the text view.</para>
          <para>This member is deprecated. The semantics of this method can never be defined well for composite <c>View</c>
                        that works as a giant "Canvas", which can host its own UI hierarchy and sub focus
                        state. <c>android.webkit.WebView</c> is a good example. Application / IME
                        developers should not rely on this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/inputmethod/InputMethodManager#viewClicked(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.inputmethod.InputMethodManager.viewClicked(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>
