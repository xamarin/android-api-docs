<Type Name="BaseInputConnection" FullName="Android.Views.InputMethods.BaseInputConnection">
  <TypeSignature Language="C#" Value="public class BaseInputConnection : Java.Lang.Object, Android.Views.InputMethods.IInputConnection, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BaseInputConnection extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Views.InputMethods.IInputConnection, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.InputMethods.IInputConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/inputmethod/BaseInputConnection", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>Base class for implementors of the InputConnection interface, taking care
 of most of the common behavior for providing a connection to an Editable.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Base class for implementors of the InputConnection interface, taking care
 of most of the common behavior for providing a connection to an Editable.
 Implementors of this class will want to be sure to implement
 <c><see cref="P:Android.Views.InputMethods.BaseInputConnection.Editable" /></c> to provide access to their own editable object, and
 to refer to the documentation in <c><see cref="T:Android.Views.InputMethods.InputConnection" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseInputConnection (Android.Views.View targetView, bool fullEditor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.View targetView, bool fullEditor) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/View;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetView" Type="Android.Views.View" />
        <Parameter Name="fullEditor" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetView">To be added.</param>
        <param name="fullEditor">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#BaseInputConnection(android.view.View, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseInputConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBatchEdit">
      <MemberSignature Language="C#" Value="public virtual bool BeginBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginBatchEdit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginBatchEdit", "()Z", "GetBeginBatchEditHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default implementation does nothing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Default implementation does nothing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#beginBatchEdit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearMetaKeyStates">
      <MemberSignature Language="C#" Value="public virtual bool ClearMetaKeyStates (Android.Views.MetaKeyStates states);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearMetaKeyStates(valuetype Android.Views.MetaKeyStates states) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearMetaKeyStates", "(I)Z", "GetClearMetaKeyStates_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="states" Type="Android.Views.MetaKeyStates" />
      </Parameters>
      <Docs>
        <param name="states">The states to be cleared, may be one or more bits as
 per <c><see cref="P:Android.Views.KeyEvent.MetaState" /></c>.</param>
        <summary>Default implementation uses
 <c><see cref="!:Android.Text.Method.MetaKeyKeyListener.clearMetaKeyState(long,int)" /></c> to clear the state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Default implementation uses
 <c><see cref="!:Android.Text.Method.MetaKeyKeyListener.clearMetaKeyState(long,int)" /></c> to clear the state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#clearMetaKeyStates(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CommitCompletion">
      <MemberSignature Language="C#" Value="public virtual bool CommitCompletion (Android.Views.InputMethods.CompletionInfo text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitCompletion(class Android.Views.InputMethods.CompletionInfo text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("commitCompletion", "(Landroid/view/inputmethod/CompletionInfo;)Z", "GetCommitCompletion_Landroid_view_inputmethod_CompletionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Views.InputMethods.CompletionInfo" />
      </Parameters>
      <Docs>
        <param name="text">The committed completion.</param>
        <summary>Default implementation does nothing and returns false.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Default implementation does nothing and returns false.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#commitCompletion(android.view.inputmethod.CompletionInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CommitCorrection">
      <MemberSignature Language="C#" Value="public virtual bool CommitCorrection (Android.Views.InputMethods.CorrectionInfo correctionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitCorrection(class Android.Views.InputMethods.CorrectionInfo correctionInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("commitCorrection", "(Landroid/view/inputmethod/CorrectionInfo;)Z", "GetCommitCorrection_Landroid_view_inputmethod_CorrectionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correctionInfo" Type="Android.Views.InputMethods.CorrectionInfo" />
      </Parameters>
      <Docs>
        <param name="correctionInfo">Detailed information about the correction.</param>
        <summary>Default implementation does nothing and returns false.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Default implementation does nothing and returns false.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#commitCorrection(android.view.inputmethod.CorrectionInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CommitText">
      <MemberSignature Language="C#" Value="public virtual bool CommitText (Java.Lang.ICharSequence text, int newCursorPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CommitText(class Java.Lang.ICharSequence text, int32 newCursorPosition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("commitText", "(Ljava/lang/CharSequence;I)Z", "GetCommitText_Ljava_lang_CharSequence_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to commit. This may include styles.</param>
        <param name="newCursorPosition">The new cursor position around the text,
        in Java characters. If &gt; 0, this is relative to the end
        of the text - 1; if &lt;= 0, this is relative to the start
        of the text. So a value of 1 will always advance the cursor
        to the position after the full text being inserted. Note that
        this means you can't position the cursor within the text,
        because the editor can make modifications to the text
        you are providing so it is not possible to correctly specify
        locations there.</param>
        <summary>Default implementation replaces any existing composing text with
 the given text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Default implementation replaces any existing composing text with
 the given text.  In addition, only if dummy mode, a key event is
 sent for the new text and the current editable buffer cleared.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#commitText(java.lang.CharSequence, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CommitText">
      <MemberSignature Language="C#" Value="public bool CommitText (string text, int newCursorPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitText(string text, int32 newCursorPosition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="newCursorPosition">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSurroundingText">
      <MemberSignature Language="C#" Value="public virtual bool DeleteSurroundingText (int beforeLength, int afterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteSurroundingText(int32 beforeLength, int32 afterLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteSurroundingText", "(II)Z", "GetDeleteSurroundingText_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftLength" Type="System.Int32" />
        <Parameter Name="rightLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="beforeLength">The number of characters to be deleted before the
        current cursor position.</param>
        <param name="afterLength">The number of characters to be deleted after the
        current cursor position.</param>
        <summary>The default implementation performs the deletion around the current
 selection position of the editable text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation performs the deletion around the current
 selection position of the editable text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#deleteSurroundingText(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Editable">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable Editable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.IEditable Editable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEditable", "()Landroid/text/Editable;", "GetGetEditableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the target of edit operations.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the target of edit operations.  The default implementation
 returns its own fake editable that is just used for composing text;
 subclasses that are real text editors should override this and
 supply their own.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getEditable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="EndBatchEdit">
      <MemberSignature Language="C#" Value="public virtual bool EndBatchEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndBatchEdit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endBatchEdit", "()Z", "GetEndBatchEditHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default implementation does nothing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Default implementation does nothing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#endBatchEdit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FinishComposingText">
      <MemberSignature Language="C#" Value="public virtual bool FinishComposingText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FinishComposingText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finishComposingText", "()Z", "GetFinishComposingTextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The default implementation removes the composing state from the
 current editable text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation removes the composing state from the
 current editable text.  In addition, only if dummy mode, a key event is
 sent for the new text and the current editable buffer cleared.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#finishComposingText()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetComposingSpanEnd">
      <MemberSignature Language="C#" Value="public static int GetComposingSpanEnd (Android.Text.ISpannable text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComposingSpanEnd(class Android.Text.ISpannable text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getComposingSpanEnd", "(Landroid/text/Spannable;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getComposingSpanEnd(android.text.Spannable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetComposingSpanStart">
      <MemberSignature Language="C#" Value="public static int GetComposingSpanStart (Android.Text.ISpannable text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComposingSpanStart(class Android.Text.ISpannable text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getComposingSpanStart", "(Landroid/text/Spannable;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getComposingSpanStart(android.text.Spannable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetCursorCapsMode">
      <MemberSignature Language="C#" Value="public virtual Android.Text.CapitalizationMode GetCursorCapsMode (Android.Text.CapitalizationMode reqModes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Text.CapitalizationMode GetCursorCapsMode(valuetype Android.Text.CapitalizationMode reqModes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCursorCapsMode", "(I)I", "GetGetCursorCapsMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.CapitalizationMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqModes" Type="Android.Text.CapitalizationMode" />
      </Parameters>
      <Docs>
        <param name="reqModes">The desired modes to retrieve, as defined by
 <c><see cref="M:Android.Text.TextUtils.GetCapsMode(Java.Lang.ICharSequence,System.Int32,System.Int32)" /></c>. These
 constants are defined so that you can simply pass the current
 <c><see cref="P:Android.Views.InputMethods.EditorInfo.InputType" /></c> value
 directly in to here.</param>
        <summary>The default implementation uses TextUtils.getCapsMode to get the
 cursor caps mode for the current selection position in the editable
 text, unless in dummy mode in which case 0 is always returned.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation uses TextUtils.getCapsMode to get the
 cursor caps mode for the current selection position in the editable
 text, unless in dummy mode in which case 0 is always returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getCursorCapsMode(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetExtractedText">
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.ExtractedText GetExtractedText (Android.Views.InputMethods.ExtractedTextRequest request, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.ExtractedText GetExtractedText(class Android.Views.InputMethods.ExtractedTextRequest request, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExtractedText", "(Landroid/view/inputmethod/ExtractedTextRequest;I)Landroid/view/inputmethod/ExtractedText;", "GetGetExtractedText_Landroid_view_inputmethod_ExtractedTextRequest_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.ExtractedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Views.InputMethods.ExtractedTextRequest" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="request">Description of how the text should be returned.
 <c><see cref="T:Android.Views.InputMethods.ExtractedTextRequest" /></c></param>
        <param name="flags">Additional options to control the client, either 0 or
 <c><see cref="F:Android.Views.InputMethods.InputConnection.GetExtractedTextMonitor" /></c>.</param>
        <summary>The default implementation always returns null.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation always returns null.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedText">
      <MemberSignature Language="C#" Value="public string GetSelectedText (Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSelectedText(valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedTextFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetSelectedTextFormatted (Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetSelectedTextFormatted(valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSelectedText", "(I)Ljava/lang/CharSequence;", "GetGetSelectedText_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="flags">Supplies additional options controlling how the text is
 returned. May be either 0 or <c><see cref="F:Android.Views.InputMethods.InputConnection.GetTextWithStyles" /></c>.</param>
        <summary>The default implementation returns the text currently selected, or null if none is
 selected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation returns the text currently selected, or null if none is
 selected.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getSelectedText(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetTextAfterCursor">
      <MemberSignature Language="C#" Value="public string GetTextAfterCursor (int length, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextAfterCursor(int32 length, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextAfterCursorFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetTextAfterCursorFormatted (int length, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextAfterCursorFormatted(int32 length, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextAfterCursor", "(II)Ljava/lang/CharSequence;", "GetGetTextAfterCursor_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="length">The expected length of the text.</param>
        <param name="flags">Supplies additional options controlling how the text is
 returned. May be either 0 or <c><see cref="F:Android.Views.InputMethods.InputConnection.GetTextWithStyles" /></c>.</param>
        <summary>The default implementation returns the given amount of text from the
 current cursor position in the buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation returns the given amount of text from the
 current cursor position in the buffer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getTextAfterCursor(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetTextBeforeCursor">
      <MemberSignature Language="C#" Value="public string GetTextBeforeCursor (int length, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextBeforeCursor(int32 length, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextBeforeCursorFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetTextBeforeCursorFormatted (int length, Android.Views.InputMethods.GetTextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextBeforeCursorFormatted(int32 length, valuetype Android.Views.InputMethods.GetTextFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextBeforeCursor", "(II)Ljava/lang/CharSequence;", "GetGetTextBeforeCursor_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.InputMethods.GetTextFlags" />
      </Parameters>
      <Docs>
        <param name="length">The expected length of the text.</param>
        <param name="flags">Supplies additional options controlling how the text is
 returned. May be either 0 or <c><see cref="F:Android.Views.InputMethods.InputConnection.GetTextWithStyles" /></c>.</param>
        <summary>The default implementation returns the given amount of text from the
 current cursor position in the buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation returns the given amount of text from the
 current cursor position in the buffer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#getTextBeforeCursor(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformContextMenuAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformContextMenuAction (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformContextMenuAction(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performContextMenuAction", "(I)Z", "GetPerformContextMenuAction_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>The default implementation does nothing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation does nothing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#performContextMenuAction(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformEditorAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformEditorAction (Android.Views.InputMethods.ImeAction actionCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformEditorAction(valuetype Android.Views.InputMethods.ImeAction actionCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performEditorAction", "(I)Z", "GetPerformEditorAction_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionCode" Type="Android.Views.InputMethods.ImeAction" />
      </Parameters>
      <Docs>
        <param name="actionCode">This must be one of the action constants for
 <c><see cref="P:Android.Views.InputMethods.EditorInfo.ImeOptions" /></c>, such as
 <c><see cref="!:Android.Views.InputMethods.EditorInfo.IME_ACTION_GO" /></c>.</param>
        <summary>The default implementation turns this into the enter key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation turns this into the enter key.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#performEditorAction(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformPrivateCommand">
      <MemberSignature Language="C#" Value="public virtual bool PerformPrivateCommand (string action, Android.OS.Bundle data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformPrivateCommand(string action, class Android.OS.Bundle data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)Z", "GetPerformPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">Name of the command to be performed. This <i>must</i>
 be a scoped name, i.e. prefixed with a package name you own, so that
 different developers will not create conflicting commands.</param>
        <param name="data">Any data to include with the command.</param>
        <summary>The default implementation does nothing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation does nothing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#performPrivateCommand(java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RemoveComposingSpans">
      <MemberSignature Language="C#" Value="public static void RemoveComposingSpans (Android.Text.ISpannable text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveComposingSpans(class Android.Text.ISpannable text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeComposingSpans", "(Landroid/text/Spannable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#removeComposingSpans(android.text.Spannable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ReportFullscreenMode">
      <MemberSignature Language="C#" Value="public virtual bool ReportFullscreenMode (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReportFullscreenMode(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reportFullscreenMode", "(Z)Z", "GetReportFullscreenMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>Updates InputMethodManager with the current fullscreen mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates InputMethodManager with the current fullscreen mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#reportFullscreenMode(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RequestCursorUpdates">
      <MemberSignature Language="C#" Value="public virtual bool RequestCursorUpdates (int cursorUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestCursorUpdates(int32 cursorUpdateMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestCursorUpdates", "(I)Z", "GetRequestCursorUpdates_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorUpdateMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cursorUpdateMode">
          <c>
            <see cref="!:Android.Views.InputMethods.InputConnection.CURSOR_UPDATE_IMMEDIATE" />
          </c> and/or
 <c><see cref="!:Android.Views.InputMethods.InputConnection.CURSOR_UPDATE_MONITOR" /></c>. Pass <c>0</c> to disable the effect of
 <c><see cref="!:Android.Views.InputMethods.InputConnection.CURSOR_UPDATE_MONITOR" /></c>.</param>
        <summary>The default implementation does nothing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation does nothing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#requestCursorUpdates(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeyEvent">
      <MemberSignature Language="C#" Value="public virtual bool SendKeyEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSendKeyEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event.</param>
        <summary>Provides standard implementation for sending a key event to the window
 attached to the input connection's view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Provides standard implementation for sending a key event to the window
 attached to the input connection's view.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#sendKeyEvent(android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingRegion">
      <MemberSignature Language="C#" Value="public virtual bool SetComposingRegion (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingRegion(int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setComposingRegion", "(II)Z", "GetSetComposingRegion_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the position in the text at which the composing region begins</param>
        <param name="end">the position in the text at which the composing region ends</param>
        <summary>Mark a certain region of text as composing text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Mark a certain region of text as composing text. If there was a
 composing region, the characters are left as they were and the
 composing span removed, as if <c><see cref="M:Android.Views.InputMethods.BaseInputConnection.FinishComposingText" tool="ReplaceLinkValue" /></c>
 has been called. The default style for composing text is used.

 </para>
          <para tool="javadoc-to-mdoc">The passed indices are clipped to the contents bounds. If
 the resulting region is zero-sized, no region is marked and the
 effect is the same as that of calling <c><see cref="M:Android.Views.InputMethods.BaseInputConnection.FinishComposingText" tool="ReplaceLinkValue" /></c>.
 The order of start and end is not important. In effect, the
 region from start to end and the region from end to start is
 the same. Editor authors, be ready to accept a start that is
 greater than end.</para>
          <para tool="javadoc-to-mdoc">Since this does not change the contents of the text, editors should not call
 <c><see cref="M:Android.Views.InputMethods.InputMethodManager.UpdateSelection(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)" /></c> and
 IMEs should not receive
 <c><see cref="M:Android.InputMethodServices.InputMethodService.OnUpdateSelection(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">This has no impact on the cursor/selection position. It may
 result in the cursor being anywhere inside or outside the
 composing region, including cases where the selection and the
 composing region overlap partially or entirely.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#setComposingRegion(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingSpans">
      <MemberSignature Language="C#" Value="public static void SetComposingSpans (Android.Text.ISpannable text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComposingSpans(class Android.Text.ISpannable text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setComposingSpans", "(Landroid/text/Spannable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#setComposingSpans(android.text.Spannable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingText">
      <MemberSignature Language="C#" Value="public virtual bool SetComposingText (Java.Lang.ICharSequence text, int newCursorPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetComposingText(class Java.Lang.ICharSequence text, int32 newCursorPosition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setComposingText", "(Ljava/lang/CharSequence;I)Z", "GetSetComposingText_Ljava_lang_CharSequence_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The composing text with styles if necessary. If no style
        object attached to the text, the default style for composing text
        is used. See <c><see cref="T:Android.Text.ISpanned" /></c> for how to attach style
        object to the text. <c><see cref="T:Android.Text.SpannableString" /></c> and
        <c><see cref="T:Android.Text.SpannableStringBuilder" /></c> are two
        implementations of the interface <c><see cref="T:Android.Text.ISpanned" /></c>.</param>
        <param name="newCursorPosition">The new cursor position around the text. If
        &gt; 0, this is relative to the end of the text - 1; if &lt;= 0, this
        is relative to the start of the text. So a value of 1 will
        always advance you to the position after the full text being
        inserted. Note that this means you can't position the cursor
        within the text, because the editor can make modifications to
        the text you are providing so it is not possible to correctly
        specify locations there.</param>
        <summary>The default implementation places the given text into the editable,
 replacing any existing composing text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation places the given text into the editable,
 replacing any existing composing text.  The new text is marked as
 in a composing state with the composing style.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#setComposingText(java.lang.CharSequence, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetComposingText">
      <MemberSignature Language="C#" Value="public bool SetComposingText (string text, int newCursorPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetComposingText(string text, int32 newCursorPosition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="newCursorPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="newCursorPosition">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelection">
      <MemberSignature Language="C#" Value="public virtual bool SetSelection (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSelection(int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSelection", "(II)Z", "GetSetSelection_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the character index where the selection should start.</param>
        <param name="end">the character index where the selection should end.</param>
        <summary>The default implementation changes the selection position in the
 current editable text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The default implementation changes the selection position in the
 current editable text.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html#setSelection(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
