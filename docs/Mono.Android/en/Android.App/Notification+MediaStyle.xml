<Type Name="Notification+MediaStyle" FullName="Android.App.Notification+MediaStyle">
  <TypeSignature Language="VB.NET" Value="Public Class Notification.MediaStyle&#xA;Inherits Notification.Style" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Notification::MediaStyle : Android::App::Notification::Style" />
  <TypeSignature Language="C#" Value="public class Notification.MediaStyle : Android.App.Notification.Style" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Notification/MediaStyle extends Android.App.Notification/Style" />
  <TypeSignature Language="DocId" Value="T:Android.App.Notification.MediaStyle" />
  <TypeSignature Language="F#" Value="type Notification.MediaStyle = class&#xA;    inherit Notification.Style" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Notification+Style</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/Notification$MediaStyle", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/Notification$MediaStyle", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Notification style for media playback notifications.</summary>
    <remarks>
      <para>Notification style for media playback notifications.
            
            In the expanded form, <c>Notification#bigContentView</c>, up to 5
            <c>Notification.Action</c>s specified with
            <c>Notification.Builder#addAction(Action) addAction</c> will be
            shown as icon-only pushbuttons, suitable for transport controls. The Bitmap given to
            <c>Notification.Builder#setLargeIcon(android.graphics.Bitmap) setLargeIcon()</c> will be
            treated as album artwork.</para>
      <para>Unlike the other styles provided here, MediaStyle can also modify the standard-size
            <c>Notification#contentView</c>; by providing action indices to
            <c>#setShowActionsInCompactView(int...)</c> you can promote up to 3 actions to be displayed
            in the standard view alongside the usual content.</para>
      <para>Notifications created with MediaStyle will have their category set to
            <c>Notification#CATEGORY_TRANSPORT CATEGORY_TRANSPORT</c> unless you set a different
            category using <c>Notification.Builder#setCategory(String) setCategory()</c>.</para>
      <para>Finally, if you attach a <c>android.media.session.MediaSession.Token</c> using
            <c>android.app.Notification.MediaStyle#setMediaSession(MediaSession.Token)</c>,
            the System UI can identify this as a notification representing an active media session
            and respond accordingly (by showing album artwork in the lockscreen, for example).</para>
      <para>Starting at <c>android.os.Build.VERSION_CODES#O Android O</c> any notification that has a
            media session attached with <c>#setMediaSession(MediaSession.Token)</c> will be colorized.
            You can opt-out of this behavior by using <c>Notification.Builder#setColorized(boolean)</c>.</para>
      <para>To use this style with your Notification, feed it to
            <c>Notification.Builder#setStyle(android.app.Notification.Style)</c> like so:</para>
      <code lang="text/java">Notification noti = new Notification.Builder()
                .setSmallIcon(R.drawable.ic_stat_player)
                .setContentTitle(&amp;quot;Track title&amp;quot;)
                .setContentText(&amp;quot;Artist - Album&amp;quot;)
                .setLargeIcon(albumArtBitmap))
                .setStyle(&lt;b&gt;new Notification.MediaStyle()&lt;/b&gt;
                    .setMediaSession(mySession))
                .build();
            </code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/Notification.MediaStyle" title="Reference documentation">Java documentation for <code>android.app.Notification.MediaStyle</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaStyle();" />
      <MemberSignature Language="C#" Value="public MediaStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Construct a <c>MediaStyle</c> object.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As Notification.Builder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaStyle(Android::App::Notification::Builder ^ builder);" />
      <MemberSignature Language="C#" Value="public MediaStyle (Android.App.Notification.Builder? builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.App.Notification/Builder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.#ctor(Android.App.Notification.Builder)" />
      <MemberSignature Language="F#" Value="new Android.App.Notification.MediaStyle : Android.App.Notification.Builder -&gt; Android.App.Notification.MediaStyle" Usage="new Android.App.Notification.MediaStyle builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/app/Notification$Builder;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/app/Notification$Builder;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="builder" Type="Android.App.Notification+Builder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <c>Notification.Builder</c> object that is modified by this <c>MediaStyle</c>.</param>
        <summary>Construct a <c>MediaStyle</c> object.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MediaStyle(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected MediaStyle (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Notification.MediaStyle : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Notification.MediaStyle" Usage="new Android.App.Notification.MediaStyle (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.MediaStyle.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Notification.MediaStyle.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMediaSession">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMediaSession (token As MediaSession.Token) As Notification.MediaStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Notification::MediaStyle ^ SetMediaSession(Android::Media::Session::MediaSession::Token ^ token);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.MediaStyle? SetMediaSession (Android.Media.Session.MediaSession.Token? token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/MediaStyle SetMediaSession(class Android.Media.Session.MediaSession/Token token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.SetMediaSession(Android.Media.Session.MediaSession.Token)" />
      <MemberSignature Language="F#" Value="abstract member SetMediaSession : Android.Media.Session.MediaSession.Token -&gt; Android.App.Notification.MediaStyle&#xA;override this.SetMediaSession : Android.Media.Session.MediaSession.Token -&gt; Android.App.Notification.MediaStyle" Usage="mediaStyle.SetMediaSession token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMediaSession", "(Landroid/media/session/MediaSession$Token;)Landroid/app/Notification$MediaStyle;", "GetSetMediaSession_Landroid_media_session_MediaSession_Token_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMediaSession", "(Landroid/media/session/MediaSession$Token;)Landroid/app/Notification$MediaStyle;", "GetSetMediaSession_Landroid_media_session_MediaSession_Token_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+MediaStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.Media.Session.MediaSession+Token" />
      </Parameters>
      <Docs>
        <param name="token">The <see cref="T:Android.Media.Session.MediaSession.Token" /> to attach.</param>
        <summary>Attach a <see cref="T:Android.Media.Session.MediaSession.Token" /> to this Notification.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemotePlaybackInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetRemotePlaybackInfo (deviceName As ICharSequence, iconResource As Integer, chipIntent As PendingIntent) As Notification.MediaStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Notification::MediaStyle ^ SetRemotePlaybackInfo(Java::Lang::ICharSequence ^ deviceName, int iconResource, Android::App::PendingIntent ^ chipIntent);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.MediaStyle SetRemotePlaybackInfo (Java.Lang.ICharSequence deviceName, int iconResource, Android.App.PendingIntent? chipIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/MediaStyle SetRemotePlaybackInfo(class Java.Lang.ICharSequence deviceName, int32 iconResource, class Android.App.PendingIntent chipIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.SetRemotePlaybackInfo(Java.Lang.ICharSequence,System.Int32,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetRemotePlaybackInfo : Java.Lang.ICharSequence * int * Android.App.PendingIntent -&gt; Android.App.Notification.MediaStyle&#xA;override this.SetRemotePlaybackInfo : Java.Lang.ICharSequence * int * Android.App.PendingIntent -&gt; Android.App.Notification.MediaStyle" Usage="mediaStyle.SetRemotePlaybackInfo (deviceName, iconResource, chipIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRemotePlaybackInfo", "(Ljava/lang/CharSequence;ILandroid/app/PendingIntent;)Landroid/app/Notification$MediaStyle;", "GetSetRemotePlaybackInfo_Ljava_lang_CharSequence_ILandroid_app_PendingIntent_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRemotePlaybackInfo", "(Ljava/lang/CharSequence;ILandroid/app/PendingIntent;)Landroid/app/Notification$MediaStyle;", "GetSetRemotePlaybackInfo_Ljava_lang_CharSequence_ILandroid_app_PendingIntent_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+MediaStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceName" Type="Java.Lang.ICharSequence" />
        <Parameter Name="iconResource" Type="System.Int32" />
        <Parameter Name="chipIntent" Type="Android.App.PendingIntent">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="deviceName">To be added.</param>
        <param name="iconResource">To be added.</param>
        <param name="chipIntent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemotePlaybackInfo">
      <MemberSignature Language="VB.NET" Value="Public Function SetRemotePlaybackInfo (deviceName As String, iconResource As Integer, chipIntent As PendingIntent) As Notification.MediaStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::MediaStyle ^ SetRemotePlaybackInfo(System::String ^ deviceName, int iconResource, Android::App::PendingIntent ^ chipIntent);" />
      <MemberSignature Language="C#" Value="public Android.App.Notification.MediaStyle SetRemotePlaybackInfo (string deviceName, int iconResource, Android.App.PendingIntent? chipIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/MediaStyle SetRemotePlaybackInfo(string deviceName, int32 iconResource, class Android.App.PendingIntent chipIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.SetRemotePlaybackInfo(System.String,System.Int32,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="member this.SetRemotePlaybackInfo : string * int * Android.App.PendingIntent -&gt; Android.App.Notification.MediaStyle" Usage="mediaStyle.SetRemotePlaybackInfo (deviceName, iconResource, chipIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+MediaStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceName" Type="System.String" />
        <Parameter Name="iconResource" Type="System.Int32" />
        <Parameter Name="chipIntent" Type="Android.App.PendingIntent">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="deviceName">To be added.</param>
        <param name="iconResource">To be added.</param>
        <param name="chipIntent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShowActionsInCompactView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetShowActionsInCompactView (ParamArray actions As Integer()) As Notification.MediaStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Notification::MediaStyle ^ SetShowActionsInCompactView(... cli::array &lt;int&gt; ^ actions);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.MediaStyle? SetShowActionsInCompactView (params int[]? actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/MediaStyle SetShowActionsInCompactView(int32[] actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.MediaStyle.SetShowActionsInCompactView(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member SetShowActionsInCompactView : int[] -&gt; Android.App.Notification.MediaStyle&#xA;override this.SetShowActionsInCompactView : int[] -&gt; Android.App.Notification.MediaStyle" Usage="mediaStyle.SetShowActionsInCompactView actions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShowActionsInCompactView", "([I)Landroid/app/Notification$MediaStyle;", "GetSetShowActionsInCompactView_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShowActionsInCompactView", "([I)Landroid/app/Notification$MediaStyle;", "GetSetShowActionsInCompactView_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+MediaStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">The indices of the actions to show in the compact notification view.</param>
        <summary>Request actions to be shown in the compact notification view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.MediaStyle.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Notification.MediaStyle.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.MediaStyle.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Notification.MediaStyle.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
