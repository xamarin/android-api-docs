<Type Name="WallpaperManager" FullName="Android.App.WallpaperManager">
  <TypeSignature Language="C#" Value="public class WallpaperManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WallpaperManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.WallpaperManager" />
  <TypeSignature Language="F#" Value="type WallpaperManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/WallpaperManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>Provides access to the system wallpaper.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/WallpaperManager" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WallpaperManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.WallpaperManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.WallpaperManager" Usage="new Android.App.WallpaperManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionChangeLiveWallpaper">
      <MemberSignature Language="C#" Value="public const string ActionChangeLiveWallpaper;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionChangeLiveWallpaper" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.ActionChangeLiveWallpaper" />
      <MemberSignature Language="F#" Value="val mutable ActionChangeLiveWallpaper : string" Usage="Android.App.WallpaperManager.ActionChangeLiveWallpaper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_CHANGE_LIVE_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Directly launch live wallpaper preview, allowing the user to immediately
            confirm to switch to a specific live wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ActionCropAndSetWallpaper">
      <MemberSignature Language="C#" Value="public const string ActionCropAndSetWallpaper;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionCropAndSetWallpaper" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.ActionCropAndSetWallpaper" />
      <MemberSignature Language="F#" Value="val mutable ActionCropAndSetWallpaper : string" Usage="Android.App.WallpaperManager.ActionCropAndSetWallpaper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_CROP_AND_SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Show settings for choosing wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLiveWallpaperChooser">
      <MemberSignature Language="C#" Value="public const string ActionLiveWallpaperChooser;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionLiveWallpaperChooser" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.ActionLiveWallpaperChooser" />
      <MemberSignature Language="F#" Value="val mutable ActionLiveWallpaperChooser : string" Usage="Android.App.WallpaperManager.ActionLiveWallpaperChooser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_LIVE_WALLPAPER_CHOOSER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Launch an activity for the user to pick the current global live
            wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="AddOnColorsChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnColorsChangedListener (Android.App.WallpaperManager.IOnColorsChangedListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnColorsChangedListener(class Android.App.WallpaperManager/IOnColorsChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.AddOnColorsChangedListener(Android.App.WallpaperManager.IOnColorsChangedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddOnColorsChangedListener : Android.App.WallpaperManager.IOnColorsChangedListener * Android.OS.Handler -&gt; unit&#xA;override this.AddOnColorsChangedListener : Android.App.WallpaperManager.IOnColorsChangedListener * Android.OS.Handler -&gt; unit" Usage="wallpaperManager.AddOnColorsChangedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnColorsChangedListener", "(Landroid/app/WallpaperManager$OnColorsChangedListener;Landroid/os/Handler;)V", "GetAddOnColorsChangedListener_Landroid_app_WallpaperManager_OnColorsChangedListener_Landroid_os_Handler_Handler", ApiSince=27)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.WallpaperManager+IOnColorsChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltInDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable BuiltInDrawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable BuiltInDrawable" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.BuiltInDrawable" />
      <MemberSignature Language="F#" Value="member this.BuiltInDrawable : Android.Graphics.Drawables.Drawable" Usage="Android.App.WallpaperManager.BuiltInDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBuiltInDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetBuiltInDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtain a drawable for the built-in static system wallpaper.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.Clear" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="wallpaperManager.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "()V", "GetClearHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove any currently set system wallpaper, reverting to the system's built-in
            wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear (Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear(valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.Clear(Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member Clear : Android.App.WallpaperManagerFlags -&gt; unit&#xA;override this.Clear : Android.App.WallpaperManagerFlags -&gt; unit" Usage="wallpaperManager.Clear which" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "(I)V", "GetClear_IHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="which">To be added.</param>
        <summary>Remove any currently set system wallpaper, reverting to the system's built-in
            wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearWallpaper">
      <MemberSignature Language="C#" Value="public virtual void ClearWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearWallpaper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.ClearWallpaper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearWallpaper", "()V", "GetClearWallpaperHandler", ApiSince=28)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset all wallpaper to the factory default.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearWallpaperOffsets">
      <MemberSignature Language="C#" Value="public virtual void ClearWallpaperOffsets (Android.OS.IBinder windowToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearWallpaperOffsets(class Android.OS.IBinder windowToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.ClearWallpaperOffsets(Android.OS.IBinder)" />
      <MemberSignature Language="F#" Value="abstract member ClearWallpaperOffsets : Android.OS.IBinder -&gt; unit&#xA;override this.ClearWallpaperOffsets : Android.OS.IBinder -&gt; unit" Usage="wallpaperManager.ClearWallpaperOffsets windowToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearWallpaperOffsets", "(Landroid/os/IBinder;)V", "GetClearWallpaperOffsets_Landroid_os_IBinder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="windowToken">The window who these offsets should be associated
            with, as returned by <c>android.view.View#getWindowToken()
            View.getWindowToken()</c>.</param>
        <summary>Clear the offsets previously associated with this window through
            <c>#setWallpaperOffsets(IBinder, float, float)</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.App.WallpaperManager.ColorsChangedEventArgs&gt; ColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.App.WallpaperManager/ColorsChangedEventArgs&gt; ColorsChanged" />
      <MemberSignature Language="DocId" Value="E:Android.App.WallpaperManager.ColorsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.App.WallpaperManager+ColorsChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandDrop">
      <MemberSignature Language="C#" Value="public const string CommandDrop;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommandDrop" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.CommandDrop" />
      <MemberSignature Language="F#" Value="val mutable CommandDrop : string" Usage="Android.App.WallpaperManager.CommandDrop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMMAND_DROP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command for <c>#sendWallpaperCommand</c>: reported by the wallpaper
            host when the user drops an object into an area of the host.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="CommandSecondaryTap">
      <MemberSignature Language="C#" Value="public const string CommandSecondaryTap;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommandSecondaryTap" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.CommandSecondaryTap" />
      <MemberSignature Language="F#" Value="val mutable CommandSecondaryTap : string" Usage="Android.App.WallpaperManager.CommandSecondaryTap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMMAND_SECONDARY_TAP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command for <c>#sendWallpaperCommand</c>: reported by the wallpaper
            host when the user releases a secondary pointer on an empty area
            (not performing an action in the host).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CommandTap">
      <MemberSignature Language="C#" Value="public const string CommandTap;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommandTap" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.CommandTap" />
      <MemberSignature Language="F#" Value="val mutable CommandTap : string" Usage="Android.App.WallpaperManager.CommandTap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMMAND_TAP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command for <c>#sendWallpaperCommand</c>: reported by the wallpaper
            host when the user taps on an empty area (not performing an action
            in the host).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.DesiredMinimumHeight" />
      <MemberSignature Language="F#" Value="member this.DesiredMinimumHeight : int" Usage="Android.App.WallpaperManager.DesiredMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDesiredMinimumHeight", "()I", "GetGetDesiredMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the desired minimum height for the wallpaper.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.DesiredMinimumWidth" />
      <MemberSignature Language="F#" Value="member this.DesiredMinimumWidth : int" Usage="Android.App.WallpaperManager.DesiredMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDesiredMinimumWidth", "()I", "GetGetDesiredMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the desired minimum width for the wallpaper.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Drawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Drawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Drawable" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.Drawable" />
      <MemberSignature Language="F#" Value="member this.Drawable : Android.Graphics.Drawables.Drawable" Usage="Android.App.WallpaperManager.Drawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current system wallpaper; if
            no wallpaper is set, the system built-in static wallpaper is returned.</summary>
        <value>Returns a Drawable object that will draw the system wallpaper,
                or <c>null</c> if no system wallpaper exists or if the calling application
                is not able to access the wallpaper.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ExtraLiveWallpaperComponent">
      <MemberSignature Language="C#" Value="public const string ExtraLiveWallpaperComponent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraLiveWallpaperComponent" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.ExtraLiveWallpaperComponent" />
      <MemberSignature Language="F#" Value="val mutable ExtraLiveWallpaperComponent : string" Usage="Android.App.WallpaperManager.ExtraLiveWallpaperComponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_LIVE_WALLPAPER_COMPONENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra in <c>#ACTION_CHANGE_LIVE_WALLPAPER</c> that specifies the
            ComponentName of a live wallpaper that should be shown as a preview,
            for the user to confirm.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FastDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable FastDrawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable FastDrawable" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.FastDrawable" />
      <MemberSignature Language="F#" Value="member this.FastDrawable : Android.Graphics.Drawables.Drawable" Usage="Android.App.WallpaperManager.FastDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFastDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetFastDrawableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.RequiresPermission("android.permission.READ_EXTERNAL_STORAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c>#getDrawable()</c>, but the returned Drawable has a number
            of limitations to reduce its overhead as much as possible.</summary>
        <value>Returns a Drawable object that will draw the wallpaper.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="FlagLock">
      <MemberSignature Language="C#" Value="public const Android.App.WallpaperManagerFlags FlagLock = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.WallpaperManagerFlags FlagLock = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.FlagLock" />
      <MemberSignature Language="F#" Value="val mutable FlagLock : Android.App.WallpaperManagerFlags" Usage="Android.App.WallpaperManager.FlagLock" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_LOCK", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.WallpaperManagerFlags enum directly instead of this field.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag: set or retrieve the lock-screen-specific wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagSystem">
      <MemberSignature Language="C#" Value="public const Android.App.WallpaperManagerFlags FlagSystem = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.WallpaperManagerFlags FlagSystem = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.FlagSystem" />
      <MemberSignature Language="F#" Value="val mutable FlagSystem : Android.App.WallpaperManagerFlags" Usage="Android.App.WallpaperManager.FlagSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_SYSTEM", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.WallpaperManagerFlags enum directly instead of this field.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag: set or retrieve the general system wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForgetLoadedWallpaper">
      <MemberSignature Language="C#" Value="public virtual void ForgetLoadedWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForgetLoadedWallpaper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.ForgetLoadedWallpaper" />
      <MemberSignature Language="F#" Value="abstract member ForgetLoadedWallpaper : unit -&gt; unit&#xA;override this.ForgetLoadedWallpaper : unit -&gt; unit" Usage="wallpaperManager.ForgetLoadedWallpaper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forgetLoadedWallpaper", "()V", "GetForgetLoadedWallpaperHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all internal references to the last loaded wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetBuiltInDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetBuiltInDrawable (Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetBuiltInDrawable(valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetBuiltInDrawable(Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetBuiltInDrawable : Android.App.WallpaperManagerFlags -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.GetBuiltInDrawable : Android.App.WallpaperManagerFlags -&gt; Android.Graphics.Drawables.Drawable" Usage="wallpaperManager.GetBuiltInDrawable which" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBuiltInDrawable", "(I)Landroid/graphics/drawable/Drawable;", "GetGetBuiltInDrawable_IHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="which">To be added.</param>
        <summary>Obtain a drawable for the built-in static system wallpaper.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuiltInDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetBuiltInDrawable (int outWidth, int outHeight, bool scaleToFit, float horizontalAlignment, float verticalAlignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetBuiltInDrawable(int32 outWidth, int32 outHeight, bool scaleToFit, float32 horizontalAlignment, float32 verticalAlignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetBuiltInDrawable(System.Int32,System.Int32,System.Boolean,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member GetBuiltInDrawable : int * int * bool * single * single -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.GetBuiltInDrawable : int * int * bool * single * single -&gt; Android.Graphics.Drawables.Drawable" Usage="wallpaperManager.GetBuiltInDrawable (outWidth, outHeight, scaleToFit, horizontalAlignment, verticalAlignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBuiltInDrawable", "(IIZFF)Landroid/graphics/drawable/Drawable;", "GetGetBuiltInDrawable_IIZFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outWidth" Type="System.Int32" />
        <Parameter Name="outHeight" Type="System.Int32" />
        <Parameter Name="scaleToFit" Type="System.Boolean" />
        <Parameter Name="horizontalAlignment" Type="System.Single" />
        <Parameter Name="verticalAlignment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="outWidth">The height of the returned drawable</param>
        <param name="outHeight">To be added.</param>
        <param name="scaleToFit">If true, scale the wallpaper down rather than just cropping it</param>
        <param name="horizontalAlignment">A float value between 0 and 1 specifying where to crop the image;
        0 for left-aligned, 0.5 for horizontal center-aligned, and 1 for right-aligned</param>
        <param name="verticalAlignment">A float value between 0 and 1 specifying where to crop the image;
        0 for top-aligned, 0.5 for vertical center-aligned, and 1 for bottom-aligned

</param>
        <summary>Obtain a drawable for the built-in static system wallpaper.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuiltInDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetBuiltInDrawable (int outWidth, int outHeight, bool scaleToFit, float horizontalAlignment, float verticalAlignment, Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetBuiltInDrawable(int32 outWidth, int32 outHeight, bool scaleToFit, float32 horizontalAlignment, float32 verticalAlignment, valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetBuiltInDrawable(System.Int32,System.Int32,System.Boolean,System.Single,System.Single,Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetBuiltInDrawable : int * int * bool * single * single * Android.App.WallpaperManagerFlags -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.GetBuiltInDrawable : int * int * bool * single * single * Android.App.WallpaperManagerFlags -&gt; Android.Graphics.Drawables.Drawable" Usage="wallpaperManager.GetBuiltInDrawable (outWidth, outHeight, scaleToFit, horizontalAlignment, verticalAlignment, which)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBuiltInDrawable", "(IIZFFI)Landroid/graphics/drawable/Drawable;", "GetGetBuiltInDrawable_IIZFFIHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outWidth" Type="System.Int32" />
        <Parameter Name="outHeight" Type="System.Int32" />
        <Parameter Name="scaleToFit" Type="System.Boolean" />
        <Parameter Name="horizontalAlignment" Type="System.Single" />
        <Parameter Name="verticalAlignment" Type="System.Single" />
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outWidth">To be added.</param>
        <param name="outHeight">To be added.</param>
        <param name="scaleToFit">To be added.</param>
        <param name="horizontalAlignment">To be added.</param>
        <param name="verticalAlignment">To be added.</param>
        <param name="which">To be added.</param>
        <summary>Obtain a drawable for the built-in static system wallpaper.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCropAndSetWallpaperIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent GetCropAndSetWallpaperIntent (Android.Net.Uri imageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent GetCropAndSetWallpaperIntent(class Android.Net.Uri imageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetCropAndSetWallpaperIntent(Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member GetCropAndSetWallpaperIntent : Android.Net.Uri -&gt; Android.Content.Intent&#xA;override this.GetCropAndSetWallpaperIntent : Android.Net.Uri -&gt; Android.Content.Intent" Usage="wallpaperManager.GetCropAndSetWallpaperIntent imageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCropAndSetWallpaperIntent", "(Landroid/net/Uri;)Landroid/content/Intent;", "GetGetCropAndSetWallpaperIntent_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="imageUri">The image URI that will be set in the intent. The must be a content
                            URI and its provider must resolve its type to "image/*"</param>
        <summary>Gets an Intent that will launch an activity that crops the given
            image and sets the device's wallpaper.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the URI is not a content URI or its MIME type is
         not "image/*"
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.App.WallpaperManager GetInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.WallpaperManager GetInstance(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetInstance(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetInstance : Android.Content.Context -&gt; Android.App.WallpaperManager" Usage="Android.App.WallpaperManager.GetInstance context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/app/WallpaperManager;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Retrieve a WallpaperManager associated with the given Context.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetWallpaperColors">
      <MemberSignature Language="C#" Value="public virtual Android.App.WallpaperColors GetWallpaperColors (int which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.WallpaperColors GetWallpaperColors(int32 which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetWallpaperColors(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetWallpaperColors : int -&gt; Android.App.WallpaperColors&#xA;override this.GetWallpaperColors : int -&gt; Android.App.WallpaperColors" Usage="wallpaperManager.GetWallpaperColors which" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWallpaperColors", "(I)Landroid/app/WallpaperColors;", "GetGetWallpaperColors_IHandler", ApiSince=27)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperColors</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="which" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="which">Wallpaper type. Must be either <c>#FLAG_SYSTEM</c> or
                <c>#FLAG_LOCK</c>.</param>
        <summary>Get the primary colors of a wallpaper.</summary>
        <returns>Current <c>WallpaperColors</c> or null if colors are unknown.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWallpaperFile">
      <MemberSignature Language="C#" Value="public virtual Android.OS.ParcelFileDescriptor GetWallpaperFile (Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.ParcelFileDescriptor GetWallpaperFile(valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetWallpaperFile(Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetWallpaperFile : Android.App.WallpaperManagerFlags -&gt; Android.OS.ParcelFileDescriptor&#xA;override this.GetWallpaperFile : Android.App.WallpaperManagerFlags -&gt; Android.OS.ParcelFileDescriptor" Usage="wallpaperManager.GetWallpaperFile which" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWallpaperFile", "(I)Landroid/os/ParcelFileDescriptor;", "GetGetWallpaperFile_IHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.READ_EXTERNAL_STORAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="which">The wallpaper whose image file is to be retrieved.  Must be a single
                defined kind of wallpaper, either <c>#FLAG_SYSTEM</c> or
                <c>#FLAG_LOCK</c>.</param>
        <summary>Get an open, readable file descriptor to the given wallpaper image file.</summary>
        <returns>An open, readable file desriptor to the requested wallpaper image file;
                or <c>null</c> if no such wallpaper is configured or if the calling app does
                not have permission to read the current wallpaper.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWallpaperId">
      <MemberSignature Language="C#" Value="public virtual int GetWallpaperId (Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWallpaperId(valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.GetWallpaperId(Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetWallpaperId : Android.App.WallpaperManagerFlags -&gt; int&#xA;override this.GetWallpaperId : Android.App.WallpaperManagerFlags -&gt; int" Usage="wallpaperManager.GetWallpaperId which" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWallpaperId", "(I)I", "GetGetWallpaperId_IHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="which">The wallpaper whose ID is to be returned.  Must be a single
                defined kind of wallpaper, either <c>#FLAG_SYSTEM</c> or
                <c>#FLAG_LOCK</c>.</param>
        <summary>Get the ID of the current wallpaper of the given kind.</summary>
        <returns>The positive numeric ID of the current wallpaper of the given kind,
                or a negative value if no such wallpaper is configured.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasResourceWallpaper">
      <MemberSignature Language="C#" Value="public virtual bool HasResourceWallpaper (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasResourceWallpaper(int32 resid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.HasResourceWallpaper(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member HasResourceWallpaper : int -&gt; bool&#xA;override this.HasResourceWallpaper : int -&gt; bool" Usage="wallpaperManager.HasResourceWallpaper resid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasResourceWallpaper", "(I)Z", "GetHasResourceWallpaper_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">To be added.</param>
        <summary>Return whether any users are currently set to use the wallpaper
            with the given resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsSetWallpaperAllowed">
      <MemberSignature Language="C#" Value="public virtual bool IsSetWallpaperAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSetWallpaperAllowed" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.IsSetWallpaperAllowed" />
      <MemberSignature Language="F#" Value="member this.IsSetWallpaperAllowed : bool" Usage="Android.App.WallpaperManager.IsSetWallpaperAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSetWallpaperAllowed", "()Z", "GetIsSetWallpaperAllowedHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the calling package is allowed to set the wallpaper for the calling user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWallpaperSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsWallpaperSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWallpaperSupported" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.IsWallpaperSupported" />
      <MemberSignature Language="F#" Value="member this.IsWallpaperSupported : bool" Usage="Android.App.WallpaperManager.IsWallpaperSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isWallpaperSupported", "()Z", "GetIsWallpaperSupportedHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether wallpapers are supported for the calling user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.WallpaperManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable PeekDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable PeekDrawable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.PeekDrawable" />
      <MemberSignature Language="F#" Value="abstract member PeekDrawable : unit -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.PeekDrawable : unit -&gt; Android.Graphics.Drawables.Drawable" Usage="wallpaperManager.PeekDrawable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekDrawable", "()Landroid/graphics/drawable/Drawable;", "GetPeekDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the current system wallpaper; if there is no wallpaper set,
            a null pointer is returned.</summary>
        <returns>Returns a Drawable object that will draw the wallpaper or a
            null pointer if these is none.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="PeekFastDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable PeekFastDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable PeekFastDrawable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.PeekFastDrawable" />
      <MemberSignature Language="F#" Value="abstract member PeekFastDrawable : unit -&gt; Android.Graphics.Drawables.Drawable&#xA;override this.PeekFastDrawable : unit -&gt; Android.Graphics.Drawables.Drawable" Usage="wallpaperManager.PeekFastDrawable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekFastDrawable", "()Landroid/graphics/drawable/Drawable;", "GetPeekFastDrawableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.READ_EXTERNAL_STORAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Like <c>#getFastDrawable()</c>, but if there is no wallpaper set,
            a null pointer is returned.</summary>
        <returns>Returns an optimized Drawable object that will draw the
            wallpaper or a null pointer if these is none.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnColorsChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnColorsChangedListener (Android.App.WallpaperManager.IOnColorsChangedListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnColorsChangedListener(class Android.App.WallpaperManager/IOnColorsChangedListener callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.RemoveOnColorsChangedListener(Android.App.WallpaperManager.IOnColorsChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnColorsChangedListener : Android.App.WallpaperManager.IOnColorsChangedListener -&gt; unit&#xA;override this.RemoveOnColorsChangedListener : Android.App.WallpaperManager.IOnColorsChangedListener -&gt; unit" Usage="wallpaperManager.RemoveOnColorsChangedListener callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnColorsChangedListener", "(Landroid/app/WallpaperManager$OnColorsChangedListener;)V", "GetRemoveOnColorsChangedListener_Landroid_app_WallpaperManager_OnColorsChangedListener_Handler", ApiSince=27)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.App.WallpaperManager+IOnColorsChangedListener" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendWallpaperCommand">
      <MemberSignature Language="C#" Value="public virtual void SendWallpaperCommand (Android.OS.IBinder windowToken, string action, int x, int y, int z, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendWallpaperCommand(class Android.OS.IBinder windowToken, string action, int32 x, int32 y, int32 z, class Android.OS.Bundle extras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SendWallpaperCommand(Android.OS.IBinder,System.String,System.Int32,System.Int32,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendWallpaperCommand : Android.OS.IBinder * string * int * int * int * Android.OS.Bundle -&gt; unit&#xA;override this.SendWallpaperCommand : Android.OS.IBinder * string * int * int * int * Android.OS.Bundle -&gt; unit" Usage="wallpaperManager.SendWallpaperCommand (windowToken, action, x, y, z, extras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendWallpaperCommand", "(Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)V", "GetSendWallpaperCommand_Landroid_os_IBinder_Ljava_lang_String_IIILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="windowToken">The window who these offsets should be associated
            with, as returned by <c>android.view.View#getWindowToken()
            View.getWindowToken()</c>.</param>
        <param name="action">Name of the command to perform.  This must be a scoped
            name to avoid collisions, such as "com.mycompany.wallpaper.DOIT".</param>
        <param name="x">Arbitrary integer argument based on command.</param>
        <param name="y">Arbitrary integer argument based on command.</param>
        <param name="z">Arbitrary integer argument based on command.</param>
        <param name="extras">Optional additional information for the command, or null.</param>
        <summary>Send an arbitrary command to the current active wallpaper.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetBitmap (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBitmap(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetBitmap(Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member SetBitmap : Android.Graphics.Bitmap -&gt; unit&#xA;override this.SetBitmap : Android.Graphics.Bitmap -&gt; unit" Usage="wallpaperManager.SetBitmap bitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBitmap", "(Landroid/graphics/Bitmap;)V", "GetSetBitmap_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">The bitmap to be used as the new system wallpaper.</param>
        <summary>Change the current system wallpaper to a bitmap.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBitmap">
      <MemberSignature Language="C#" Value="public virtual int SetBitmap (Android.Graphics.Bitmap fullImage, Android.Graphics.Rect visibleCropHint, bool allowBackup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetBitmap(class Android.Graphics.Bitmap fullImage, class Android.Graphics.Rect visibleCropHint, bool allowBackup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetBitmap(Android.Graphics.Bitmap,Android.Graphics.Rect,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetBitmap : Android.Graphics.Bitmap * Android.Graphics.Rect * bool -&gt; int&#xA;override this.SetBitmap : Android.Graphics.Bitmap * Android.Graphics.Rect * bool -&gt; int" Usage="wallpaperManager.SetBitmap (fullImage, visibleCropHint, allowBackup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBitmap", "(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Z)I", "GetSetBitmap_Landroid_graphics_Bitmap_Landroid_graphics_Rect_ZHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullImage" Type="Android.Graphics.Bitmap" />
        <Parameter Name="visibleCropHint" Type="Android.Graphics.Rect" />
        <Parameter Name="allowBackup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fullImage">To be added.</param>
        <param name="visibleCropHint">To be added.</param>
        <param name="allowBackup">To be added.</param>
        <summary>Change the current system wallpaper to a bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBitmap">
      <MemberSignature Language="C#" Value="public virtual int SetBitmap (Android.Graphics.Bitmap fullImage, Android.Graphics.Rect visibleCropHint, bool allowBackup, Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetBitmap(class Android.Graphics.Bitmap fullImage, class Android.Graphics.Rect visibleCropHint, bool allowBackup, valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetBitmap(Android.Graphics.Bitmap,Android.Graphics.Rect,System.Boolean,Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetBitmap : Android.Graphics.Bitmap * Android.Graphics.Rect * bool * Android.App.WallpaperManagerFlags -&gt; int&#xA;override this.SetBitmap : Android.Graphics.Bitmap * Android.Graphics.Rect * bool * Android.App.WallpaperManagerFlags -&gt; int" Usage="wallpaperManager.SetBitmap (fullImage, visibleCropHint, allowBackup, which)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBitmap", "(Landroid/graphics/Bitmap;Landroid/graphics/Rect;ZI)I", "GetSetBitmap_Landroid_graphics_Bitmap_Landroid_graphics_Rect_ZIHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullImage" Type="Android.Graphics.Bitmap" />
        <Parameter Name="visibleCropHint" Type="Android.Graphics.Rect" />
        <Parameter Name="allowBackup" Type="System.Boolean" />
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fullImage">To be added.</param>
        <param name="visibleCropHint">To be added.</param>
        <param name="allowBackup">To be added.</param>
        <param name="which">To be added.</param>
        <summary>Change the current system wallpaper to a bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayPadding">
      <MemberSignature Language="C#" Value="public virtual void SetDisplayPadding (Android.Graphics.Rect padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayPadding(class Android.Graphics.Rect padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetDisplayPadding(Android.Graphics.Rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayPadding", "(Landroid/graphics/Rect;)V", "GetSetDisplayPadding_Landroid_graphics_Rect_Handler", ApiSince=28)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER_HINTS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="padding">The number of pixels the wallpaper should extend beyond the display,
            on its left, top, right, and bottom sides.</param>
        <summary>Specify extra padding that the wallpaper should have outside of the display.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResource">
      <MemberSignature Language="C#" Value="public virtual void SetResource (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetResource(int32 resid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetResource(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetResource : int -&gt; unit&#xA;override this.SetResource : int -&gt; unit" Usage="wallpaperManager.SetResource resid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setResource", "(I)V", "GetSetResource_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The resource ID of the bitmap to be used as the wallpaper image</param>
        <summary>Change the current system wallpaper to the bitmap in the given resource.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResource">
      <MemberSignature Language="C#" Value="public virtual int SetResource (int resid, Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetResource(int32 resid, valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetResource(System.Int32,Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetResource : int * Android.App.WallpaperManagerFlags -&gt; int&#xA;override this.SetResource : int * Android.App.WallpaperManagerFlags -&gt; int" Usage="wallpaperManager.SetResource (resid, which)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setResource", "(II)I", "GetSetResource_IIHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resid">The resource ID of the bitmap to be used as the wallpaper image</param>
        <param name="which">To be added.</param>
        <summary>Change the current system wallpaper to the bitmap in the given resource.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStream">
      <MemberSignature Language="C#" Value="public virtual void SetStream (System.IO.Stream bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStream(class System.IO.Stream bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetStream(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member SetStream : System.IO.Stream -&gt; unit&#xA;override this.SetStream : System.IO.Stream -&gt; unit" Usage="wallpaperManager.SetStream bitmapData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStream", "(Ljava/io/InputStream;)V", "GetSetStream_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapData" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="bitmapData">A stream containing the raw data to install as a wallpaper.  This
                data can be in any format handled by <c>BitmapRegionDecoder</c>.</param>
        <summary>Change the current system wallpaper to a specific byte stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStream">
      <MemberSignature Language="C#" Value="public virtual int SetStream (System.IO.Stream bitmapData, Android.Graphics.Rect visibleCropHint, bool allowBackup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetStream(class System.IO.Stream bitmapData, class Android.Graphics.Rect visibleCropHint, bool allowBackup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetStream(System.IO.Stream,Android.Graphics.Rect,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStream : System.IO.Stream * Android.Graphics.Rect * bool -&gt; int&#xA;override this.SetStream : System.IO.Stream * Android.Graphics.Rect * bool -&gt; int" Usage="wallpaperManager.SetStream (bitmapData, visibleCropHint, allowBackup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStream", "(Ljava/io/InputStream;Landroid/graphics/Rect;Z)I", "GetSetStream_Ljava_io_InputStream_Landroid_graphics_Rect_ZHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapData" Type="System.IO.Stream" />
        <Parameter Name="visibleCropHint" Type="Android.Graphics.Rect" />
        <Parameter Name="allowBackup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bitmapData">A stream containing the raw data to install as a wallpaper.  This
                data can be in any format handled by <c>BitmapRegionDecoder</c>.</param>
        <param name="visibleCropHint">To be added.</param>
        <param name="allowBackup">To be added.</param>
        <summary>Change the current system wallpaper to a specific byte stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStream">
      <MemberSignature Language="C#" Value="public virtual int SetStream (System.IO.Stream bitmapData, Android.Graphics.Rect visibleCropHint, bool allowBackup, Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetStream(class System.IO.Stream bitmapData, class Android.Graphics.Rect visibleCropHint, bool allowBackup, valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetStream(System.IO.Stream,Android.Graphics.Rect,System.Boolean,Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetStream : System.IO.Stream * Android.Graphics.Rect * bool * Android.App.WallpaperManagerFlags -&gt; int&#xA;override this.SetStream : System.IO.Stream * Android.Graphics.Rect * bool * Android.App.WallpaperManagerFlags -&gt; int" Usage="wallpaperManager.SetStream (bitmapData, visibleCropHint, allowBackup, which)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStream", "(Ljava/io/InputStream;Landroid/graphics/Rect;ZI)I", "GetSetStream_Ljava_io_InputStream_Landroid_graphics_Rect_ZIHandler", ApiSince=24)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapData" Type="System.IO.Stream" />
        <Parameter Name="visibleCropHint" Type="Android.Graphics.Rect" />
        <Parameter Name="allowBackup" Type="System.Boolean" />
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="bitmapData">A stream containing the raw data to install as a wallpaper.  This
                data can be in any format handled by <c>BitmapRegionDecoder</c>.</param>
        <param name="visibleCropHint">To be added.</param>
        <param name="allowBackup">To be added.</param>
        <param name="which">To be added.</param>
        <summary>Change the current system wallpaper to a specific byte stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWallpaperOffsets">
      <MemberSignature Language="C#" Value="public virtual void SetWallpaperOffsets (Android.OS.IBinder windowToken, float xOffset, float yOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWallpaperOffsets(class Android.OS.IBinder windowToken, float32 xOffset, float32 yOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetWallpaperOffsets(Android.OS.IBinder,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetWallpaperOffsets : Android.OS.IBinder * single * single -&gt; unit&#xA;override this.SetWallpaperOffsets : Android.OS.IBinder * single * single -&gt; unit" Usage="wallpaperManager.SetWallpaperOffsets (windowToken, xOffset, yOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWallpaperOffsets", "(Landroid/os/IBinder;FF)V", "GetSetWallpaperOffsets_Landroid_os_IBinder_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="windowToken">The window who these offsets should be associated
            with, as returned by <c>android.view.View#getWindowToken()
            View.getWindowToken()</c>.</param>
        <param name="xOffset">The offset along the X dimension, from 0 to 1.</param>
        <param name="yOffset">The offset along the Y dimension, from 0 to 1.</param>
        <summary>Set the display position of the current wallpaper within any larger space, when
            that wallpaper is visible behind the given window.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetWallpaperOffsetSteps">
      <MemberSignature Language="C#" Value="public virtual void SetWallpaperOffsetSteps (float xStep, float yStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWallpaperOffsetSteps(float32 xStep, float32 yStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SetWallpaperOffsetSteps(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetWallpaperOffsetSteps : single * single -&gt; unit&#xA;override this.SetWallpaperOffsetSteps : single * single -&gt; unit" Usage="wallpaperManager.SetWallpaperOffsetSteps (xStep, yStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWallpaperOffsetSteps", "(FF)V", "GetSetWallpaperOffsetSteps_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xStep" Type="System.Single" />
        <Parameter Name="yStep" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xStep">The X offset delta from one screen to the next one</param>
        <param name="yStep">The Y offset delta from one screen to the next one</param>
        <summary>For applications that use multiple virtual screens showing a wallpaper,
            specify the step size between virtual screens.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SuggestDesiredDimensions">
      <MemberSignature Language="C#" Value="public virtual void SuggestDesiredDimensions (int minimumWidth, int minimumHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuggestDesiredDimensions(int32 minimumWidth, int32 minimumHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.WallpaperManager.SuggestDesiredDimensions(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SuggestDesiredDimensions : int * int -&gt; unit&#xA;override this.SuggestDesiredDimensions : int * int -&gt; unit" Usage="wallpaperManager.SuggestDesiredDimensions (minimumWidth, minimumHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("suggestDesiredDimensions", "(II)V", "GetSuggestDesiredDimensions_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumWidth" Type="System.Int32" />
        <Parameter Name="minimumHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumWidth">Desired minimum width</param>
        <param name="minimumHeight">Desired minimum height</param>
        <summary>For use only by the current home application, to specify the size of
            wallpaper it would like to use.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.WallpaperManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.WallpaperManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallpaperInfo">
      <MemberSignature Language="C#" Value="public virtual Android.App.WallpaperInfo WallpaperInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.WallpaperInfo WallpaperInfo" />
      <MemberSignature Language="DocId" Value="P:Android.App.WallpaperManager.WallpaperInfo" />
      <MemberSignature Language="F#" Value="member this.WallpaperInfo : Android.App.WallpaperInfo" Usage="Android.App.WallpaperManager.WallpaperInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWallpaperInfo", "()Landroid/app/WallpaperInfo;", "GetGetWallpaperInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the information about the wallpaper if the current wallpaper is
            a live wallpaper component.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperPreviewMetaData">
      <MemberSignature Language="C#" Value="public const string WallpaperPreviewMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WallpaperPreviewMetaData" />
      <MemberSignature Language="DocId" Value="F:Android.App.WallpaperManager.WallpaperPreviewMetaData" />
      <MemberSignature Language="F#" Value="val mutable WallpaperPreviewMetaData : string" Usage="Android.App.WallpaperManager.WallpaperPreviewMetaData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WALLPAPER_PREVIEW_META_DATA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Manifest entry for activities that respond to <c>Intent#ACTION_SET_WALLPAPER</c>
            which allows them to provide a custom large icon associated with this action.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
