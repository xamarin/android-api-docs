<Type Name="PendingIntentFlags" FullName="Android.App.PendingIntentFlags">
  <TypeSignature Language="C#" Value="public enum PendingIntentFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PendingIntentFlags extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by several methods of <see cref="T:Android.App.PendingIntentFlags" /> and taken as a parameter of  several types.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="F:Android.App.PendingIntentFlags.CancelCurrent" /></term></item><item><term><see cref="F:Android.App.PendingIntentFlags.NoCreate" /></term></item><item><term><see cref="F:Android.App.PendingIntentFlags.OneShot" /></term></item><item><term><see cref="F:Android.App.PendingIntentFlags.UpdateCurrent" /></term></item></list>
 and taken as a parameter of the following: <list type="bullet"><item><term><see cref="F:Android.App.Activity.CreatePendingResult" /></term></item><item><term><see cref="F:Android.App.PendingIntent.GetActivities" /></term></item><item><term><see cref="F:Android.App.PendingIntent.GetActivities" /></term></item><item><term><see cref="F:Android.App.PendingIntent.GetActivity" /></term></item><item><term><see cref="F:Android.App.PendingIntent.GetActivity" /></term></item><item><term><see cref="F:Android.App.PendingIntent.GetBroadcast" /></term></item><item><term><see cref="F:Android.App.PendingIntent.GetService" /></term></item><item><term><see cref="F:Android.App.TaskStackBuilder.GetPendingIntent" /></term></item><item><term><see cref="F:Android.App.TaskStackBuilder.GetPendingIntent" /></term></item></list>
.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CancelCurrent">
      <MemberSignature Language="C#" Value="CancelCurrent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags CancelCurrent = int32(268435456)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <c><see cref="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, and
 <c><see cref="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>: if the described PendingIntent already exists,
 the current one is canceled before generating a new one.  You can use
 this to retrieve a new PendingIntent when you are only changing the
 extra data in the Intent; by canceling the previous pending intent,
 this ensures that only entities given the new data will be able to
 launch it.  If this assurance is not an issue, consider
 <c><see cref="F:Android.App.PendingIntentFlags.UpdateCurrent" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoCreate">
      <MemberSignature Language="C#" Value="NoCreate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags NoCreate = int32(536870912)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <c><see cref="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, and
 <c><see cref="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>: if the described PendingIntent does not already
 exist, then simply return null instead of creating it.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OneShot">
      <MemberSignature Language="C#" Value="OneShot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags OneShot = int32(1073741824)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <c><see cref="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, and
 <c><see cref="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>: this
 PendingIntent can only be used once.  If set, after
 <c><see cref="M:Android.App.PendingIntent.Send" /></c> is called on it, it will be automatically
 canceled for you and any future attempt to send through it will fail.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UpdateCurrent">
      <MemberSignature Language="C#" Value="UpdateCurrent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags UpdateCurrent = int32(134217728)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <c><see cref="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>, and
 <c><see cref="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)" /></c>: if the described PendingIntent already exists,
 then keep it but its replace its extra data with what is in this new
 Intent.  This can be used if you are creating intents where only the
 extras change, and don't care that any entities that received your
 previous PendingIntent will be able to launch it with your new
 extras even if they are not explicitly given to it.
</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
