<Type Name="PendingIntentFlags" FullName="Android.App.PendingIntentFlags">
  <TypeSignature Language="C#" Value="public enum PendingIntentFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PendingIntentFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Android.App.PendingIntentFlags" />
  <TypeSignature Language="F#" Value="type PendingIntentFlags = " />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by several methods of <see cref="T:Android.App.PendingIntentFlags" /> and taken as a parameter of  several types.</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CancelCurrent">
      <MemberSignature Language="C#" Value="CancelCurrent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags CancelCurrent = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:Android.App.PendingIntentFlags.CancelCurrent" />
      <MemberSignature Language="F#" Value="CancelCurrent = 268435456" Usage="Android.App.PendingIntentFlags.CancelCurrent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/app/PendingIntent.FLAG_CANCEL_CURRENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetActivity(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetBroadcast(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, and
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetService(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>: if the described PendingIntent already exists,
 the current one is canceled before generating a new one.  You can use
 this to retrieve a new PendingIntent when you are only changing the
 extra data in the Intent; by canceling the previous pending intent,
 this ensures that only entities given the new data will be able to
 launch it.  If this assurance is not an issue, consider
 <see cref="F:Android.App.PendingIntentFlags.UpdateCurrent" />.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Immutable">
      <MemberSignature Language="C#" Value="Immutable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags Immutable = int32(67108864)" />
      <MemberSignature Language="DocId" Value="F:Android.App.PendingIntentFlags.Immutable" />
      <MemberSignature Language="F#" Value="Immutable = 67108864" Usage="Android.App.PendingIntentFlags.Immutable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/app/PendingIntent.FLAG_IMMUTABLE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <MemberValue>67108864</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoCreate">
      <MemberSignature Language="C#" Value="NoCreate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags NoCreate = int32(536870912)" />
      <MemberSignature Language="DocId" Value="F:Android.App.PendingIntentFlags.NoCreate" />
      <MemberSignature Language="F#" Value="NoCreate = 536870912" Usage="Android.App.PendingIntentFlags.NoCreate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/app/PendingIntent.FLAG_NO_CREATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <MemberValue>536870912</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetActivity(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetBroadcast(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, and
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetService(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>: if the described PendingIntent does not already
 exist, then simply return null instead of creating it.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OneShot">
      <MemberSignature Language="C#" Value="OneShot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags OneShot = int32(1073741824)" />
      <MemberSignature Language="DocId" Value="F:Android.App.PendingIntentFlags.OneShot" />
      <MemberSignature Language="F#" Value="OneShot = 1073741824" Usage="Android.App.PendingIntentFlags.OneShot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/app/PendingIntent.FLAG_ONE_SHOT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1073741824</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetActivity(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetBroadcast(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, and
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetService(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>: this
 PendingIntent can only be used once.  If set, after
 <see cref="M:Android.App.PendingIntent.Send" /> is called on it, it will be automatically
 canceled for you and any future attempt to send through it will fail.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCurrent">
      <MemberSignature Language="C#" Value="UpdateCurrent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags UpdateCurrent = int32(134217728)" />
      <MemberSignature Language="DocId" Value="F:Android.App.PendingIntentFlags.UpdateCurrent" />
      <MemberSignature Language="F#" Value="UpdateCurrent = 134217728" Usage="Android.App.PendingIntentFlags.UpdateCurrent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.IntDefinition(null, JniField="android/app/PendingIntent.FLAG_UPDATE_CURRENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <MemberValue>134217728</MemberValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for use with <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetActivity(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetBroadcast(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>, and
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetService(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>: if the described PendingIntent already exists,
 then keep it but its replace its extra data with what is in this new
 Intent.  This can be used if you are creating intents where only the
 extras change, and don't care that any entities that received your
 previous PendingIntent will be able to launch it with your new
 extras even if they are not explicitly given to it.
</para>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
