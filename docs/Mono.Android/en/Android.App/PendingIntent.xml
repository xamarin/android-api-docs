<Type Name="PendingIntent" FullName="Android.App.PendingIntent">
  <TypeSignature Language="F#" Value="type PendingIntent = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public sealed class PendingIntent : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PendingIntent extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.App.PendingIntent" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/PendingIntent", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A description of an Intent and target action to perform with it.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/PendingIntent" title="Reference documentation">Java documentation for <code>android.app.PendingIntent</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="pendingIntent.Cancel " />
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "()V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancel a currently active PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#cancel()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.cancel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="F#" Value="member this.Creator : Android.OS.IParcelableCreator" Usage="Android.App.PendingIntent.Creator" />
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreatorPackage">
      <MemberSignature Language="F#" Value="member this.CreatorPackage : string" Usage="Android.App.PendingIntent.CreatorPackage" />
      <MemberSignature Language="C#" Value="public string? CreatorPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreatorPackage" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.CreatorPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCreatorPackage", "()Ljava/lang/String;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the package name of the application that created this
            PendingIntent, that is the identity under which you will actually be
            sending the Intent.</summary>
        <value>The package name of the PendingIntent.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getCreatorPackage()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getCreatorPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreatorUid">
      <MemberSignature Language="F#" Value="member this.CreatorUid : int" Usage="Android.App.PendingIntent.CreatorUid" />
      <MemberSignature Language="C#" Value="public int CreatorUid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CreatorUid" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.CreatorUid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCreatorUid", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the uid of the application that created this
            PendingIntent, that is the identity under which you will actually be
            sending the Intent.</summary>
        <value>The uid of the PendingIntent, or -1 if there is
            none associated with it.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getCreatorUid()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getCreatorUid()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CreatorUserHandle">
      <MemberSignature Language="F#" Value="member this.CreatorUserHandle : Android.OS.UserHandle" Usage="Android.App.PendingIntent.CreatorUserHandle" />
      <MemberSignature Language="C#" Value="public Android.OS.UserHandle CreatorUserHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.UserHandle CreatorUserHandle" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.CreatorUserHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCreatorUserHandle", "()Landroid/os/UserHandle;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the user handle of the application that created this
            PendingIntent, that is the user under which you will actually be
            sending the Intent.</summary>
        <value>The user handle of the PendingIntent</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getCreatorUserHandle()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getCreatorUserHandle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="pendingIntent.DescribeContents " />
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.DescribeContents" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FlagMutable">
      <MemberSignature Language="C#" Value="public const Android.App.PendingIntentFlags FlagMutable = 33554432;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PendingIntentFlags FlagMutable = (33554432)" />
      <MemberSignature Language="DocId" Value="F:Android.App.PendingIntent.FlagMutable" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_MUTABLE", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.PendingIntentFlags enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntentFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivities">
      <MemberSignature Language="F#" Value="static member GetActivities : Android.Content.Context * int * Android.Content.Intent[] * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetActivities (context, requestCode, intents, flags)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetActivities (Android.Content.Context? context, int requestCode, Android.Content.Intent[] intents, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetActivities(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent[] intents, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetActivities(Android.Content.Context,System.Int32,Android.Content.Intent[],Android.App.PendingIntentFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivities", "(Landroid/content/Context;I[Landroid/content/Intent;I)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intents" Type="Android.Content.Intent[]" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">The Context in which this PendingIntent should start
            the activity.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intents">Array of Intents of the activities to be launched.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Like <c>#getActivity(Context, int, Intent, int)</c>, but allows an
            array of Intents to be supplied.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getActivities(android.content.Context,%20int,%20android.content.Intent[],%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getActivities(android.content.Context, int, android.content.Intent[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetActivities">
      <MemberSignature Language="F#" Value="static member GetActivities : Android.Content.Context * int * Android.Content.Intent[] * Android.App.PendingIntentFlags * Android.OS.Bundle -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetActivities (context, requestCode, intents, flags, options)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetActivities (Android.Content.Context? context, int requestCode, Android.Content.Intent[] intents, Android.App.PendingIntentFlags flags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetActivities(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent[] intents, valuetype Android.App.PendingIntentFlags flags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetActivities(Android.Content.Context,System.Int32,Android.Content.Intent[],Android.App.PendingIntentFlags,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivities", "(Landroid/content/Context;I[Landroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intents" Type="Android.Content.Intent[]" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="context">The Context in which this PendingIntent should start
            the activity.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intents">Array of Intents of the activities to be launched.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Like <c>#getActivity(Context, int, Intent, int)</c>, but allows an
            array of Intents to be supplied.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getActivities(android.content.Context,%20int,%20android.content.Intent[],%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getActivities(android.content.Context, int, android.content.Intent[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetActivity">
      <MemberSignature Language="F#" Value="static member GetActivity : Android.Content.Context * int * Android.Content.Intent * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetActivity (context, requestCode, intent, flags)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetActivity (Android.Content.Context? context, int requestCode, Android.Content.Intent? intent, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetActivity(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent intent, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,Android.Content.Intent,Android.App.PendingIntentFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivity", "(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">The Context in which this PendingIntent should start
            the activity.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intent">Intent of the activity to be launched.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Retrieve a PendingIntent that will start a new activity, like calling
            <c>Context#startActivity(Intent) Context.startActivity(Intent)</c>.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getActivity(android.content.Context,%20int,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getActivity(android.content.Context, int, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetActivity">
      <MemberSignature Language="F#" Value="static member GetActivity : Android.Content.Context * int * Android.Content.Intent * Android.App.PendingIntentFlags * Android.OS.Bundle -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetActivity (context, requestCode, intent, flags, options)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetActivity (Android.Content.Context? context, int requestCode, Android.Content.Intent intent, Android.App.PendingIntentFlags flags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetActivity(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent intent, valuetype Android.App.PendingIntentFlags flags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetActivity(Android.Content.Context,System.Int32,Android.Content.Intent,Android.App.PendingIntentFlags,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivity", "(Landroid/content/Context;ILandroid/content/Intent;ILandroid/os/Bundle;)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="options">Additional options for how the Activity should be started.
 May be null if there are no options.</param>
        <param name="context">The Context in which this PendingIntent should start
            the activity.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intent">Intent of the activity to be launched.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Retrieve a PendingIntent that will start a new activity, like calling
            <c>Context#startActivity(Intent) Context.startActivity(Intent)</c>.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getActivity(android.content.Context,%20int,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getActivity(android.content.Context, int, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetBroadcast">
      <MemberSignature Language="F#" Value="static member GetBroadcast : Android.Content.Context * int * Android.Content.Intent * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetBroadcast (context, requestCode, intent, flags)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetBroadcast (Android.Content.Context? context, int requestCode, Android.Content.Intent intent, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetBroadcast(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent intent, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,Android.Content.Intent,Android.App.PendingIntentFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBroadcast", "(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">The Context in which this PendingIntent should perform
            the broadcast.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intent">The Intent to be broadcast.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            <c>#FLAG_IMMUTABLE</c> or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Retrieve a PendingIntent that will perform a broadcast, like calling
            <c>Context#sendBroadcast(Intent) Context.sendBroadcast()</c>.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getBroadcast(android.content.Context,%20int,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getBroadcast(android.content.Context, int, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetForegroundService">
      <MemberSignature Language="F#" Value="static member GetForegroundService : Android.Content.Context * int * Android.Content.Intent * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetForegroundService (context, requestCode, intent, flags)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetForegroundService (Android.Content.Context? context, int requestCode, Android.Content.Intent intent, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetForegroundService(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent intent, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetForegroundService(Android.Content.Context,System.Int32,Android.Content.Intent,Android.App.PendingIntentFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getForegroundService", "(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">The Context in which this PendingIntent should start
            the service.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intent">An Intent describing the service to be started.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            <c>#FLAG_IMMUTABLE</c> or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Retrieve a PendingIntent that will start a foreground service, like calling
            <c>Context#startForegroundService Context.startForegroundService()</c>.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getForegroundService(android.content.Context,%20int,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getForegroundService(android.content.Context, int, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="F#" Value="static member GetService : Android.Content.Context * int * Android.Content.Intent * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.GetService (context, requestCode, intent, flags)" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? GetService (Android.Content.Context? context, int requestCode, Android.Content.Intent intent, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent GetService(class Android.Content.Context context, int32 requestCode, class Android.Content.Intent intent, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.GetService(Android.Content.Context,System.Int32,Android.Content.Intent,Android.App.PendingIntentFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getService", "(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">The Context in which this PendingIntent should start
            the service.</param>
        <param name="requestCode">Private request code for the sender</param>
        <param name="intent">An Intent describing the service to be started.</param>
        <param name="flags">May be <c>#FLAG_ONE_SHOT</c>, <c>#FLAG_NO_CREATE</c>,
            <c>#FLAG_CANCEL_CURRENT</c>, <c>#FLAG_UPDATE_CURRENT</c>,
            <c>#FLAG_IMMUTABLE</c> or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Retrieve a PendingIntent that will start a service, like calling
            <c>Context#startService Context.startService()</c>.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if <c>#FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getService(android.content.Context,%20int,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getService(android.content.Context, int, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntentSender">
      <MemberSignature Language="F#" Value="member this.IntentSender : Android.Content.IntentSender" Usage="Android.App.PendingIntent.IntentSender" />
      <MemberSignature Language="C#" Value="public Android.Content.IntentSender IntentSender { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.IntentSender IntentSender" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.IntentSender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIntentSender", "()Landroid/content/IntentSender;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.IntentSender</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a IntentSender object that wraps the existing sender of the PendingIntent</summary>
        <value>Returns a IntentSender object that wraps the sender of PendingIntent</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getIntentSender()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getIntentSender()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="IsActivity">
      <MemberSignature Language="C#" Value="public bool IsActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActivity" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.IsActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActivity", "()Z", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>TRUE if this <c>PendingIntent</c> was created with
            <c>#getActivity</c> or <c>#getActivities</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#isActivity()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.isActivity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBroadcast">
      <MemberSignature Language="C#" Value="public bool IsBroadcast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBroadcast" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.IsBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBroadcast", "()Z", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>TRUE if this <c>PendingIntent</c> was created with <c>#getBroadcast</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#isBroadcast()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.isBroadcast()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForegroundService">
      <MemberSignature Language="C#" Value="public bool IsForegroundService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForegroundService" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.IsForegroundService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isForegroundService", "()Z", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>TRUE if this <c>PendingIntent</c> was created with <c>#getForegroundService</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#isForegroundService()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.isForegroundService()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isImmutable", "()Z", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check if this PendingIntent is marked with <c>#FLAG_IMMUTABLE</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#isImmutable()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.isImmutable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsService">
      <MemberSignature Language="C#" Value="public bool IsService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsService" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.IsService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isService", "()Z", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>TRUE if this <c>PendingIntent</c> was created with <c>#getService</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#isService()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.isService()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.PendingIntent.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPendingIntentOrNullFromParcel">
      <MemberSignature Language="F#" Value="static member ReadPendingIntentOrNullFromParcel : Android.OS.Parcel -&gt; Android.App.PendingIntent" Usage="Android.App.PendingIntent.ReadPendingIntentOrNullFromParcel in" />
      <MemberSignature Language="C#" Value="public static Android.App.PendingIntent? ReadPendingIntentOrNullFromParcel (Android.OS.Parcel in);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.PendingIntent ReadPendingIntentOrNullFromParcel(class Android.OS.Parcel in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.ReadPendingIntentOrNullFromParcel(Android.OS.Parcel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readPendingIntentOrNullFromParcel", "(Landroid/os/Parcel;)Landroid/app/PendingIntent;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Android.OS.Parcel" />
      </Parameters>
      <Docs>
        <param name="in">The Parcel containing the written PendingIntent.</param>
        <summary>Convenience function for reading either a PendingIntent or null pointer from
            a Parcel.</summary>
        <returns>Returns the PendingIntent read from the Parcel, or null if null had
            been written.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#readPendingIntentOrNullFromParcel(android.os.Parcel)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.readPendingIntentOrNullFromParcel(android.os.Parcel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : unit -&gt; unit" Usage="pendingIntent.Send " />
      <MemberSignature Language="C#" Value="public void Send ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "()V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.App.PendingIntent.CanceledException">Throws CanceledException if the PendingIntent
 is no longer allowing more intents to be sent through it.
</exception>
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : Android.App.Result -&gt; unit" Usage="pendingIntent.Send code" />
      <MemberSignature Language="C#" Value="public void Send (Android.App.Result code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(valuetype Android.App.Result code) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send(Android.App.Result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="code">Result code to supply back to the PendingIntent's target.</param>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.App.PendingIntent.CanceledException">Throws CanceledException if the PendingIntent
 is no longer allowing more intents to be sent through it.
</exception>
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : Android.App.Result * Android.App.PendingIntent.IOnFinished * Android.OS.Handler -&gt; unit" Usage="pendingIntent.Send (code, onFinished, handler)" />
      <MemberSignature Language="C#" Value="public void Send (Android.App.Result code, Android.App.PendingIntent.IOnFinished? onFinished, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(valuetype Android.App.Result code, class Android.App.PendingIntent/IOnFinished onFinished, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send(Android.App.Result,Android.App.PendingIntent.IOnFinished,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(ILandroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="onFinished" Type="Android.App.PendingIntent+IOnFinished" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="code">Result code to supply back to the PendingIntent's target.</param>
        <param name="onFinished">The object to call back on when the send has
 completed, or null for no callback.</param>
        <param name="handler">Handler identifying the thread on which the callback
 should happen.  If null, the callback will happen from the thread
 pool of the process.</param>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.App.PendingIntent.CanceledException">Throws CanceledException if the PendingIntent
 is no longer allowing more intents to be sent through it.
</exception>
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : Android.Content.Context * Android.App.Result * Android.Content.Intent -&gt; unit" Usage="pendingIntent.Send (context, code, intent)" />
      <MemberSignature Language="C#" Value="public void Send (Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Android.Content.Context context, valuetype Android.App.Result code, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send(Android.Content.Context,Android.App.Result,Android.Content.Intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(Landroid/content/Context;ILandroid/content/Intent;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The Context of the caller.</param>
        <param name="code">Result code to supply back to the PendingIntent's target.</param>
        <param name="intent">Additional Intent data.  See <see cref="M:Android.Content.Intent.FillIn(Android.Content.Intent,Android.Content.FillInFlags)" /> for information on how this is applied to the
 original Intent. If flag <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App PendingIntent FLAG_IMMUTABLE';scope=Xamarin" title="Android.App.PendingIntent.FLAG_IMMUTABLE">Android.App.PendingIntent.FLAG_IMMUTABLE</a></format> was set when this
 pending intent was created, this argument will be ignored.</param>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.App.PendingIntent.CanceledException">Throws CanceledException if the PendingIntent
 is no longer allowing more intents to be sent through it.
</exception>
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.App.PendingIntent.IOnFinished * Android.OS.Handler -&gt; unit" Usage="pendingIntent.Send (context, code, intent, onFinished, handler)" />
      <MemberSignature Language="C#" Value="public void Send (Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent, Android.App.PendingIntent.IOnFinished? onFinished, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Android.Content.Context context, valuetype Android.App.Result code, class Android.Content.Intent intent, class Android.App.PendingIntent/IOnFinished onFinished, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send(Android.Content.Context,Android.App.Result,Android.Content.Intent,Android.App.PendingIntent.IOnFinished,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="onFinished" Type="Android.App.PendingIntent+IOnFinished" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="context">The Context of the caller.  This may be null if
 <format type="text/html"><var>intent</var></format> is also null.</param>
        <param name="code">Result code to supply back to the PendingIntent's target.</param>
        <param name="intent">Additional Intent data.  See <see cref="M:Android.Content.Intent.FillIn(Android.Content.Intent,Android.Content.FillInFlags)" /> for information on how this is applied to the
 original Intent.  Use null to not modify the original Intent.
 If flag <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App PendingIntent FLAG_IMMUTABLE';scope=Xamarin" title="Android.App.PendingIntent.FLAG_IMMUTABLE">Android.App.PendingIntent.FLAG_IMMUTABLE</a></format> was set when this pending intent was
 created, this argument will be ignored.</param>
        <param name="onFinished">The object to call back on when the send has
 completed, or null for no callback.</param>
        <param name="handler">Handler identifying the thread on which the callback
 should happen.  If null, the callback will happen from the thread
 pool of the process.</param>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.App.PendingIntent.CanceledException">Throws CanceledException if the PendingIntent
 is no longer allowing more intents to be sent through it.
</exception>
        <altmember cref="M:Android.App.PendingIntent.Send" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.App.Result)" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result)" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.App.Result, .IOnFinished, .IOnFinished)" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.App.PendingIntent.IOnFinished * Android.OS.Handler * string -&gt; unit" Usage="pendingIntent.Send (context, code, intent, onFinished, handler, requiredPermission)" />
      <MemberSignature Language="C#" Value="public void Send (Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent, Android.App.PendingIntent.IOnFinished? onFinished, Android.OS.Handler? handler, string? requiredPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Android.Content.Context context, valuetype Android.App.Result code, class Android.Content.Intent intent, class Android.App.PendingIntent/IOnFinished onFinished, class Android.OS.Handler handler, string requiredPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send(Android.Content.Context,Android.App.Result,Android.Content.Intent,Android.App.PendingIntent.IOnFinished,Android.OS.Handler,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;Ljava/lang/String;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="onFinished" Type="Android.App.PendingIntent+IOnFinished" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
        <Parameter Name="requiredPermission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The Context of the caller.  This may be null if
 <format type="text/html"><var>intent</var></format> is also null.</param>
        <param name="code">Result code to supply back to the PendingIntent's target.</param>
        <param name="intent">Additional Intent data.  See <see cref="M:Android.Content.Intent.FillIn(Android.Content.Intent,Android.Content.FillInFlags)" /> for information on how this is applied to the
 original Intent.  Use null to not modify the original Intent.
 If flag <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App PendingIntent FLAG_IMMUTABLE';scope=Xamarin" title="Android.App.PendingIntent.FLAG_IMMUTABLE">Android.App.PendingIntent.FLAG_IMMUTABLE</a></format> was set when this pending intent was
 created, this argument will be ignored.</param>
        <param name="onFinished">The object to call back on when the send has
 completed, or null for no callback.</param>
        <param name="handler">Handler identifying the thread on which the callback
 should happen.  If null, the callback will happen from the thread
 pool of the process.</param>
        <param name="requiredPermission">Name of permission that a recipient of the PendingIntent
 is required to hold.  This is only valid for broadcast intents, and
 corresponds to the permission argument in
 <see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent,System.String)" />.
 If null, no permission is required.</param>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Android.App.PendingIntent.CanceledException">Throws CanceledException if the PendingIntent
 is no longer allowing more intents to be sent through it.
</exception>
        <altmember cref="M:Android.App.PendingIntent.Send" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.App.Result)" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result)" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.App.Result, .IOnFinished, .IOnFinished)" />
        <altmember cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result, Android.App.Result, Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="F#" Value="member this.Send : Android.Content.Context * Android.App.Result * Android.Content.Intent * Android.App.PendingIntent.IOnFinished * Android.OS.Handler * string * Android.OS.Bundle -&gt; unit" Usage="pendingIntent.Send (context, code, intent, onFinished, handler, requiredPermission, options)" />
      <MemberSignature Language="C#" Value="public void Send (Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent, Android.App.PendingIntent.IOnFinished? onFinished, Android.OS.Handler? handler, string? requiredPermission, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Android.Content.Context context, valuetype Android.App.Result code, class Android.Content.Intent intent, class Android.App.PendingIntent/IOnFinished onFinished, class Android.OS.Handler handler, string requiredPermission, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.Send(Android.Content.Context,Android.App.Result,Android.Content.Intent,Android.App.PendingIntent.IOnFinished,Android.OS.Handler,System.String,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("send", "(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;Ljava/lang/String;Landroid/os/Bundle;)V", "", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="code" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="onFinished" Type="Android.App.PendingIntent+IOnFinished" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
        <Parameter Name="requiredPermission" Type="System.String" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="code">To be added.</param>
        <param name="intent">To be added.</param>
        <param name="onFinished">To be added.</param>
        <param name="handler">To be added.</param>
        <param name="requiredPermission">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Perform the operation associated with this PendingIntent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#send()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.send()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPackage">
      <MemberSignature Language="F#" Value="member this.TargetPackage : string" Usage="Android.App.PendingIntent.TargetPackage" />
      <MemberSignature Language="C#" Value="public string? TargetPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPackage" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.TargetPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTargetPackage", "()Ljava/lang/String;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#getTargetPackage()" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.getTargetPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.PendingIntent.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.PendingIntent.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.PendingIntent.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePendingIntentOrNullToParcel">
      <MemberSignature Language="F#" Value="static member WritePendingIntentOrNullToParcel : Android.App.PendingIntent * Android.OS.Parcel -&gt; unit" Usage="Android.App.PendingIntent.WritePendingIntentOrNullToParcel (sender, out)" />
      <MemberSignature Language="C#" Value="public static void WritePendingIntentOrNullToParcel (Android.App.PendingIntent? sender, Android.OS.Parcel out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WritePendingIntentOrNullToParcel(class Android.App.PendingIntent sender, class Android.OS.Parcel out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.WritePendingIntentOrNullToParcel(Android.App.PendingIntent,Android.OS.Parcel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writePendingIntentOrNullToParcel", "(Landroid/app/PendingIntent;Landroid/os/Parcel;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Android.App.PendingIntent" />
        <Parameter Name="out" Type="Android.OS.Parcel" />
      </Parameters>
      <Docs>
        <param name="sender">The PendingIntent to write, or null.</param>
        <param name="out">Where to write the PendingIntent.</param>
        <summary>Convenience function for writing either a PendingIntent or null pointer to
            a Parcel.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/PendingIntent#writePendingIntentOrNullToParcel(android.app.PendingIntent,%20android.os.Parcel)" title="Reference documentation">Java documentation for <code>android.app.PendingIntent.writePendingIntentOrNullToParcel(android.app.PendingIntent, android.os.Parcel)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="pendingIntent.WriteToParcel (out, flags)" />
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel? out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.PendingIntent.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="out">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
