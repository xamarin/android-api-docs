<Type Name="ActivityOptions" FullName="Android.App.ActivityOptions">
  <TypeSignature Language="C#" Value="public class ActivityOptions : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityOptions extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/ActivityOptions", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Helper class for building an options Bundle that can be used with
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /></c> and related methods.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper class for building an options Bundle that can be used with
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /></c> and related methods.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/ActivityOptions.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ActivityOptions (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeCustomAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeCustomAnimation (Android.Content.Context context, int enterResId, int exitResId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeCustomAnimation(class Android.Content.Context context, int32 enterResId, int32 exitResId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeCustomAnimation", "(Landroid/content/Context;II)Landroid/app/ActivityOptions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="enterResId" Type="System.Int32" />
        <Parameter Name="exitResId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Who is defining this.  This is the application that the
 animation resources will be loaded from.</param>
        <param name="enterResId">A resource ID of the animation resource to use for
 the incoming activity.  Use 0 for no animation.</param>
        <param name="exitResId">A resource ID of the animation resource to use for
 the outgoing activity.  Use 0 for no animation.</param>
        <summary>Create an ActivityOptions specifying a custom animation to run when
 the activity is displayed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an ActivityOptions specifying a custom animation to run when
 the activity is displayed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#makeCustomAnimation(android.content.Context, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="MakeScaleUpAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeScaleUpAnimation (Android.Views.View source, int startX, int startY, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeScaleUpAnimation(class Android.Views.View source, int32 startX, int32 startY, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeScaleUpAnimation", "(Landroid/view/View;IIII)Landroid/app/ActivityOptions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Views.View" />
        <Parameter Name="startX" Type="System.Int32" />
        <Parameter Name="startY" Type="System.Int32" />
        <Parameter Name="startWidth" Type="System.Int32" />
        <Parameter Name="startHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The View that the new activity is animating from.  This
 defines the coordinate space for <format type="text/html"><var>startX</var></format> and <format type="text/html"><var>startY</var></format>.</param>
        <param name="startX">The x starting location of the new activity, relative to <format type="text/html"><var>source</var></format>.</param>
        <param name="startY">The y starting location of the activity, relative to <format type="text/html"><var>source</var></format>.</param>
        <param name="width">The initial width of the new activity.</param>
        <param name="height">The initial height of the new activity.</param>
        <param name="startWidth">The initial width of the new activity.</param>
        <param name="startHeight">The initial height of the new activity.</param>
        <summary>Create an ActivityOptions specifying an animation where the new
 activity is scaled from a small originating area of the screen to
 its final full representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an ActivityOptions specifying an animation where the new
 activity is scaled from a small originating area of the screen to
 its final full representation.

 </para>
          <para tool="javadoc-to-mdoc">If the Intent this is being used with has not set its
 <c><see cref="P:Android.Content.Intent.SourceBounds" /></c>,
 those bounds will be filled in for you based on the initial
 bounds passed in here.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#makeScaleUpAnimation(android.view.View, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="MakeSceneTransitionAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeSceneTransitionAnimation (Android.App.Activity activity, Android.Util.Pair[] sharedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeSceneTransitionAnimation(class Android.App.Activity activity, class Android.Util.Pair[] sharedElements) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeSceneTransitionAnimation", "(Landroid/app/Activity;[Landroid/util/Pair;)Landroid/app/ActivityOptions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="sharedElements" Type="Android.Util.Pair[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="activity">To be added.</param>
        <param name="sharedElements">To be added.</param>
        <summary tool="true">Create an ActivityOptions to transition between Activities using cross-Activity scene
 animations.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="MakeSceneTransitionAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeSceneTransitionAnimation (Android.App.Activity activity, Android.Views.View sharedElement, string sharedElementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeSceneTransitionAnimation(class Android.App.Activity activity, class Android.Views.View sharedElement, string sharedElementName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeSceneTransitionAnimation", "(Landroid/app/Activity;Landroid/view/View;Ljava/lang/String;)Landroid/app/ActivityOptions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="sharedElement" Type="Android.Views.View" />
        <Parameter Name="sharedElementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity">The Activity whose window contains the shared elements.</param>
        <param name="sharedElement">The View to transition to the started Activity.</param>
        <param name="sharedElementName">The shared element name as used in the target Activity. This
                          must not be null.</param>
        <summary>Create an ActivityOptions to transition between Activities using cross-Activity scene
 animations.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an ActivityOptions to transition between Activities using cross-Activity scene
 animations. This method carries the position of one shared element to the started Activity.
 The position of <c>sharedElement</c> will be used as the epicenter for the
 exit Transition. The position of the shared element in the launched Activity will be the
 epicenter of its entering Transition.

 </para>
          <para tool="javadoc-to-mdoc">This requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c> to be
 enabled on the calling Activity to cause an exit transition. The same must be in
 the called Activity to get an entering transition.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#makeSceneTransitionAnimation(android.app.Activity, android.view.View, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Transitions.Transition.SetEpicenterCallback(.EpicenterCallback)" />
      </Docs>
    </Member>
    <Member MemberName="MakeTaskLaunchBehind">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeTaskLaunchBehind ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeTaskLaunchBehind() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeTaskLaunchBehind", "()Landroid/app/ActivityOptions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If set along with Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">If set along with Intent.FLAG_ACTIVITY_NEW_DOCUMENT then the task being launched will not be
 presented to the user but will instead be only available through the recents task list.
 In addition, the new task wil be affiliated with the launching activity's task.
 Affiliated tasks are grouped together in the recents task list.

 </para>
          <para tool="javadoc-to-mdoc">This behavior is not supported for activities with <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#AndroidManifestActivity_launchMode" /></c> values of
 <c>singleInstance</c> or <c>singleTask</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#makeTaskLaunchBehind()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeThumbnailScaleUpAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeThumbnailScaleUpAnimation (Android.Views.View source, Android.Graphics.Bitmap thumbnail, int startX, int startY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeThumbnailScaleUpAnimation(class Android.Views.View source, class Android.Graphics.Bitmap thumbnail, int32 startX, int32 startY) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeThumbnailScaleUpAnimation", "(Landroid/view/View;Landroid/graphics/Bitmap;II)Landroid/app/ActivityOptions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Views.View" />
        <Parameter Name="thumbnail" Type="Android.Graphics.Bitmap" />
        <Parameter Name="startX" Type="System.Int32" />
        <Parameter Name="startY" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The View that this thumbnail is animating from.  This
 defines the coordinate space for <format type="text/html"><var>startX</var></format> and <format type="text/html"><var>startY</var></format>.</param>
        <param name="thumbnail">The bitmap that will be shown as the initial thumbnail
 of the animation.</param>
        <param name="startX">The x starting location of the bitmap, relative to <format type="text/html"><var>source</var></format>.</param>
        <param name="startY">The y starting location of the bitmap, relative to <format type="text/html"><var>source</var></format>.</param>
        <summary>Create an ActivityOptions specifying an animation where a thumbnail
 is scaled from a given position to the new activity window that is
 being started.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an ActivityOptions specifying an animation where a thumbnail
 is scaled from a given position to the new activity window that is
 being started.

 </para>
          <para tool="javadoc-to-mdoc">If the Intent this is being used with has not set its
 <c><see cref="P:Android.Content.Intent.SourceBounds" /></c>,
 those bounds will be filled in for you based on the initial
 thumbnail location and size provided here.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#makeThumbnailScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBundle">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle ToBundle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle ToBundle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the created options as a Bundle, which can be passed to
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /></c> and related methods.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the created options as a Bundle, which can be passed to
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent,Android.OS.Bundle)" /></c> and related methods.
 Note that the returned Bundle is still owned by the ActivityOptions
 object; you must not modify it, but can supply it to the startActivity
 methods that take an options Bundle.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#toBundle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (Android.App.ActivityOptions otherOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Android.App.ActivityOptions otherOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Landroid/app/ActivityOptions;)V", "GetUpdate_Landroid_app_ActivityOptions_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherOptions" Type="Android.App.ActivityOptions" />
      </Parameters>
      <Docs>
        <param name="otherOptions">To be added.</param>
        <summary>Update the current values in this ActivityOptions from those supplied
 in <format type="text/html"><var>otherOptions</var></format>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Update the current values in this ActivityOptions from those supplied
 in <format type="text/html"><var>otherOptions</var></format>.  Any values
 defined in <format type="text/html"><var>otherOptions</var></format> replace those in the base options.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActivityOptions.html#update(android.app.ActivityOptions)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
