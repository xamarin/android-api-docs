<Type Name="ActivityOptions" FullName="Android.App.ActivityOptions">
  <TypeSignature Language="C#" Value="public class ActivityOptions : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityOptions extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.ActivityOptions" />
  <TypeSignature Language="F#" Value="type ActivityOptions = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/ActivityOptions", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/ActivityOptions", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Helper class for building an options Bundle that can be used with
            <c>android.content.Context#startActivity(android.content.Intent, android.os.Bundle)
            Context.startActivity(Intent, Bundle)</c> and related methods.</summary>
    <remarks>
      <para>Helper class for building an options Bundle that can be used with
            <c>android.content.Context#startActivity(android.content.Intent, android.os.Bundle)
            Context.startActivity(Intent, Bundle)</c> and related methods.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/ActivityOptions" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ActivityOptions (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.ActivityOptions : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.ActivityOptions" Usage="new Android.App.ActivityOptions (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraUsageTimeReport">
      <MemberSignature Language="C#" Value="public const string ExtraUsageTimeReport;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraUsageTimeReport" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityOptions.ExtraUsageTimeReport" />
      <MemberSignature Language="F#" Value="val mutable ExtraUsageTimeReport : string" Usage="Android.App.ActivityOptions.ExtraUsageTimeReport" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_USAGE_TIME_REPORT", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_USAGE_TIME_REPORT", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A long in the extras delivered by <c>#requestUsageTimeReport</c> that contains
            the total time (in ms) the user spent in the app flow.</summary>
        <remarks>
          <para>A long in the extras delivered by <c>#requestUsageTimeReport</c> that contains
            the total time (in ms) the user spent in the app flow.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#EXTRA_USAGE_TIME_REPORT" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.EXTRA_USAGE_TIME_REPORT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraUsageTimeReportPackages">
      <MemberSignature Language="C#" Value="public const string ExtraUsageTimeReportPackages;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraUsageTimeReportPackages" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityOptions.ExtraUsageTimeReportPackages" />
      <MemberSignature Language="F#" Value="val mutable ExtraUsageTimeReportPackages : string" Usage="Android.App.ActivityOptions.ExtraUsageTimeReportPackages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_USAGE_TIME_REPORT_PACKAGES", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_USAGE_TIME_REPORT_PACKAGES", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Bundle in the extras delivered by <c>#requestUsageTimeReport</c> that contains
            detailed information about the time spent in each package associated with the app;
            each key is a package name, whose value is a long containing the time (in ms).</summary>
        <remarks>
          <para>A Bundle in the extras delivered by <c>#requestUsageTimeReport</c> that contains
            detailed information about the time spent in each package associated with the app;
            each key is a package name, whose value is a long containing the time (in ms).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#EXTRA_USAGE_TIME_REPORT_PACKAGES" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.EXTRA_USAGE_TIME_REPORT_PACKAGES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShareIdentityEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsShareIdentityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShareIdentityEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.IsShareIdentityEnabled" />
      <MemberSignature Language="F#" Value="member this.IsShareIdentityEnabled : bool" Usage="Android.App.ActivityOptions.IsShareIdentityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShareIdentityEnabled", "()Z", "GetIsShareIdentityEnabledHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShareIdentityEnabled", "()Z", "GetIsShareIdentityEnabledHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the launching app has opted-in to sharing its identity with the launched
            activity.</summary>
        <value>
          <c>true</c> if the launching app has opted-in to sharing its identity</value>
        <remarks>
          <para>Returns whether the launching app has opted-in to sharing its identity with the launched
            activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#isShareIdentityEnabled()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.isShareIdentityEnabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.ActivityOptions.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LaunchBounds">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect? LaunchBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect LaunchBounds" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.LaunchBounds" />
      <MemberSignature Language="F#" Value="member this.LaunchBounds : Android.Graphics.Rect" Usage="Android.App.ActivityOptions.LaunchBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLaunchBounds", "()Landroid/graphics/Rect;", "GetGetLaunchBoundsHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLaunchBounds", "()Landroid/graphics/Rect;", "GetGetLaunchBoundsHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bounds that should be used to launch the activity.</summary>
        <value>Bounds used to launch the activity.</value>
        <remarks>
          <para>Returns the bounds that should be used to launch the activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#getLaunchBounds()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.getLaunchBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LaunchDisplayId">
      <MemberSignature Language="C#" Value="public virtual int LaunchDisplayId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LaunchDisplayId" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.LaunchDisplayId" />
      <MemberSignature Language="F#" Value="member this.LaunchDisplayId : int" Usage="Android.App.ActivityOptions.LaunchDisplayId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLaunchDisplayId", "()I", "GetGetLaunchDisplayIdHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLaunchDisplayId", "()I", "GetGetLaunchDisplayIdHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of the display where activity should be launched.</summary>
        <value>The id of the display where activity should be launched,
                    <c>android.view.Display#INVALID_DISPLAY</c> if not set.</value>
        <remarks>
          <para>Gets the id of the display where activity should be launched.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#getLaunchDisplayId()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.getLaunchDisplayId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskMode">
      <MemberSignature Language="C#" Value="public virtual bool LockTaskMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockTaskMode" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.LockTaskMode" />
      <MemberSignature Language="F#" Value="member this.LockTaskMode : bool" Usage="Android.App.ActivityOptions.LockTaskMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLockTaskMode", "()Z", "GetGetLockTaskModeHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLockTaskMode", "()Z", "GetGetLockTaskModeHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the activity is to be launched into LockTask mode.</summary>
        <value>
          <c>true</c> if the activity is to be launched into LockTask mode.</value>
        <remarks>
          <para>Gets whether the activity is to be launched into LockTask mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#getLockTaskMode()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.getLockTaskMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeBasic">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeBasic ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeBasic() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeBasic" />
      <MemberSignature Language="F#" Value="static member MakeBasic : unit -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeBasic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeBasic", "()Landroid/app/ActivityOptions;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeBasic", "()Landroid/app/ActivityOptions;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a basic ActivityOptions that has no special animation associated with it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a basic ActivityOptions that has no special animation associated with it.
            Other options can still be set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeBasic()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeBasic()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeClipRevealAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeClipRevealAnimation (Android.Views.View? source, int startX, int startY, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeClipRevealAnimation(class Android.Views.View source, int32 startX, int32 startY, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeClipRevealAnimation(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member MakeClipRevealAnimation : Android.Views.View * int * int * int * int -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeClipRevealAnimation (source, startX, startY, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeClipRevealAnimation", "(Landroid/view/View;IIII)Landroid/app/ActivityOptions;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeClipRevealAnimation", "(Landroid/view/View;IIII)Landroid/app/ActivityOptions;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Views.View" />
        <Parameter Name="startX" Type="System.Int32" />
        <Parameter Name="startY" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The View that the new activity is animating from.  This
            defines the coordinate space for &lt;var&gt;startX&lt;/var&gt; and &lt;var&gt;startY&lt;/var&gt;.</param>
        <param name="startX">The x starting location of the new activity, relative to &lt;var&gt;source&lt;/var&gt;.</param>
        <param name="startY">The y starting location of the activity, relative to &lt;var&gt;source&lt;/var&gt;.</param>
        <param name="width">The initial width of the new activity.</param>
        <param name="height">The initial height of the new activity.</param>
        <summary>Create an ActivityOptions specifying an animation where the new
            activity is revealed from a small originating area of the screen to
            its final full representation.</summary>
        <returns>Returns a new ActivityOptions object that you can use to
            supply these options as the options Bundle when starting an activity.</returns>
        <remarks>
          <para>Create an ActivityOptions specifying an animation where the new
            activity is revealed from a small originating area of the screen to
            its final full representation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeClipRevealAnimation(android.view.View,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeClipRevealAnimation(android.view.View, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeCustomAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeCustomAnimation (Android.Content.Context? context, int enterResId, int exitResId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeCustomAnimation(class Android.Content.Context context, int32 enterResId, int32 exitResId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeCustomAnimation(Android.Content.Context,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member MakeCustomAnimation : Android.Content.Context * int * int -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeCustomAnimation (context, enterResId, exitResId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeCustomAnimation", "(Landroid/content/Context;II)Landroid/app/ActivityOptions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeCustomAnimation", "(Landroid/content/Context;II)Landroid/app/ActivityOptions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="enterResId" Type="System.Int32" />
        <Parameter Name="exitResId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Who is defining this.  This is the application that the
            animation resources will be loaded from.</param>
        <param name="enterResId">A resource ID of the animation resource to use for
            the incoming activity.  Use 0 for no animation.</param>
        <param name="exitResId">A resource ID of the animation resource to use for
            the outgoing activity.  Use 0 for no animation.</param>
        <summary>Create an ActivityOptions specifying a custom animation to run when
            the activity is displayed.</summary>
        <returns>Returns a new ActivityOptions object that you can use to
            supply these options as the options Bundle when starting an activity.</returns>
        <remarks>
          <para>Create an ActivityOptions specifying a custom animation to run when
            the activity is displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeCustomAnimation(android.content.Context,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeCustomAnimation(android.content.Context, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="MakeCustomAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeCustomAnimation (Android.Content.Context context, int enterResId, int exitResId, int backgroundColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeCustomAnimation(class Android.Content.Context context, int32 enterResId, int32 exitResId, int32 backgroundColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeCustomAnimation(Android.Content.Context,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member MakeCustomAnimation : Android.Content.Context * int * int * int -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeCustomAnimation (context, enterResId, exitResId, backgroundColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeCustomAnimation", "(Landroid/content/Context;III)Landroid/app/ActivityOptions;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeCustomAnimation", "(Landroid/content/Context;III)Landroid/app/ActivityOptions;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="enterResId" Type="System.Int32" />
        <Parameter Name="exitResId" Type="System.Int32" />
        <Parameter Name="backgroundColor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Who is defining this.  This is the application that the
            animation resources will be loaded from.</param>
        <param name="enterResId">A resource ID of the animation resource to use for
            the incoming activity.  Use 0 for no animation.</param>
        <param name="exitResId">A resource ID of the animation resource to use for
            the outgoing activity.  Use 0 for no animation.</param>
        <param name="backgroundColor">The background color to use for the background during the animation if
            the animation requires a background. Set to 0 to not override the default color.</param>
        <summary>Create an ActivityOptions specifying a custom animation to run when
            the activity is displayed.</summary>
        <returns>Returns a new ActivityOptions object that you can use to
            supply these options as the options Bundle when starting an activity.</returns>
        <remarks>
          <para>Create an ActivityOptions specifying a custom animation to run when
            the activity is displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeCustomAnimation(android.content.Context,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeCustomAnimation(android.content.Context, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeLaunchIntoPip">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions MakeLaunchIntoPip (Android.App.PictureInPictureParams pictureInPictureParams);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeLaunchIntoPip(class Android.App.PictureInPictureParams pictureInPictureParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeLaunchIntoPip(Android.App.PictureInPictureParams)" />
      <MemberSignature Language="F#" Value="static member MakeLaunchIntoPip : Android.App.PictureInPictureParams -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeLaunchIntoPip pictureInPictureParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeLaunchIntoPip", "(Landroid/app/PictureInPictureParams;)Landroid/app/ActivityOptions;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeLaunchIntoPip", "(Landroid/app/PictureInPictureParams;)Landroid/app/ActivityOptions;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pictureInPictureParams" Type="Android.App.PictureInPictureParams" />
      </Parameters>
      <Docs>
        <param name="pictureInPictureParams">
          <c>PictureInPictureParams</c> for launching the Activity to
                                          picture-in-picture mode.</param>
        <summary>Creates an <c>ActivityOptions</c> instance that launch into picture-in-picture.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an <c>ActivityOptions</c> instance that launch into picture-in-picture.
            This is normally used by a Host activity to start another activity that will directly enter
            picture-in-picture upon its creation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeLaunchIntoPip(android.app.PictureInPictureParams)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeLaunchIntoPip(android.app.PictureInPictureParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeScaleUpAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeScaleUpAnimation (Android.Views.View? source, int startX, int startY, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeScaleUpAnimation(class Android.Views.View source, int32 startX, int32 startY, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeScaleUpAnimation(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member MakeScaleUpAnimation : Android.Views.View * int * int * int * int -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeScaleUpAnimation (source, startX, startY, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeScaleUpAnimation", "(Landroid/view/View;IIII)Landroid/app/ActivityOptions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeScaleUpAnimation", "(Landroid/view/View;IIII)Landroid/app/ActivityOptions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Views.View" />
        <Parameter Name="startX" Type="System.Int32" />
        <Parameter Name="startY" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The View that the new activity is animating from.  This
            defines the coordinate space for &lt;var&gt;startX&lt;/var&gt; and &lt;var&gt;startY&lt;/var&gt;.</param>
        <param name="startX">The x starting location of the new activity, relative to &lt;var&gt;source&lt;/var&gt;.</param>
        <param name="startY">The y starting location of the activity, relative to &lt;var&gt;source&lt;/var&gt;.</param>
        <param name="width">The initial width of the new activity.</param>
        <param name="height">The initial height of the new activity.</param>
        <summary>Create an ActivityOptions specifying an animation where the new
            activity is scaled from a small originating area of the screen to
            its final full representation.</summary>
        <returns>Returns a new ActivityOptions object that you can use to
            supply these options as the options Bundle when starting an activity.</returns>
        <remarks>
          <para>Create an ActivityOptions specifying an animation where the new
            activity is scaled from a small originating area of the screen to
            its final full representation.</para>
          <para>If the Intent this is being used with has not set its
            <c>android.content.Intent#setSourceBounds Intent.setSourceBounds</c>,
            those bounds will be filled in for you based on the initial
            bounds passed in here.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeScaleUpAnimation(android.view.View,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeScaleUpAnimation(android.view.View, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="MakeSceneTransitionAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeSceneTransitionAnimation (Android.App.Activity? activity, params Android.Util.Pair[]? sharedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeSceneTransitionAnimation(class Android.App.Activity activity, class Android.Util.Pair[] sharedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeSceneTransitionAnimation(Android.App.Activity,Android.Util.Pair[])" />
      <MemberSignature Language="F#" Value="static member MakeSceneTransitionAnimation : Android.App.Activity * Android.Util.Pair[] -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeSceneTransitionAnimation (activity, sharedElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeSceneTransitionAnimation", "(Landroid/app/Activity;[Landroid/util/Pair;)Landroid/app/ActivityOptions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeSceneTransitionAnimation", "(Landroid/app/Activity;[Landroid/util/Pair;)Landroid/app/ActivityOptions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="sharedElements" Type="Android.Util.Pair[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="activity">To be added.</param>
        <param name="sharedElements">To be added.</param>
        <summary tool="true">Create an ActivityOptions to transition between Activities using cross-Activity scene
 animations.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="MakeSceneTransitionAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeSceneTransitionAnimation (Android.App.Activity? activity, Android.Views.View? sharedElement, string? sharedElementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeSceneTransitionAnimation(class Android.App.Activity activity, class Android.Views.View sharedElement, string sharedElementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeSceneTransitionAnimation(Android.App.Activity,Android.Views.View,System.String)" />
      <MemberSignature Language="F#" Value="static member MakeSceneTransitionAnimation : Android.App.Activity * Android.Views.View * string -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeSceneTransitionAnimation (activity, sharedElement, sharedElementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeSceneTransitionAnimation", "(Landroid/app/Activity;Landroid/view/View;Ljava/lang/String;)Landroid/app/ActivityOptions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeSceneTransitionAnimation", "(Landroid/app/Activity;Landroid/view/View;Ljava/lang/String;)Landroid/app/ActivityOptions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="sharedElement" Type="Android.Views.View" />
        <Parameter Name="sharedElementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity">The Activity whose window contains the shared elements.</param>
        <param name="sharedElement">The View to transition to the started Activity.</param>
        <param name="sharedElementName">The shared element name as used in the target Activity. This
                                     must not be null.</param>
        <summary>Create an ActivityOptions to transition between Activities using cross-Activity scene
            animations.</summary>
        <returns>Returns a new ActivityOptions object that you can use to
                    supply these options as the options Bundle when starting an activity.</returns>
        <remarks>
          <para>Create an ActivityOptions to transition between Activities using cross-Activity scene
            animations. This method carries the position of one shared element to the started Activity.
            The position of <c>sharedElement</c> will be used as the epicenter for the
            exit Transition. The position of the shared element in the launched Activity will be the
            epicenter of its entering Transition.</para>
          <para>This requires <c>android.view.Window#FEATURE_ACTIVITY_TRANSITIONS</c> to be
            enabled on the calling Activity to cause an exit transition. The same must be in
            the called Activity to get an entering transition.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeSceneTransitionAnimation(android.app.Activity,%20android.view.View,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity, android.view.View, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Transitions.Transition.SetEpicenterCallback(.EpicenterCallback)" />
      </Docs>
    </Member>
    <Member MemberName="MakeTaskLaunchBehind">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeTaskLaunchBehind ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeTaskLaunchBehind() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeTaskLaunchBehind" />
      <MemberSignature Language="F#" Value="static member MakeTaskLaunchBehind : unit -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeTaskLaunchBehind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeTaskLaunchBehind", "()Landroid/app/ActivityOptions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeTaskLaunchBehind", "()Landroid/app/ActivityOptions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If set along with Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>If set along with Intent.FLAG_ACTIVITY_NEW_DOCUMENT then the task being launched will not be
            presented to the user but will instead be only available through the recents task list.
            In addition, the new task wil be affiliated with the launching activity's task.
            Affiliated tasks are grouped together in the recents task list.</para>
          <para>This behavior is not supported for activities with <c>android.R.styleable#AndroidManifestActivity_launchMode launchMode</c> values of
            <c>singleInstance</c> or <c>singleTask</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeTaskLaunchBehind()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeTaskLaunchBehind()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeThumbnailScaleUpAnimation">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityOptions? MakeThumbnailScaleUpAnimation (Android.Views.View? source, Android.Graphics.Bitmap? thumbnail, int startX, int startY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityOptions MakeThumbnailScaleUpAnimation(class Android.Views.View source, class Android.Graphics.Bitmap thumbnail, int32 startX, int32 startY) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.MakeThumbnailScaleUpAnimation(Android.Views.View,Android.Graphics.Bitmap,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member MakeThumbnailScaleUpAnimation : Android.Views.View * Android.Graphics.Bitmap * int * int -&gt; Android.App.ActivityOptions" Usage="Android.App.ActivityOptions.MakeThumbnailScaleUpAnimation (source, thumbnail, startX, startY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeThumbnailScaleUpAnimation", "(Landroid/view/View;Landroid/graphics/Bitmap;II)Landroid/app/ActivityOptions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeThumbnailScaleUpAnimation", "(Landroid/view/View;Landroid/graphics/Bitmap;II)Landroid/app/ActivityOptions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Views.View" />
        <Parameter Name="thumbnail" Type="Android.Graphics.Bitmap" />
        <Parameter Name="startX" Type="System.Int32" />
        <Parameter Name="startY" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The View that this thumbnail is animating from.  This
            defines the coordinate space for &lt;var&gt;startX&lt;/var&gt; and &lt;var&gt;startY&lt;/var&gt;.</param>
        <param name="thumbnail">The bitmap that will be shown as the initial thumbnail
            of the animation.</param>
        <param name="startX">The x starting location of the bitmap, relative to &lt;var&gt;source&lt;/var&gt;.</param>
        <param name="startY">The y starting location of the bitmap, relative to &lt;var&gt;source&lt;/var&gt;.</param>
        <summary>Create an ActivityOptions specifying an animation where a thumbnail
            is scaled from a given position to the new activity window that is
            being started.</summary>
        <returns>Returns a new ActivityOptions object that you can use to
            supply these options as the options Bundle when starting an activity.</returns>
        <remarks>
          <para>Create an ActivityOptions specifying an animation where a thumbnail
            is scaled from a given position to the new activity window that is
            being started.</para>
          <para>If the Intent this is being used with has not set its
            <c>android.content.Intent#setSourceBounds Intent.setSourceBounds</c>,
            those bounds will be filled in for you based on the initial
            thumbnail location and size provided here.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#makeThumbnailScaleUpAnimation(android.view.View,%20android.graphics.Bitmap,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.makeThumbnailScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ModeBackgroundActivityStartAllowed">
      <MemberSignature Language="C#" Value="public const Android.App.BackgroundActivityStartMode ModeBackgroundActivityStartAllowed = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.BackgroundActivityStartMode ModeBackgroundActivityStartAllowed = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityOptions.ModeBackgroundActivityStartAllowed" />
      <MemberSignature Language="F#" Value="val mutable ModeBackgroundActivityStartAllowed : Android.App.BackgroundActivityStartMode" Usage="Android.App.ActivityOptions.ModeBackgroundActivityStartAllowed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_BACKGROUND_ACTIVITY_START_ALLOWED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_BACKGROUND_ACTIVITY_START_ALLOWED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.BackgroundActivityStartMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.BackgroundActivityStartMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.BackgroundActivityStartMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Allow the <c>PendingIntent</c> to use the background activity start privileges.</summary>
        <remarks>
          <para>Allow the <c>PendingIntent</c> to use the background activity start privileges.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#MODE_BACKGROUND_ACTIVITY_START_ALLOWED" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.MODE_BACKGROUND_ACTIVITY_START_ALLOWED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeBackgroundActivityStartDenied">
      <MemberSignature Language="C#" Value="public const Android.App.BackgroundActivityStartMode ModeBackgroundActivityStartDenied = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.BackgroundActivityStartMode ModeBackgroundActivityStartDenied = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityOptions.ModeBackgroundActivityStartDenied" />
      <MemberSignature Language="F#" Value="val mutable ModeBackgroundActivityStartDenied : Android.App.BackgroundActivityStartMode" Usage="Android.App.ActivityOptions.ModeBackgroundActivityStartDenied" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_BACKGROUND_ACTIVITY_START_DENIED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_BACKGROUND_ACTIVITY_START_DENIED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.BackgroundActivityStartMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.BackgroundActivityStartMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.BackgroundActivityStartMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Deny the <c>PendingIntent</c> to use the background activity start privileges.</summary>
        <remarks>
          <para>Deny the <c>PendingIntent</c> to use the background activity start privileges.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#MODE_BACKGROUND_ACTIVITY_START_DENIED" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.MODE_BACKGROUND_ACTIVITY_START_DENIED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeBackgroundActivityStartSystemDefined">
      <MemberSignature Language="C#" Value="public const Android.App.BackgroundActivityStartMode ModeBackgroundActivityStartSystemDefined = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.BackgroundActivityStartMode ModeBackgroundActivityStartSystemDefined = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityOptions.ModeBackgroundActivityStartSystemDefined" />
      <MemberSignature Language="F#" Value="val mutable ModeBackgroundActivityStartSystemDefined : Android.App.BackgroundActivityStartMode" Usage="Android.App.ActivityOptions.ModeBackgroundActivityStartSystemDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_BACKGROUND_ACTIVITY_START_SYSTEM_DEFINED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_BACKGROUND_ACTIVITY_START_SYSTEM_DEFINED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.BackgroundActivityStartMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.BackgroundActivityStartMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.BackgroundActivityStartMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>No explicit value chosen.</summary>
        <remarks>
          <para>No explicit value chosen. The system will decide whether to grant privileges.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#MODE_BACKGROUND_ACTIVITY_START_SYSTEM_DEFINED" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.MODE_BACKGROUND_ACTIVITY_START_SYSTEM_DEFINED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingIntentBackgroundActivityLaunchAllowed">
      <MemberSignature Language="C#" Value="public virtual bool PendingIntentBackgroundActivityLaunchAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PendingIntentBackgroundActivityLaunchAllowed" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.PendingIntentBackgroundActivityLaunchAllowed" />
      <MemberSignature Language="F#" Value="member this.PendingIntentBackgroundActivityLaunchAllowed : bool with get, set" Usage="Android.App.ActivityOptions.PendingIntentBackgroundActivityLaunchAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPendingIntentBackgroundActivityLaunchAllowed", "()Z", "GetIsPendingIntentBackgroundActivityLaunchAllowedHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPendingIntentBackgroundActivityLaunchAllowed", "()Z", "GetIsPendingIntentBackgroundActivityLaunchAllowedHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPendingIntentBackgroundActivityLaunchAllowed", "(Z)V", "GetSetPendingIntentBackgroundActivityLaunchAllowed_ZHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPendingIntentBackgroundActivityLaunchAllowed", "(Z)V", "GetSetPendingIntentBackgroundActivityLaunchAllowed_ZHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get PendingIntent activity is allowed to be started in the background if the caller can start
            background activities. -or- Set PendingIntent activity is allowed to be started in the background if the caller
            can start background activities.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get PendingIntent activity is allowed to be started in the background if the caller can start
            background activities.</para>
          <para>This member is deprecated. use <c>#getPendingIntentBackgroundActivityStartMode()</c> since for apps
            targeting <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> or higher this value might
            not match the actual behavior if the value was not explicitly set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#isPendingIntentBackgroundActivityLaunchAllowed()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.isPendingIntentBackgroundActivityLaunchAllowed()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set PendingIntent activity is allowed to be started in the background if the caller
            can start background activities.</para>
          <para>This member is deprecated. use #setPendingIntentBackgroundActivityStartMode(int) to set the full range
            of states</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setPendingIntentBackgroundActivityLaunchAllowed(boolean)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setPendingIntentBackgroundActivityLaunchAllowed(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingIntentBackgroundActivityStartMode">
      <MemberSignature Language="C#" Value="public virtual Android.App.BackgroundActivityStartMode PendingIntentBackgroundActivityStartMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.BackgroundActivityStartMode PendingIntentBackgroundActivityStartMode" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.PendingIntentBackgroundActivityStartMode" />
      <MemberSignature Language="F#" Value="member this.PendingIntentBackgroundActivityStartMode : Android.App.BackgroundActivityStartMode" Usage="Android.App.ActivityOptions.PendingIntentBackgroundActivityStartMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPendingIntentBackgroundActivityStartMode", "()I", "GetGetPendingIntentBackgroundActivityStartModeHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPendingIntentBackgroundActivityStartMode", "()I", "GetGetPendingIntentBackgroundActivityStartModeHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.BackgroundActivityStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the mode for allowing or denying the senders privileges to start background activities
            to the PendingIntent.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Get the mode for allowing or denying the senders privileges to start background activities
            to the PendingIntent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#getPendingIntentBackgroundActivityStartMode()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.getPendingIntentBackgroundActivityStartMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingIntentCreatorBackgroundActivityStartMode">
      <MemberSignature Language="C#" Value="public virtual Android.App.BackgroundActivityStartMode PendingIntentCreatorBackgroundActivityStartMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.BackgroundActivityStartMode PendingIntentCreatorBackgroundActivityStartMode" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.PendingIntentCreatorBackgroundActivityStartMode" />
      <MemberSignature Language="F#" Value="member this.PendingIntentCreatorBackgroundActivityStartMode : Android.App.BackgroundActivityStartMode" Usage="Android.App.ActivityOptions.PendingIntentCreatorBackgroundActivityStartMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPendingIntentCreatorBackgroundActivityStartMode", "()I", "GetGetPendingIntentCreatorBackgroundActivityStartModeHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPendingIntentCreatorBackgroundActivityStartMode", "()I", "GetGetPendingIntentCreatorBackgroundActivityStartModeHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.BackgroundActivityStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the mode to start background activities granted by the creator of the
            <c>PendingIntent</c>.</summary>
        <value>the <c>android.app.ComponentOptions.BackgroundActivityStartMode</c> currently set</value>
        <remarks>
          <para>Returns the mode to start background activities granted by the creator of the
            <c>PendingIntent</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#getPendingIntentCreatorBackgroundActivityStartMode()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.getPendingIntentCreatorBackgroundActivityStartMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUsageTimeReport">
      <MemberSignature Language="C#" Value="public virtual void RequestUsageTimeReport (Android.App.PendingIntent? receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestUsageTimeReport(class Android.App.PendingIntent receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.RequestUsageTimeReport(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RequestUsageTimeReport : Android.App.PendingIntent -&gt; unit&#xA;override this.RequestUsageTimeReport : Android.App.PendingIntent -&gt; unit" Usage="activityOptions.RequestUsageTimeReport receiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestUsageTimeReport", "(Landroid/app/PendingIntent;)V", "GetRequestUsageTimeReport_Landroid_app_PendingIntent_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestUsageTimeReport", "(Landroid/app/PendingIntent;)V", "GetRequestUsageTimeReport_Landroid_app_PendingIntent_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="receiver">A broadcast receiver that willl receive the report.</param>
        <summary>Ask the system track that time the user spends in the app being launched, and
            report it back once done.</summary>
        <remarks>
          <para>Ask the system track that time the user spends in the app being launched, and
            report it back once done.  The report will be sent to the given receiver, with
            the extras <c>#EXTRA_USAGE_TIME_REPORT</c> and <c>#EXTRA_USAGE_TIME_REPORT_PACKAGES</c>
            filled in.</para>
          <para>The time interval tracked is from launching this activity until the user leaves
            that activity's flow.  They are considered to stay in the flow as long as
            new activities are being launched or returned to from the original flow,
            even if this crosses package or task boundaries.  For example, if the originator
            starts an activity to view an image, and while there the user selects to share,
            which launches their email app in a new task, and they complete the share, the
            time during that entire operation will be included until they finally hit back from
            the original image viewer activity.</para>
          <para>The user is considered to complete a flow once they switch to another
            activity that is not part of the tracked flow.  This may happen, for example, by
            using the notification shade, launcher, or recents to launch or switch to another
            app.  Simply going in to these navigation elements does not break the flow (although
            the launcher and recents stops time tracking of the session); it is the act of
            going somewhere else that completes the tracking.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#requestUsageTimeReport(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.requestUsageTimeReport(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAppVerificationBundle">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions? SetAppVerificationBundle (Android.OS.Bundle? bundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetAppVerificationBundle(class Android.OS.Bundle bundle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetAppVerificationBundle(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SetAppVerificationBundle : Android.OS.Bundle -&gt; Android.App.ActivityOptions&#xA;override this.SetAppVerificationBundle : Android.OS.Bundle -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetAppVerificationBundle bundle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAppVerificationBundle", "(Landroid/os/Bundle;)Landroid/app/ActivityOptions;", "GetSetAppVerificationBundle_Landroid_os_Bundle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAppVerificationBundle", "(Landroid/os/Bundle;)Landroid/app/ActivityOptions;", "GetSetAppVerificationBundle_Landroid_os_Bundle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="bundle">To be added.</param>
        <summary>Set the <c>Bundle</c> that is provided to the app installer for additional verification
            if the call to <c>Context#startActivity</c> results in an app being installed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Set the <c>Bundle</c> that is provided to the app installer for additional verification
            if the call to <c>Context#startActivity</c> results in an app being installed.
            
            This Bundle is not provided to any other app besides the installer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setAppVerificationBundle(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setAppVerificationBundle(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLaunchBounds">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions? SetLaunchBounds (Android.Graphics.Rect? screenSpacePixelRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetLaunchBounds(class Android.Graphics.Rect screenSpacePixelRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetLaunchBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member SetLaunchBounds : Android.Graphics.Rect -&gt; Android.App.ActivityOptions&#xA;override this.SetLaunchBounds : Android.Graphics.Rect -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetLaunchBounds screenSpacePixelRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLaunchBounds", "(Landroid/graphics/Rect;)Landroid/app/ActivityOptions;", "GetSetLaunchBounds_Landroid_graphics_Rect_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLaunchBounds", "(Landroid/graphics/Rect;)Landroid/app/ActivityOptions;", "GetSetLaunchBounds_Landroid_graphics_Rect_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenSpacePixelRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="screenSpacePixelRect">launch bounds or <c>null</c> for fullscreen</param>
        <summary>Sets the bounds (window size and position) that the activity should be launched in.</summary>
        <returns>
          <c>this</c>
          <c>ActivityOptions</c> instance</returns>
        <remarks>
          <para>Sets the bounds (window size and position) that the activity should be launched in.
            Rect position should be provided in pixels and in screen coordinates.
            Set to <c>null</c> to explicitly launch fullscreen.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; This value is ignored on devices that don't have
            <c>android.content.pm.PackageManager#FEATURE_FREEFORM_WINDOW_MANAGEMENT</c> or
            <c>android.content.pm.PackageManager#FEATURE_PICTURE_IN_PICTURE</c> enabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setLaunchBounds(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setLaunchBounds(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLaunchDisplayId">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions? SetLaunchDisplayId (int launchDisplayId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetLaunchDisplayId(int32 launchDisplayId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetLaunchDisplayId(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetLaunchDisplayId : int -&gt; Android.App.ActivityOptions&#xA;override this.SetLaunchDisplayId : int -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetLaunchDisplayId launchDisplayId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLaunchDisplayId", "(I)Landroid/app/ActivityOptions;", "GetSetLaunchDisplayId_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLaunchDisplayId", "(I)Landroid/app/ActivityOptions;", "GetSetLaunchDisplayId_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="launchDisplayId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="launchDisplayId">The id of the display where the activity should be launched.</param>
        <summary>Sets the id of the display where the activity should be launched.</summary>
        <returns>
          <c>this</c>
          <c>ActivityOptions</c> instance.</returns>
        <remarks>
          <para>Sets the id of the display where the activity should be launched.
            An app can launch activities on public displays or displays where the app already has
            activities. Otherwise, trying to launch on a private display or providing an invalid display
            id will result in an exception.</para>
          <para>Setting launch display id will be ignored on devices that don't have
            <c>android.content.pm.PackageManager#FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setLaunchDisplayId(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setLaunchDisplayId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLockTaskEnabled">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions? SetLockTaskEnabled (bool lockTaskMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetLockTaskEnabled(bool lockTaskMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetLockTaskEnabled(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetLockTaskEnabled : bool -&gt; Android.App.ActivityOptions&#xA;override this.SetLockTaskEnabled : bool -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetLockTaskEnabled lockTaskMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLockTaskEnabled", "(Z)Landroid/app/ActivityOptions;", "GetSetLockTaskEnabled_ZHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLockTaskEnabled", "(Z)Landroid/app/ActivityOptions;", "GetSetLockTaskEnabled_ZHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockTaskMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lockTaskMode">
          <c>true</c> if the activity is to be launched into LockTask mode.</param>
        <summary>Sets whether the activity is to be launched into LockTask mode.</summary>
        <returns>
          <c>this</c>
          <c>ActivityOptions</c> instance.</returns>
        <remarks>
          <para>Sets whether the activity is to be launched into LockTask mode.
            
            Use this option to start an activity in LockTask mode. Note that only apps permitted by
            <c>android.app.admin.DevicePolicyManager</c> can run in LockTask mode. Therefore, if
            <c>android.app.admin.DevicePolicyManager#isLockTaskPermitted(String)</c> returns
            <c>false</c> for the package of the target activity, a <c>SecurityException</c> will be
            thrown during <c>Context#startActivity(Intent, Bundle)</c>. This method doesn't affect
            activities that are already running — relaunch the activity to run in lock task mode.
            
            Defaults to <c>false</c> if not set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setLockTaskEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setLockTaskEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPendingIntentBackgroundActivityStartMode">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions SetPendingIntentBackgroundActivityStartMode (Android.App.BackgroundActivityStartMode state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetPendingIntentBackgroundActivityStartMode(valuetype Android.App.BackgroundActivityStartMode state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetPendingIntentBackgroundActivityStartMode(Android.App.BackgroundActivityStartMode)" />
      <MemberSignature Language="F#" Value="abstract member SetPendingIntentBackgroundActivityStartMode : Android.App.BackgroundActivityStartMode -&gt; Android.App.ActivityOptions&#xA;override this.SetPendingIntentBackgroundActivityStartMode : Android.App.BackgroundActivityStartMode -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetPendingIntentBackgroundActivityStartMode state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPendingIntentBackgroundActivityStartMode", "(I)Landroid/app/ActivityOptions;", "GetSetPendingIntentBackgroundActivityStartMode_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPendingIntentBackgroundActivityStartMode", "(I)Landroid/app/ActivityOptions;", "GetSetPendingIntentBackgroundActivityStartMode_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.App.BackgroundActivityStartMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Sets the mode for allowing or denying the senders privileges to start background activities
            to the PendingIntent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Sets the mode for allowing or denying the senders privileges to start background activities
            to the PendingIntent.
            
            This is typically used in when executing <c>PendingIntent#send(Context, int, Intent,
            PendingIntent.OnFinished, Handler, String, Bundle)</c> or similar
            methods. A privileged sender of a PendingIntent should only grant
            <c>#MODE_BACKGROUND_ACTIVITY_START_ALLOWED</c> if the PendingIntent is from a trusted source
            and/or executed on behalf the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setPendingIntentBackgroundActivityStartMode(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setPendingIntentBackgroundActivityStartMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPendingIntentCreatorBackgroundActivityStartMode">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions SetPendingIntentCreatorBackgroundActivityStartMode (Android.App.BackgroundActivityStartMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetPendingIntentCreatorBackgroundActivityStartMode(valuetype Android.App.BackgroundActivityStartMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetPendingIntentCreatorBackgroundActivityStartMode(Android.App.BackgroundActivityStartMode)" />
      <MemberSignature Language="F#" Value="abstract member SetPendingIntentCreatorBackgroundActivityStartMode : Android.App.BackgroundActivityStartMode -&gt; Android.App.ActivityOptions&#xA;override this.SetPendingIntentCreatorBackgroundActivityStartMode : Android.App.BackgroundActivityStartMode -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetPendingIntentCreatorBackgroundActivityStartMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPendingIntentCreatorBackgroundActivityStartMode", "(I)Landroid/app/ActivityOptions;", "GetSetPendingIntentCreatorBackgroundActivityStartMode_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPendingIntentCreatorBackgroundActivityStartMode", "(I)Landroid/app/ActivityOptions;", "GetSetPendingIntentCreatorBackgroundActivityStartMode_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.App.BackgroundActivityStartMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">the <c>android.app.ComponentOptions.BackgroundActivityStartMode</c> being set</param>
        <summary>Allow a <c>PendingIntent</c> to use the privilege of its creator to start background
            activities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Allow a <c>PendingIntent</c> to use the privilege of its creator to start background
            activities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setPendingIntentCreatorBackgroundActivityStartMode(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setPendingIntentCreatorBackgroundActivityStartMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShareIdentityEnabled">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions SetShareIdentityEnabled (bool shareIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetShareIdentityEnabled(bool shareIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetShareIdentityEnabled(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetShareIdentityEnabled : bool -&gt; Android.App.ActivityOptions&#xA;override this.SetShareIdentityEnabled : bool -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetShareIdentityEnabled shareIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShareIdentityEnabled", "(Z)Landroid/app/ActivityOptions;", "GetSetShareIdentityEnabled_ZHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShareIdentityEnabled", "(Z)Landroid/app/ActivityOptions;", "GetSetShareIdentityEnabled_ZHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareIdentity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shareIdentity">whether the launching app's identity should be shared with the activity</param>
        <summary>Sets whether the identity of the launching app should be shared with the activity.</summary>
        <returns>
          <c>this</c>
          <c>ActivityOptions</c> instance.</returns>
        <remarks>
          <para>Sets whether the identity of the launching app should be shared with the activity.</para>
          <para>Use this option when starting an activity that needs to know the identity of the
            launching app; with this set to <c>true</c>, the activity will have access to the launching
            app's package name and uid.</para>
          <para>Defaults to <c>false</c> if not set.</para>
          <para>Note, even if the launching app does not explicitly enable sharing of its identity, if
            the activity is started with <c>Activity#startActivityForResult</c>, then <c>Activity#getCallingPackage()</c> will still return the launching app's package name to
            allow validation of the result's recipient. Also, an activity running within a package
            signed by the same key used to sign the platform (some system apps such as Settings will
            be signed with the platform's key) will have access to the launching app's identity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setShareIdentityEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setShareIdentityEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSplashScreenStyle">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActivityOptions SetSplashScreenStyle (int style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActivityOptions SetSplashScreenStyle(int32 style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.SetSplashScreenStyle(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetSplashScreenStyle : int -&gt; Android.App.ActivityOptions&#xA;override this.SetSplashScreenStyle : int -&gt; Android.App.ActivityOptions" Usage="activityOptions.SetSplashScreenStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSplashScreenStyle", "(I)Landroid/app/ActivityOptions;", "GetSetSplashScreenStyle_IHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSplashScreenStyle", "(I)Landroid/app/ActivityOptions;", "GetSetSplashScreenStyle_IHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActivityOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "SplashScreenStyleSolidColor", "SplashScreenStyleIcon" }, Type="Android.Window.ISplashScreen")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "SplashScreenStyleSolidColor", "SplashScreenStyleIcon" }, Type="Android.Window.ISplashScreen")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="style">Can be either <c>SplashScreen#SPLASH_SCREEN_STYLE_ICON</c> or
                         <c>SplashScreen#SPLASH_SCREEN_STYLE_SOLID_COLOR</c></param>
        <summary>Sets the preferred splash screen style of the opening activities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Sets the preferred splash screen style of the opening activities. This only applies if the
            Activity or Process is not yet created.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#setSplashScreenStyle(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.setSplashScreenStyle(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplashScreenStyle">
      <MemberSignature Language="C#" Value="public virtual int SplashScreenStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplashScreenStyle" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.SplashScreenStyle" />
      <MemberSignature Language="F#" Value="member this.SplashScreenStyle : int" Usage="Android.App.ActivityOptions.SplashScreenStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSplashScreenStyle", "()I", "GetGetSplashScreenStyleHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSplashScreenStyle", "()I", "GetGetSplashScreenStyleHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the style can be used for cold-launching an activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the style can be used for cold-launching an activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#getSplashScreenStyle()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.getSplashScreenStyle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.ActivityOptions.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityOptions.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.ActivityOptions.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBundle">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle? ToBundle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle ToBundle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.ToBundle" />
      <MemberSignature Language="F#" Value="abstract member ToBundle : unit -&gt; Android.OS.Bundle&#xA;override this.ToBundle : unit -&gt; Android.OS.Bundle" Usage="activityOptions.ToBundle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the created options as a Bundle, which can be passed to
            <c>android.content.Context#startActivity(android.content.Intent, android.os.Bundle)
            Context.startActivity(Intent, Bundle)</c> and related methods.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the created options as a Bundle, which can be passed to
            <c>android.content.Context#startActivity(android.content.Intent, android.os.Bundle)
            Context.startActivity(Intent, Bundle)</c> and related methods.
            Note that the returned Bundle is still owned by the ActivityOptions
            object; you must not modify it, but can supply it to the startActivity
            methods that take an options Bundle.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#toBundle()" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.toBundle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (Android.App.ActivityOptions? otherOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class Android.App.ActivityOptions otherOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityOptions.Update(Android.App.ActivityOptions)" />
      <MemberSignature Language="F#" Value="abstract member Update : Android.App.ActivityOptions -&gt; unit&#xA;override this.Update : Android.App.ActivityOptions -&gt; unit" Usage="activityOptions.Update otherOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("update", "(Landroid/app/ActivityOptions;)V", "GetUpdate_Landroid_app_ActivityOptions_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("update", "(Landroid/app/ActivityOptions;)V", "GetUpdate_Landroid_app_ActivityOptions_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherOptions" Type="Android.App.ActivityOptions" />
      </Parameters>
      <Docs>
        <param name="otherOptions">To be added.</param>
        <summary>Update the current values in this ActivityOptions from those supplied
            in &lt;var&gt;otherOptions&lt;/var&gt;.</summary>
        <remarks>
          <para>Update the current values in this ActivityOptions from those supplied
            in &lt;var&gt;otherOptions&lt;/var&gt;.  Any values
            defined in &lt;var&gt;otherOptions&lt;/var&gt; replace those in the base options.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityOptions#update(android.app.ActivityOptions)" title="Reference documentation">Java documentation for <code>android.app.ActivityOptions.update(android.app.ActivityOptions)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
