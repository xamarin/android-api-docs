<Type Name="AlarmManager" FullName="Android.App.AlarmManager">
  <TypeSignature Language="C#" Value="public class AlarmManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlarmManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.AlarmManager" />
  <TypeSignature Language="F#" Value="type AlarmManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/AlarmManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides access to the system alarm services.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/AlarmManager" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AlarmManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.AlarmManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.AlarmManager" Usage="new Android.App.AlarmManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionNextAlarmClockChanged">
      <MemberSignature Language="C#" Value="public const string ActionNextAlarmClockChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionNextAlarmClockChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.ActionNextAlarmClockChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionNextAlarmClockChanged : string" Usage="Android.App.AlarmManager.ActionNextAlarmClockChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_NEXT_ALARM_CLOCK_CHANGED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: Sent after the value returned by
            <c>#getNextAlarmClock()</c> has changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionScheduleExactAlarmPermissionStateChanged">
      <MemberSignature Language="C#" Value="public const string ActionScheduleExactAlarmPermissionStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScheduleExactAlarmPermissionStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.ActionScheduleExactAlarmPermissionStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED", ApiSince=31)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: An app is granted the
            <c>android.Manifest.permission#SCHEDULE_EXACT_ALARM</c> permission.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel (Android.App.AlarmManager.IOnAlarmListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel(class Android.App.AlarmManager/IOnAlarmListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.Cancel(Android.App.AlarmManager.IOnAlarmListener)" />
      <MemberSignature Language="F#" Value="abstract member Cancel : Android.App.AlarmManager.IOnAlarmListener -&gt; unit&#xA;override this.Cancel : Android.App.AlarmManager.IOnAlarmListener -&gt; unit" Usage="alarmManager.Cancel listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "(Landroid/app/AlarmManager$OnAlarmListener;)V", "GetCancel_Landroid_app_AlarmManager_OnAlarmListener_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.AlarmManager+IOnAlarmListener" />
      </Parameters>
      <Docs>
        <param name="listener">OnAlarmListener instance that is the target of a currently-set alarm.</param>
        <summary>Remove any alarm scheduled to be delivered to the given <c>OnAlarmListener</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel (Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel(class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member Cancel : Android.App.PendingIntent -&gt; unit&#xA;override this.Cancel : Android.App.PendingIntent -&gt; unit" Usage="alarmManager.Cancel operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "(Landroid/app/PendingIntent;)V", "GetCancel_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="operation">IntentSender which matches a previously added
 IntentSender.</param>
        <summary>Remove any alarm scheduled to be delivered to the given <c>OnAlarmListener</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.AlarmManager.Set(Android.App.AlarmType, System.Int64, System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="CanScheduleExactAlarms">
      <MemberSignature Language="C#" Value="public virtual bool CanScheduleExactAlarms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScheduleExactAlarms() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.CanScheduleExactAlarms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScheduleExactAlarms", "()Z", "GetCanScheduleExactAlarmsHandler", ApiSince=31)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to check if the caller can schedule exact alarms.</summary>
        <returns>
          <c>true</c> if the caller can schedule exact alarms, <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.App.AlarmManager FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.AlarmManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.App.AlarmManager" Usage="Android.App.AlarmManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.AlarmManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalDay">
      <MemberSignature Language="C#" Value="public const long IntervalDay = 86400000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 IntervalDay = (86400000)" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.IntervalDay" />
      <MemberSignature Language="F#" Value="val mutable IntervalDay : int64" Usage="Android.App.AlarmManager.IntervalDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERVAL_DAY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>86400000</MemberValue>
      <Docs>
        <summary>Available inexact recurrence interval recognized by
            <c>#setInexactRepeating(int, long, long, PendingIntent)</c>
            when running on Android prior to API 19.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntervalFifteenMinutes">
      <MemberSignature Language="C#" Value="public const long IntervalFifteenMinutes = 900000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 IntervalFifteenMinutes = (900000)" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.IntervalFifteenMinutes" />
      <MemberSignature Language="F#" Value="val mutable IntervalFifteenMinutes : int64" Usage="Android.App.AlarmManager.IntervalFifteenMinutes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERVAL_FIFTEEN_MINUTES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>900000</MemberValue>
      <Docs>
        <summary>Available inexact recurrence interval recognized by
            <c>#setInexactRepeating(int, long, long, PendingIntent)</c>
            when running on Android prior to API 19.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntervalHalfDay">
      <MemberSignature Language="C#" Value="public const long IntervalHalfDay = 43200000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 IntervalHalfDay = (43200000)" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.IntervalHalfDay" />
      <MemberSignature Language="F#" Value="val mutable IntervalHalfDay : int64" Usage="Android.App.AlarmManager.IntervalHalfDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERVAL_HALF_DAY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>43200000</MemberValue>
      <Docs>
        <summary>Available inexact recurrence interval recognized by
            <c>#setInexactRepeating(int, long, long, PendingIntent)</c>
            when running on Android prior to API 19.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntervalHalfHour">
      <MemberSignature Language="C#" Value="public const long IntervalHalfHour = 1800000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 IntervalHalfHour = (1800000)" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.IntervalHalfHour" />
      <MemberSignature Language="F#" Value="val mutable IntervalHalfHour : int64" Usage="Android.App.AlarmManager.IntervalHalfHour" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERVAL_HALF_HOUR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>1800000</MemberValue>
      <Docs>
        <summary>Available inexact recurrence interval recognized by
            <c>#setInexactRepeating(int, long, long, PendingIntent)</c>
            when running on Android prior to API 19.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntervalHour">
      <MemberSignature Language="C#" Value="public const long IntervalHour = 3600000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 IntervalHour = (3600000)" />
      <MemberSignature Language="DocId" Value="F:Android.App.AlarmManager.IntervalHour" />
      <MemberSignature Language="F#" Value="val mutable IntervalHour : int64" Usage="Android.App.AlarmManager.IntervalHour" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERVAL_HOUR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>3600000</MemberValue>
      <Docs>
        <summary>Available inexact recurrence interval recognized by
            <c>#setInexactRepeating(int, long, long, PendingIntent)</c>
            when running on Android prior to API 19.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.AlarmManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.AlarmManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextAlarmClock">
      <MemberSignature Language="C#" Value="public virtual Android.App.AlarmManager.AlarmClockInfo NextAlarmClock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.AlarmManager/AlarmClockInfo NextAlarmClock" />
      <MemberSignature Language="DocId" Value="P:Android.App.AlarmManager.NextAlarmClock" />
      <MemberSignature Language="F#" Value="member this.NextAlarmClock : Android.App.AlarmManager.AlarmClockInfo" Usage="Android.App.AlarmManager.NextAlarmClock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextAlarmClock", "()Landroid/app/AlarmManager$AlarmClockInfo;", "GetGetNextAlarmClockHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AlarmManager+AlarmClockInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the next alarm clock currently scheduled.</summary>
        <value>An <c>AlarmClockInfo</c> object describing the next upcoming alarm
              clock event that will occur.  If there are no alarm clock events currently
              scheduled, this method will return <c>null</c>.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.AlarmManager.SetAlarmClock(.AlarmClockInfo, Android.App.PendingIntent)" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (Android.App.AlarmType type, long triggerAtMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(valuetype Android.App.AlarmType type, int64 triggerAtMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.Set(Android.App.AlarmType,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member Set : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.Set : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.Set (type, triggerAtMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(IJLandroid/app/PendingIntent;)V", "GetSet_IJLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">One of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App AlarmManager ELAPSED_REALTIME';scope=Xamarin" title="Android.App.AlarmManager.ELAPSED_REALTIME">Android.App.AlarmManager.ELAPSED_REALTIME</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App AlarmManager ELAPSED_REALTIME_WAKEUP';scope=Xamarin" title="Android.App.AlarmManager.ELAPSED_REALTIME_WAKEUP">Android.App.AlarmManager.ELAPSED_REALTIME_WAKEUP</a></format>,
        <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App AlarmManager RTC';scope=Xamarin" title="Android.App.AlarmManager.RTC">Android.App.AlarmManager.RTC</a></format>, or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android App AlarmManager RTC_WAKEUP';scope=Xamarin" title="Android.App.AlarmManager.RTC_WAKEUP">Android.App.AlarmManager.RTC_WAKEUP</a></format>.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should go
 off, using the appropriate clock (depending on the alarm type).</param>
        <param name="operation">Action to perform when the alarm goes off;
 typically comes from <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetBroadcast(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.OS.Handler" />
        <altmember cref="M:Android.App.AlarmManager.SetExact(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetRepeating(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetWindow(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (Android.App.AlarmType type, long triggerAtMillis, string tag, Android.App.AlarmManager.IOnAlarmListener listener, Android.OS.Handler targetHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(valuetype Android.App.AlarmType type, int64 triggerAtMillis, string tag, class Android.App.AlarmManager/IOnAlarmListener listener, class Android.OS.Handler targetHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.Set(Android.App.AlarmType,System.Int64,System.String,Android.App.AlarmManager.IOnAlarmListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member Set : Android.App.AlarmType * int64 * string * Android.App.AlarmManager.IOnAlarmListener * Android.OS.Handler -&gt; unit&#xA;override this.Set : Android.App.AlarmType * int64 * string * Android.App.AlarmManager.IOnAlarmListener * Android.OS.Handler -&gt; unit" Usage="alarmManager.Set (type, triggerAtMillis, tag, listener, targetHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(IJLjava/lang/String;Landroid/app/AlarmManager$OnAlarmListener;Landroid/os/Handler;)V", "GetSet_IJLjava_lang_String_Landroid_app_AlarmManager_OnAlarmListener_Landroid_os_Handler_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="listener" Type="Android.App.AlarmManager+IOnAlarmListener" />
        <Parameter Name="targetHandler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="triggerAtMillis">To be added.</param>
        <param name="tag">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="targetHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlarmClock">
      <MemberSignature Language="C#" Value="public virtual void SetAlarmClock (Android.App.AlarmManager.AlarmClockInfo info, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlarmClock(class Android.App.AlarmManager/AlarmClockInfo info, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetAlarmClock(Android.App.AlarmManager.AlarmClockInfo,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetAlarmClock : Android.App.AlarmManager.AlarmClockInfo * Android.App.PendingIntent -&gt; unit&#xA;override this.SetAlarmClock : Android.App.AlarmManager.AlarmClockInfo * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetAlarmClock (info, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlarmClock", "(Landroid/app/AlarmManager$AlarmClockInfo;Landroid/app/PendingIntent;)V", "GetSetAlarmClock_Landroid_app_AlarmManager_AlarmClockInfo_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.App.AlarmManager+AlarmClockInfo" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="operation">Action to perform when the alarm goes off;
        typically comes from <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android App PendingIntent GetBroadcast(Android Content Context,System Int32,System Int32,System Int32)';scope=Xamarin" title="M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)">M:Android.App.PendingIntent.GetBroadcast(Android.Content.Context,System.Int32,System.Int32,System.Int32)</a></format>.</param>
        <summary>Schedule an alarm that represents an alarm clock, which will be used to notify the user
            when it goes off.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.AlarmManager.Set(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetRepeating(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetWindow(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetExact(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
        <altmember cref="P:Android.App.AlarmManager.NextAlarmClock" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SetAndAllowWhileIdle">
      <MemberSignature Language="C#" Value="public virtual void SetAndAllowWhileIdle (Android.App.AlarmType type, long triggerAtMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndAllowWhileIdle(valuetype Android.App.AlarmType type, int64 triggerAtMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetAndAllowWhileIdle(Android.App.AlarmType,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetAndAllowWhileIdle : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.SetAndAllowWhileIdle : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetAndAllowWhileIdle (type, triggerAtMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAndAllowWhileIdle", "(IJLandroid/app/PendingIntent;)V", "GetSetAndAllowWhileIdle_IJLandroid_app_PendingIntent_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should go
            off, using the appropriate clock (depending on the alarm type).</param>
        <param name="operation">Action to perform when the alarm goes off;
            typically comes from <c>PendingIntent#getBroadcast
            IntentSender.getBroadcast()</c>.</param>
        <summary>Like <c>#set(int, long, PendingIntent)</c>, but this alarm will be allowed to execute
            even when the system is in low-power idle (a.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExact">
      <MemberSignature Language="C#" Value="public virtual void SetExact (Android.App.AlarmType type, long triggerAtMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExact(valuetype Android.App.AlarmType type, int64 triggerAtMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetExact(Android.App.AlarmType,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetExact : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.SetExact : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetExact (type, triggerAtMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExact", "(IJLandroid/app/PendingIntent;)V", "GetSetExact_IJLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should go
                   off, using the appropriate clock (depending on the alarm type).</param>
        <param name="operation">Action to perform when the alarm goes off;
                   typically comes from <c>PendingIntent#getBroadcast
                   IntentSender.getBroadcast()</c>.</param>
        <summary>Schedule an alarm to be delivered precisely at the stated time.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.AlarmManager.Set(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetRepeating(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetWindow(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SetExact">
      <MemberSignature Language="C#" Value="public virtual void SetExact (Android.App.AlarmType type, long triggerAtMillis, string tag, Android.App.AlarmManager.IOnAlarmListener listener, Android.OS.Handler targetHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExact(valuetype Android.App.AlarmType type, int64 triggerAtMillis, string tag, class Android.App.AlarmManager/IOnAlarmListener listener, class Android.OS.Handler targetHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetExact(Android.App.AlarmType,System.Int64,System.String,Android.App.AlarmManager.IOnAlarmListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetExact : Android.App.AlarmType * int64 * string * Android.App.AlarmManager.IOnAlarmListener * Android.OS.Handler -&gt; unit&#xA;override this.SetExact : Android.App.AlarmType * int64 * string * Android.App.AlarmManager.IOnAlarmListener * Android.OS.Handler -&gt; unit" Usage="alarmManager.SetExact (type, triggerAtMillis, tag, listener, targetHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExact", "(IJLjava/lang/String;Landroid/app/AlarmManager$OnAlarmListener;Landroid/os/Handler;)V", "GetSetExact_IJLjava_lang_String_Landroid_app_AlarmManager_OnAlarmListener_Landroid_os_Handler_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="listener" Type="Android.App.AlarmManager+IOnAlarmListener" />
        <Parameter Name="targetHandler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should go
                   off, using the appropriate clock (depending on the alarm type).</param>
        <param name="tag">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="targetHandler">To be added.</param>
        <summary>Schedule an alarm to be delivered precisely at the stated time.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExactAndAllowWhileIdle">
      <MemberSignature Language="C#" Value="public virtual void SetExactAndAllowWhileIdle (Android.App.AlarmType type, long triggerAtMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExactAndAllowWhileIdle(valuetype Android.App.AlarmType type, int64 triggerAtMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetExactAndAllowWhileIdle(Android.App.AlarmType,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetExactAndAllowWhileIdle : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.SetExactAndAllowWhileIdle : Android.App.AlarmType * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetExactAndAllowWhileIdle (type, triggerAtMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExactAndAllowWhileIdle", "(IJLandroid/app/PendingIntent;)V", "GetSetExactAndAllowWhileIdle_IJLandroid_app_PendingIntent_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should go
                   off, using the appropriate clock (depending on the alarm type).</param>
        <param name="operation">Action to perform when the alarm goes off;
                   typically comes from <c>PendingIntent#getBroadcast
                   IntentSender.getBroadcast()</c>.</param>
        <summary>Like <c>#setExact(int, long, PendingIntent)</c>, but this alarm will be allowed to execute
            even when the system is in low-power idle modes.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInexactRepeating">
      <MemberSignature Language="C#" Value="public virtual void SetInexactRepeating (Android.App.AlarmType type, long triggerAtMillis, long intervalMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInexactRepeating(valuetype Android.App.AlarmType type, int64 triggerAtMillis, int64 intervalMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetInexactRepeating(Android.App.AlarmType,System.Int64,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetInexactRepeating : Android.App.AlarmType * int64 * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.SetInexactRepeating : Android.App.AlarmType * int64 * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetInexactRepeating (type, triggerAtMillis, intervalMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInexactRepeating", "(IJJLandroid/app/PendingIntent;)V", "GetSetInexactRepeating_IJJLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="intervalMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should first
            go off, using the appropriate clock (depending on the alarm type).  This
            is inexact: the alarm will not fire before this time, but there may be a
            delay of almost an entire alarm interval before the first invocation of
            the alarm.</param>
        <param name="intervalMillis">interval in milliseconds between subsequent repeats
            of the alarm.  Prior to API 19, if this is one of INTERVAL_FIFTEEN_MINUTES,
            INTERVAL_HALF_HOUR, INTERVAL_HOUR, INTERVAL_HALF_DAY, or INTERVAL_DAY
            then the alarm will be phase-aligned with other alarms to reduce the
            number of wakeups.  Otherwise, the alarm will be set as though the
            application had called <c>#setRepeating</c>.  As of API 19, all repeating
            alarms will be inexact and subject to batching with other alarms regardless
            of their stated repeat interval.</param>
        <param name="operation">Action to perform when the alarm goes off;
            typically comes from <c>PendingIntent#getBroadcast
            IntentSender.getBroadcast()</c>.</param>
        <summary>Schedule a repeating alarm that has inexact trigger time requirements;
            for example, an alarm that repeats every hour, but not necessarily at
            the top of every hour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="T:Android.OS.Handler" />
        <altmember cref="M:Android.App.AlarmManager.Set(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
        <altmember cref="F:Android.App.AlarmManager.IntervalFifteenMinutes" />
        <altmember cref="F:Android.App.AlarmManager.IntervalHalfHour" />
        <altmember cref="F:Android.App.AlarmManager.IntervalHour" />
        <altmember cref="F:Android.App.AlarmManager.IntervalHalfDay" />
        <altmember cref="F:Android.App.AlarmManager.IntervalDay" />
      </Docs>
    </Member>
    <Member MemberName="SetRepeating">
      <MemberSignature Language="C#" Value="public virtual void SetRepeating (Android.App.AlarmType type, long triggerAtMillis, long intervalMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRepeating(valuetype Android.App.AlarmType type, int64 triggerAtMillis, int64 intervalMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetRepeating(Android.App.AlarmType,System.Int64,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetRepeating : Android.App.AlarmType * int64 * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.SetRepeating : Android.App.AlarmType * int64 * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetRepeating (type, triggerAtMillis, intervalMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRepeating", "(IJJLandroid/app/PendingIntent;)V", "GetSetRepeating_IJJLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="triggerAtMillis" Type="System.Int64" />
        <Parameter Name="intervalMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="triggerAtMillis">time in milliseconds that the alarm should first
            go off, using the appropriate clock (depending on the alarm type).</param>
        <param name="intervalMillis">interval in milliseconds between subsequent repeats
            of the alarm.</param>
        <param name="operation">Action to perform when the alarm goes off;
            typically comes from <c>PendingIntent#getBroadcast
            IntentSender.getBroadcast()</c>.</param>
        <summary>Schedule a repeating alarm.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.OS.Handler" />
        <altmember cref="M:Android.App.AlarmManager.Set(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetExact(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetWindow(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SetTime">
      <MemberSignature Language="C#" Value="public virtual void SetTime (long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTime(int64 millis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetTime(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetTime : int64 -&gt; unit&#xA;override this.SetTime : int64 -&gt; unit" Usage="alarmManager.SetTime millis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTime", "(J)V", "GetSetTime_JHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_TIME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="millis">time in milliseconds since the Epoch</param>
        <summary>Set the system wall clock time.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetTimeZone">
      <MemberSignature Language="C#" Value="public virtual void SetTimeZone (string timeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTimeZone(string timeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetTimeZone(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetTimeZone : string -&gt; unit&#xA;override this.SetTimeZone : string -&gt; unit" Usage="alarmManager.SetTimeZone timeZone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTimeZone", "(Ljava/lang/String;)V", "GetSetTimeZone_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.RequiresPermission("android.permission.SET_TIME_ZONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeZone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="timeZone">one of the Olson ids from the list returned by
                <c>java.util.TimeZone#getAvailableIDs</c></param>
        <summary>Sets the system's persistent default time zone.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWindow">
      <MemberSignature Language="C#" Value="public virtual void SetWindow (Android.App.AlarmType type, long windowStartMillis, long windowLengthMillis, Android.App.PendingIntent operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindow(valuetype Android.App.AlarmType type, int64 windowStartMillis, int64 windowLengthMillis, class Android.App.PendingIntent operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetWindow(Android.App.AlarmType,System.Int64,System.Int64,Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member SetWindow : Android.App.AlarmType * int64 * int64 * Android.App.PendingIntent -&gt; unit&#xA;override this.SetWindow : Android.App.AlarmType * int64 * int64 * Android.App.PendingIntent -&gt; unit" Usage="alarmManager.SetWindow (type, windowStartMillis, windowLengthMillis, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWindow", "(IJJLandroid/app/PendingIntent;)V", "GetSetWindow_IJJLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="windowStartMillis" Type="System.Int64" />
        <Parameter Name="windowLengthMillis" Type="System.Int64" />
        <Parameter Name="operation" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="windowStartMillis">The earliest time, in milliseconds, that the alarm should
                   be delivered, expressed in the appropriate clock's units (depending on the alarm
                   type).</param>
        <param name="windowLengthMillis">The length of the requested delivery window,
                   in milliseconds.  The alarm will be delivered no later than this many
                   milliseconds after <c>windowStartMillis</c>.  Note that this parameter
                   is a <i>duration,</i> not the timestamp of the end of the window.</param>
        <param name="operation">Action to perform when the alarm goes off;
                   typically comes from <c>PendingIntent#getBroadcast
                   IntentSender.getBroadcast()</c>.</param>
        <summary>Schedule an alarm to be delivered within a given window of time.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.AlarmManager.Set(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetExact(Android.App.AlarmType, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.SetRepeating(Android.App.AlarmType, System.Int64, System.Int64, System.Int64)" />
        <altmember cref="M:Android.App.AlarmManager.Cancel(Android.App.PendingIntent)" />
        <altmember cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" />
        <altmember cref="M:Android.Content.Context.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
        <altmember cref="M:Android.Content.Intent.FilterEquals(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SetWindow">
      <MemberSignature Language="C#" Value="public virtual void SetWindow (Android.App.AlarmType type, long windowStartMillis, long windowLengthMillis, string tag, Android.App.AlarmManager.IOnAlarmListener listener, Android.OS.Handler targetHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindow(valuetype Android.App.AlarmType type, int64 windowStartMillis, int64 windowLengthMillis, string tag, class Android.App.AlarmManager/IOnAlarmListener listener, class Android.OS.Handler targetHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.AlarmManager.SetWindow(Android.App.AlarmType,System.Int64,System.Int64,System.String,Android.App.AlarmManager.IOnAlarmListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetWindow : Android.App.AlarmType * int64 * int64 * string * Android.App.AlarmManager.IOnAlarmListener * Android.OS.Handler -&gt; unit&#xA;override this.SetWindow : Android.App.AlarmType * int64 * int64 * string * Android.App.AlarmManager.IOnAlarmListener * Android.OS.Handler -&gt; unit" Usage="alarmManager.SetWindow (type, windowStartMillis, windowLengthMillis, tag, listener, targetHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWindow", "(IJJLjava/lang/String;Landroid/app/AlarmManager$OnAlarmListener;Landroid/os/Handler;)V", "GetSetWindow_IJJLjava_lang_String_Landroid_app_AlarmManager_OnAlarmListener_Landroid_os_Handler_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.App.AlarmType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="windowStartMillis" Type="System.Int64" />
        <Parameter Name="windowLengthMillis" Type="System.Int64" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="listener" Type="Android.App.AlarmManager+IOnAlarmListener" />
        <Parameter Name="targetHandler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="type">type of alarm.</param>
        <param name="windowStartMillis">The earliest time, in milliseconds, that the alarm should
                   be delivered, expressed in the appropriate clock's units (depending on the alarm
                   type).</param>
        <param name="windowLengthMillis">The length of the requested delivery window,
                   in milliseconds.  The alarm will be delivered no later than this many
                   milliseconds after <c>windowStartMillis</c>.  Note that this parameter
                   is a <i>duration,</i> not the timestamp of the end of the window.</param>
        <param name="tag">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="targetHandler">To be added.</param>
        <summary>Schedule an alarm to be delivered within a given window of time.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.AlarmManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.AlarmManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.AlarmManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.AlarmManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
