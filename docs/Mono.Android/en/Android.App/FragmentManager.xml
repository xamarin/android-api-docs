<Type Name="FragmentManager" FullName="Android.App.FragmentManager">
  <TypeSignature Language="C#" Value="public abstract class FragmentManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FragmentManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.FragmentManager" />
  <TypeSignature Language="F#" Value="type FragmentManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/FragmentManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/FragmentManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>Interface for interacting with <c>Fragment</c> objects inside of an
            <c>Activity</c>&lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/FragmentManager" title="Reference documentation">Java documentation for <code>android.app.FragmentManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FragmentManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.FragmentManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.FragmentManager" Usage="new Android.App.FragmentManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnBackStackChangedListener">
      <MemberSignature Language="C#" Value="public abstract void AddOnBackStackChangedListener (Android.App.FragmentManager.IOnBackStackChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnBackStackChangedListener(class Android.App.FragmentManager/IOnBackStackChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.AddOnBackStackChangedListener(Android.App.FragmentManager.IOnBackStackChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnBackStackChangedListener : Android.App.FragmentManager.IOnBackStackChangedListener -&gt; unit" Usage="fragmentManager.AddOnBackStackChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnBackStackChangedListener", "(Landroid/app/FragmentManager$OnBackStackChangedListener;)V", "GetAddOnBackStackChangedListener_Landroid_app_FragmentManager_OnBackStackChangedListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnBackStackChangedListener", "(Landroid/app/FragmentManager$OnBackStackChangedListener;)V", "GetAddOnBackStackChangedListener_Landroid_app_FragmentManager_OnBackStackChangedListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.FragmentManager+IOnBackStackChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Add a new listener for changes to the fragment back stack.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#addOnBackStackChangedListener(android.app.OnBackStackChangedListener)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.addOnBackStackChangedListener(android.app.OnBackStackChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BackStackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackStackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackStackChanged" />
      <MemberSignature Language="DocId" Value="E:Android.App.FragmentManager.BackStackChanged" />
      <MemberSignature Language="F#" Value="member this.BackStackChanged : EventHandler " Usage="member this.BackStackChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackStackEntryCount">
      <MemberSignature Language="C#" Value="public abstract int BackStackEntryCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BackStackEntryCount" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.BackStackEntryCount" />
      <MemberSignature Language="F#" Value="member this.BackStackEntryCount : int" Usage="Android.App.FragmentManager.BackStackEntryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackStackEntryCount", "()I", "GetGetBackStackEntryCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackStackEntryCount", "()I", "GetGetBackStackEntryCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of entries currently in the back stack.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public abstract Android.App.FragmentTransaction? BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.FragmentTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.BeginTransaction" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction : unit -&gt; Android.App.FragmentTransaction" Usage="fragmentManager.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beginTransaction", "()Landroid/app/FragmentTransaction;", "GetBeginTransactionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beginTransaction", "()Landroid/app/FragmentTransaction;", "GetBeginTransactionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.FragmentTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start a series of edit operations on the Fragments associated with
            this FragmentManager.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#beginTransaction()" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.beginTransaction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public abstract void Dump (string? prefix, Java.IO.FileDescriptor? fd, Java.IO.PrintWriter? writer, string[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(string prefix, class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter writer, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.Dump(System.String,Java.IO.FileDescriptor,Java.IO.PrintWriter,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Dump : string * Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit" Usage="fragmentManager.Dump (prefix, fd, writer, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="writer" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="prefix">Text to print at the front of each line.</param>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="writer">A PrintWriter to which the dump is to be set.</param>
        <param name="args">Additional arguments to the dump request.</param>
        <summary>Print the FragmentManager's state into the given stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#dump(java.lang.String,%20java.io.FileDescriptor,%20java.io.PrintWriter,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="EnableDebugLogging">
      <MemberSignature Language="C#" Value="public static void EnableDebugLogging (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableDebugLogging(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.EnableDebugLogging(System.Boolean)" />
      <MemberSignature Language="F#" Value="static member EnableDebugLogging : bool -&gt; unit" Usage="Android.App.FragmentManager.EnableDebugLogging enabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enableDebugLogging", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enableDebugLogging", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>Control whether the framework's internal fragment manager debugging
            logs are turned on.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#enableDebugLogging(boolean)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.enableDebugLogging(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ExecutePendingTransactions">
      <MemberSignature Language="C#" Value="public abstract bool ExecutePendingTransactions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExecutePendingTransactions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.ExecutePendingTransactions" />
      <MemberSignature Language="F#" Value="abstract member ExecutePendingTransactions : unit -&gt; bool" Usage="fragmentManager.ExecutePendingTransactions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("executePendingTransactions", "()Z", "GetExecutePendingTransactionsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("executePendingTransactions", "()Z", "GetExecutePendingTransactionsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>After a <c>FragmentTransaction</c> is committed with
            <c>FragmentTransaction#commit FragmentTransaction.commit()</c>, it
            is scheduled to be executed asynchronously on the process's main thread.</summary>
        <returns>Returns true if there were any pending transactions to be
            executed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#executePendingTransactions()" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.executePendingTransactions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FindFragmentById">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment? FindFragmentById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment FindFragmentById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.FindFragmentById(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FindFragmentById : int -&gt; Android.App.Fragment" Usage="fragmentManager.FindFragmentById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findFragmentById", "(I)Landroid/app/Fragment;", "GetFindFragmentById_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findFragmentById", "(I)Landroid/app/Fragment;", "GetFindFragmentById_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Finds a fragment that was identified by the given id either when inflated
            from XML or as the container ID when added in a transaction.</summary>
        <returns>The fragment if found or null otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#findFragmentById(int)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.findFragmentById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FindFragmentById&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T FindFragmentById&lt;T&gt; (int id) where T : Android.App.Fragment;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindFragmentById&lt;(class Android.App.Fragment) T&gt;(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.FindFragmentById``1(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.FindFragmentById : int -&gt; 'T (requires 'T :&gt; Android.App.Fragment)" Usage="fragmentManager.FindFragmentById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNull]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNull&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.App.Fragment</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFragmentByTag">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment? FindFragmentByTag (string? tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment FindFragmentByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.FindFragmentByTag(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FindFragmentByTag : string -&gt; Android.App.Fragment" Usage="fragmentManager.FindFragmentByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findFragmentByTag", "(Ljava/lang/String;)Landroid/app/Fragment;", "GetFindFragmentByTag_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findFragmentByTag", "(Ljava/lang/String;)Landroid/app/Fragment;", "GetFindFragmentByTag_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <summary>Finds a fragment that was identified by the given tag either when inflated
            from XML or as supplied when added in a transaction.</summary>
        <returns>The fragment if found or null otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#findFragmentByTag(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.findFragmentByTag(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FindFragmentByTag&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T FindFragmentByTag&lt;T&gt; (string tag) where T : Android.App.Fragment;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindFragmentByTag&lt;(class Android.App.Fragment) T&gt;(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.FindFragmentByTag``1(System.String)" />
      <MemberSignature Language="F#" Value="member this.FindFragmentByTag : string -&gt; 'T (requires 'T :&gt; Android.App.Fragment)" Usage="fragmentManager.FindFragmentByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNull]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNull&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.App.Fragment</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="tag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragments">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.App.Fragment&gt;? Fragments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.Fragment&gt; Fragments" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.Fragments" />
      <MemberSignature Language="F#" Value="member this.Fragments : System.Collections.Generic.IList&lt;Android.App.Fragment&gt;" Usage="Android.App.FragmentManager.Fragments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFragments", "()Ljava/util/List;", "GetGetFragmentsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFragments", "()Ljava/util/List;", "GetGetFragmentsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Fragment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackStackEntryAt">
      <MemberSignature Language="C#" Value="public abstract Android.App.FragmentManager.IBackStackEntry? GetBackStackEntryAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.FragmentManager/IBackStackEntry GetBackStackEntryAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.GetBackStackEntryAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetBackStackEntryAt : int -&gt; Android.App.FragmentManager.IBackStackEntry" Usage="fragmentManager.GetBackStackEntryAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBackStackEntryAt", "(I)Landroid/app/FragmentManager$BackStackEntry;", "GetGetBackStackEntryAt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBackStackEntryAt", "(I)Landroid/app/FragmentManager$BackStackEntry;", "GetGetBackStackEntryAt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.FragmentManager+IBackStackEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Return the BackStackEntry at index &lt;var&gt;index&lt;/var&gt; in the back stack;
            where the item on the bottom of the stack has index 0.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#getBackStackEntryAt(int)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.getBackStackEntryAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetFragment">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment? GetFragment (Android.OS.Bundle? bundle, string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment GetFragment(class Android.OS.Bundle bundle, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.GetFragment(Android.OS.Bundle,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetFragment : Android.OS.Bundle * string -&gt; Android.App.Fragment" Usage="fragmentManager.GetFragment (bundle, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFragment", "(Landroid/os/Bundle;Ljava/lang/String;)Landroid/app/Fragment;", "GetGetFragment_Landroid_os_Bundle_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFragment", "(Landroid/os/Bundle;Ljava/lang/String;)Landroid/app/Fragment;", "GetGetFragment_Landroid_os_Bundle_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bundle">The bundle from which to retrieve the fragment reference.</param>
        <param name="key">The name of the entry in the bundle.</param>
        <summary>Retrieve the current Fragment instance for a reference previously
            placed with <c>#putFragment(Bundle, String, Fragment)</c>.</summary>
        <returns>Returns the current Fragment instance that is associated with
            the given reference.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#getFragment(android.os.Bundle,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.getFragment(android.os.Bundle, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetFragment&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetFragment&lt;T&gt; (Android.OS.Bundle bundle, string key) where T : Android.App.Fragment;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetFragment&lt;(class Android.App.Fragment) T&gt;(class Android.OS.Bundle bundle, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.GetFragment``1(Android.OS.Bundle,System.String)" />
      <MemberSignature Language="F#" Value="member this.GetFragment : Android.OS.Bundle * string -&gt; 'T (requires 'T :&gt; Android.App.Fragment)" Usage="fragmentManager.GetFragment (bundle, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.MaybeNull]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.MaybeNull&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.App.Fragment</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="bundle">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void InvalidateOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateOptionsMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.InvalidateOptionsMenu" />
      <MemberSignature Language="F#" Value="abstract member InvalidateOptionsMenu : unit -&gt; unit&#xA;override this.InvalidateOptionsMenu : unit -&gt; unit" Usage="fragmentManager.InvalidateOptionsMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidateOptionsMenu", "()V", "GetInvalidateOptionsMenuHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidateOptionsMenu", "()V", "GetInvalidateOptionsMenuHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidate the attached activity's options menu as necessary.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#invalidateOptionsMenu()" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.invalidateOptionsMenu()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public abstract bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.IsDestroyed" />
      <MemberSignature Language="F#" Value="member this.IsDestroyed : bool" Usage="Android.App.FragmentManager.IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the final <see cref="M:Android.App.Activity.OnDestroy" />
 call has been made on the FragmentManager's Activity, so this instance is now dead.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsStateSaved">
      <MemberSignature Language="C#" Value="public abstract bool IsStateSaved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStateSaved" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.IsStateSaved" />
      <MemberSignature Language="F#" Value="member this.IsStateSaved : bool" Usage="Android.App.FragmentManager.IsStateSaved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStateSaved", "()Z", "GetIsStateSavedHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStateSaved", "()Z", "GetIsStateSavedHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.FragmentManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBackStack">
      <MemberSignature Language="C#" Value="public abstract void PopBackStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopBackStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PopBackStack" />
      <MemberSignature Language="F#" Value="abstract member PopBackStack : unit -&gt; unit" Usage="fragmentManager.PopBackStack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("popBackStack", "()V", "GetPopBackStackHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("popBackStack", "()V", "GetPopBackStackHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pop the top state off the back stack.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#popBackStack()" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.popBackStack()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStack">
      <MemberSignature Language="C#" Value="public abstract void PopBackStack (int id, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopBackStack(int32 id, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PopBackStack(System.Int32,Android.App.PopBackStackFlags)" />
      <MemberSignature Language="F#" Value="abstract member PopBackStack : int * Android.App.PopBackStackFlags -&gt; unit" Usage="fragmentManager.PopBackStack (id, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("popBackStack", "(II)V", "GetPopBackStack_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("popBackStack", "(II)V", "GetPopBackStack_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">Identifier of the stated to be popped. If no identifier exists,
            false is returned.
            The identifier is the number returned by
            <c>FragmentTransaction#commit() FragmentTransaction.commit()</c>.  The
            <c>#POP_BACK_STACK_INCLUSIVE</c> flag can be used to control whether
            the named state itself is popped.</param>
        <param name="flags">Either 0 or <c>#POP_BACK_STACK_INCLUSIVE</c>.</param>
        <summary>Pop all back stack states up to the one with the given identifier.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#popBackStack(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.popBackStack(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStack">
      <MemberSignature Language="C#" Value="public abstract void PopBackStack (string? name, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopBackStack(string name, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PopBackStack(System.String,Android.App.PopBackStackFlags)" />
      <MemberSignature Language="F#" Value="abstract member PopBackStack : string * Android.App.PopBackStackFlags -&gt; unit" Usage="fragmentManager.PopBackStack (name, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("popBackStack", "(Ljava/lang/String;I)V", "GetPopBackStack_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("popBackStack", "(Ljava/lang/String;I)V", "GetPopBackStack_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">If non-null, this is the name of a previous back state
            to look for; if found, all states up to that state will be popped.  The
            <c>#POP_BACK_STACK_INCLUSIVE</c> flag can be used to control whether
            the named state itself is popped. If null, only the top state is popped.</param>
        <param name="flags">Either 0 or <c>#POP_BACK_STACK_INCLUSIVE</c>.</param>
        <summary>Pop the last fragment transition from the manager's fragment
            back stack.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#popBackStack(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.popBackStack(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackImmediate">
      <MemberSignature Language="C#" Value="public abstract bool PopBackStackImmediate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopBackStackImmediate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PopBackStackImmediate" />
      <MemberSignature Language="F#" Value="abstract member PopBackStackImmediate : unit -&gt; bool" Usage="fragmentManager.PopBackStackImmediate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("popBackStackImmediate", "()Z", "GetPopBackStackImmediateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("popBackStackImmediate", "()Z", "GetPopBackStackImmediateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Like <c>#popBackStack()</c>, but performs the operation immediately
            inside of the call.</summary>
        <returns>Returns true if there was something popped, else false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#popBackStackImmediate()" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.popBackStackImmediate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackImmediate">
      <MemberSignature Language="C#" Value="public abstract bool PopBackStackImmediate (int id, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopBackStackImmediate(int32 id, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PopBackStackImmediate(System.Int32,Android.App.PopBackStackFlags)" />
      <MemberSignature Language="F#" Value="abstract member PopBackStackImmediate : int * Android.App.PopBackStackFlags -&gt; bool" Usage="fragmentManager.PopBackStackImmediate (id, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("popBackStackImmediate", "(II)Z", "GetPopBackStackImmediate_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("popBackStackImmediate", "(II)Z", "GetPopBackStackImmediate_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Like <c>#popBackStack(int, int)</c>, but performs the operation immediately
            inside of the call.</summary>
        <returns>Returns true if there was something popped, else false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#popBackStackImmediate(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.popBackStackImmediate(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackImmediate">
      <MemberSignature Language="C#" Value="public abstract bool PopBackStackImmediate (string? name, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopBackStackImmediate(string name, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PopBackStackImmediate(System.String,Android.App.PopBackStackFlags)" />
      <MemberSignature Language="F#" Value="abstract member PopBackStackImmediate : string * Android.App.PopBackStackFlags -&gt; bool" Usage="fragmentManager.PopBackStackImmediate (name, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("popBackStackImmediate", "(Ljava/lang/String;I)Z", "GetPopBackStackImmediate_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("popBackStackImmediate", "(Ljava/lang/String;I)Z", "GetPopBackStackImmediate_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Like <c>#popBackStack(String, int)</c>, but performs the operation immediately
            inside of the call.</summary>
        <returns>Returns true if there was something popped, else false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#popBackStackImmediate(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.popBackStackImmediate(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackInclusive">
      <MemberSignature Language="C#" Value="public const Android.App.PopBackStackFlags PopBackStackInclusive = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PopBackStackFlags PopBackStackInclusive = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.FragmentManager.PopBackStackInclusive" />
      <MemberSignature Language="F#" Value="val mutable PopBackStackInclusive : Android.App.PopBackStackFlags" Usage="Android.App.FragmentManager.PopBackStackInclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("POP_BACK_STACK_INCLUSIVE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("POP_BACK_STACK_INCLUSIVE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.PopBackStackFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.PopBackStackFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PopBackStackFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#popBackStack(String, int)</c>
            and <c>#popBackStack(int, int)</c>: If set, and the name or ID of
            a back stack entry has been supplied, then all matching entries will
            be consumed until one that doesn't match is found or the bottom of
            the stack is reached.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#POP_BACK_STACK_INCLUSIVE" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.POP_BACK_STACK_INCLUSIVE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryNavigationFragment">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment? PrimaryNavigationFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Fragment PrimaryNavigationFragment" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.PrimaryNavigationFragment" />
      <MemberSignature Language="F#" Value="member this.PrimaryNavigationFragment : Android.App.Fragment" Usage="Android.App.FragmentManager.PrimaryNavigationFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPrimaryNavigationFragment", "()Landroid/app/Fragment;", "GetGetPrimaryNavigationFragmentHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPrimaryNavigationFragment", "()Landroid/app/Fragment;", "GetGetPrimaryNavigationFragmentHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PutFragment">
      <MemberSignature Language="C#" Value="public abstract void PutFragment (Android.OS.Bundle? bundle, string? key, Android.App.Fragment? fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutFragment(class Android.OS.Bundle bundle, string key, class Android.App.Fragment fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.PutFragment(Android.OS.Bundle,System.String,Android.App.Fragment)" />
      <MemberSignature Language="F#" Value="abstract member PutFragment : Android.OS.Bundle * string * Android.App.Fragment -&gt; unit" Usage="fragmentManager.PutFragment (bundle, key, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putFragment", "(Landroid/os/Bundle;Ljava/lang/String;Landroid/app/Fragment;)V", "GetPutFragment_Landroid_os_Bundle_Ljava_lang_String_Landroid_app_Fragment_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putFragment", "(Landroid/os/Bundle;Ljava/lang/String;Landroid/app/Fragment;)V", "GetPutFragment_Landroid_os_Bundle_Ljava_lang_String_Landroid_app_Fragment_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="fragment" Type="Android.App.Fragment" />
      </Parameters>
      <Docs>
        <param name="bundle">The bundle in which to put the fragment reference.</param>
        <param name="key">The name of the entry in the bundle.</param>
        <param name="fragment">The Fragment whose reference is to be stored.</param>
        <summary>Put a reference to a fragment in a Bundle.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#putFragment(android.os.Bundle,%20java.lang.String,%20android.app.Fragment)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.putFragment(android.os.Bundle, java.lang.String, android.app.Fragment)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RegisterFragmentLifecycleCallbacks">
      <MemberSignature Language="C#" Value="public abstract void RegisterFragmentLifecycleCallbacks (Android.App.FragmentManager.FragmentLifecycleCallbacks? cb, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterFragmentLifecycleCallbacks(class Android.App.FragmentManager/FragmentLifecycleCallbacks cb, bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.RegisterFragmentLifecycleCallbacks(Android.App.FragmentManager.FragmentLifecycleCallbacks,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member RegisterFragmentLifecycleCallbacks : Android.App.FragmentManager.FragmentLifecycleCallbacks * bool -&gt; unit" Usage="fragmentManager.RegisterFragmentLifecycleCallbacks (cb, recursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerFragmentLifecycleCallbacks", "(Landroid/app/FragmentManager$FragmentLifecycleCallbacks;Z)V", "GetRegisterFragmentLifecycleCallbacks_Landroid_app_FragmentManager_FragmentLifecycleCallbacks_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerFragmentLifecycleCallbacks", "(Landroid/app/FragmentManager$FragmentLifecycleCallbacks;Z)V", "GetRegisterFragmentLifecycleCallbacks_Landroid_app_FragmentManager_FragmentLifecycleCallbacks_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.App.FragmentManager+FragmentLifecycleCallbacks" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cb">Callbacks to register</param>
        <param name="recursive">true to automatically register this callback for all child FragmentManagers</param>
        <summary>Registers a <c>FragmentLifecycleCallbacks</c> to listen to fragment lifecycle events
            happening in this FragmentManager.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#registerFragmentLifecycleCallbacks(android.app.FragmentLifecycleCallbacks,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.registerFragmentLifecycleCallbacks(android.app.FragmentLifecycleCallbacks, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnBackStackChangedListener">
      <MemberSignature Language="C#" Value="public abstract void RemoveOnBackStackChangedListener (Android.App.FragmentManager.IOnBackStackChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnBackStackChangedListener(class Android.App.FragmentManager/IOnBackStackChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.RemoveOnBackStackChangedListener(Android.App.FragmentManager.IOnBackStackChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnBackStackChangedListener : Android.App.FragmentManager.IOnBackStackChangedListener -&gt; unit" Usage="fragmentManager.RemoveOnBackStackChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnBackStackChangedListener", "(Landroid/app/FragmentManager$OnBackStackChangedListener;)V", "GetRemoveOnBackStackChangedListener_Landroid_app_FragmentManager_OnBackStackChangedListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnBackStackChangedListener", "(Landroid/app/FragmentManager$OnBackStackChangedListener;)V", "GetRemoveOnBackStackChangedListener_Landroid_app_FragmentManager_OnBackStackChangedListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.FragmentManager+IOnBackStackChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Remove a listener that was previously added with
            <c>#addOnBackStackChangedListener(OnBackStackChangedListener)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#removeOnBackStackChangedListener(android.app.OnBackStackChangedListener)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.removeOnBackStackChangedListener(android.app.OnBackStackChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SaveFragmentInstanceState">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment.SavedState? SaveFragmentInstanceState (Android.App.Fragment? f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment/SavedState SaveFragmentInstanceState(class Android.App.Fragment f) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.SaveFragmentInstanceState(Android.App.Fragment)" />
      <MemberSignature Language="F#" Value="abstract member SaveFragmentInstanceState : Android.App.Fragment -&gt; Android.App.Fragment.SavedState" Usage="fragmentManager.SaveFragmentInstanceState f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("saveFragmentInstanceState", "(Landroid/app/Fragment;)Landroid/app/Fragment$SavedState;", "GetSaveFragmentInstanceState_Landroid_app_Fragment_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("saveFragmentInstanceState", "(Landroid/app/Fragment;)Landroid/app/Fragment$SavedState;", "GetSaveFragmentInstanceState_Landroid_app_Fragment_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment+SavedState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Android.App.Fragment" />
      </Parameters>
      <Docs>
        <param name="f">The Fragment whose state is to be saved.</param>
        <summary>Save the current instance state of the given Fragment.</summary>
        <returns>The generated state.  This will be null if there was no
            interesting state created by the fragment.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#saveFragmentInstanceState(android.app.Fragment)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.saveFragmentInstanceState(android.app.Fragment)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.FragmentManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.FragmentManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.FragmentManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterFragmentLifecycleCallbacks">
      <MemberSignature Language="C#" Value="public abstract void UnregisterFragmentLifecycleCallbacks (Android.App.FragmentManager.FragmentLifecycleCallbacks? cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterFragmentLifecycleCallbacks(class Android.App.FragmentManager/FragmentLifecycleCallbacks cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.FragmentManager.UnregisterFragmentLifecycleCallbacks(Android.App.FragmentManager.FragmentLifecycleCallbacks)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterFragmentLifecycleCallbacks : Android.App.FragmentManager.FragmentLifecycleCallbacks -&gt; unit" Usage="fragmentManager.UnregisterFragmentLifecycleCallbacks cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterFragmentLifecycleCallbacks", "(Landroid/app/FragmentManager$FragmentLifecycleCallbacks;)V", "GetUnregisterFragmentLifecycleCallbacks_Landroid_app_FragmentManager_FragmentLifecycleCallbacks_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterFragmentLifecycleCallbacks", "(Landroid/app/FragmentManager$FragmentLifecycleCallbacks;)V", "GetUnregisterFragmentLifecycleCallbacks_Landroid_app_FragmentManager_FragmentLifecycleCallbacks_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.App.FragmentManager+FragmentLifecycleCallbacks" />
      </Parameters>
      <Docs>
        <param name="cb">Callbacks to unregister</param>
        <summary>Unregisters a previously registered <c>FragmentLifecycleCallbacks</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/FragmentManager#unregisterFragmentLifecycleCallbacks(android.app.FragmentLifecycleCallbacks)" title="Reference documentation">Java documentation for <code>android.app.FragmentManager.unregisterFragmentLifecycleCallbacks(android.app.FragmentLifecycleCallbacks)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
