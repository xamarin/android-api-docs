<Type Name="FragmentManager" FullName="Android.App.FragmentManager">
  <TypeSignature Language="C#" Value="public abstract class FragmentManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FragmentManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/FragmentManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>Interface for interacting with <c><see cref="T:Android.App.Fragment" /></c> objects inside of an
 <c><see cref="T:Android.App.Activity" /></c><format type="text/html"><h3>Developer Guides</h3></format>

 While the FragmentManager API was introduced in
 <c><see cref="F:Android.OS.Build+VERSION_CODES.Honeycomb" tool="ReplaceLinkValue" /></c>, a version of the API
 at is also available for use on older platforms through
 <c><see cref="!:NoType:android/support/v4/app/FragmentActivity;Href=../../../reference/android/support/v4/app/FragmentActivity.html" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Interface for interacting with <c><see cref="T:Android.App.Fragment" /></c> objects inside of an
 <c><see cref="T:Android.App.Activity" /></c><format type="text/html"><h3>Developer Guides</h3></format>

 While the FragmentManager API was introduced in
 <c><see cref="F:Android.OS.Build+VERSION_CODES.Honeycomb" tool="ReplaceLinkValue" /></c>, a version of the API
 at is also available for use on older platforms through
 <c><see cref="!:NoType:android/support/v4/app/FragmentActivity;Href=../../../reference/android/support/v4/app/FragmentActivity.html" /></c>.  See the blog post
  for more details.
</para>
      <para tool="javadoc-to-mdoc">For more information about using fragments, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/fragments.html">Fragments</a></format> developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/FragmentManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#FragmentManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FragmentManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnBackStackChangedListener">
      <MemberSignature Language="C#" Value="public abstract void AddOnBackStackChangedListener (Android.App.FragmentManager.IOnBackStackChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnBackStackChangedListener(class Android.App.FragmentManager/IOnBackStackChangedListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnBackStackChangedListener", "(Landroid/app/FragmentManager$OnBackStackChangedListener;)V", "GetAddOnBackStackChangedListener_Landroid_app_FragmentManager_OnBackStackChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.FragmentManager+IOnBackStackChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Add a new listener for changes to the fragment back stack.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a new listener for changes to the fragment back stack.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BackStackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackStackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackStackChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackStackEntryCount">
      <MemberSignature Language="C#" Value="public abstract int BackStackEntryCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BackStackEntryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBackStackEntryCount", "()I", "GetGetBackStackEntryCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of entries currently in the back stack.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the number of entries currently in the back stack.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#getBackStackEntryCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public abstract Android.App.FragmentTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.FragmentTransaction BeginTransaction() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginTransaction", "()Landroid/app/FragmentTransaction;", "GetBeginTransactionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.FragmentTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start a series of edit operations on the Fragments associated with
 this FragmentManager.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Start a series of edit operations on the Fragments associated with
 this FragmentManager.
 
 </para>
          <para tool="javadoc-to-mdoc">Note: A fragment transaction can only be created/committed prior
 to an activity saving its state.  If you try to commit a transaction
 after <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" /></c>
 (and prior to a following <c><see cref="M:Android.App.Activity.OnStart" /></c>
 or <c><see cref="M:Android.App.Activity.OnResume" /></c>, you will get an error.
 This is because the framework takes care of saving your current fragments
 in the state, and if changes are made after the state is saved then they
 will be lost.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#beginTransaction()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public abstract void Dump (string prefix, Java.IO.FileDescriptor fd, Java.IO.PrintWriter writer, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(string prefix, class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter writer, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="writer" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="prefix">Text to print at the front of each line.</param>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="writer">A PrintWriter to which the dump is to be set.</param>
        <param name="args">Additional arguments to the dump request.
</param>
        <summary>Print the FragmentManager's state into the given stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Print the FragmentManager's state into the given stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="EnableDebugLogging">
      <MemberSignature Language="C#" Value="public static void EnableDebugLogging (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableDebugLogging(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableDebugLogging", "(Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>Control whether the framework's internal fragment manager debugging
 logs are turned on.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether the framework's internal fragment manager debugging
 logs are turned on.  If enabled, you will see output in logcat as
 the framework performs fragment operations.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#enableDebugLogging(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ExecutePendingTransactions">
      <MemberSignature Language="C#" Value="public abstract bool ExecutePendingTransactions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExecutePendingTransactions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("executePendingTransactions", "()Z", "GetExecutePendingTransactionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>After a <c><see cref="T:Android.App.FragmentTransaction" /></c> is committed with
 <c><see cref="M:Android.App.FragmentTransaction.Commit" /></c>, it
 is scheduled to be executed asynchronously on the process's main thread.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">After a <c><see cref="T:Android.App.FragmentTransaction" /></c> is committed with
 <c><see cref="M:Android.App.FragmentTransaction.Commit" /></c>, it
 is scheduled to be executed asynchronously on the process's main thread.
 If you want to immediately executing any such pending operations, you
 can call this function (only from the main thread) to do so.  Note that
 all callbacks and other related behavior will be done from within this
 call, so be careful about where this is called from.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#executePendingTransactions()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FindFragmentById">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment FindFragmentById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment FindFragmentById(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findFragmentById", "(I)Landroid/app/Fragment;", "GetFindFragmentById_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Finds a fragment that was identified by the given id either when inflated
 from XML or as the container ID when added in a transaction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds a fragment that was identified by the given id either when inflated
 from XML or as the container ID when added in a transaction.  This first
 searches through fragments that are currently added to the manager's
 activity; if no such fragment is found, then all fragments currently
 on the back stack associated with this ID are searched.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentById(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FindFragmentById&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T FindFragmentById&lt;T&gt; (int id) where T : Android.App.Fragment;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindFragmentById&lt;(class Android.App.Fragment) T&gt;(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.App.Fragment</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFragmentByTag">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment FindFragmentByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment FindFragmentByTag(string tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findFragmentByTag", "(Ljava/lang/String;)Landroid/app/Fragment;", "GetFindFragmentByTag_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <summary>Finds a fragment that was identified by the given tag either when inflated
 from XML or as supplied when added in a transaction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds a fragment that was identified by the given tag either when inflated
 from XML or as supplied when added in a transaction.  This first
 searches through fragments that are currently added to the manager's
 activity; if no such fragment is found, then all fragments currently
 on the back stack are searched.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentByTag(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FindFragmentByTag&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T FindFragmentByTag&lt;T&gt; (string tag) where T : Android.App.Fragment;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindFragmentByTag&lt;(class Android.App.Fragment) T&gt;(string tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.App.Fragment</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="tag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBackStackEntryAt">
      <MemberSignature Language="C#" Value="public abstract Android.App.FragmentManager.IBackStackEntry GetBackStackEntryAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.FragmentManager/IBackStackEntry GetBackStackEntryAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBackStackEntryAt", "(I)Landroid/app/FragmentManager$BackStackEntry;", "GetGetBackStackEntryAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.FragmentManager+IBackStackEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Return the BackStackEntry at index <format type="text/html"><var>index</var></format> in the back stack;
 where the item on the bottom of the stack has index 0.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the BackStackEntry at index <format type="text/html"><var>index</var></format> in the back stack;
 where the item on the bottom of the stack has index 0.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#getBackStackEntryAt(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetFragment">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment GetFragment (Android.OS.Bundle bundle, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment GetFragment(class Android.OS.Bundle bundle, string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFragment", "(Landroid/os/Bundle;Ljava/lang/String;)Landroid/app/Fragment;", "GetGetFragment_Landroid_os_Bundle_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bundle">The bundle from which to retrieve the fragment reference.</param>
        <param name="key">The name of the entry in the bundle.</param>
        <summary>Retrieve the current Fragment instance for a reference previously
 placed with <c><see cref="M:Android.App.FragmentManager.PutFragment(Android.OS.Bundle,System.String,System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the current Fragment instance for a reference previously
 placed with <c><see cref="M:Android.App.FragmentManager.PutFragment(Android.OS.Bundle,System.String,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#getFragment(android.os.Bundle, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetFragment&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetFragment&lt;T&gt; (Android.OS.Bundle bundle, string key) where T : Android.App.Fragment;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetFragment&lt;(class Android.App.Fragment) T&gt;(class Android.OS.Bundle bundle, string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.App.Fragment</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="bundle">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void InvalidateOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateOptionsMenu() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateOptionsMenu", "()V", "GetInvalidateOptionsMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidate the attached activity's options menu as necessary.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invalidate the attached activity's options menu as necessary.
 This may end up being deferred until we move to the resumed state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#invalidateOptionsMenu()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public abstract bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the final <c><see cref="M:Android.App.Activity.OnDestroy" /></c>
 call has been made on the FragmentManager's Activity, so this instance is now dead.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the final <c><see cref="M:Android.App.Activity.OnDestroy" /></c>
 call has been made on the FragmentManager's Activity, so this instance is now dead.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#isDestroyed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStack">
      <MemberSignature Language="C#" Value="public abstract void PopBackStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopBackStack() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("popBackStack", "()V", "GetPopBackStackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Pop the top state off the back stack.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pop the top state off the back stack.  This function is asynchronous -- it
 enqueues the request to pop, but the action will not be performed until the
 application returns to its event loop.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStack()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStack">
      <MemberSignature Language="C#" Value="public abstract void PopBackStack (int id, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopBackStack(int32 id, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("popBackStack", "(II)V", "GetPopBackStack_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">Identifier of the stated to be popped. If no identifier exists,
 false is returned.
 The identifier is the number returned by
 <c><see cref="M:Android.App.FragmentTransaction.Commit" /></c>.  The
 <c><see cref="F:Android.App.FragmentManager.PopBackStackInclusive" /></c> flag can be used to control whether
 the named state itself is popped.</param>
        <param name="flags">Either 0 or <c><see cref="F:Android.App.FragmentManager.PopBackStackInclusive" /></c>.
</param>
        <summary>Pop all back stack states up to the one with the given identifier.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pop all back stack states up to the one with the given identifier.
 This function is asynchronous -- it enqueues the
 request to pop, but the action will not be performed until the application
 returns to its event loop.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStack(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStack">
      <MemberSignature Language="C#" Value="public abstract void PopBackStack (string name, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PopBackStack(string name, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("popBackStack", "(Ljava/lang/String;I)V", "GetPopBackStack_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">If non-null, this is the name of a previous back state
 to look for; if found, all states up to that state will be popped.  The
 <c><see cref="F:Android.App.FragmentManager.PopBackStackInclusive" /></c> flag can be used to control whether
 the named state itself is popped. If null, only the top state is popped.</param>
        <param name="flags">Either 0 or <c><see cref="F:Android.App.FragmentManager.PopBackStackInclusive" /></c>.
</param>
        <summary>Pop the last fragment transition from the manager's fragment
 back stack.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pop the last fragment transition from the manager's fragment
 back stack.  If there is nothing to pop, false is returned.
 This function is asynchronous -- it enqueues the
 request to pop, but the action will not be performed until the application
 returns to its event loop.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStack(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackImmediate">
      <MemberSignature Language="C#" Value="public abstract bool PopBackStackImmediate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopBackStackImmediate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("popBackStackImmediate", "()Z", "GetPopBackStackImmediateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Like <c><see cref="M:Android.App.FragmentManager.PopBackStack" /></c>, but performs the operation immediately
 inside of the call.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.App.FragmentManager.PopBackStack" /></c>, but performs the operation immediately
 inside of the call.  This is like calling <c><see cref="M:Android.App.FragmentManager.ExecutePendingTransactions" /></c>
 afterwards.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStackImmediate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackImmediate">
      <MemberSignature Language="C#" Value="public abstract bool PopBackStackImmediate (int id, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopBackStackImmediate(int32 id, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("popBackStackImmediate", "(II)Z", "GetPopBackStackImmediate_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Like <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.Int32,Android.App.PopBackStackFlags)" /></c>, but performs the operation immediately
 inside of the call.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.Int32,Android.App.PopBackStackFlags)" /></c>, but performs the operation immediately
 inside of the call.  This is like calling <c><see cref="M:Android.App.FragmentManager.ExecutePendingTransactions" /></c>
 afterwards.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStackImmediate(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackImmediate">
      <MemberSignature Language="C#" Value="public abstract bool PopBackStackImmediate (string name, Android.App.PopBackStackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopBackStackImmediate(string name, valuetype Android.App.PopBackStackFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("popBackStackImmediate", "(Ljava/lang/String;I)Z", "GetPopBackStackImmediate_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.PopBackStackFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Like <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.String,Android.App.PopBackStackFlags)" /></c>, but performs the operation immediately
 inside of the call.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.String,Android.App.PopBackStackFlags)" /></c>, but performs the operation immediately
 inside of the call.  This is like calling <c><see cref="M:Android.App.FragmentManager.ExecutePendingTransactions" /></c>
 afterwards.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStackImmediate(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PopBackStackInclusive">
      <MemberSignature Language="C#" Value="public const Android.App.PopBackStackFlags PopBackStackInclusive = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.PopBackStackFlags PopBackStackInclusive = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("POP_BACK_STACK_INCLUSIVE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.PopBackStackFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PopBackStackFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.String,Android.App.PopBackStackFlags)" /></c>
 and <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.Int32,Android.App.PopBackStackFlags)" /></c>: If set, and the name or ID of
 a back stack entry has been supplied, then all matching entries will
 be consumed until one that doesn't match is found or the bottom of
 the stack is reached.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.String,Android.App.PopBackStackFlags)" /></c>
 and <c><see cref="M:Android.App.FragmentManager.PopBackStack(System.Int32,Android.App.PopBackStackFlags)" /></c>: If set, and the name or ID of
 a back stack entry has been supplied, then all matching entries will
 be consumed until one that doesn't match is found or the bottom of
 the stack is reached.  Otherwise, all entries up to but not including that entry
 will be removed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#POP_BACK_STACK_INCLUSIVE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PutFragment">
      <MemberSignature Language="C#" Value="public abstract void PutFragment (Android.OS.Bundle bundle, string key, Android.App.Fragment fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutFragment(class Android.OS.Bundle bundle, string key, class Android.App.Fragment fragment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putFragment", "(Landroid/os/Bundle;Ljava/lang/String;Landroid/app/Fragment;)V", "GetPutFragment_Landroid_os_Bundle_Ljava_lang_String_Landroid_app_Fragment_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="fragment" Type="Android.App.Fragment" />
      </Parameters>
      <Docs>
        <param name="bundle">The bundle in which to put the fragment reference.</param>
        <param name="key">The name of the entry in the bundle.</param>
        <param name="fragment">The Fragment whose reference is to be stored.
</param>
        <summary>Put a reference to a fragment in a Bundle.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Put a reference to a fragment in a Bundle.  This Bundle can be
 persisted as saved state, and when later restoring
 <c><see cref="M:Android.App.FragmentManager.GetFragment(Android.OS.Bundle,System.String)" /></c> will return the current
 instance of the same fragment.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#putFragment(android.os.Bundle, java.lang.String, android.app.Fragment)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnBackStackChangedListener">
      <MemberSignature Language="C#" Value="public abstract void RemoveOnBackStackChangedListener (Android.App.FragmentManager.IOnBackStackChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnBackStackChangedListener(class Android.App.FragmentManager/IOnBackStackChangedListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnBackStackChangedListener", "(Landroid/app/FragmentManager$OnBackStackChangedListener;)V", "GetRemoveOnBackStackChangedListener_Landroid_app_FragmentManager_OnBackStackChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.FragmentManager+IOnBackStackChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Remove a listener that was previously added with
 <c><see cref="M:Android.App.FragmentManager.AddOnBackStackChangedListener(.IOnBackStackChangedListener)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a listener that was previously added with
 <c><see cref="M:Android.App.FragmentManager.AddOnBackStackChangedListener(.IOnBackStackChangedListener)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SaveFragmentInstanceState">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment.SavedState SaveFragmentInstanceState (Android.App.Fragment f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment/SavedState SaveFragmentInstanceState(class Android.App.Fragment f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("saveFragmentInstanceState", "(Landroid/app/Fragment;)Landroid/app/Fragment$SavedState;", "GetSaveFragmentInstanceState_Landroid_app_Fragment_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment+SavedState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Android.App.Fragment" />
      </Parameters>
      <Docs>
        <param name="f">The Fragment whose state is to be saved.</param>
        <summary>Save the current instance state of the given Fragment.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Save the current instance state of the given Fragment.  This can be
 used later when creating a new instance of the Fragment and adding
 it to the fragment manager, to have it create itself to match the
 current state returned here.  Note that there are limits on how
 this can be used:

 <list type="bullet"><item><term>The Fragment must currently be attached to the FragmentManager.
 </term></item><item><term>A new Fragment created using this saved state must be the same class
 type as the Fragment it was created from.
 </term></item><item><term>The saved state can not contain dependencies on other fragments --
 that is it can't use <c><see cref="M:Android.App.FragmentManager.PutFragment(Android.OS.Bundle,System.String,System.String)" /></c> to
 store a fragment reference because that reference may not be valid when
 this saved state is later used.  Likewise the Fragment's target and
 result code are not included in this state.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/FragmentManager.html#saveFragmentInstanceState(android.app.Fragment)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
