<Type Name="ActionBar" FullName="Android.App.ActionBar">
  <TypeSignature Language="C#" Value="public abstract class ActionBar : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ActionBar extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/ActionBar", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>A primary toolbar within the activity that may display the activity title, application-level
 navigation affordances, and other interactive items.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A primary toolbar within the activity that may display the activity title, application-level
 navigation affordances, and other interactive items.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">Beginning with Android 3.0 (API level 11), the action bar appears at the top of an
 activity's window when the activity uses the system's <c><see cref="!:NoType:android/R$style;Href=../../../reference/android/R.style.html#Theme_Holo" /></c> theme (or one of its descendant themes), which is the default.
 You may otherwise add the action bar by calling <c><see cref="M:Android.Views.Window.RequestFeature(Android.Views.WindowFeatures)" /></c> or by declaring it in a
 custom theme with the <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#Theme_windowActionBar" /></c> property.
 </para>
      <para tool="javadoc-to-mdoc">Beginning with Android L (API level 21), the action bar may be represented by any
 Toolbar widget within the application layout. The application may signal to the Activity
 which Toolbar should be treated as the Activity's action bar. Activities that use this
 feature should use one of the supplied <c>.NoActionBar</c> themes, set the
 <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#Theme_windowActionBar" /></c> attribute to <c>false</c>
 or otherwise not request the window feature.</para>
      <para tool="javadoc-to-mdoc">By adjusting the window features requested by the theme and the layouts used for
 an Activity's content view, an app can use the standard system action bar on older platform
 releases and the newer inline toolbars on newer platform releases. The <c>ActionBar</c>
 object obtained from the Activity can be used to control either configuration transparently.</para>
      <para tool="javadoc-to-mdoc">When using the Holo themes the action bar shows the application icon on
 the left, followed by the activity title. If your activity has an options menu, you can make
 select items accessible directly from the action bar as "action items". You can also
 modify various characteristics of the action bar or remove it completely.</para>
      <para tool="javadoc-to-mdoc">When using the Material themes (default in API 21 or newer) the navigation button
 (formerly "Home") takes over the space previously occupied by the application icon.
 Apps wishing to express a stronger branding should use their brand colors heavily
 in the action bar and other application chrome or use a <c><see cref="M:Android.App.ActionBar.SetLogo(System.Int32)" /></c>
 in place of their standard title text.</para>
      <para tool="javadoc-to-mdoc">From your activity, you can retrieve an instance of <c><see cref="T:Android.App.ActionBar" /></c> by calling <c><see cref="P:Android.App.Activity.ActionBar" /></c>.</para>
      <para tool="javadoc-to-mdoc">In some cases, the action bar may be overlayed by another bar that enables contextual actions,
 using an <c><see cref="T:Android.Views.ActionMode" /></c>. For example, when the user selects one or more items in
 your activity, you can enable an action mode that offers actions specific to the selected
 items, with a UI that temporarily replaces the action bar. Although the UI may occupy the
 same space, the <c><see cref="T:Android.Views.ActionMode" /></c> APIs are distinct and independent from those for
 <c><see cref="T:Android.App.ActionBar" /></c>.</para>
      <para tool="javadoc-to-mdoc">For information about how to use the action bar, including how to add action items, navigation
 modes and more, read the <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/ui/actionbar.html">Action
 Bar</a></format> developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/ActionBar.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#ActionBar()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ActionBar (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnMenuVisibilityListener">
      <MemberSignature Language="C#" Value="public abstract void AddOnMenuVisibilityListener (Android.App.ActionBar.IOnMenuVisibilityListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnMenuVisibilityListener(class Android.App.ActionBar/IOnMenuVisibilityListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnMenuVisibilityListener", "(Landroid/app/ActionBar$OnMenuVisibilityListener;)V", "GetAddOnMenuVisibilityListener_Landroid_app_ActionBar_OnMenuVisibilityListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.ActionBar+IOnMenuVisibilityListener" />
      </Parameters>
      <Docs>
        <param name="listener">The new listener to add
</param>
        <summary>Add a listener that will respond to menu visibility change events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a listener that will respond to menu visibility change events.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddTab">
      <MemberSignature Language="C#" Value="public abstract void AddTab (Android.App.ActionBar.Tab tab);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTab(class Android.App.ActionBar/Tab tab) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTab", "(Landroid/app/ActionBar$Tab;)V", "GetAddTab_Landroid_app_ActionBar_Tab_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tab" Type="Android.App.ActionBar+Tab" />
      </Parameters>
      <Docs>
        <param name="tab">Tab to add</param>
        <summary>Add a tab for use in tabbed navigation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a tab for use in tabbed navigation mode. The tab will be added at the end of the list.
 If this is the first tab to be added it will become the selected tab.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#addTab(android.app.ActionBar.Tab)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddTab">
      <MemberSignature Language="C#" Value="public abstract void AddTab (Android.App.ActionBar.Tab tab, bool setSelected);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTab(class Android.App.ActionBar/Tab tab, bool setSelected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTab", "(Landroid/app/ActionBar$Tab;Z)V", "GetAddTab_Landroid_app_ActionBar_Tab_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tab" Type="Android.App.ActionBar+Tab" />
        <Parameter Name="setSelected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tab">Tab to add</param>
        <param name="setSelected">True if the added tab should become the selected tab.</param>
        <summary>Add a tab for use in tabbed navigation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a tab for use in tabbed navigation mode. The tab will be added at the end of the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#addTab(android.app.ActionBar.Tab, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddTab">
      <MemberSignature Language="C#" Value="public abstract void AddTab (Android.App.ActionBar.Tab tab, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTab(class Android.App.ActionBar/Tab tab, int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTab", "(Landroid/app/ActionBar$Tab;I)V", "GetAddTab_Landroid_app_ActionBar_Tab_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tab" Type="Android.App.ActionBar+Tab" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tab">The tab to add</param>
        <param name="position">The new position of the tab</param>
        <summary>Add a tab for use in tabbed navigation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a tab for use in tabbed navigation mode. The tab will be inserted at
 <c>position</c>. If this is the first tab to be added it will become
 the selected tab.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#addTab(android.app.ActionBar.Tab, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddTab">
      <MemberSignature Language="C#" Value="public abstract void AddTab (Android.App.ActionBar.Tab tab, int position, bool setSelected);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTab(class Android.App.ActionBar/Tab tab, int32 position, bool setSelected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTab", "(Landroid/app/ActionBar$Tab;IZ)V", "GetAddTab_Landroid_app_ActionBar_Tab_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tab" Type="Android.App.ActionBar+Tab" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="setSelected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tab">The tab to add</param>
        <param name="position">The new position of the tab</param>
        <param name="setSelected">True if the added tab should become the selected tab.</param>
        <summary>Add a tab for use in tabbed navigation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a tab for use in tabbed navigation mode. The tab will be insterted at
 <c>position</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#addTab(android.app.ActionBar.Tab, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CustomView">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View CustomView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View CustomView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCustomView", "()Landroid/view/View;", "GetGetCustomViewHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCustomView", "(Landroid/view/View;)V", "GetSetCustomView_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getCustomView()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setCustomView(android.view.View)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the action bar into custom navigation mode, supplying a view
 for custom navigation.

 Custom navigation views appear between the application icon and
 any action buttons and may use any space available there. Common
 use cases for custom navigation views might include an auto-suggesting
 address bar for a browser or other navigation mechanisms that do not
 translate well to provided navigation modes.</para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DisplayOptions">
      <MemberSignature Language="C#" Value="public abstract Android.App.ActionBarDisplayOptions DisplayOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.ActionBarDisplayOptions DisplayOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplayOptions", "()I", "GetGetDisplayOptionsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDisplayOptions", "(I)V", "GetSetDisplayOptions_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActionBarDisplayOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getDisplayOptions()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayOptions(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set display options. This changes all display option bits at once. To change
 a limited subset of display options, see <c><see cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions,Android.App.ActionBarDisplayOptions)" /></c>.</para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public virtual float Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElevation", "()F", "GetGetElevationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the Z-axis elevation of the action bar in pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getElevation()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the Z-axis elevation of the action bar in pixels.

 </para>
          <para tool="javadoc-to-mdoc">The action bar's elevation is the distance it is placed from its parent surface. Higher
 values are closer to the user.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setElevation(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the Z-axis elevation of the action bar in pixels.

 </para>
          <para tool="javadoc-to-mdoc">The action bar's elevation is the distance it is placed from its parent surface. Higher
 values are closer to the user.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTabAt">
      <MemberSignature Language="C#" Value="public abstract Android.App.ActionBar.Tab GetTabAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActionBar/Tab GetTabAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTabAt", "(I)Landroid/app/ActionBar$Tab;", "GetGetTabAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActionBar+Tab</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index value in the range 0-get</param>
        <summary>Returns the tab at the specified index.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the tab at the specified index.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getTabAt(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public abstract int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current height of the ActionBar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the current height of the ActionBar.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public abstract void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Hide() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hide", "()V", "GetHideHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hide the ActionBar if it is currently showing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Hide the ActionBar if it is currently showing.
 If the window hosting the ActionBar does not have the feature
 <c><see cref="!:Android.Views.Window.FEATURE_ACTION_BAR_OVERLAY" /></c> it will resize application
 content to fit the new space available.

 </para>
          <para tool="javadoc-to-mdoc">Instead of calling this function directly, you can also cause an
 ActionBar using the overlay feature to hide through
 <c><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></c>.
 Hiding the ActionBar through this system UI flag allows you to more
 seamlessly hide it in conjunction with other screen decorations.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#hide()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HideOffset">
      <MemberSignature Language="C#" Value="public virtual int HideOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HideOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHideOffset", "()I", "GetGetHideOffsetHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHideOffset", "(I)V", "GetSetHideOffset_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current vertical offset of the action bar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getHideOffset()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the current vertical offset of the action bar.

 </para>
          <para tool="javadoc-to-mdoc">The action bar's current hide offset is the distance that the action bar is currently
 scrolled offscreen in pixels. The valid range is 0 (fully visible) to the action bar's
 current measured <c><see cref="P:Android.App.ActionBar.Height" /></c> (fully invisible).</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHideOffset(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the current hide offset of the action bar.

 </para>
          <para tool="javadoc-to-mdoc">The action bar's current hide offset is the distance that the action bar is currently
 scrolled offscreen in pixels. The valid range is 0 (fully visible) to the action bar's
 current measured <c><see cref="P:Android.App.ActionBar.Height" /></c> (fully invisible).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideOnContentScrollEnabled">
      <MemberSignature Language="C#" Value="public virtual bool HideOnContentScrollEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideOnContentScrollEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHideOnContentScrollEnabled", "()Z", "GetIsHideOnContentScrollEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHideOnContentScrollEnabled", "(Z)V", "GetSetHideOnContentScrollEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the action bar is configured to scroll out of sight along with
 a <c><see cref="P:Android.Views.View.NestedScrollingEnabled" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#isHideOnContentScrollEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return whether the action bar is configured to scroll out of sight along with
 a <c><see cref="P:Android.Views.View.NestedScrollingEnabled" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHideOnContentScrollEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Enable hiding the action bar on content scroll.

 </para>
          <para tool="javadoc-to-mdoc">If enabled, the action bar will scroll out of sight along with a
 <c><see cref="P:Android.Views.View.NestedScrollingEnabled" /></c> view's content.
 The action bar must be in <c><see cref="!:Android.Views.Window.FEATURE_ACTION_BAR_OVERLAY" /></c>
 to enable hiding on content scroll.</para>
          <para tool="javadoc-to-mdoc">When partially scrolled off screen the action bar is considered
 <c><see cref="M:Android.App.ActionBar.Hide" /></c>. A call to <c><see cref="M:Android.App.ActionBar.Show" /></c> will cause it to return to full view.
 </para>
        </remarks>
        <altmember cref="P:Android.App.ActionBar.HideOnContentScrollEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsShowing">
      <MemberSignature Language="C#" Value="public abstract bool IsShowing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShowing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isShowing", "()Z", "GetIsShowingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#isShowing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MenuVisibility">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.App.ActionBar.MenuVisibilityEventArgs&gt; MenuVisibility;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.App.ActionBar/MenuVisibilityEventArgs&gt; MenuVisibility" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.App.ActionBar+MenuVisibilityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationItemCount">
      <MemberSignature Language="C#" Value="public abstract int NavigationItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NavigationItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNavigationItemCount", "()I", "GetGetNavigationItemCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the number of navigation items present in the current navigation mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the number of navigation items present in the current navigation mode.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getNavigationItemCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NavigationMode">
      <MemberSignature Language="C#" Value="public abstract Android.App.ActionBarNavigationMode NavigationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.ActionBarNavigationMode NavigationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNavigationMode", "()I", "GetGetNavigationModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNavigationMode", "(I)V", "GetSetNavigationMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActionBarNavigationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current navigation mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getNavigationMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current navigation mode. The result will be one of:
 <list type="bullet"><item><term><c><see cref="!:Android.App.ActionBar.NAVIGATION_MODE_STANDARD" /></c></term></item><item><term><c><see cref="!:Android.App.ActionBar.NAVIGATION_MODE_LIST" /></c></term></item><item><term><c><see cref="!:Android.App.ActionBar.NAVIGATION_MODE_TABS" /></c></term></item></list></para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setNavigationMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the current navigation mode.</para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NewTab">
      <MemberSignature Language="C#" Value="public abstract Android.App.ActionBar.Tab NewTab ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.ActionBar/Tab NewTab() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTab", "()Landroid/app/ActionBar$Tab;", "GetNewTabHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActionBar+Tab</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create and return a new <c><see cref="!:NoType:android/app/ActionBar$Tab;Href=../../../reference/android/app/ActionBar.Tab.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create and return a new <c><see cref="!:NoType:android/app/ActionBar$Tab;Href=../../../reference/android/app/ActionBar.Tab.html" /></c>.
 This tab will not be included in the action bar until it is added.

 <example><code lang="java">import android.app.ActionBar;
import android.app.ActionBar.Tab;
import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentTransaction;
import android.os.Bundle;
import android.widget.Toast;

/**
 * This demonstrates the use of action bar tabs and how they interact
 * with other action bar features.
 */
public class FragmentTabs extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        final ActionBar bar = getActionBar();
        bar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
        bar.setDisplayOptions(0, ActionBar.DISPLAY_SHOW_TITLE);

        bar.addTab(bar.newTab()
                .setText("Simple")
                .setTabListener(new TabListener&lt;FragmentStack.CountingFragment&gt;(
                        this, "simple", FragmentStack.CountingFragment.class)));
        bar.addTab(bar.newTab()
                .setText("Contacts")
                .setTabListener(new TabListener&lt;LoaderCursor.CursorLoaderListFragment&gt;(
                        this, "contacts", LoaderCursor.CursorLoaderListFragment.class)));
        bar.addTab(bar.newTab()
                .setText("Apps")
                .setTabListener(new TabListener&lt;LoaderCustom.AppListFragment&gt;(
                        this, "apps", LoaderCustom.AppListFragment.class)));
        bar.addTab(bar.newTab()
                .setText("Throttle")
                .setTabListener(new TabListener&lt;LoaderThrottle.ThrottledLoaderListFragment&gt;(
                        this, "throttle", LoaderThrottle.ThrottledLoaderListFragment.class)));

        if (savedInstanceState != null) {
            bar.setSelectedNavigationItem(savedInstanceState.getInt("tab", 0));
        }
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putInt("tab", getActionBar().getSelectedNavigationIndex());
    }

    public static class TabListener&lt;T extends Fragment&gt; implements ActionBar.TabListener {
        private final Activity mActivity;
        private final String mTag;
        private final Class&lt;T&gt; mClass;
        private final Bundle mArgs;
        private Fragment mFragment;

        public TabListener(Activity activity, String tag, Class&lt;T&gt; clz) {
            this(activity, tag, clz, null);
        }

        public TabListener(Activity activity, String tag, Class&lt;T&gt; clz, Bundle args) {
            mActivity = activity;
            mTag = tag;
            mClass = clz;
            mArgs = args;

            // Check to see if we already have a fragment for this tab, probably
            // from a previously saved state.  If so, deactivate it, because our
            // initial state is that a tab isn't shown.
            mFragment = mActivity.getFragmentManager().findFragmentByTag(mTag);
            if (mFragment != null &amp;&amp; !mFragment.isDetached()) {
                FragmentTransaction ft = mActivity.getFragmentManager().beginTransaction();
                ft.detach(mFragment);
                ft.commit();
            }
        }

        public void onTabSelected(Tab tab, FragmentTransaction ft) {
            if (mFragment == null) {
                mFragment = Fragment.instantiate(mActivity, mClass.getName(), mArgs);
                ft.add(android.R.id.content, mFragment, mTag);
            } else {
                ft.attach(mFragment);
            }
        }

        public void onTabUnselected(Tab tab, FragmentTransaction ft) {
            if (mFragment != null) {
                ft.detach(mFragment);
            }
        }

        public void onTabReselected(Tab tab, FragmentTransaction ft) {
            Toast.makeText(mActivity, "Reselected!", Toast.LENGTH_SHORT).show();
        }
    }
}</code></example></para>
          <para tool="javadoc-to-mdoc">Very often tabs will be used to switch between <c><see cref="T:Android.App.Fragment" /></c>
 objects.  Here is a typical implementation of such tabs:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#newTab()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.ActionBar.AddTab(.Tab)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAllTabs">
      <MemberSignature Language="C#" Value="public abstract void RemoveAllTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllTabs() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeAllTabs", "()V", "GetRemoveAllTabsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all tabs from the action bar and deselect the current tab.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove all tabs from the action bar and deselect the current tab.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#removeAllTabs()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnMenuVisibilityListener">
      <MemberSignature Language="C#" Value="public abstract void RemoveOnMenuVisibilityListener (Android.App.ActionBar.IOnMenuVisibilityListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnMenuVisibilityListener(class Android.App.ActionBar/IOnMenuVisibilityListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnMenuVisibilityListener", "(Landroid/app/ActionBar$OnMenuVisibilityListener;)V", "GetRemoveOnMenuVisibilityListener_Landroid_app_ActionBar_OnMenuVisibilityListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.ActionBar+IOnMenuVisibilityListener" />
      </Parameters>
      <Docs>
        <param name="listener">A listener to remove that was previously added
</param>
        <summary>Remove a menu visibility listener.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a menu visibility listener. This listener will no longer receive menu
 visibility change events.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTab">
      <MemberSignature Language="C#" Value="public abstract void RemoveTab (Android.App.ActionBar.Tab tab);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTab(class Android.App.ActionBar/Tab tab) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTab", "(Landroid/app/ActionBar$Tab;)V", "GetRemoveTab_Landroid_app_ActionBar_Tab_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tab" Type="Android.App.ActionBar+Tab" />
      </Parameters>
      <Docs>
        <param name="tab">The tab to remove</param>
        <summary>Remove a tab from the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a tab from the action bar. If the removed tab was selected it will be deselected
 and another tab will be selected if present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#removeTab(android.app.ActionBar.Tab)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTabAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveTabAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTabAt(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTabAt", "(I)V", "GetRemoveTabAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position of the tab to remove</param>
        <summary>Remove a tab from the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove a tab from the action bar. If the removed tab was selected it will be deselected
 and another tab will be selected if present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#removeTabAt(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNavigationIndex">
      <MemberSignature Language="C#" Value="public abstract int SelectedNavigationIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedNavigationIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSelectedNavigationIndex", "()I", "GetGetSelectedNavigationIndexHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the position of the selected navigation item in list or tabbed navigation modes.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the position of the selected navigation item in list or tabbed navigation modes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getSelectedNavigationIndex()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SelectedTab">
      <MemberSignature Language="C#" Value="public abstract Android.App.ActionBar.Tab SelectedTab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.ActionBar/Tab SelectedTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSelectedTab", "()Landroid/app/ActionBar$Tab;", "GetGetSelectedTabHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActionBar+Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the currently selected tab if in tabbed navigation mode and there is at least
 one tab present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the currently selected tab if in tabbed navigation mode and there is at least
 one tab present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getSelectedTab()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SelectTab">
      <MemberSignature Language="C#" Value="public abstract void SelectTab (Android.App.ActionBar.Tab tab);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectTab(class Android.App.ActionBar/Tab tab) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("selectTab", "(Landroid/app/ActionBar$Tab;)V", "GetSelectTab_Landroid_app_ActionBar_Tab_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tab" Type="Android.App.ActionBar+Tab" />
      </Parameters>
      <Docs>
        <param name="tab">Tab to select</param>
        <summary>Select the specified tab.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Select the specified tab. If it is not a child of this action bar it will be added.

 </para>
          <para tool="javadoc-to-mdoc">Note: If you want to select by index, use <c><see cref="M:Android.App.ActionBar.SetSelectedNavigationItem(System.Int32)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#selectTab(android.app.ActionBar.Tab)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetBackgroundDrawable (Android.Graphics.Drawables.Drawable d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawable(class Android.Graphics.Drawables.Drawable d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="d">Background drawable</param>
        <summary>Set the ActionBar's background.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the ActionBar's background. This will be used for the primary
 action bar.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setBackgroundDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.ActionBar.SetStackedBackgroundDrawable(Android.Graphics.Drawables.Drawable)" />
        <altmember cref="M:Android.App.ActionBar.SetSplitBackgroundDrawable(Android.Graphics.Drawables.Drawable)" />
      </Docs>
    </Member>
    <Member MemberName="SetCustomView">
      <MemberSignature Language="C#" Value="public abstract void SetCustomView (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCustomView(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCustomView", "(I)V", "GetSetCustomView_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a layout to inflate into the ActionBar.</param>
        <summary>Set the action bar into custom navigation mode, supplying a view
 for custom navigation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the action bar into custom navigation mode, supplying a view
 for custom navigation.

 </para>
          <para tool="javadoc-to-mdoc">Custom navigation views appear between the application icon and
 any action buttons and may use any space available there. Common
 use cases for custom navigation views might include an auto-suggesting
 address bar for a browser or other navigation mechanisms that do not
 translate well to provided navigation modes.</para>
          <para tool="javadoc-to-mdoc">The display option <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_CUSTOM" /></c> must be set for
 the custom view to be displayed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setCustomView(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetCustomView">
      <MemberSignature Language="C#" Value="public abstract void SetCustomView (Android.Views.View view, Android.App.ActionBar.LayoutParams layoutParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCustomView(class Android.Views.View view, class Android.App.ActionBar/LayoutParams layoutParams) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCustomView", "(Landroid/view/View;Landroid/app/ActionBar$LayoutParams;)V", "GetSetCustomView_Landroid_view_View_Landroid_app_ActionBar_LayoutParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="layoutParams" Type="Android.App.ActionBar+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">Custom navigation view to place in the ActionBar.</param>
        <param name="layoutParams">How this custom view should layout in the bar.</param>
        <summary>Set the action bar into custom navigation mode, supplying a view
 for custom navigation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the action bar into custom navigation mode, supplying a view
 for custom navigation.
 
 </para>
          <para tool="javadoc-to-mdoc">Custom navigation views appear between the application icon and
 any action buttons and may use any space available there. Common
 use cases for custom navigation views might include an auto-suggesting
 address bar for a browser or other navigation mechanisms that do not
 translate well to provided navigation modes.</para>
          <para tool="javadoc-to-mdoc">The display option <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_CUSTOM" /></c> must be set for
 the custom view to be displayed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setCustomView(android.view.View, android.app.ActionBar.LayoutParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetDisplayHomeAsUpEnabled">
      <MemberSignature Language="C#" Value="public abstract void SetDisplayHomeAsUpEnabled (bool showHomeAsUp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayHomeAsUpEnabled(bool showHomeAsUp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayHomeAsUpEnabled", "(Z)V", "GetSetDisplayHomeAsUpEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showHomeAsUp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showHomeAsUp">true to show the user that selecting home will return one
                     level up rather than to the top level of the app.</param>
        <summary>Set whether home should be displayed as an "up" affordance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether home should be displayed as an "up" affordance.
 Set this to true if selecting "home" returns up by a single level in your UI
 rather than back to the top level or front page.

 </para>
          <para tool="javadoc-to-mdoc">To set several display options at once, see the setDisplayOptions methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayHomeAsUpEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.DisplayOptions" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetDisplayOptions">
      <MemberSignature Language="C#" Value="public abstract void SetDisplayOptions (Android.App.ActionBarDisplayOptions options, Android.App.ActionBarDisplayOptions mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayOptions(valuetype Android.App.ActionBarDisplayOptions options, valuetype Android.App.ActionBarDisplayOptions mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayOptions", "(II)V", "GetSetDisplayOptions_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Android.App.ActionBarDisplayOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.App.ActionBarDisplayOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">A combination of the bits defined by the DISPLAY_ constants
                defined in ActionBar.</param>
        <param name="mask">A bit mask declaring which display options should be changed.
</param>
        <summary>Set selected display options.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set selected display options. Only the options specified by mask will be changed.
 To change all display option bits at once, see <c><see cref="P:Android.App.ActionBar.DisplayOptions" /></c>.
 
 </para>
          <para tool="javadoc-to-mdoc">Example: setDisplayOptions(0, DISPLAY_SHOW_HOME) will disable the
 <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_HOME" /></c> option.
 setDisplayOptions(DISPLAY_SHOW_HOME, DISPLAY_SHOW_HOME | DISPLAY_USE_LOGO)
 will enable <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_HOME" /></c> and disable <c><see cref="!:Android.App.ActionBar.DISPLAY_USE_LOGO" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayOptions(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetDisplayShowCustomEnabled">
      <MemberSignature Language="C#" Value="public abstract void SetDisplayShowCustomEnabled (bool showCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayShowCustomEnabled(bool showCustom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayShowCustomEnabled", "(Z)V", "GetSetDisplayShowCustomEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showCustom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showCustom">true if the currently set custom view should be displayed, false otherwise.</param>
        <summary>Set whether a custom view should be displayed, if set.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether a custom view should be displayed, if set.

 </para>
          <para tool="javadoc-to-mdoc">To set several display options at once, see the setDisplayOptions methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayShowCustomEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.DisplayOptions" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetDisplayShowHomeEnabled">
      <MemberSignature Language="C#" Value="public abstract void SetDisplayShowHomeEnabled (bool showHome);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayShowHomeEnabled(bool showHome) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayShowHomeEnabled", "(Z)V", "GetSetDisplayShowHomeEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showHome" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showHome">true to show home, false otherwise.</param>
        <summary>Set whether to include the application home affordance in the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether to include the application home affordance in the action bar.
 Home is presented as either an activity icon or logo.

 </para>
          <para tool="javadoc-to-mdoc">To set several display options at once, see the setDisplayOptions methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayShowHomeEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.DisplayOptions" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetDisplayShowTitleEnabled">
      <MemberSignature Language="C#" Value="public abstract void SetDisplayShowTitleEnabled (bool showTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayShowTitleEnabled(bool showTitle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayShowTitleEnabled", "(Z)V", "GetSetDisplayShowTitleEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showTitle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showTitle">true to display a title/subtitle if present.</param>
        <summary>Set whether an activity title/subtitle should be displayed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether an activity title/subtitle should be displayed.

 </para>
          <para tool="javadoc-to-mdoc">To set several display options at once, see the setDisplayOptions methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayShowTitleEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.DisplayOptions" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetDisplayUseLogoEnabled">
      <MemberSignature Language="C#" Value="public abstract void SetDisplayUseLogoEnabled (bool useLogo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayUseLogoEnabled(bool useLogo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplayUseLogoEnabled", "(Z)V", "GetSetDisplayUseLogoEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useLogo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useLogo">true to use the activity logo, false to use the activity icon.</param>
        <summary>Set whether to display the activity logo rather than the activity icon.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether to display the activity logo rather than the activity icon.
 A logo is often a wider, more detailed image.

 </para>
          <para tool="javadoc-to-mdoc">To set several display options at once, see the setDisplayOptions methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setDisplayUseLogoEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.DisplayOptions" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetHomeActionContentDescription">
      <MemberSignature Language="C#" Value="public virtual void SetHomeActionContentDescription (Java.Lang.ICharSequence description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHomeActionContentDescription(class Java.Lang.ICharSequence description) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHomeActionContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetHomeActionContentDescription_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="description">New description for the Home action when enabled</param>
        <summary>Set an alternate description for the Home/Up action, when enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set an alternate description for the Home/Up action, when enabled.

 </para>
          <para tool="javadoc-to-mdoc">This description is commonly used for accessibility/screen readers when
 the Home action is enabled. (See <c><see cref="M:Android.App.ActionBar.SetDisplayHomeAsUpEnabled(System.Boolean)" /></c>.)
 Examples of this are, "Navigate Home" or "Navigate Up" depending on the
 <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> display option. If you have changed the home-as-up
 indicator using <c><see cref="M:Android.App.ActionBar.SetHomeAsUpIndicator(System.Int32)" /></c> to indicate more specific
 functionality such as a sliding drawer, you should also set this to accurately
 describe the action.</para>
          <para tool="javadoc-to-mdoc">Setting this to <c>null</c> will use the system default description.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHomeActionContentDescription(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.App.ActionBar.SetHomeAsUpIndicator(System.Int32)" />
        <altmember cref="M:Android.App.ActionBar.SetHomeAsUpIndicator(Android.Graphics.Drawables.Drawable)" />
      </Docs>
    </Member>
    <Member MemberName="SetHomeActionContentDescription">
      <MemberSignature Language="C#" Value="public virtual void SetHomeActionContentDescription (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHomeActionContentDescription(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHomeActionContentDescription", "(I)V", "GetSetHomeActionContentDescription_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a string to use as the new description
              for the Home action when enabled</param>
        <summary>Set an alternate description for the Home/Up action, when enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set an alternate description for the Home/Up action, when enabled.

 </para>
          <para tool="javadoc-to-mdoc">This description is commonly used for accessibility/screen readers when
 the Home action is enabled. (See <c><see cref="M:Android.App.ActionBar.SetDisplayHomeAsUpEnabled(System.Boolean)" /></c>.)
 Examples of this are, "Navigate Home" or "Navigate Up" depending on the
 <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> display option. If you have changed the home-as-up
 indicator using <c><see cref="M:Android.App.ActionBar.SetHomeAsUpIndicator(System.Int32)" /></c> to indicate more specific
 functionality such as a sliding drawer, you should also set this to accurately
 describe the action.</para>
          <para tool="javadoc-to-mdoc">Setting this to <c>0</c> will use the system default description.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHomeActionContentDescription(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.App.ActionBar.SetHomeAsUpIndicator(System.Int32)" />
        <altmember cref="M:Android.App.ActionBar.SetHomeAsUpIndicator(Android.Graphics.Drawables.Drawable)" />
      </Docs>
    </Member>
    <Member MemberName="SetHomeActionContentDescription">
      <MemberSignature Language="C#" Value="public void SetHomeActionContentDescription (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHomeActionContentDescription(string description) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHomeAsUpIndicator">
      <MemberSignature Language="C#" Value="public virtual void SetHomeAsUpIndicator (Android.Graphics.Drawables.Drawable indicator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHomeAsUpIndicator(class Android.Graphics.Drawables.Drawable indicator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHomeAsUpIndicator", "(Landroid/graphics/drawable/Drawable;)V", "GetSetHomeAsUpIndicator_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indicator" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="indicator">A drawable to use for the up indicator, or null to use the theme's default</param>
        <summary>Set an alternate drawable to display next to the icon/logo/title
 when <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> is enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set an alternate drawable to display next to the icon/logo/title
 when <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> is enabled. This can be useful if you are using
 this mode to display an alternate selection for up navigation, such as a sliding drawer.

 </para>
          <para tool="javadoc-to-mdoc">If you pass <c>null</c> to this method, the default drawable from the theme
 will be used.</para>
          <para tool="javadoc-to-mdoc">If you implement alternate or intermediate behavior around Up, you should also
 call <c><see cref="M:Android.App.ActionBar.SetHomeActionContentDescription(System.Int32)" /></c>
 to provide a correct description of the action for accessibility support.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHomeAsUpIndicator(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayHomeAsUpEnabled(System.Boolean)" />
        <altmember cref="M:Android.App.ActionBar.SetHomeActionContentDescription(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetHomeAsUpIndicator">
      <MemberSignature Language="C#" Value="public virtual void SetHomeAsUpIndicator (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHomeAsUpIndicator(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHomeAsUpIndicator", "(I)V", "GetSetHomeAsUpIndicator_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a drawable to use for the up indicator, or null
              to use the theme's default</param>
        <summary>Set an alternate drawable to display next to the icon/logo/title
 when <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> is enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set an alternate drawable to display next to the icon/logo/title
 when <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> is enabled. This can be useful if you are using
 this mode to display an alternate selection for up navigation, such as a sliding drawer.

 </para>
          <para tool="javadoc-to-mdoc">If you pass <c>0</c> to this method, the default drawable from the theme
 will be used.</para>
          <para tool="javadoc-to-mdoc">If you implement alternate or intermediate behavior around Up, you should also
 call <c><see cref="M:Android.App.ActionBar.SetHomeActionContentDescription(System.Int32)" /></c>
 to provide a correct description of the action for accessibility support.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHomeAsUpIndicator(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayHomeAsUpEnabled(System.Boolean)" />
        <altmember cref="M:Android.App.ActionBar.SetHomeActionContentDescription(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetHomeButtonEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetHomeButtonEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHomeButtonEnabled(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHomeButtonEnabled", "(Z)V", "GetSetHomeButtonEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">true to enable the home button, false to disable the home button.
</param>
        <summary>Enable or disable the "home" button in the corner of the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enable or disable the "home" button in the corner of the action bar. (Note that this
 is the application home/up affordance on the action bar, not the systemwide home
 button.)

 </para>
          <para tool="javadoc-to-mdoc">This defaults to true for packages targeting &lt; API 14. For packages targeting
 API 14 or greater, the application should call this method to enable interaction
 with the home/up affordance.

 </para>
          <para tool="javadoc-to-mdoc">Setting the <c><see cref="!:Android.App.ActionBar.DISPLAY_HOME_AS_UP" /></c> display option will automatically enable
 the home button.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setHomeButtonEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetIcon">
      <MemberSignature Language="C#" Value="public abstract void SetIcon (Android.Graphics.Drawables.Drawable icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIcon(class Android.Graphics.Drawables.Drawable icon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="icon">Drawable to show as an icon.</param>
        <summary>Set the icon to display in the 'home' section of the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the icon to display in the 'home' section of the action bar.
 The action bar will use an icon specified by its style or the
 activity icon by default.

 Whether the home section shows an icon or logo is controlled
 by the display option <c><see cref="!:Android.App.ActionBar.DISPLAY_USE_LOGO" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setIcon(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayUseLogoEnabled(System.Boolean)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayShowHomeEnabled(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetIcon">
      <MemberSignature Language="C#" Value="public abstract void SetIcon (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIcon(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIcon", "(I)V", "GetSetIcon_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a drawable to show as an icon.</param>
        <summary>Set the icon to display in the 'home' section of the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the icon to display in the 'home' section of the action bar.
 The action bar will use an icon specified by its style or the
 activity icon by default.

 Whether the home section shows an icon or logo is controlled
 by the display option <c><see cref="!:Android.App.ActionBar.DISPLAY_USE_LOGO" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setIcon(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayUseLogoEnabled(System.Boolean)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayShowHomeEnabled(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetListNavigationCallbacks">
      <MemberSignature Language="C#" Value="public abstract void SetListNavigationCallbacks (Android.Widget.ISpinnerAdapter adapter, Android.App.ActionBar.IOnNavigationListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListNavigationCallbacks(class Android.Widget.ISpinnerAdapter adapter, class Android.App.ActionBar/IOnNavigationListener callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setListNavigationCallbacks", "(Landroid/widget/SpinnerAdapter;Landroid/app/ActionBar$OnNavigationListener;)V", "GetSetListNavigationCallbacks_Landroid_widget_SpinnerAdapter_Landroid_app_ActionBar_OnNavigationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="Android.Widget.ISpinnerAdapter" />
        <Parameter Name="callback" Type="Android.App.ActionBar+IOnNavigationListener" />
      </Parameters>
      <Docs>
        <param name="adapter">An adapter that will provide views both to display
                the current navigation selection and populate views
                within the dropdown navigation menu.</param>
        <param name="callback">An OnNavigationListener that will receive events when the user
                 selects a navigation item.</param>
        <summary>Set the adapter and navigation callback for list navigation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the adapter and navigation callback for list navigation mode.

 The supplied adapter will provide views for the expanded list as well as
 the currently selected item. (These may be displayed differently.)

 The supplied OnNavigationListener will alert the application when the user
 changes the current list selection.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.ActionBar.OnNavigationListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetLogo">
      <MemberSignature Language="C#" Value="public abstract void SetLogo (Android.Graphics.Drawables.Drawable logo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogo(class Android.Graphics.Drawables.Drawable logo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLogo", "(Landroid/graphics/drawable/Drawable;)V", "GetSetLogo_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logo" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="logo">Drawable to show as a logo.</param>
        <summary>Set the logo to display in the 'home' section of the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the logo to display in the 'home' section of the action bar.
 The action bar will use a logo specified by its style or the
 activity logo by default.

 Whether the home section shows an icon or logo is controlled
 by the display option <c><see cref="!:Android.App.ActionBar.DISPLAY_USE_LOGO" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setLogo(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayUseLogoEnabled(System.Boolean)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayShowHomeEnabled(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetLogo">
      <MemberSignature Language="C#" Value="public abstract void SetLogo (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogo(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLogo", "(I)V", "GetSetLogo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a drawable to show as a logo.</param>
        <summary>Set the logo to display in the 'home' section of the action bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the logo to display in the 'home' section of the action bar.
 The action bar will use a logo specified by its style or the
 activity logo by default.

 Whether the home section shows an icon or logo is controlled
 by the display option <c><see cref="!:Android.App.ActionBar.DISPLAY_USE_LOGO" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setLogo(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayUseLogoEnabled(System.Boolean)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayShowHomeEnabled(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectedNavigationItem">
      <MemberSignature Language="C#" Value="public abstract void SetSelectedNavigationItem (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedNavigationItem(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSelectedNavigationItem", "(I)V", "GetSetSelectedNavigationItem_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position of the item to select.</param>
        <summary>Set the selected navigation item in list or tabbed navigation modes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the selected navigation item in list or tabbed navigation modes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setSelectedNavigationItem(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetSplitBackgroundDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetSplitBackgroundDrawable (Android.Graphics.Drawables.Drawable d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSplitBackgroundDrawable(class Android.Graphics.Drawables.Drawable d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSplitBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetSplitBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="d">Background drawable for the split bar
</param>
        <summary>Set the ActionBar's split background.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the ActionBar's split background. This will appear in
 the split action bar containing menu-provided action buttons
 on some devices and configurations.
 </para>
          <para tool="javadoc-to-mdoc">You can enable split action bar with <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#uiOptions" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setSplitBackgroundDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetStackedBackgroundDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetStackedBackgroundDrawable (Android.Graphics.Drawables.Drawable d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStackedBackgroundDrawable(class Android.Graphics.Drawables.Drawable d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStackedBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetStackedBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="d">Background drawable for the stacked row
</param>
        <summary>Set the ActionBar's stacked background.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the ActionBar's stacked background. This will appear
 in the second row/stacked bar on some devices and configurations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setStackedBackgroundDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetSubtitle">
      <MemberSignature Language="C#" Value="public abstract void SetSubtitle (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSubtitle(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSubtitle", "(I)V", "GetSetSubtitle_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of subtitle string to set</param>
        <summary>Set the action bar's subtitle.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the action bar's subtitle. This will only be displayed if
 <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_TITLE" /></c> is set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setSubtitle(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.SubtitleFormatted" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public abstract void SetTitle (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitle(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitle", "(I)V", "GetSetTitle_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of title string to set</param>
        <summary>Set the action bar's title.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the action bar's title. This will only be displayed if
 <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_TITLE" /></c> is set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setTitle(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.ActionBar.TitleFormatted" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public abstract void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Show() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("show", "()V", "GetShowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Show the ActionBar if it is not currently showing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Show the ActionBar if it is not currently showing.
 If the window hosting the ActionBar does not have the feature
 <c><see cref="!:Android.Views.Window.FEATURE_ACTION_BAR_OVERLAY" /></c> it will resize application
 content to fit the new space available.

 </para>
          <para tool="javadoc-to-mdoc">If you are hiding the ActionBar through
 <c><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></c>,
 you should not call this function directly.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#show()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtitleFormatted">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ICharSequence SubtitleFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence SubtitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSubtitle", "()Ljava/lang/CharSequence;", "GetGetSubtitleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSubtitle", "(Ljava/lang/CharSequence;)V", "GetSetSubtitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current ActionBar subtitle in standard mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getSubtitle()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current ActionBar subtitle in standard mode.
 Returns null if <c><see cref="P:Android.App.ActionBar.NavigationMode" /></c> would not return
 <c><see cref="!:Android.App.ActionBar.NAVIGATION_MODE_STANDARD" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setSubtitle(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the action bar's subtitle. This will only be displayed if
 <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_TITLE" /></c> is set. Set to null to disable the
 subtitle entirely.</para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.ActionBar.SetSubtitle(System.Int32)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
    <Member MemberName="TabCount">
      <MemberSignature Language="C#" Value="public abstract int TabCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTabCount", "()I", "GetGetTabCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of tabs currently registered with the action bar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of tabs currently registered with the action bar.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getTabCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThemedContext">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context ThemedContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context ThemedContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getThemedContext", "()Landroid/content/Context;", "GetGetThemedContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c><see cref="T:Android.Content.Context" /></c> with an appropriate theme for creating views that
 will appear in the action bar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Content.Context" /></c> with an appropriate theme for creating views that
 will appear in the action bar. If you are inflating or instantiating custom views
 that will appear in an action bar, you should use the Context returned by this method.
 (This includes adapters used for list navigation mode.)
 This will ensure that views contrast properly against the action bar.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getThemedContext()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFormatted">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ICharSequence TitleFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current ActionBar title in standard mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#getTitle()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current ActionBar title in standard mode.
 Returns null if <c><see cref="P:Android.App.ActionBar.NavigationMode" /></c> would not return
 <c><see cref="!:Android.App.ActionBar.NAVIGATION_MODE_STANDARD" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/app/ActionBar.html#setTitle(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the action bar's title. This will only be displayed if
 <c><see cref="!:Android.App.ActionBar.DISPLAY_SHOW_TITLE" /></c> is set.</para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.ActionBar.SetTitle(System.Int32)" />
        <altmember cref="M:Android.App.ActionBar.SetDisplayOptions(Android.App.ActionBarDisplayOptions, Android.App.ActionBarDisplayOptions)" />
      </Docs>
    </Member>
  </Members>
</Type>
