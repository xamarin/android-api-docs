<Type Name="NativeActivity" FullName="Android.App.NativeActivity">
  <TypeSignature Language="VB.NET" Value="Public Class NativeActivity&#xA;Inherits Activity&#xA;Implements IDisposable, IJavaPeerable, InputQueue.ICallback, ISurfaceHolderCallback2, ViewTreeObserver.IOnGlobalLayoutListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivity : Android::App::Activity, Android::Views::InputQueue::ICallback, Android::Views::ISurfaceHolderCallback2, Android::Views::ViewTreeObserver::IOnGlobalLayoutListener, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class NativeActivity : Android.App.Activity, Android.Views.InputQueue.ICallback, Android.Views.ISurfaceHolderCallback2, Android.Views.ViewTreeObserver.IOnGlobalLayoutListener, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NativeActivity extends Android.App.Activity implements class Android.Runtime.IJavaObject, class Android.Views.InputQueue/ICallback, class Android.Views.ISurfaceHolderCallback, class Android.Views.ISurfaceHolderCallback2, class Android.Views.ViewTreeObserver/IOnGlobalLayoutListener, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.App.NativeActivity" />
  <TypeSignature Language="F#" Value="type NativeActivity = class&#xA;    inherit Activity&#xA;    interface InputQueue.ICallback&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ISurfaceHolderCallback2&#xA;    interface ISurfaceHolderCallback&#xA;    interface ViewTreeObserver.IOnGlobalLayoutListener" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.InputQueue+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.ISurfaceHolderCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.ISurfaceHolderCallback2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.ViewTreeObserver+IOnGlobalLayoutListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/NativeActivity", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/NativeActivity", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>Convenience for implementing an activity that will be implemented
            purely in native code.</summary>
    <remarks>
      <para>Convenience for implementing an activity that will be implemented
            purely in native code.  That is, a game (or game-like thing).  There
            is no need to derive from this class; you can simply declare it in your
            manifest, and use the NDK APIs from there.</para>
      <para>A <see href="https://github.com/googlesamples/android-ndk/tree/master/native-activity">sample
            native activity</see> is available in the NDK samples.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/NativeActivity" title="Reference documentation">Java documentation for <code>android.app.NativeActivity</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NativeActivity();" />
      <MemberSignature Language="C#" Value="public NativeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeActivity(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected NativeActivity (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.NativeActivity : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.NativeActivity" Usage="new Android.App.NativeActivity (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.NativeActivity.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.NativeActivity.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetaDataFuncName">
      <MemberSignature Language="VB.NET" Value="Public Const MetaDataFuncName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MetaDataFuncName;" />
      <MemberSignature Language="C#" Value="public const string MetaDataFuncName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataFuncName" />
      <MemberSignature Language="DocId" Value="F:Android.App.NativeActivity.MetaDataFuncName" />
      <MemberSignature Language="F#" Value="val mutable MetaDataFuncName : string" Usage="Android.App.NativeActivity.MetaDataFuncName" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2.cb_surfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_FUNC_NAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_FUNC_NAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional meta-that can be in the manifest for this component, specifying
            the name of the main entry point for this native activity in the
            <c>#META_DATA_LIB_NAME</c> native code.</summary>
        <remarks>
          <para>Optional meta-that can be in the manifest for this component, specifying
            the name of the main entry point for this native activity in the
            <c>#META_DATA_LIB_NAME</c> native code.  If not specified,
            "ANativeActivity_onCreate" is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/NativeActivity#META_DATA_FUNC_NAME" title="Reference documentation">Java documentation for <code>android.app.NativeActivity.META_DATA_FUNC_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MetaDataLibName">
      <MemberSignature Language="VB.NET" Value="Public Const MetaDataLibName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MetaDataLibName;" />
      <MemberSignature Language="C#" Value="public const string MetaDataLibName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaDataLibName" />
      <MemberSignature Language="DocId" Value="F:Android.App.NativeActivity.MetaDataLibName" />
      <MemberSignature Language="F#" Value="val mutable MetaDataLibName : string" Usage="Android.App.NativeActivity.MetaDataLibName" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2._members</InterfaceMember>
        <InterfaceMember>F:Android.Views.ISurfaceHolderCallback2.cb_surfaceRedrawNeededAsync_Landroid_view_SurfaceHolder_Ljava_lang_Runnable_</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_DATA_LIB_NAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_DATA_LIB_NAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional meta-that can be in the manifest for this component, specifying
            the name of the native shared library to load.</summary>
        <remarks>
          <para>Optional meta-that can be in the manifest for this component, specifying
            the name of the native shared library to load.  If not specified,
            "main" is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/NativeActivity#META_DATA_LIB_NAME" title="Reference documentation">Java documentation for <code>android.app.NativeActivity.META_DATA_LIB_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnGlobalLayout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnGlobalLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnGlobalLayout();" />
      <MemberSignature Language="C#" Value="public virtual void OnGlobalLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGlobalLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.OnGlobalLayout" />
      <MemberSignature Language="F#" Value="abstract member OnGlobalLayout : unit -&gt; unit&#xA;override this.OnGlobalLayout : unit -&gt; unit" Usage="nativeActivity.OnGlobalLayout " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ViewTreeObserver.IOnGlobalLayoutListener.OnGlobalLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onGlobalLayout", "()V", "GetOnGlobalLayoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onGlobalLayout", "()V", "GetOnGlobalLayoutHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback method to be invoked when the global layout state or the visibility of views
 within the view tree changes
</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnInputQueueCreated">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnInputQueueCreated (queue As InputQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnInputQueueCreated(Android::Views::InputQueue ^ queue);" />
      <MemberSignature Language="C#" Value="public virtual void OnInputQueueCreated (Android.Views.InputQueue? queue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInputQueueCreated(class Android.Views.InputQueue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.OnInputQueueCreated(Android.Views.InputQueue)" />
      <MemberSignature Language="F#" Value="abstract member OnInputQueueCreated : Android.Views.InputQueue -&gt; unit&#xA;override this.OnInputQueueCreated : Android.Views.InputQueue -&gt; unit" Usage="nativeActivity.OnInputQueueCreated queue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.InputQueue.ICallback.OnInputQueueCreated(Android.Views.InputQueue)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInputQueueCreated", "(Landroid/view/InputQueue;)V", "GetOnInputQueueCreated_Landroid_view_InputQueue_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInputQueueCreated", "(Landroid/view/InputQueue;)V", "GetOnInputQueueCreated_Landroid_view_InputQueue_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="Android.Views.InputQueue" />
      </Parameters>
      <Docs>
        <param name="queue">To be added.</param>
        <summary>Called when the given InputQueue is now associated with the
 thread making this call, so it can start receiving events from it.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnInputQueueDestroyed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnInputQueueDestroyed (queue As InputQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnInputQueueDestroyed(Android::Views::InputQueue ^ queue);" />
      <MemberSignature Language="C#" Value="public virtual void OnInputQueueDestroyed (Android.Views.InputQueue? queue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInputQueueDestroyed(class Android.Views.InputQueue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.OnInputQueueDestroyed(Android.Views.InputQueue)" />
      <MemberSignature Language="F#" Value="abstract member OnInputQueueDestroyed : Android.Views.InputQueue -&gt; unit&#xA;override this.OnInputQueueDestroyed : Android.Views.InputQueue -&gt; unit" Usage="nativeActivity.OnInputQueueDestroyed queue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.InputQueue.ICallback.OnInputQueueDestroyed(Android.Views.InputQueue)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInputQueueDestroyed", "(Landroid/view/InputQueue;)V", "GetOnInputQueueDestroyed_Landroid_view_InputQueue_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInputQueueDestroyed", "(Landroid/view/InputQueue;)V", "GetOnInputQueueDestroyed_Landroid_view_InputQueue_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="Android.Views.InputQueue" />
      </Parameters>
      <Docs>
        <param name="queue">To be added.</param>
        <summary>Called when the given InputQueue is no longer associated with
 the thread and thus not dispatching events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceChanged (holder As ISurfaceHolder, format As Format, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceChanged(Android::Views::ISurfaceHolder ^ holder, Android::Graphics::Format format, int width, int height);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceChanged (Android.Views.ISurfaceHolder? holder, Android.Graphics.Format format, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceChanged(class Android.Views.ISurfaceHolder holder, valuetype Android.Graphics.Format format, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.SurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceChanged : Android.Views.ISurfaceHolder * Android.Graphics.Format * int * int -&gt; unit&#xA;override this.SurfaceChanged : Android.Views.ISurfaceHolder * Android.Graphics.Format * int * int -&gt; unit" Usage="nativeActivity.SurfaceChanged (holder, format, width, height)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback.SurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="format" Type="Android.Graphics.Format">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface has changed.</param>
        <param name="format">The new PixelFormat of the surface.</param>
        <param name="width">The new width of the surface.</param>
        <param name="height">The new height of the surface.
</param>
        <summary>This is called immediately after any structural changes (format or
 size) have been made to the surface.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceCreated">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceCreated (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceCreated(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceCreated (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceCreated(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.SurfaceCreated(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceCreated : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SurfaceCreated : Android.Views.ISurfaceHolder -&gt; unit" Usage="nativeActivity.SurfaceCreated holder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback.SurfaceCreated(Android.Views.ISurfaceHolder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceCreated_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceCreated_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface is being created.
</param>
        <summary>This is called immediately after the surface is first created.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceDestroyed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceDestroyed (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceDestroyed(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceDestroyed (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceDestroyed(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.SurfaceDestroyed(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceDestroyed : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SurfaceDestroyed : Android.Views.ISurfaceHolder -&gt; unit" Usage="nativeActivity.SurfaceDestroyed holder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback.SurfaceDestroyed(Android.Views.ISurfaceHolder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface is being destroyed.
</param>
        <summary>This is called immediately before a surface is being destroyed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceRedrawNeeded">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SurfaceRedrawNeeded (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SurfaceRedrawNeeded(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="C#" Value="public virtual void SurfaceRedrawNeeded (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceRedrawNeeded(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.NativeActivity.SurfaceRedrawNeeded(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SurfaceRedrawNeeded : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SurfaceRedrawNeeded : Android.Views.ISurfaceHolder -&gt; unit" Usage="nativeActivity.SurfaceRedrawNeeded holder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.ISurfaceHolderCallback2.SurfaceRedrawNeeded(Android.Views.ISurfaceHolder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("surfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("surfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface has changed.
</param>
        <summary>Called when the application needs to redraw the content of its
 surface, after it is resized or for some other reason.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.NativeActivity.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.NativeActivity.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.NativeActivity.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.NativeActivity.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
