<Type Name="ActivityManager" FullName="Android.App.ActivityManager">
  <TypeSignature Language="C#" Value="public class ActivityManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.ActivityManager" />
  <TypeSignature Language="F#" Value="type ActivityManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/ActivityManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/ActivityManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class gives information about, and interacts
            with, activities, services, and the containing
            process.</summary>
    <remarks>
      <para>This class gives information about, and interacts
            with, activities, services, and the containing
            process.</para>
      <para>A number of the methods in this class are for
            debugging or informational purposes and they should
            not be used to affect any runtime behavior of
            your app. These methods are called out as such in
            the method level documentation.</para>
      <para>Most application developers should not have the need to
            use this class, most of whose methods are for specialized
            use cases. However, a few methods are more broadly applicable.
            For instance, <c>android.app.ActivityManager#isLowRamDevice() isLowRamDevice()</c>
            enables your app to detect whether it is running on a low-memory device,
            and behave accordingly.
            <c>android.app.ActivityManager#clearApplicationUserData() clearApplicationUserData()</c>
            is for apps with reset-data functionality.</para>
      <para>In some special use cases, where an app interacts with
            its Task stack, the app may use the
            <c>android.app.ActivityManager.AppTask</c> and
            <c>android.app.ActivityManager.RecentTaskInfo</c> inner
            classes. However, in general, the methods in this class should
            be used for testing and debugging purposes only.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/ActivityManager" title="Reference documentation">Java documentation for <code>android.app.ActivityManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ActivityManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.ActivityManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.ActivityManager" Usage="new Android.App.ActivityManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionReportHeapLimit">
      <MemberSignature Language="C#" Value="public const string ActionReportHeapLimit;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionReportHeapLimit" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityManager.ActionReportHeapLimit" />
      <MemberSignature Language="F#" Value="val mutable ActionReportHeapLimit : string" Usage="Android.App.ActivityManager.ActionReportHeapLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_REPORT_HEAP_LIMIT", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_REPORT_HEAP_LIMIT", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action an app can implement to handle reports from <c>#setWatchHeapLimit(long)</c>.</summary>
        <remarks>
          <para>Action an app can implement to handle reports from <c>#setWatchHeapLimit(long)</c>.
            If your package has an activity handling this action, it will be launched with the
            heap data provided to it the same way as <c>Intent#ACTION_SEND</c>.  Note that to
            match, the activity must support this action and a MIME type of "*&amp;#47;*".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#ACTION_REPORT_HEAP_LIMIT" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.ACTION_REPORT_HEAP_LIMIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAppTask">
      <MemberSignature Language="C#" Value="public virtual int AddAppTask (Android.App.Activity activity, Android.Content.Intent intent, Android.App.ActivityManager.TaskDescription? description, Android.Graphics.Bitmap thumbnail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddAppTask(class Android.App.Activity activity, class Android.Content.Intent intent, class Android.App.ActivityManager/TaskDescription description, class Android.Graphics.Bitmap thumbnail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.AddAppTask(Android.App.Activity,Android.Content.Intent,Android.App.ActivityManager.TaskDescription,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member AddAppTask : Android.App.Activity * Android.Content.Intent * Android.App.ActivityManager.TaskDescription * Android.Graphics.Bitmap -&gt; int&#xA;override this.AddAppTask : Android.App.Activity * Android.Content.Intent * Android.App.ActivityManager.TaskDescription * Android.Graphics.Bitmap -&gt; int" Usage="activityManager.AddAppTask (activity, intent, description, thumbnail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addAppTask", "(Landroid/app/Activity;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I", "GetAddAppTask_Landroid_app_Activity_Landroid_content_Intent_Landroid_app_ActivityManager_TaskDescription_Landroid_graphics_Bitmap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addAppTask", "(Landroid/app/Activity;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I", "GetAddAppTask_Landroid_app_Activity_Landroid_content_Intent_Landroid_app_ActivityManager_TaskDescription_Landroid_graphics_Bitmap_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="description" Type="Android.App.ActivityManager+TaskDescription" />
        <Parameter Name="thumbnail" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="activity">The activity that is adding the entry.   This is used to help determine
            the context that the new recents entry will be in.</param>
        <param name="intent">The Intent that describes the recents entry.  This is the same Intent that
            you would have used to launch the activity for it.  In generally you will want to set
            both <c>Intent#FLAG_ACTIVITY_NEW_DOCUMENT</c> and
            <c>Intent#FLAG_ACTIVITY_RETAIN_IN_RECENTS</c>; the latter is required since this recents
            entry will exist without an activity, so it doesn't make sense to not retain it when
            its activity disappears.  The given Intent here also must have an explicit ComponentName
            set on it.</param>
        <param name="description">Optional additional description information.</param>
        <param name="thumbnail">Thumbnail to use for the recents entry.  Should be the size given by
            <c>#getAppTaskThumbnailSize()</c>.  If the bitmap is not that exact size, it will be
            recreated in your process, probably in a way you don't like, before the recents entry
            is added.</param>
        <summary>Add a new <c>AppTask</c> for the calling application.</summary>
        <returns>Returns the task id of the newly added app task, or -1 if the add failed.  The
            most likely cause of failure is that there is no more room for more tasks for your app.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#addAppTask(android.app.Activity,%20android.content.Intent,%20android.app.TaskDescription,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.addAppTask(android.app.Activity, android.content.Intent, android.app.TaskDescription, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppNotResponding">
      <MemberSignature Language="C#" Value="public virtual void AppNotResponding (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppNotResponding(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.AppNotResponding(System.String)" />
      <MemberSignature Language="F#" Value="abstract member AppNotResponding : string -&gt; unit&#xA;override this.AppNotResponding : string -&gt; unit" Usage="activityManager.AppNotResponding reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("appNotResponding", "(Ljava/lang/String;)V", "GetAppNotResponding_Ljava_lang_String_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("appNotResponding", "(Ljava/lang/String;)V", "GetAppNotResponding_Ljava_lang_String_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">The description of that what happened</param>
        <summary>Method for the app to tell system that it's wedged and would like to trigger an ANR.</summary>
        <remarks>
          <para>Method for the app to tell system that it's wedged and would like to trigger an ANR.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#appNotResponding(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.appNotResponding(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppTasks">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ActivityManager.AppTask&gt;? AppTasks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.ActivityManager/AppTask&gt; AppTasks" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.AppTasks" />
      <MemberSignature Language="F#" Value="member this.AppTasks : System.Collections.Generic.IList&lt;Android.App.ActivityManager.AppTask&gt;" Usage="Android.App.ActivityManager.AppTasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAppTasks", "()Ljava/util/List;", "GetGetAppTasksHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAppTasks", "()Ljava/util/List;", "GetGetAppTasksHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ActivityManager+AppTask&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the list of tasks associated with the calling application.</summary>
        <value>The list of tasks associated with the application making this call.</value>
        <remarks>
          <para>Get the list of tasks associated with the calling application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getAppTasks()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getAppTasks()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="AppTaskThumbnailSize">
      <MemberSignature Language="C#" Value="public virtual Android.Util.Size? AppTaskThumbnailSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Util.Size AppTaskThumbnailSize" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.AppTaskThumbnailSize" />
      <MemberSignature Language="F#" Value="member this.AppTaskThumbnailSize : Android.Util.Size" Usage="Android.App.ActivityManager.AppTaskThumbnailSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAppTaskThumbnailSize", "()Landroid/util/Size;", "GetGetAppTaskThumbnailSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAppTaskThumbnailSize", "()Landroid/util/Size;", "GetGetAppTaskThumbnailSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current design dimensions for <c>AppTask</c> thumbnails, for use
            with <c>#addAppTask</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the current design dimensions for <c>AppTask</c> thumbnails, for use
            with <c>#addAppTask</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getAppTaskThumbnailSize()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getAppTaskThumbnailSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearApplicationUserData">
      <MemberSignature Language="C#" Value="public virtual bool ClearApplicationUserData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearApplicationUserData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.ClearApplicationUserData" />
      <MemberSignature Language="F#" Value="abstract member ClearApplicationUserData : unit -&gt; bool&#xA;override this.ClearApplicationUserData : unit -&gt; bool" Usage="activityManager.ClearApplicationUserData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearApplicationUserData", "()Z", "GetClearApplicationUserDataHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearApplicationUserData", "()Z", "GetClearApplicationUserDataHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permits an application to erase its own data from disk.</summary>
        <returns>
          <c>true</c> if the application successfully requested that the application's
                data be erased; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Permits an application to erase its own data from disk.  This is equivalent to
            the user choosing to clear the app's data from within the device settings UI.  It
            erases all dynamic data associated with the app -- its private data and data in its
            private area on external storage -- but does not remove the installed application
            itself, nor any OBB files. It also revokes all runtime permissions that the app has acquired,
            clears all notifications and removes all Uri grants related to this application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#clearApplicationUserData()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.clearApplicationUserData()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearWatchHeapLimit">
      <MemberSignature Language="C#" Value="public virtual void ClearWatchHeapLimit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearWatchHeapLimit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.ClearWatchHeapLimit" />
      <MemberSignature Language="F#" Value="abstract member ClearWatchHeapLimit : unit -&gt; unit&#xA;override this.ClearWatchHeapLimit : unit -&gt; unit" Usage="activityManager.ClearWatchHeapLimit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearWatchHeapLimit", "()V", "GetClearWatchHeapLimitHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearWatchHeapLimit", "()V", "GetClearWatchHeapLimitHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear a heap watch limit previously set by <c>#setWatchHeapLimit(long)</c>.</summary>
        <remarks>
          <para>Clear a heap watch limit previously set by <c>#setWatchHeapLimit(long)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#clearWatchHeapLimit()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.clearWatchHeapLimit()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceConfigurationInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ConfigurationInfo? DeviceConfigurationInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.ConfigurationInfo DeviceConfigurationInfo" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.DeviceConfigurationInfo" />
      <MemberSignature Language="F#" Value="member this.DeviceConfigurationInfo : Android.Content.PM.ConfigurationInfo" Usage="Android.App.ActivityManager.DeviceConfigurationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDeviceConfigurationInfo", "()Landroid/content/pm/ConfigurationInfo;", "GetGetDeviceConfigurationInfoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDeviceConfigurationInfo", "()Landroid/content/pm/ConfigurationInfo;", "GetGetDeviceConfigurationInfoHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ConfigurationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the device configuration attributes.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Get the device configuration attributes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getDeviceConfigurationInfo()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getDeviceConfigurationInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DumpPackageState">
      <MemberSignature Language="C#" Value="public virtual void DumpPackageState (Java.IO.FileDescriptor? fd, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DumpPackageState(class Java.IO.FileDescriptor fd, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.DumpPackageState(Java.IO.FileDescriptor,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DumpPackageState : Java.IO.FileDescriptor * string -&gt; unit&#xA;override this.DumpPackageState : Java.IO.FileDescriptor * string -&gt; unit" Usage="activityManager.DumpPackageState (fd, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dumpPackageState", "(Ljava/io/FileDescriptor;Ljava/lang/String;)V", "GetDumpPackageState_Ljava_io_FileDescriptor_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dumpPackageState", "(Ljava/io/FileDescriptor;Ljava/lang/String;)V", "GetDumpPackageState_Ljava_io_FileDescriptor_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.DUMP")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.DUMP")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fd">The file descriptor that the dump should be written to.  The file
            descriptor is &lt;em&gt;not&lt;/em&gt; closed by this function; the caller continues to
            own it.</param>
        <param name="packageName">The name of the package that is to be dumped.</param>
        <summary>Perform a system dump of various state associated with the given application
            package name.</summary>
        <remarks>
          <para>Perform a system dump of various state associated with the given application
            package name.  This call blocks while the dump is being performed, so should
            not be done on a UI thread.  The data will be written to the given file
            descriptor as text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#dumpPackageState(java.io.FileDescriptor,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.dumpPackageState(java.io.FileDescriptor, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DumpPackageStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DumpPackageStateAsync (Java.IO.FileDescriptor? fd, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DumpPackageStateAsync(class Java.IO.FileDescriptor fd, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.DumpPackageStateAsync(Java.IO.FileDescriptor,System.String)" />
      <MemberSignature Language="F#" Value="member this.DumpPackageStateAsync : Java.IO.FileDescriptor * string -&gt; System.Threading.Tasks.Task" Usage="activityManager.DumpPackageStateAsync (fd, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.App.ActivityManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.ActivityManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.App.ActivityManager" Usage="Android.App.ActivityManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.ActivityManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistoricalProcessExitReasons">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ApplicationExitInfo&gt; GetHistoricalProcessExitReasons (string? packageName, int pid, int maxNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.ApplicationExitInfo&gt; GetHistoricalProcessExitReasons(string packageName, int32 pid, int32 maxNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetHistoricalProcessExitReasons(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetHistoricalProcessExitReasons : string * int * int -&gt; System.Collections.Generic.IList&lt;Android.App.ApplicationExitInfo&gt;&#xA;override this.GetHistoricalProcessExitReasons : string * int * int -&gt; System.Collections.Generic.IList&lt;Android.App.ApplicationExitInfo&gt;" Usage="activityManager.GetHistoricalProcessExitReasons (packageName, pid, maxNum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHistoricalProcessExitReasons", "(Ljava/lang/String;II)Ljava/util/List;", "GetGetHistoricalProcessExitReasons_Ljava_lang_String_IIHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHistoricalProcessExitReasons", "(Ljava/lang/String;II)Ljava/util/List;", "GetGetHistoricalProcessExitReasons_Ljava_lang_String_IIHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ApplicationExitInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="pid" Type="System.Int32" />
        <Parameter Name="maxNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="packageName">Optional, a null value means match all packages belonging to the
                               caller's UID. If this package belongs to another UID, you must hold
                               <c>android.Manifest.permission#DUMP</c> in order to retrieve it.</param>
        <param name="pid">A process ID that used to belong to this package but died later; a value
                               of 0 means to ignore this parameter and return all matching records.</param>
        <param name="maxNum">The maximum number of results to be returned; a value of 0
                               means to ignore this parameter and return all matching records</param>
        <summary>Return a list of <c>ApplicationExitInfo</c> records containing the reasons for the most
            recent app deaths.</summary>
        <returns>a list of <c>ApplicationExitInfo</c> records matching the criteria, sorted in
                    the order from most recent to least recent.</returns>
        <remarks>
          <para>Return a list of <c>ApplicationExitInfo</c> records containing the reasons for the most
            recent app deaths.
            
            &lt;p class="note"&gt; Note: System stores this historical information in a ring buffer and only
            the most recent records will be returned. &lt;/p&gt;
            
            &lt;p class="note"&gt; Note: In the case that this application was bound to an external service
            with flag <c>android.content.Context#BIND_EXTERNAL_SERVICE</c>, the process of that external
            service will be included in this package's exit info. &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getHistoricalProcessExitReasons(java.lang.String,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getHistoricalProcessExitReasons(java.lang.String, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemoryInfo">
      <MemberSignature Language="C#" Value="public virtual void GetMemoryInfo (Android.App.ActivityManager.MemoryInfo? outInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMemoryInfo(class Android.App.ActivityManager/MemoryInfo outInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetMemoryInfo(Android.App.ActivityManager.MemoryInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetMemoryInfo : Android.App.ActivityManager.MemoryInfo -&gt; unit&#xA;override this.GetMemoryInfo : Android.App.ActivityManager.MemoryInfo -&gt; unit" Usage="activityManager.GetMemoryInfo outInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMemoryInfo", "(Landroid/app/ActivityManager$MemoryInfo;)V", "GetGetMemoryInfo_Landroid_app_ActivityManager_MemoryInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMemoryInfo", "(Landroid/app/ActivityManager$MemoryInfo;)V", "GetGetMemoryInfo_Landroid_app_ActivityManager_MemoryInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outInfo" Type="Android.App.ActivityManager+MemoryInfo" />
      </Parameters>
      <Docs>
        <param name="outInfo">To be added.</param>
        <summary>Return general information about the memory state of the system.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getMemoryInfo(android.app.MemoryInfo)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getMemoryInfo(android.app.MemoryInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMyMemoryState">
      <MemberSignature Language="C#" Value="public static void GetMyMemoryState (Android.App.ActivityManager.RunningAppProcessInfo? outState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMyMemoryState(class Android.App.ActivityManager/RunningAppProcessInfo outState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetMyMemoryState(Android.App.ActivityManager.RunningAppProcessInfo)" />
      <MemberSignature Language="F#" Value="static member GetMyMemoryState : Android.App.ActivityManager.RunningAppProcessInfo -&gt; unit" Usage="Android.App.ActivityManager.GetMyMemoryState outState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMyMemoryState", "(Landroid/app/ActivityManager$RunningAppProcessInfo;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMyMemoryState", "(Landroid/app/ActivityManager$RunningAppProcessInfo;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outState" Type="Android.App.ActivityManager+RunningAppProcessInfo" />
      </Parameters>
      <Docs>
        <param name="outState">To be added.</param>
        <summary>Return global memory state information for the calling process.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getMyMemoryState(android.app.RunningAppProcessInfo)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getMyMemoryState(android.app.RunningAppProcessInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetProcessMemoryInfo">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Debug.MemoryInfo[]? GetProcessMemoryInfo (int[]? pids);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Debug/MemoryInfo[] GetProcessMemoryInfo(int32[] pids) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetProcessMemoryInfo(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member GetProcessMemoryInfo : int[] -&gt; Android.OS.Debug.MemoryInfo[]&#xA;override this.GetProcessMemoryInfo : int[] -&gt; Android.OS.Debug.MemoryInfo[]" Usage="activityManager.GetProcessMemoryInfo pids" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProcessMemoryInfo", "([I)[Landroid/os/Debug$MemoryInfo;", "GetGetProcessMemoryInfo_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProcessMemoryInfo", "([I)[Landroid/os/Debug$MemoryInfo;", "GetGetProcessMemoryInfo_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Debug+MemoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pids" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="pids">The pids of the processes whose memory usage is to be
            retrieved.</param>
        <summary>Return information about the memory usage of one or more processes.</summary>
        <returns>Returns an array of memory information, one for each
            requested pid.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getProcessMemoryInfo(int[])" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getProcessMemoryInfo(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetRecentTasks">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ActivityManager.RecentTaskInfo&gt;? GetRecentTasks (int maxNum, Android.App.RecentTaskFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.ActivityManager/RecentTaskInfo&gt; GetRecentTasks(int32 maxNum, valuetype Android.App.RecentTaskFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetRecentTasks(System.Int32,Android.App.RecentTaskFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetRecentTasks : int * Android.App.RecentTaskFlags -&gt; System.Collections.Generic.IList&lt;Android.App.ActivityManager.RecentTaskInfo&gt;&#xA;override this.GetRecentTasks : int * Android.App.RecentTaskFlags -&gt; System.Collections.Generic.IList&lt;Android.App.ActivityManager.RecentTaskInfo&gt;" Usage="activityManager.GetRecentTasks (maxNum, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRecentTasks", "(II)Ljava/util/List;", "GetGetRecentTasks_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRecentTasks", "(II)Ljava/util/List;", "GetGetRecentTasks_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ActivityManager+RecentTaskInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxNum" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.RecentTaskFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="maxNum">The maximum number of entries to return in the list.  The
            actual number returned may be smaller, depending on how many tasks the
            user has started and the maximum number the system can remember.</param>
        <param name="flags">Information about what to return.  May be any combination
            of <c>#RECENT_WITH_EXCLUDED</c> and <c>#RECENT_IGNORE_UNAVAILABLE</c>.</param>
        <summary />
        <returns>Returns a list of RecentTaskInfo records describing each of
            the recent tasks.</returns>
        <remarks>
          <para />
          <para>Return a list of the tasks that the user has recently launched, with
            the most recent being first and older ones after in order.</para>
          <para>&lt;b&gt;Note: this method is only intended for debugging and presenting
            task management user interfaces&lt;/b&gt;.  This should never be used for
            core logic in an application, such as deciding between different
            behaviors based on the information found here.  Such uses are
            &lt;em&gt;not&lt;/em&gt; supported, and will likely break in the future.  For
            example, if multiple applications can be actively running at the
            same time, assumptions made about the meaning of the data here for
            purposes of control flow will be incorrect.</para>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this method is
            no longer available to third party applications: the introduction of
            document-centric recents means
            it can leak personal information to the caller.  For backwards compatibility,
            it will still return a small subset of its data: at least the caller's
            own tasks (though see <c>#getAppTasks()</c> for the correct supported
            way to retrieve that information), and possibly some other tasks
            such as home that are known to not be sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getRecentTasks(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getRecentTasks(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="GetRunningServiceControlPanel">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent? GetRunningServiceControlPanel (Android.Content.ComponentName? service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetRunningServiceControlPanel(class Android.Content.ComponentName service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetRunningServiceControlPanel(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetRunningServiceControlPanel : Android.Content.ComponentName -&gt; Android.App.PendingIntent&#xA;override this.GetRunningServiceControlPanel : Android.Content.ComponentName -&gt; Android.App.PendingIntent" Usage="activityManager.GetRunningServiceControlPanel service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunningServiceControlPanel", "(Landroid/content/ComponentName;)Landroid/app/PendingIntent;", "GetGetRunningServiceControlPanel_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunningServiceControlPanel", "(Landroid/content/ComponentName;)Landroid/app/PendingIntent;", "GetGetRunningServiceControlPanel_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>Returns a PendingIntent you can start to show a control panel for the
            given running service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a PendingIntent you can start to show a control panel for the
            given running service.  If the service does not have a control panel,
            null is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getRunningServiceControlPanel(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getRunningServiceControlPanel(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="GetRunningServices">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningServiceInfo&gt;? GetRunningServices (int maxNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.ActivityManager/RunningServiceInfo&gt; GetRunningServices(int32 maxNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetRunningServices(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetRunningServices : int -&gt; System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningServiceInfo&gt;&#xA;override this.GetRunningServices : int -&gt; System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningServiceInfo&gt;" Usage="activityManager.GetRunningServices maxNum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunningServices", "(I)Ljava/util/List;", "GetGetRunningServices_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunningServices", "(I)Ljava/util/List;", "GetGetRunningServices_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ActivityManager+RunningServiceInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxNum">The maximum number of entries to return in the list.  The
            actual number returned may be smaller, depending on how many services
            are running.</param>
        <summary>Return a list of the services that are currently running.</summary>
        <returns>Returns a list of RunningServiceInfo records describing each of
            the running tasks.</returns>
        <remarks>
          <para>Return a list of the services that are currently running.</para>
          <para>&lt;b&gt;Note: this method is only intended for debugging or implementing
            service management type user interfaces.&lt;/b&gt;</para>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#O</c>, this method
            is no longer available to third party applications.  For backwards compatibility,
            it will still return the caller's own services.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getRunningServices(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getRunningServices(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="GetRunningTasks">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningTaskInfo&gt;? GetRunningTasks (int maxNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.ActivityManager/RunningTaskInfo&gt; GetRunningTasks(int32 maxNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.GetRunningTasks(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetRunningTasks : int -&gt; System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningTaskInfo&gt;&#xA;override this.GetRunningTasks : int -&gt; System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningTaskInfo&gt;" Usage="activityManager.GetRunningTasks maxNum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunningTasks", "(I)Ljava/util/List;", "GetGetRunningTasks_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunningTasks", "(I)Ljava/util/List;", "GetGetRunningTasks_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ActivityManager+RunningTaskInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxNum">The maximum number of entries to return in the list.  The
            actual number returned may be smaller, depending on how many tasks the
            user has started.</param>
        <summary>Return a list of the tasks that are currently running, with
            the most recent being first and older ones after in order.</summary>
        <returns>Returns a list of RunningTaskInfo records describing each of
            the running tasks.</returns>
        <remarks>
          <para>Return a list of the tasks that are currently running, with
            the most recent being first and older ones after in order.  Note that
            "running" does not mean any of the task's code is currently loaded or
            activity -- the task may have been frozen by the system, so that it
            can be restarted in its previous state when next brought to the
            foreground.</para>
          <para>&lt;b&gt;Note: this method is only intended for debugging and presenting
            task management user interfaces&lt;/b&gt;.  This should never be used for
            core logic in an application, such as deciding between different
            behaviors based on the information found here.  Such uses are
            &lt;em&gt;not&lt;/em&gt; supported, and will likely break in the future.  For
            example, if multiple applications can be actively running at the
            same time, assumptions made about the meaning of the data here for
            purposes of control flow will be incorrect.</para>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this method
            is no longer available to third party
            applications: the introduction of document-centric recents means
            it can leak person information to the caller.  For backwards compatibility,
            it will still return a small subset of its data: at least the caller's
            own tasks, and possibly some other tasks
            such as home that are known to not be sensitive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getRunningTasks(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getRunningTasks(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="IsActivityStartAllowedOnDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsActivityStartAllowedOnDisplay (Android.Content.Context context, int displayId, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsActivityStartAllowedOnDisplay(class Android.Content.Context context, int32 displayId, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.IsActivityStartAllowedOnDisplay(Android.Content.Context,System.Int32,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member IsActivityStartAllowedOnDisplay : Android.Content.Context * int * Android.Content.Intent -&gt; bool&#xA;override this.IsActivityStartAllowedOnDisplay : Android.Content.Context * int * Android.Content.Intent -&gt; bool" Usage="activityManager.IsActivityStartAllowedOnDisplay (context, displayId, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isActivityStartAllowedOnDisplay", "(Landroid/content/Context;ILandroid/content/Intent;)Z", "GetIsActivityStartAllowedOnDisplay_Landroid_content_Context_ILandroid_content_Intent_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isActivityStartAllowedOnDisplay", "(Landroid/content/Context;ILandroid/content/Intent;)Z", "GetIsActivityStartAllowedOnDisplay_Landroid_content_Context_ILandroid_content_Intent_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="displayId" Type="System.Int32" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">Source context, from which an activity will be started.</param>
        <param name="displayId">Target display id.</param>
        <param name="intent">Intent used to launch an activity.</param>
        <summary>Check if the context is allowed to start an activity on specified display.</summary>
        <returns>
          <c>true</c> if a call to start an activity on the target display is allowed for the
            provided context and no <c>SecurityException</c> will be thrown, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Check if the context is allowed to start an activity on specified display. Some launch
            restrictions may apply to secondary displays that are private, virtual, or owned by the
            system, in which case an activity start may throw a <c>SecurityException</c>. Call this
            method prior to starting an activity on a secondary display to check if the current context
            has access to it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isActivityStartAllowedOnDisplay(android.content.Context,%20int,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isActivityStartAllowedOnDisplay(android.content.Context, int, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundRestricted">
      <MemberSignature Language="C#" Value="public virtual bool IsBackgroundRestricted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBackgroundRestricted" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsBackgroundRestricted" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundRestricted : bool" Usage="Android.App.ActivityManager.IsBackgroundRestricted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBackgroundRestricted", "()Z", "GetIsBackgroundRestrictedHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBackgroundRestricted", "()Z", "GetIsBackgroundRestrictedHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Query whether the user has enabled background restrictions for this app.</summary>
        <value>true if user has enforced background restrictions for this app, false otherwise.</value>
        <remarks>
          <para>Query whether the user has enabled background restrictions for this app.</para>
          <para>The user may chose to do this, if they see that an app is consuming an unreasonable
            amount of battery while in the background.</para>
          <para>If true, any work that the app tries to do will be aggressively restricted while it is in
            the background. At a minimum, jobs and alarms will not execute and foreground services
            cannot be started unless an app activity is in the foreground.</para>
          <para>&lt;b&gt; Note that these restrictions stay in effect even when the device is charging.&lt;/b&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isBackgroundRestricted()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isBackgroundRestricted()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInLockTaskMode">
      <MemberSignature Language="C#" Value="public virtual bool IsInLockTaskMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInLockTaskMode" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsInLockTaskMode" />
      <MemberSignature Language="F#" Value="member this.IsInLockTaskMode : bool" Usage="Android.App.ActivityManager.IsInLockTaskMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInLockTaskMode", "()Z", "GetIsInLockTaskModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInLockTaskMode", "()Z", "GetIsInLockTaskModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether currently in lock task mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return whether currently in lock task mode.  When in this mode
            no new tasks can be created or switched to.</para>
          <para>This member is deprecated. Use <c>#getLockTaskModeState</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isInLockTaskMode()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isInLockTaskMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.StartLockTask" />
      </Docs>
    </Member>
    <Member MemberName="IsLowMemoryKillReportSupported">
      <MemberSignature Language="C#" Value="public static bool IsLowMemoryKillReportSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsLowMemoryKillReportSupported" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsLowMemoryKillReportSupported" />
      <MemberSignature Language="F#" Value="static member IsLowMemoryKillReportSupported : bool" Usage="Android.App.ActivityManager.IsLowMemoryKillReportSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLowMemoryKillReportSupported", "()Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLowMemoryKillReportSupported", "()Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>Whether or not the low memory kill will be reported in
            <c>#getHistoricalProcessExitReasons</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isLowMemoryKillReportSupported()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isLowMemoryKillReportSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowRamDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsLowRamDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLowRamDevice" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsLowRamDevice" />
      <MemberSignature Language="F#" Value="member this.IsLowRamDevice : bool" Usage="Android.App.ActivityManager.IsLowRamDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLowRamDevice", "()Z", "GetIsLowRamDeviceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLowRamDevice", "()Z", "GetIsLowRamDeviceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this is a low-RAM device.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if this is a low-RAM device.  Exactly whether a device is low-RAM
            is ultimately up to the device configuration, but currently it generally means
            something with 1GB or less of RAM.  This is mostly intended to be used by apps
            to determine whether they should turn off certain features that require more RAM.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isLowRamDevice()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isLowRamDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunningInTestHarness">
      <MemberSignature Language="C#" Value="public static bool IsRunningInTestHarness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsRunningInTestHarness" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsRunningInTestHarness" />
      <MemberSignature Language="F#" Value="static member IsRunningInTestHarness : bool" Usage="Android.App.ActivityManager.IsRunningInTestHarness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRunningInTestHarness", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRunningInTestHarness", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns "true" if device is running in a test harness.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns "true" if device is running in a test harness.</para>
          <para>This member is deprecated. this method is false for all user builds. Users looking to check if their device
            is running in a device farm should see <c>#isRunningInUserTestHarness()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isRunningInTestHarness()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isRunningInTestHarness()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsRunningInUserTestHarness">
      <MemberSignature Language="C#" Value="public static bool IsRunningInUserTestHarness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsRunningInUserTestHarness" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsRunningInUserTestHarness" />
      <MemberSignature Language="F#" Value="static member IsRunningInUserTestHarness : bool" Usage="Android.App.ActivityManager.IsRunningInUserTestHarness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRunningInUserTestHarness", "()Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRunningInUserTestHarness", "()Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns "true" if the device is running in Test Harness Mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns "true" if the device is running in Test Harness Mode.</para>
          <para>Test Harness Mode is a feature that allows devices to run without human interaction in a
            device farm/testing harness (such as Firebase Test Lab). You should check this method if you
            want your app to behave differently when running in a test harness to skip setup screens that
            would impede UI testing. e.g. a keyboard application that has a full screen setup page for
            the first time it is launched.</para>
          <para>Note that you should &lt;em&gt;not&lt;/em&gt; use this to determine whether or not your app is running
            an instrumentation test, as it is not set for a standard device running a test.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isRunningInUserTestHarness()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isRunningInUserTestHarness()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserAMonkey">
      <MemberSignature Language="C#" Value="public static bool IsUserAMonkey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsUserAMonkey" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.IsUserAMonkey" />
      <MemberSignature Language="F#" Value="static member IsUserAMonkey : bool" Usage="Android.App.ActivityManager.IsUserAMonkey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserAMonkey", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserAMonkey", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns "true" if the user interface is currently being messed with
            by a monkey.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns "true" if the user interface is currently being messed with
            by a monkey.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#isUserAMonkey()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.isUserAMonkey()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.ActivityManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KillBackgroundProcesses">
      <MemberSignature Language="C#" Value="public virtual void KillBackgroundProcesses (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void KillBackgroundProcesses(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.KillBackgroundProcesses(System.String)" />
      <MemberSignature Language="F#" Value="abstract member KillBackgroundProcesses : string -&gt; unit&#xA;override this.KillBackgroundProcesses : string -&gt; unit" Usage="activityManager.KillBackgroundProcesses packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("killBackgroundProcesses", "(Ljava/lang/String;)V", "GetKillBackgroundProcesses_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("killBackgroundProcesses", "(Ljava/lang/String;)V", "GetKillBackgroundProcesses_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.KILL_BACKGROUND_PROCESSES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.KILL_BACKGROUND_PROCESSES")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package whose processes are to
            be killed.</param>
        <summary>Have the system immediately kill all background processes associated
            with the given package.</summary>
        <remarks>
          <para>Have the system immediately kill all background processes associated
            with the given package.  This is the same as the kernel killing those
            processes to reclaim memory; the system will take care of restarting
            these processes in the future as needed.
            
            &lt;p class="note"&gt;On devices that run Android 14 or higher,
            third party applications can only use this API to kill their own processes.
            &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#killBackgroundProcesses(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.killBackgroundProcesses(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="LargeMemoryClass">
      <MemberSignature Language="C#" Value="public virtual int LargeMemoryClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeMemoryClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.LargeMemoryClass" />
      <MemberSignature Language="F#" Value="member this.LargeMemoryClass : int" Usage="Android.App.ActivityManager.LargeMemoryClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLargeMemoryClass", "()I", "GetGetLargeMemoryClassHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLargeMemoryClass", "()I", "GetGetLargeMemoryClassHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the approximate per-application memory class of the current
            device when an application is running with a large heap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the approximate per-application memory class of the current
            device when an application is running with a large heap.  This is the
            space available for memory-intensive applications; most applications
            should not need this amount of memory, and should instead stay with the
            <c>#getMemoryClass()</c> limit.  The returned value is in megabytes.
            This may be the same size as <c>#getMemoryClass()</c> on memory
            constrained devices, or it may be significantly larger on devices with
            a large amount of available RAM.</para>
          <para>This is the size of the application's Dalvik heap if it has
            specified <c>android:largeHeap="true"</c> in its manifest.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getLargeMemoryClass()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getLargeMemoryClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LauncherLargeIconDensity">
      <MemberSignature Language="C#" Value="public virtual int LauncherLargeIconDensity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LauncherLargeIconDensity" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.LauncherLargeIconDensity" />
      <MemberSignature Language="F#" Value="member this.LauncherLargeIconDensity : int" Usage="Android.App.ActivityManager.LauncherLargeIconDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLauncherLargeIconDensity", "()I", "GetGetLauncherLargeIconDensityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLauncherLargeIconDensity", "()I", "GetGetLauncherLargeIconDensityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the preferred density of icons for the launcher.</summary>
        <value>density in terms of DPI</value>
        <remarks>
          <para>Get the preferred density of icons for the launcher. This is used when
            custom drawables are created (e.g., for shortcuts).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getLauncherLargeIconDensity()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getLauncherLargeIconDensity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LauncherLargeIconSize">
      <MemberSignature Language="C#" Value="public virtual int LauncherLargeIconSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LauncherLargeIconSize" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.LauncherLargeIconSize" />
      <MemberSignature Language="F#" Value="member this.LauncherLargeIconSize : int" Usage="Android.App.ActivityManager.LauncherLargeIconSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLauncherLargeIconSize", "()I", "GetGetLauncherLargeIconSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLauncherLargeIconSize", "()I", "GetGetLauncherLargeIconSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the preferred launcher icon size.</summary>
        <value>dimensions of square icons in terms of pixels</value>
        <remarks>
          <para>Get the preferred launcher icon size. This is used when custom drawables
            are created (e.g., for shortcuts).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getLauncherLargeIconSize()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getLauncherLargeIconSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LockTaskModeState">
      <MemberSignature Language="C#" Value="public virtual Android.App.LockTaskMode LockTaskModeState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.LockTaskMode LockTaskModeState" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.LockTaskModeState" />
      <MemberSignature Language="F#" Value="member this.LockTaskModeState : Android.App.LockTaskMode" Usage="Android.App.ActivityManager.LockTaskModeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLockTaskModeState", "()I", "GetGetLockTaskModeStateHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLockTaskModeState", "()I", "GetGetLockTaskModeStateHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.LockTaskMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current state of task locking.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the current state of task locking. The three possible outcomes
            are <c>#LOCK_TASK_MODE_NONE</c>, <c>#LOCK_TASK_MODE_LOCKED</c>
            and <c>#LOCK_TASK_MODE_PINNED</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getLockTaskModeState()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getLockTaskModeState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryClass">
      <MemberSignature Language="C#" Value="public virtual int MemoryClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.MemoryClass" />
      <MemberSignature Language="F#" Value="member this.MemoryClass : int" Usage="Android.App.ActivityManager.MemoryClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMemoryClass", "()I", "GetGetMemoryClassHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMemoryClass", "()I", "GetGetMemoryClassHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the approximate per-application memory class of the current
            device.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the approximate per-application memory class of the current
            device.  This gives you an idea of how hard a memory limit you should
            impose on your application to let the overall system work best.  The
            returned value is in megabytes; the baseline Android memory class is
            16 (which happens to be the Java heap limit of those devices); some
            devices with more memory may return 24 or even higher numbers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getMemoryClass()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getMemoryClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="MetaHomeAlternate">
      <MemberSignature Language="C#" Value="public const string MetaHomeAlternate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MetaHomeAlternate" />
      <MemberSignature Language="DocId" Value="F:Android.App.ActivityManager.MetaHomeAlternate" />
      <MemberSignature Language="F#" Value="val mutable MetaHomeAlternate : string" Usage="Android.App.ActivityManager.MetaHomeAlternate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("META_HOME_ALTERNATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("META_HOME_ALTERNATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see href="https://developer.android.com/guide/topics/manifest/meta-data-element.html">
            <c>&lt;meta-data&gt;</c>
          </see> name for a 'home' Activity that declares a package that is to be
            uninstalled in lieu of the declaring one.</summary>
        <remarks>
          <para>
            <see href="https://developer.android.com/guide/topics/manifest/meta-data-element.html">
              <c>&lt;meta-data&gt;</c>
            </see> name for a 'home' Activity that declares a package that is to be
            uninstalled in lieu of the declaring one.  The package named here must be
            signed with the same certificate as the one declaring the <c>&lt;meta-data&gt;</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#META_HOME_ALTERNATE" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.META_HOME_ALTERNATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTaskToFront">
      <MemberSignature Language="C#" Value="public virtual void MoveTaskToFront (int taskId, Android.App.MoveTaskFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTaskToFront(int32 taskId, valuetype Android.App.MoveTaskFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.MoveTaskToFront(System.Int32,Android.App.MoveTaskFlags)" />
      <MemberSignature Language="F#" Value="abstract member MoveTaskToFront : int * Android.App.MoveTaskFlags -&gt; unit&#xA;override this.MoveTaskToFront : int * Android.App.MoveTaskFlags -&gt; unit" Usage="activityManager.MoveTaskToFront (taskId, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("moveTaskToFront", "(II)V", "GetMoveTaskToFront_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("moveTaskToFront", "(II)V", "GetMoveTaskToFront_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.REORDER_TASKS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.REORDER_TASKS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.MoveTaskFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="taskId">The identifier of the task to be moved, as found in
            <c>RunningTaskInfo</c> or <c>RecentTaskInfo</c>.</param>
        <param name="flags">Additional operational flags.</param>
        <summary>Equivalent to calling <c>#moveTaskToFront(int, int, Bundle)</c>
            with a null options argument.</summary>
        <remarks>
          <para>Equivalent to calling <c>#moveTaskToFront(int, int, Bundle)</c>
            with a null options argument.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#moveTaskToFront(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.moveTaskToFront(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MoveTaskToFront">
      <MemberSignature Language="C#" Value="public void MoveTaskToFront (int taskId, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTaskToFront(int32 taskId, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.MoveTaskToFront(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.MoveTaskToFront : int * int -&gt; unit" Usage="activityManager.MoveTaskToFront (taskId, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="taskId">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTaskToFront">
      <MemberSignature Language="C#" Value="public virtual void MoveTaskToFront (int taskId, Android.App.MoveTaskFlags flags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTaskToFront(int32 taskId, valuetype Android.App.MoveTaskFlags flags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.MoveTaskToFront(System.Int32,Android.App.MoveTaskFlags,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member MoveTaskToFront : int * Android.App.MoveTaskFlags * Android.OS.Bundle -&gt; unit&#xA;override this.MoveTaskToFront : int * Android.App.MoveTaskFlags * Android.OS.Bundle -&gt; unit" Usage="activityManager.MoveTaskToFront (taskId, flags, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("moveTaskToFront", "(IILandroid/os/Bundle;)V", "GetMoveTaskToFront_IILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("moveTaskToFront", "(IILandroid/os/Bundle;)V", "GetMoveTaskToFront_IILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.REORDER_TASKS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.REORDER_TASKS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.MoveTaskFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="taskId">The identifier of the task to be moved, as found in
            <c>RunningTaskInfo</c> or <c>RecentTaskInfo</c>.</param>
        <param name="flags">Additional operational flags.</param>
        <param name="options">Additional options for the operation, either null or
            as per <c>Context#startActivity(Intent, android.os.Bundle)
            Context.startActivity(Intent, Bundle)</c>.</param>
        <summary>Ask that the task associated with a given task ID be moved to the
            front of the stack, so it is now visible to the user.</summary>
        <remarks>
          <para>Ask that the task associated with a given task ID be moved to the
            front of the stack, so it is now visible to the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#moveTaskToFront(int,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.moveTaskToFront(int, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ProcessesInErrorState">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ActivityManager.ProcessErrorStateInfo&gt;? ProcessesInErrorState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.ActivityManager/ProcessErrorStateInfo&gt; ProcessesInErrorState" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.ProcessesInErrorState" />
      <MemberSignature Language="F#" Value="member this.ProcessesInErrorState : System.Collections.Generic.IList&lt;Android.App.ActivityManager.ProcessErrorStateInfo&gt;" Usage="Android.App.ActivityManager.ProcessesInErrorState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProcessesInErrorState", "()Ljava/util/List;", "GetGetProcessesInErrorStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProcessesInErrorState", "()Ljava/util/List;", "GetGetProcessesInErrorStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ActivityManager+ProcessErrorStateInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of any processes that are currently in an error condition.</summary>
        <value>Returns a list of <c>ProcessErrorStateInfo</c> records, or null if there are no
            current error conditions (it will not return an empty list).  This list ordering is not
            specified.</value>
        <remarks>
          <para>Returns a list of any processes that are currently in an error condition.  The result
            will be null if all processes are running properly at this time.</para>
          <para>As of <c>android.os.Build.VERSION_CODES#TIRAMISU Android TIRAMISU</c>, for regular apps
            this method will only return <c>ProcessErrorStateInfo</c> records for the processes running
            as the caller's uid, unless the caller has the permission
            <c>android.Manifest.permission#DUMP</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getProcessesInErrorState()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getProcessesInErrorState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestartPackage">
      <MemberSignature Language="C#" Value="public virtual void RestartPackage (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestartPackage(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.RestartPackage(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RestartPackage : string -&gt; unit&#xA;override this.RestartPackage : string -&gt; unit" Usage="activityManager.RestartPackage packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restartPackage", "(Ljava/lang/String;)V", "GetRestartPackage_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restartPackage", "(Ljava/lang/String;)V", "GetRestartPackage_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. This is now just a wrapper for
            <c>#killBackgroundProcesses(String)</c>; the previous behavior here
            is no longer available to applications because it allows them to
            break other applications by removing their alarms, stopping their
            services, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#restartPackage(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.restartPackage(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RunningAppProcesses">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningAppProcessInfo&gt;? RunningAppProcesses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.ActivityManager/RunningAppProcessInfo&gt; RunningAppProcesses" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.RunningAppProcesses" />
      <MemberSignature Language="F#" Value="member this.RunningAppProcesses : System.Collections.Generic.IList&lt;Android.App.ActivityManager.RunningAppProcessInfo&gt;" Usage="Android.App.ActivityManager.RunningAppProcesses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRunningAppProcesses", "()Ljava/util/List;", "GetGetRunningAppProcessesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRunningAppProcesses", "()Ljava/util/List;", "GetGetRunningAppProcessesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.ActivityManager+RunningAppProcessInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of application processes that are running on the device.</summary>
        <value>Returns a list of RunningAppProcessInfo records, or null if there are no
            running processes (it will not return an empty list).  This list ordering is not
            specified.</value>
        <remarks>
          <para>Returns a list of application processes that are running on the device.</para>
          <para>&lt;b&gt;Note: this method is only intended for debugging or building
            a user-facing process management UI.&lt;/b&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#getRunningAppProcesses()" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.getRunningAppProcesses()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetProcessStateSummary">
      <MemberSignature Language="C#" Value="public virtual void SetProcessStateSummary (byte[]? state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProcessStateSummary(unsigned int8[] state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.SetProcessStateSummary(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member SetProcessStateSummary : byte[] -&gt; unit&#xA;override this.SetProcessStateSummary : byte[] -&gt; unit" Usage="activityManager.SetProcessStateSummary state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProcessStateSummary", "([B)V", "GetSetProcessStateSummary_arrayBHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProcessStateSummary", "([B)V", "GetSetProcessStateSummary_arrayBHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="state">The state data. To be advised, &lt;b&gt;DO NOT&lt;/b&gt; include sensitive information/data
            (PII, SPII, or other sensitive user data) here. Maximum length is 128 bytes.</param>
        <summary>Set custom state data for this process.</summary>
        <remarks>
          <para>Set custom state data for this process. It will be included in the record of
            <c>ApplicationExitInfo</c> on the death of the current calling process; the new process
            of the app can retrieve this state data by calling
            <c>android.app.ApplicationExitInfo#getProcessStateSummary()
            ApplicationExitInfo.getProcessStateSummary()</c> on the record returned by
            <c>#getHistoricalProcessExitReasons</c>.</para>
          <para>This would be useful for the calling app to save its stateful data: if it's
            killed later for any reason, the new process of the app can know what the
            previous process of the app was doing. For instance, you could use this to encode
            the current level in a game, or a set of features/experiments that were enabled. Later you
            could analyze under what circumstances the app tends to crash or use too much memory.
            However, it's not suggested to rely on this to restore the applications previous UI state
            or so, it's only meant for analyzing application healthy status.</para>
          <para>System might decide to throttle the calls to this API; so call this API in a reasonable
            manner, excessive calls to this API could result a <c>java.lang.RuntimeException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#setProcessStateSummary(byte[])" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.setProcessStateSummary(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVrThread">
      <MemberSignature Language="C#" Value="public static void SetVrThread (int tid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetVrThread(int32 tid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.SetVrThread(System.Int32)" />
      <MemberSignature Language="F#" Value="static member SetVrThread : int -&gt; unit" Usage="Android.App.ActivityManager.SetVrThread tid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVrThread", "(I)V", "", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVrThread", "(I)V", "", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android25.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android25.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tid">tid of the VR thread</param>
        <summary>Enable more aggressive scheduling for latency-sensitive low-runtime VR threads.</summary>
        <remarks>
          <para>Enable more aggressive scheduling for latency-sensitive low-runtime VR threads. Only one
            thread can be a VR thread in a process at a time, and that thread may be subject to
            restrictions on the amount of time it can run.</para>
          <para>If persistent VR mode is set, whatever thread has been granted aggressive scheduling via this
            method will return to normal operation, and calling this method will do nothing while
            persistent VR mode is enabled.</para>
          <para>To reset the VR thread for an application, a tid of 0 can be passed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#setVrThread(int)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.setVrThread(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWatchHeapLimit">
      <MemberSignature Language="C#" Value="public virtual void SetWatchHeapLimit (long pssSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWatchHeapLimit(int64 pssSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.ActivityManager.SetWatchHeapLimit(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetWatchHeapLimit : int64 -&gt; unit&#xA;override this.SetWatchHeapLimit : int64 -&gt; unit" Usage="activityManager.SetWatchHeapLimit pssSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWatchHeapLimit", "(J)V", "GetSetWatchHeapLimit_JHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWatchHeapLimit", "(J)V", "GetSetWatchHeapLimit_JHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pssSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="pssSize">The size in bytes to set the limit at.</param>
        <summary>Request that the system start watching for the calling process to exceed a pss
            size as given here.</summary>
        <remarks>
          <para>Request that the system start watching for the calling process to exceed a pss
            size as given here.  Once called, the system will look for any occasions where it
            sees the associated process with a larger pss size and, when this happens, automatically
            pull a heap dump from it and allow the user to share the data.  Note that this request
            continues running even if the process is killed and restarted.  To remove the watch,
            use <c>#clearWatchHeapLimit()</c>.</para>
          <para>This API only works if the calling process has been marked as
            <c>ApplicationInfo#FLAG_DEBUGGABLE</c> or this is running on a debuggable
            (userdebug or eng) build.</para>
          <para>Callers can optionally implement <c>#ACTION_REPORT_HEAP_LIMIT</c> to directly
            handle heap limit reports themselves.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/ActivityManager#setWatchHeapLimit(long)" title="Reference documentation">Java documentation for <code>android.app.ActivityManager.setWatchHeapLimit(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.ActivityManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.ActivityManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.ActivityManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
