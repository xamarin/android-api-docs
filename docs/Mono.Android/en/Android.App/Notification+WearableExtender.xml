<Type Name="Notification+WearableExtender" FullName="Android.App.Notification+WearableExtender">
  <TypeSignature Language="C#" Value="public sealed class Notification.WearableExtender : Java.Lang.Object, Android.App.Notification.IExtender, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit Notification/WearableExtender extends Java.Lang.Object implements class Android.App.Notification/IExtender, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.App.Notification.WearableExtender" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Notification.WearableExtender&#xA;Inherits Object&#xA;Implements IDisposable, IJavaPeerable, Notification.IExtender" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Notification::WearableExtender sealed : Java::Lang::Object, Android::App::Notification::IExtender, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="F#" Value="type Notification.WearableExtender = class&#xA;    inherit Object&#xA;    interface Notification.IExtender&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.App.Notification+IExtender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/Notification$WearableExtender", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/Notification$WearableExtender", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Helper class to add wearable extensions to notifications.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WearableExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WearableExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a <c>android.app.Notification.WearableExtender</c> with default
            options.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#Notification$WearableExtender()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.Notification$WearableExtender()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WearableExtender (Android.App.Notification? notif);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.App.Notification notif) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.#ctor(Android.App.Notification)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (notif As Notification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WearableExtender(Android::App::Notification ^ notif);" />
      <MemberSignature Language="F#" Value="new Android.App.Notification.WearableExtender : Android.App.Notification -&gt; Android.App.Notification.WearableExtender" Usage="new Android.App.Notification.WearableExtender notif" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/app/Notification;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/app/Notification;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="notif" Type="Android.App.Notification" />
      </Parameters>
      <Docs>
        <param name="notif">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.App.Notification.Action&gt;? Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.Notification/Action&gt; Actions" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As IList(Of Notification.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Android::App::Notification::Action ^&gt; ^ Actions { System::Collections::Generic::IList&lt;Android::App::Notification::Action ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Actions : System.Collections.Generic.IList&lt;Android.App.Notification.Action&gt;" Usage="Android.App.Notification.WearableExtender.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActions", "()Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActions", "()Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Notification+Action&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the wearable actions present on this notification.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getActions()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getActions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAction">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? AddAction (Android.App.Notification.Action? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender AddAction(class Android.App.Notification/Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.AddAction(Android.App.Notification.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAction (action As Notification.Action) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ AddAction(Android::App::Notification::Action ^ action);" />
      <MemberSignature Language="F#" Value="member this.AddAction : Android.App.Notification.Action -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.AddAction action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addAction", "(Landroid/app/Notification$Action;)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addAction", "(Landroid/app/Notification$Action;)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.App.Notification+Action" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActions">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? AddActions (System.Collections.Generic.IList&lt;Android.App.Notification.Action&gt;? actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender AddActions(class System.Collections.Generic.IList`1&lt;class Android.App.Notification/Action&gt; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.AddActions(System.Collections.Generic.IList{Android.App.Notification.Action})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddActions (actions As IList(Of Notification.Action)) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ AddActions(System::Collections::Generic::IList&lt;Android::App::Notification::Action ^&gt; ^ actions);" />
      <MemberSignature Language="F#" Value="member this.AddActions : System.Collections.Generic.IList&lt;Android.App.Notification.Action&gt; -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.AddActions actions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addActions", "(Ljava/util/List;)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addActions", "(Ljava/util/List;)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Collections.Generic.IList&lt;Android.App.Notification+Action&gt;" />
      </Parameters>
      <Docs>
        <param name="actions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPage">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? AddPage (Android.App.Notification? page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender AddPage(class Android.App.Notification page) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.AddPage(Android.App.Notification)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPage (page As Notification) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ AddPage(Android::App::Notification ^ page);" />
      <MemberSignature Language="F#" Value="member this.AddPage : Android.App.Notification -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.AddPage page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPage", "(Landroid/app/Notification;)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPage", "(Landroid/app/Notification;)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="Android.App.Notification" />
      </Parameters>
      <Docs>
        <param name="page">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPages">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? AddPages (System.Collections.Generic.IList&lt;Android.App.Notification&gt;? pages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender AddPages(class System.Collections.Generic.IList`1&lt;class Android.App.Notification&gt; pages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.AddPages(System.Collections.Generic.IList{Android.App.Notification})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPages (pages As IList(Of Notification)) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ AddPages(System::Collections::Generic::IList&lt;Android::App::Notification ^&gt; ^ pages);" />
      <MemberSignature Language="F#" Value="member this.AddPages : System.Collections.Generic.IList&lt;Android.App.Notification&gt; -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.AddPages pages" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPages", "(Ljava/util/List;)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPages", "(Ljava/util/List;)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pages" Type="System.Collections.Generic.IList&lt;Android.App.Notification&gt;" />
      </Parameters>
      <Docs>
        <param name="pages">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? Background { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap Background" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.Background" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Background As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Graphics::Bitmap ^ Background { Android::Graphics::Bitmap ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Background : Android.Graphics.Bitmap" Usage="Android.App.Notification.WearableExtender.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackground", "()Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackground", "()Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a background image to be displayed behind the notification content.</summary>
        <value>the background image</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getBackground()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getBackground()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BridgeTag">
      <MemberSignature Language="C#" Value="public string? BridgeTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BridgeTag" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.BridgeTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BridgeTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BridgeTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BridgeTag : string" Usage="Android.App.Notification.WearableExtender.BridgeTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBridgeTag", "()Ljava/lang/String;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBridgeTag", "()Ljava/lang/String;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bridge tag of the notification.</summary>
        <value>the bridge tag or null if not present.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getBridgeTag()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getBridgeTag()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearActions">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? ClearActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender ClearActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.ClearActions" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearActions () As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ ClearActions();" />
      <MemberSignature Language="F#" Value="member this.ClearActions : unit -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.ClearActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearActions", "()Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearActions", "()Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPages">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? ClearPages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender ClearPages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.ClearPages" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearPages () As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ ClearPages();" />
      <MemberSignature Language="F#" Value="member this.ClearPages : unit -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.ClearPages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearPages", "()Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearPages", "()Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentAction">
      <MemberSignature Language="C#" Value="public int ContentAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentAction" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.ContentAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentAction { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentAction : int" Usage="Android.App.Notification.WearableExtender.ContentAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentAction", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentAction", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the index of the notification action, if any, that was specified as the primary
            action.</summary>
        <value>the action index or <c>#UNSET_ACTION_INDEX</c> if no action was selected.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getContentAction()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getContentAction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentIcon">
      <MemberSignature Language="C#" Value="public int ContentIcon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentIcon" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.ContentIcon" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentIcon As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentIcon { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentIcon : int" Usage="Android.App.Notification.WearableExtender.ContentIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentIcon", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentIcon", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get an icon that goes with the content of this notification.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getContentIcon()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getContentIcon()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentIconGravity">
      <MemberSignature Language="C#" Value="public Android.Views.GravityFlags ContentIconGravity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.GravityFlags ContentIconGravity" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.ContentIconGravity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentIconGravity As GravityFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::GravityFlags ContentIconGravity { Android::Views::GravityFlags get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentIconGravity : Android.Views.GravityFlags" Usage="Android.App.Notification.WearableExtender.ContentIconGravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentIconGravity", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentIconGravity", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.GravityFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the gravity that the content icon should have within the notification display.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getContentIconGravity()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getContentIconGravity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentIntentAvailableOffline">
      <MemberSignature Language="C#" Value="public bool ContentIntentAvailableOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContentIntentAvailableOffline" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.ContentIntentAvailableOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentIntentAvailableOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContentIntentAvailableOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentIntentAvailableOffline : bool" Usage="Android.App.Notification.WearableExtender.ContentIntentAvailableOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentIntentAvailableOffline", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentIntentAvailableOffline", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get whether the content intent is available when the wearable device is not connected
            to a companion device.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getContentIntentAvailableOffline()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getContentIntentAvailableOffline()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomContentHeight">
      <MemberSignature Language="C#" Value="public int CustomContentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomContentHeight" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.CustomContentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomContentHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomContentHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomContentHeight : int" Usage="Android.App.Notification.WearableExtender.CustomContentHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCustomContentHeight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCustomContentHeight", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the custom height in pixels for the display of this notification's content.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getCustomContentHeight()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getCustomContentHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomSizePreset">
      <MemberSignature Language="C#" Value="public Android.App.WearableSizePreset CustomSizePreset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.WearableSizePreset CustomSizePreset" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.CustomSizePreset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomSizePreset As WearableSizePreset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::App::WearableSizePreset CustomSizePreset { Android::App::WearableSizePreset get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSizePreset : Android.App.WearableSizePreset" Usage="Android.App.Notification.WearableExtender.CustomSizePreset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCustomSizePreset", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCustomSizePreset", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WearableSizePreset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the custom size preset for the display of this notification out of the available
            presets found in <c>android.app.Notification.WearableExtender</c>, e.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getCustomSizePreset()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getCustomSizePreset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissalId">
      <MemberSignature Language="C#" Value="public string? DismissalId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DismissalId" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.DismissalId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DismissalId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DismissalId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DismissalId : string" Usage="Android.App.Notification.WearableExtender.DismissalId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDismissalId", "()Ljava/lang/String;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDismissalId", "()Ljava/lang/String;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the dismissal id of the notification.</summary>
        <value>the dismissal id of the notification or null if it has not been set.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getDismissalId()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getDismissalId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayIntent">
      <MemberSignature Language="C#" Value="public Android.App.PendingIntent? DisplayIntent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.PendingIntent DisplayIntent" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.DisplayIntent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayIntent As PendingIntent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::App::PendingIntent ^ DisplayIntent { Android::App::PendingIntent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayIntent : Android.App.PendingIntent" Usage="Android.App.Notification.WearableExtender.DisplayIntent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDisplayIntent", "()Landroid/app/PendingIntent;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDisplayIntent", "()Landroid/app/PendingIntent;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the intent to launch inside of an activity view when displaying this
            notification.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getDisplayIntent()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getDisplayIntent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extend">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder? Extend (Android.App.Notification.Builder? builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder Extend(class Android.App.Notification/Builder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.Extend(Android.App.Notification.Builder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Extend (builder As Notification.Builder) As Notification.Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Notification::Builder ^ Extend(Android::App::Notification::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member Extend : Android.App.Notification.Builder -&gt; Android.App.Notification.Builder&#xA;override this.Extend : Android.App.Notification.Builder -&gt; Android.App.Notification.Builder" Usage="wearableExtender.Extend builder" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.App.Notification.IExtender.Extend(Android.App.Notification.Builder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extend", "(Landroid/app/Notification$Builder;)Landroid/app/Notification$Builder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("extend", "(Landroid/app/Notification$Builder;)Landroid/app/Notification$Builder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Android.App.Notification+Builder" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gravity">
      <MemberSignature Language="C#" Value="public Android.Views.GravityFlags Gravity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.GravityFlags Gravity" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.Gravity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Gravity As GravityFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::GravityFlags Gravity { Android::Views::GravityFlags get(); };" />
      <MemberSignature Language="F#" Value="member this.Gravity : Android.Views.GravityFlags" Usage="Android.App.Notification.WearableExtender.Gravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGravity", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGravity", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.GravityFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the gravity that this notification should have within the available viewport space.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getGravity()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getGravity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintAmbientBigPicture">
      <MemberSignature Language="C#" Value="public bool HintAmbientBigPicture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HintAmbientBigPicture" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.HintAmbientBigPicture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HintAmbientBigPicture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HintAmbientBigPicture { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HintAmbientBigPicture : bool" Usage="Android.App.Notification.WearableExtender.HintAmbientBigPicture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHintAmbientBigPicture", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHintAmbientBigPicture", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a hint that this notification's <c>BigPictureStyle</c> (if present) should be
            converted to low-bit and displayed in ambient mode, especially useful for barcodes and
            qr codes, as well as other simple black-and-white tickets.</summary>
        <value>
          <c>true</c> if it should be displayed in ambient, false otherwise
            otherwise. The default value is <c>false</c> if this was never set.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getHintAmbientBigPicture()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getHintAmbientBigPicture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintAvoidBackgroundClipping">
      <MemberSignature Language="C#" Value="public bool HintAvoidBackgroundClipping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HintAvoidBackgroundClipping" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.HintAvoidBackgroundClipping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HintAvoidBackgroundClipping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HintAvoidBackgroundClipping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HintAvoidBackgroundClipping : bool" Usage="Android.App.Notification.WearableExtender.HintAvoidBackgroundClipping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHintAvoidBackgroundClipping", "()Z", "", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHintAvoidBackgroundClipping", "()Z", "", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a hint that this notification's background should not be clipped if possible,
            and should instead be resized to fully display on the screen, retaining the aspect
            ratio of the image.</summary>
        <value>
          <c>true</c> if it's ok if the background is clipped on the screen, false
            otherwise. The default value is <c>false</c> if this was never set.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getHintAvoidBackgroundClipping()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getHintAvoidBackgroundClipping()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintContentIntentLaunchesActivity">
      <MemberSignature Language="C#" Value="public bool HintContentIntentLaunchesActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HintContentIntentLaunchesActivity" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.HintContentIntentLaunchesActivity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HintContentIntentLaunchesActivity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HintContentIntentLaunchesActivity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HintContentIntentLaunchesActivity : bool" Usage="Android.App.Notification.WearableExtender.HintContentIntentLaunchesActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHintContentIntentLaunchesActivity", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHintContentIntentLaunchesActivity", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a hint that this notification's content intent will launch an <c>Activity</c>
            directly, telling the platform that it can generate the appropriate transitions</summary>
        <value>
          <c>true</c> if the content intent will launch an activity and transitions should
            be generated, false otherwise. The default value is <c>false</c> if this was never set.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getHintContentIntentLaunchesActivity()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getHintContentIntentLaunchesActivity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintHideIcon">
      <MemberSignature Language="C#" Value="public bool HintHideIcon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HintHideIcon" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.HintHideIcon" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HintHideIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HintHideIcon { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HintHideIcon : bool" Usage="Android.App.Notification.WearableExtender.HintHideIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHintHideIcon", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHintHideIcon", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a hint that this notification's icon should not be displayed.</summary>
        <value>
          <c>true</c> if this icon should not be displayed, false otherwise.
            The default value is <c>false</c> if this was never set.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getHintHideIcon()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getHintHideIcon()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintScreenTimeout">
      <MemberSignature Language="C#" Value="public int HintScreenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HintScreenTimeout" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.HintScreenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HintScreenTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HintScreenTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HintScreenTimeout : int" Usage="Android.App.Notification.WearableExtender.HintScreenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHintScreenTimeout", "()I", "", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHintScreenTimeout", "()I", "", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the duration, in milliseconds, that the screen should remain on for
            when this notification is displayed.</summary>
        <value>the duration in milliseconds if &gt; 0, or either one of the sentinel values
                <c>#SCREEN_TIMEOUT_SHORT</c> or <c>#SCREEN_TIMEOUT_LONG</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getHintScreenTimeout()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getHintScreenTimeout()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintShowBackgroundOnly">
      <MemberSignature Language="C#" Value="public bool HintShowBackgroundOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HintShowBackgroundOnly" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.HintShowBackgroundOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HintShowBackgroundOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HintShowBackgroundOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HintShowBackgroundOnly : bool" Usage="Android.App.Notification.WearableExtender.HintShowBackgroundOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHintShowBackgroundOnly", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHintShowBackgroundOnly", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a visual hint that only the background image of this notification should be
            displayed, and other semantic content should be hidden.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getHintShowBackgroundOnly()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getHintShowBackgroundOnly()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Notification.WearableExtender.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pages">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.App.Notification&gt;? Pages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.Notification&gt; Pages" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.Pages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pages As IList(Of Notification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Android::App::Notification ^&gt; ^ Pages { System::Collections::Generic::IList&lt;Android::App::Notification ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pages : System.Collections.Generic.IList&lt;Android.App.Notification&gt;" Usage="Android.App.Notification.WearableExtender.Pages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPages", "()Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPages", "()Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Notification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the array of additional pages of content for displaying this notification.</summary>
        <value>the pages for this notification</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getPages()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getPages()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenTimeoutLong">
      <MemberSignature Language="C#" Value="public const int ScreenTimeoutLong = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ScreenTimeoutLong = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Notification.WearableExtender.ScreenTimeoutLong" />
      <MemberSignature Language="VB.NET" Value="Public Const ScreenTimeoutLong As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int ScreenTimeoutLong = -1;" />
      <MemberSignature Language="F#" Value="val mutable ScreenTimeoutLong : int" Usage="Android.App.Notification.WearableExtender.ScreenTimeoutLong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCREEN_TIMEOUT_LONG", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCREEN_TIMEOUT_LONG", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Sentinel value for use with <c>#setHintScreenTimeout</c> to keep the screen on
            for a longer amount of time when this notification is displayed on the screen.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#SCREEN_TIMEOUT_LONG" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.SCREEN_TIMEOUT_LONG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenTimeoutShort">
      <MemberSignature Language="C#" Value="public const int ScreenTimeoutShort = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ScreenTimeoutShort = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Notification.WearableExtender.ScreenTimeoutShort" />
      <MemberSignature Language="VB.NET" Value="Public Const ScreenTimeoutShort As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int ScreenTimeoutShort = 0;" />
      <MemberSignature Language="F#" Value="val mutable ScreenTimeoutShort : int" Usage="Android.App.Notification.WearableExtender.ScreenTimeoutShort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCREEN_TIMEOUT_SHORT", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCREEN_TIMEOUT_SHORT", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Sentinel value for use with <c>#setHintScreenTimeout</c> to keep the screen on for a
            short amount of time when this notification is displayed on the screen.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#SCREEN_TIMEOUT_SHORT" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.SCREEN_TIMEOUT_SHORT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackground">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetBackground (Android.Graphics.Bitmap? background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetBackground(class Android.Graphics.Bitmap background) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetBackground(Android.Graphics.Bitmap)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBackground (background As Bitmap) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetBackground(Android::Graphics::Bitmap ^ background);" />
      <MemberSignature Language="F#" Value="member this.SetBackground : Android.Graphics.Bitmap -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetBackground background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackground", "(Landroid/graphics/Bitmap;)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackground", "(Landroid/graphics/Bitmap;)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="background">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBridgeTag">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetBridgeTag (string? bridgeTag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetBridgeTag(string bridgeTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetBridgeTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBridgeTag (bridgeTag As String) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetBridgeTag(System::String ^ bridgeTag);" />
      <MemberSignature Language="F#" Value="member this.SetBridgeTag : string -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetBridgeTag bridgeTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBridgeTag", "(Ljava/lang/String;)Landroid/app/Notification$WearableExtender;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBridgeTag", "(Ljava/lang/String;)Landroid/app/Notification$WearableExtender;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bridgeTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bridgeTag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentAction">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetContentAction (int actionIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetContentAction(int32 actionIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetContentAction(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetContentAction (actionIndex As Integer) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetContentAction(int actionIndex);" />
      <MemberSignature Language="F#" Value="member this.SetContentAction : int -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetContentAction actionIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentAction", "(I)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentAction", "(I)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="actionIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentIcon">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetContentIcon (int icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetContentIcon(int32 icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetContentIcon(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetContentIcon (icon As Integer) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetContentIcon(int icon);" />
      <MemberSignature Language="F#" Value="member this.SetContentIcon : int -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetContentIcon icon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentIcon", "(I)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentIcon", "(I)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="icon">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentIconGravity">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetContentIconGravity (Android.Views.GravityFlags contentIconGravity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetContentIconGravity(valuetype Android.Views.GravityFlags contentIconGravity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetContentIconGravity(Android.Views.GravityFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetContentIconGravity (contentIconGravity As GravityFlags) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetContentIconGravity(Android::Views::GravityFlags contentIconGravity);" />
      <MemberSignature Language="F#" Value="member this.SetContentIconGravity : Android.Views.GravityFlags -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetContentIconGravity contentIconGravity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentIconGravity", "(I)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentIconGravity", "(I)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentIconGravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="contentIconGravity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentIntentAvailableOffline">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetContentIntentAvailableOffline (bool contentIntentAvailableOffline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetContentIntentAvailableOffline(bool contentIntentAvailableOffline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetContentIntentAvailableOffline(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetContentIntentAvailableOffline (contentIntentAvailableOffline As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetContentIntentAvailableOffline(bool contentIntentAvailableOffline);" />
      <MemberSignature Language="F#" Value="member this.SetContentIntentAvailableOffline : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetContentIntentAvailableOffline contentIntentAvailableOffline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentIntentAvailableOffline", "(Z)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentIntentAvailableOffline", "(Z)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentIntentAvailableOffline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="contentIntentAvailableOffline">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCustomContentHeight">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetCustomContentHeight (int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetCustomContentHeight(int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetCustomContentHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCustomContentHeight (height As Integer) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetCustomContentHeight(int height);" />
      <MemberSignature Language="F#" Value="member this.SetCustomContentHeight : int -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetCustomContentHeight height" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCustomContentHeight", "(I)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCustomContentHeight", "(I)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCustomSizePreset">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetCustomSizePreset (Android.App.WearableSizePreset sizePreset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetCustomSizePreset(valuetype Android.App.WearableSizePreset sizePreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetCustomSizePreset(Android.App.WearableSizePreset)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCustomSizePreset (sizePreset As WearableSizePreset) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetCustomSizePreset(Android::App::WearableSizePreset sizePreset);" />
      <MemberSignature Language="F#" Value="member this.SetCustomSizePreset : Android.App.WearableSizePreset -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetCustomSizePreset sizePreset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCustomSizePreset", "(I)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCustomSizePreset", "(I)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizePreset" Type="Android.App.WearableSizePreset">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sizePreset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDismissalId">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetDismissalId (string? dismissalId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetDismissalId(string dismissalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetDismissalId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDismissalId (dismissalId As String) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetDismissalId(System::String ^ dismissalId);" />
      <MemberSignature Language="F#" Value="member this.SetDismissalId : string -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetDismissalId dismissalId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDismissalId", "(Ljava/lang/String;)Landroid/app/Notification$WearableExtender;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDismissalId", "(Ljava/lang/String;)Landroid/app/Notification$WearableExtender;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dismissalId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dismissalId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayIntent">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetDisplayIntent (Android.App.PendingIntent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetDisplayIntent(class Android.App.PendingIntent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetDisplayIntent(Android.App.PendingIntent)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDisplayIntent (intent As PendingIntent) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetDisplayIntent(Android::App::PendingIntent ^ intent);" />
      <MemberSignature Language="F#" Value="member this.SetDisplayIntent : Android.App.PendingIntent -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetDisplayIntent intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDisplayIntent", "(Landroid/app/PendingIntent;)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDisplayIntent", "(Landroid/app/PendingIntent;)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGravity">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetGravity (Android.Views.GravityFlags gravity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetGravity(valuetype Android.Views.GravityFlags gravity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetGravity(Android.Views.GravityFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGravity (gravity As GravityFlags) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetGravity(Android::Views::GravityFlags gravity);" />
      <MemberSignature Language="F#" Value="member this.SetGravity : Android.Views.GravityFlags -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetGravity gravity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGravity", "(I)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGravity", "(I)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="gravity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintAmbientBigPicture">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetHintAmbientBigPicture (bool hintAmbientBigPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetHintAmbientBigPicture(bool hintAmbientBigPicture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetHintAmbientBigPicture(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHintAmbientBigPicture (hintAmbientBigPicture As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetHintAmbientBigPicture(bool hintAmbientBigPicture);" />
      <MemberSignature Language="F#" Value="member this.SetHintAmbientBigPicture : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetHintAmbientBigPicture hintAmbientBigPicture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHintAmbientBigPicture", "(Z)Landroid/app/Notification$WearableExtender;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHintAmbientBigPicture", "(Z)Landroid/app/Notification$WearableExtender;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hintAmbientBigPicture" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hintAmbientBigPicture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintAvoidBackgroundClipping">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetHintAvoidBackgroundClipping (bool hintAvoidBackgroundClipping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetHintAvoidBackgroundClipping(bool hintAvoidBackgroundClipping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetHintAvoidBackgroundClipping(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHintAvoidBackgroundClipping (hintAvoidBackgroundClipping As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetHintAvoidBackgroundClipping(bool hintAvoidBackgroundClipping);" />
      <MemberSignature Language="F#" Value="member this.SetHintAvoidBackgroundClipping : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetHintAvoidBackgroundClipping hintAvoidBackgroundClipping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHintAvoidBackgroundClipping", "(Z)Landroid/app/Notification$WearableExtender;", "", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHintAvoidBackgroundClipping", "(Z)Landroid/app/Notification$WearableExtender;", "", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hintAvoidBackgroundClipping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hintAvoidBackgroundClipping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintContentIntentLaunchesActivity">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetHintContentIntentLaunchesActivity (bool hintContentIntentLaunchesActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetHintContentIntentLaunchesActivity(bool hintContentIntentLaunchesActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetHintContentIntentLaunchesActivity(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHintContentIntentLaunchesActivity (hintContentIntentLaunchesActivity As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetHintContentIntentLaunchesActivity(bool hintContentIntentLaunchesActivity);" />
      <MemberSignature Language="F#" Value="member this.SetHintContentIntentLaunchesActivity : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetHintContentIntentLaunchesActivity hintContentIntentLaunchesActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHintContentIntentLaunchesActivity", "(Z)Landroid/app/Notification$WearableExtender;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHintContentIntentLaunchesActivity", "(Z)Landroid/app/Notification$WearableExtender;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hintContentIntentLaunchesActivity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hintContentIntentLaunchesActivity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintHideIcon">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetHintHideIcon (bool hintHideIcon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetHintHideIcon(bool hintHideIcon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetHintHideIcon(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHintHideIcon (hintHideIcon As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetHintHideIcon(bool hintHideIcon);" />
      <MemberSignature Language="F#" Value="member this.SetHintHideIcon : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetHintHideIcon hintHideIcon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHintHideIcon", "(Z)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHintHideIcon", "(Z)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hintHideIcon" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hintHideIcon">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintScreenTimeout">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetHintScreenTimeout (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetHintScreenTimeout(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetHintScreenTimeout(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHintScreenTimeout (timeout As Integer) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetHintScreenTimeout(int timeout);" />
      <MemberSignature Language="F#" Value="member this.SetHintScreenTimeout : int -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetHintScreenTimeout timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHintScreenTimeout", "(I)Landroid/app/Notification$WearableExtender;", "", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHintScreenTimeout", "(I)Landroid/app/Notification$WearableExtender;", "", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHintShowBackgroundOnly">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetHintShowBackgroundOnly (bool hintShowBackgroundOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetHintShowBackgroundOnly(bool hintShowBackgroundOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetHintShowBackgroundOnly(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHintShowBackgroundOnly (hintShowBackgroundOnly As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetHintShowBackgroundOnly(bool hintShowBackgroundOnly);" />
      <MemberSignature Language="F#" Value="member this.SetHintShowBackgroundOnly : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetHintShowBackgroundOnly hintShowBackgroundOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHintShowBackgroundOnly", "(Z)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHintShowBackgroundOnly", "(Z)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hintShowBackgroundOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hintShowBackgroundOnly">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStartScrollBottom">
      <MemberSignature Language="C#" Value="public Android.App.Notification.WearableExtender? SetStartScrollBottom (bool startScrollBottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/WearableExtender SetStartScrollBottom(bool startScrollBottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Notification.WearableExtender.SetStartScrollBottom(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetStartScrollBottom (startScrollBottom As Boolean) As Notification.WearableExtender" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::App::Notification::WearableExtender ^ SetStartScrollBottom(bool startScrollBottom);" />
      <MemberSignature Language="F#" Value="member this.SetStartScrollBottom : bool -&gt; Android.App.Notification.WearableExtender" Usage="wearableExtender.SetStartScrollBottom startScrollBottom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStartScrollBottom", "(Z)Landroid/app/Notification$WearableExtender;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStartScrollBottom", "(Z)Landroid/app/Notification$WearableExtender;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+WearableExtender</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startScrollBottom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startScrollBottom">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartScrollBottom">
      <MemberSignature Language="C#" Value="public bool StartScrollBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StartScrollBottom" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.StartScrollBottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartScrollBottom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StartScrollBottom { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.StartScrollBottom : bool" Usage="Android.App.Notification.WearableExtender.StartScrollBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStartScrollBottom", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStartScrollBottom", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get whether the scrolling position for the contents of this notification should start
            at the bottom of the contents instead of the top when the contents are too long to
            display within the screen.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#getStartScrollBottom()" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.getStartScrollBottom()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Notification.WearableExtender.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Notification.WearableExtender.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Notification.WearableExtender.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsetActionIndex">
      <MemberSignature Language="C#" Value="public const int UnsetActionIndex = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UnsetActionIndex = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Notification.WearableExtender.UnsetActionIndex" />
      <MemberSignature Language="VB.NET" Value="Public Const UnsetActionIndex As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int UnsetActionIndex = -1;" />
      <MemberSignature Language="F#" Value="val mutable UnsetActionIndex : int" Usage="Android.App.Notification.WearableExtender.UnsetActionIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UNSET_ACTION_INDEX")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UNSET_ACTION_INDEX")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Sentinel value for an action index that is unset.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Notification.WearableExtender#UNSET_ACTION_INDEX" title="Reference documentation">Java documentation for <code>android.app.Notification.WearableExtender.UNSET_ACTION_INDEX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
