<Type Name="NotificationManager" FullName="Android.App.NotificationManager">
  <TypeSignature Language="C#" Value="public class NotificationManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotificationManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/NotificationManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Class to notify the user of events that happen.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Class to notify the user of events that happen.  This is how you tell
 the user that something has happened in the background. </para>
      <para tool="javadoc-to-mdoc">

 Notifications can take different forms:
 <list type="bullet"><item><term>A persistent icon that goes in the status bar and is accessible
          through the launcher, (when the user selects it, a designated Intent
          can be launched),</term></item><item><term>Turning on or flashing LEDs on the device, or</term></item><item><term>Alerting the user by flashing the backlight, playing a sound,
          or vibrating.</term></item></list></para>
      <para tool="javadoc-to-mdoc">
 Each of the notify methods takes an int id parameter and optionally a
 <c><see cref="T:Java.Lang.String" /></c> tag parameter, which may be <c>null</c>.  These parameters
 are used to form a pair (tag, id), or (<c>null</c>, id) if tag is
 unspecified.  This pair identifies this notification from your app to the
 system, so that pair should be unique within your app.  If you call one
 of the notify methods with a (tag, id) pair that is currently active and
 a new set of notification parameters, it will be updated.  For example,
 if you pass a new status bar icon, the old icon in the status bar will
 be replaced with the new one.  This is also the same tag and id you pass
 to the <c><see cref="M:Android.App.NotificationManager.Cancel(System.Int32)" /></c> or <c><see cref="M:Android.App.NotificationManager.Cancel(System.String,System.Int32)" /></c> method to clear
 this notification.

 </para>
      <para tool="javadoc-to-mdoc">
 You do not instantiate this class directly; instead, retrieve it through
 <c><see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" /></c>.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">For a guide to creating notifications, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/ui/notifiers/notifications.html">Status Bar Notifications</a></format>
 developer guide.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.App.Notification" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="M:Android.Content.Context.GetSystemService(System.String)" tool="ReplaceLinkValue" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/NotificationManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotificationManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "(I)V", "GetCancel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">An identifier for this notification (unique within your application).</param>
        <summary>Cancel a previously shown notification.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel a previously shown notification.  If it's transient, the view
 will be hidden.  If it's persistent, it will be removed from the status
 bar.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/NotificationManager.html#cancel(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel (string tag, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel(string tag, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "(Ljava/lang/String;I)V", "GetCancel_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tag">A string identifier for this notification. May be <c>null</c>.</param>
        <param name="id">An identifier for this notification. The pair (<c>tag</c> , <c>id</c>) must be unique within your application.</param>
        <summary>Cancel a previously shown notification.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel a previously shown notification.  If it's transient, the view
 will be hidden.  If it's persistent, it will be removed from the status
 bar.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/NotificationManager.html#cancel(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CancelAll">
      <MemberSignature Language="C#" Value="public virtual void CancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelAll", "()V", "GetCancelAllHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancel all previously shown notifications.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancel all previously shown notifications. See <c><see cref="M:Android.App.NotificationManager.Cancel(System.Int32)" /></c> for the
 detailed behavior.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/NotificationManager.html#cancelAll()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.App.NotificationManager FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.NotificationManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.NotificationManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public virtual void Notify (int id, Android.App.Notification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Notify(int32 id, class Android.App.Notification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notify", "(ILandroid/app/Notification;)V", "GetNotify_ILandroid_app_Notification_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="notification" Type="Android.App.Notification" />
      </Parameters>
      <Docs>
        <param name="id">An identifier for this notification unique within your
        application.</param>
        <param name="notification">A <c><see cref="T:Android.App.Notification" /></c> object describing what to show the user. Must not
        be null.
</param>
        <summary>Post a notification to be shown in the status bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Post a notification to be shown in the status bar. If a notification with
 the same id has already been posted by your application and has not yet been canceled, it
 will be replaced by the updated information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/NotificationManager.html#notify(int, android.app.Notification)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public virtual void Notify (string tag, int id, Android.App.Notification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Notify(string tag, int32 id, class Android.App.Notification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notify", "(Ljava/lang/String;ILandroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILandroid_app_Notification_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="notification" Type="Android.App.Notification" />
      </Parameters>
      <Docs>
        <param name="tag">A string identifier for this notification.  May be <c>null</c>.</param>
        <param name="id">An identifier for this notification.  The pair (tag, id) must be unique
        within your application.</param>
        <param name="notification">A <c><see cref="T:Android.App.Notification" /></c> object describing what to
        show the user. Must not be null.
</param>
        <summary>Post a notification to be shown in the status bar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Post a notification to be shown in the status bar. If a notification with
 the same tag and id has already been posted by your application and has not yet been
 canceled, it will be replaced by the updated information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/NotificationManager.html#notify(java.lang.String, int, android.app.Notification)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
