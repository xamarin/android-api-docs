<Type Name="DownloadManager+Request" FullName="Android.App.DownloadManager+Request">
  <TypeSignature Language="C#" Value="public class DownloadManager.Request : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DownloadManager/Request extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/DownloadManager$Request", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class contains all the information necessary to request a new download.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class contains all the information necessary to request a new download. The URI is the
 only required parameter.

 Note that the default download destination is a shared volume where the system might delete
 your file if it needs to reclaim space for system use. If this is a problem, use a location
 on external storage (see <c><see cref="M:Android.App.DownloadManager.Request.SetDestinationUri(Android.Net.Uri)" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Request (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Net.Uri uri) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/net/Uri;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#DownloadManager.Request(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Request (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRequestHeader">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request AddRequestHeader (string header, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request AddRequestHeader(string header, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRequestHeader", "(Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;", "GetAddRequestHeader_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">HTTP header name</param>
        <param name="value">header value</param>
        <summary>Add an HTTP header to be included with the download request.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Add an HTTP header to be included with the download request.  The header will be added to
 the end of the list.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#addRequestHeader(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="AllowScanningByMediaScanner">
      <MemberSignature Language="C#" Value="public virtual void AllowScanningByMediaScanner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllowScanningByMediaScanner() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allowScanningByMediaScanner", "()V", "GetAllowScanningByMediaScannerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If the file to be downloaded is to be scanned by MediaScanner, this method
 should be called before <c><see cref="M:Android.App.DownloadManager.Enqueue(Android.App.DownloadManager.Request)" /></c> is called.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If the file to be downloaded is to be scanned by MediaScanner, this method
 should be called before <c><see cref="M:Android.App.DownloadManager.Enqueue(Android.App.DownloadManager.Request)" /></c> is called.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#allowScanningByMediaScanner()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NetworkMobile">
      <MemberSignature Language="C#" Value="public const Android.App.DownloadNetwork NetworkMobile = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.DownloadNetwork NetworkMobile = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NETWORK_MOBILE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.DownloadNetwork enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadNetwork</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Bit flag for <c><see cref="M:Android.App.DownloadManager.Request.SetAllowedNetworkTypes(Android.App.DownloadNetwork)" /></c> corresponding to
 <c><see cref="F:Android.Net.ConnectivityType.Mobile" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Bit flag for <c><see cref="M:Android.App.DownloadManager.Request.SetAllowedNetworkTypes(Android.App.DownloadNetwork)" /></c> corresponding to
 <c><see cref="F:Android.Net.ConnectivityType.Mobile" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#NETWORK_MOBILE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="NetworkWifi">
      <MemberSignature Language="C#" Value="public const Android.App.DownloadNetwork NetworkWifi = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.DownloadNetwork NetworkWifi = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NETWORK_WIFI")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.DownloadNetwork enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadNetwork</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Bit flag for <c><see cref="M:Android.App.DownloadManager.Request.SetAllowedNetworkTypes(Android.App.DownloadNetwork)" /></c> corresponding to
 <c><see cref="F:Android.Net.ConnectivityType.Wifi" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Bit flag for <c><see cref="M:Android.App.DownloadManager.Request.SetAllowedNetworkTypes(Android.App.DownloadNetwork)" /></c> corresponding to
 <c><see cref="F:Android.Net.ConnectivityType.Wifi" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#NETWORK_WIFI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetAllowedNetworkTypes">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetAllowedNetworkTypes (Android.App.DownloadNetwork flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetAllowedNetworkTypes(valuetype Android.App.DownloadNetwork flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAllowedNetworkTypes", "(I)Landroid/app/DownloadManager$Request;", "GetSetAllowedNetworkTypes_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.DownloadNetwork">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">any combination of the NETWORK_* bit flags.</param>
        <summary>Restrict the types of networks over which this download may proceed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Restrict the types of networks over which this download may proceed.
 By default, all network types are allowed. Consider using
 <c><see cref="M:Android.App.DownloadManager.Request.SetAllowedOverMetered(System.Boolean)" /></c> instead, since it's more
 flexible.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setAllowedNetworkTypes(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetAllowedOverMetered">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetAllowedOverMetered (bool allow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetAllowedOverMetered(bool allow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAllowedOverMetered", "(Z)Landroid/app/DownloadManager$Request;", "GetSetAllowedOverMetered_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allow">To be added.</param>
        <summary>Set whether this download may proceed over a metered network
 connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether this download may proceed over a metered network
 connection. By default, metered networks are allowed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setAllowedOverMetered(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="P:Android.Net.ConnectivityManager.IsActiveNetworkMetered" />
      </Docs>
    </Member>
    <Member MemberName="SetAllowedOverRoaming">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetAllowedOverRoaming (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetAllowedOverRoaming(bool allowed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAllowedOverRoaming", "(Z)Landroid/app/DownloadManager$Request;", "GetSetAllowedOverRoaming_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">whether to allow a roaming connection to be used</param>
        <summary>Set whether this download may proceed over a roaming connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether this download may proceed over a roaming connection.  By default, roaming is
 allowed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setAllowedOverRoaming(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetDescription">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetDescription (Java.Lang.ICharSequence description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetDescription(class Java.Lang.ICharSequence description) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDescription", "(Ljava/lang/CharSequence;)Landroid/app/DownloadManager$Request;", "GetSetDescription_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="description">To be added.</param>
        <summary>Set a description of this download, to be displayed in notifications (if enabled)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a description of this download, to be displayed in notifications (if enabled)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDescription(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetDescription">
      <MemberSignature Language="C#" Value="public Android.App.DownloadManager.Request SetDescription (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.DownloadManager/Request SetDescription(string description) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDestinationInExternalFilesDir">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetDestinationInExternalFilesDir (Android.Content.Context context, string dirType, string subPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetDestinationInExternalFilesDir(class Android.Content.Context context, string dirType, string subPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDestinationInExternalFilesDir", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;", "GetSetDestinationInExternalFilesDir_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="dirType" Type="System.String" />
        <Parameter Name="subPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">the <c><see cref="T:Android.Content.Context" /></c> to use in determining the external
            files directory</param>
        <param name="dirType">the directory type to pass to
            <c><see cref="M:Android.Content.Context.GetExternalFilesDir(System.String)" /></c></param>
        <param name="subPath">the path within the external directory, including the
            destination filename</param>
        <summary>Set the local destination for the downloaded file to a path within
 the application's external files directory (as returned by
 <c><see cref="M:Android.Content.Context.GetExternalFilesDir(System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the local destination for the downloaded file to a path within
 the application's external files directory (as returned by
 <c><see cref="M:Android.Content.Context.GetExternalFilesDir(System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The downloaded file is not scanned by MediaScanner. But it can be
 made scannable by calling <c><see cref="M:Android.App.DownloadManager.Request.AllowScanningByMediaScanner" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationInExternalFilesDir(android.content.Context, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException">If the external storage directory
             cannot be found or created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDestinationInExternalPublicDir">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetDestinationInExternalPublicDir (string dirType, string subPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetDestinationInExternalPublicDir(string dirType, string subPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDestinationInExternalPublicDir", "(Ljava/lang/String;Ljava/lang/String;)Landroid/app/DownloadManager$Request;", "GetSetDestinationInExternalPublicDir_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirType" Type="System.String" />
        <Parameter Name="subPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dirType">the directory type to pass to <c><see cref="M:Android.OS.Environment.GetExternalStoragePublicDirectory(System.String)" /></c></param>
        <param name="subPath">the path within the external directory, including the
            destination filename</param>
        <summary>Set the local destination for the downloaded file to a path within
 the public external storage directory (as returned by
 <c><see cref="M:Android.OS.Environment.GetExternalStoragePublicDirectory(System.String)" /></c>).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the local destination for the downloaded file to a path within
 the public external storage directory (as returned by
 <c><see cref="M:Android.OS.Environment.GetExternalStoragePublicDirectory(System.String)" /></c>).
 </para>
          <para tool="javadoc-to-mdoc">
 The downloaded file is not scanned by MediaScanner. But it can be
 made scannable by calling <c><see cref="M:Android.App.DownloadManager.Request.AllowScanningByMediaScanner" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationInExternalPublicDir(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException">If the external storage directory
             cannot be found or created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDestinationUri">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetDestinationUri (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetDestinationUri(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDestinationUri", "(Landroid/net/Uri;)Landroid/app/DownloadManager$Request;", "GetSetDestinationUri_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Set the local destination for the downloaded file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the local destination for the downloaded file. Must be a file URI to a path on
 external storage, and the calling application must have the WRITE_EXTERNAL_STORAGE
 permission.
 </para>
          <para tool="javadoc-to-mdoc">
 The downloaded file is not scanned by MediaScanner.
 But it can be made scannable by calling <c><see cref="M:Android.App.DownloadManager.Request.AllowScanningByMediaScanner" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 By default, downloads are saved to a generated filename in the shared download cache and
 may be deleted by the system at any time to reclaim space.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationUri(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetMimeType">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetMimeType (string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetMimeType(string mimeType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMimeType", "(Ljava/lang/String;)Landroid/app/DownloadManager$Request;", "GetSetMimeType_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mimeType">To be added.</param>
        <summary>Set the MIME content type of this download.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the MIME content type of this download.  This will override the content type declared
 in the server's response.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setMimeType(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetNotificationVisibility">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetNotificationVisibility (Android.App.DownloadVisibility visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetNotificationVisibility(valuetype Android.App.DownloadVisibility visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNotificationVisibility", "(I)Landroid/app/DownloadManager$Request;", "GetSetNotificationVisibility_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.App.DownloadVisibility">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">the visibility setting value</param>
        <summary>Control whether a system notification is posted by the download manager while this
 download is running or when it is completed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether a system notification is posted by the download manager while this
 download is running or when it is completed.
 If enabled, the download manager posts notifications about downloads
 through the system <c><see cref="T:Android.App.NotificationManager" /></c>.
 By default, a notification is shown only when the download is in progress.
</para>
          <para tool="javadoc-to-mdoc">
 It can take the following values: <c><see cref="F:Android.App.DownloadManager.Request.VisibilityHidden" /></c>,
 <c><see cref="F:Android.App.DownloadManager.Request.VisibilityVisible" /></c>,
 <c><see cref="F:Android.App.DownloadManager.Request.VisibilityVisibleNotifyCompleted" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
 If set to <c><see cref="F:Android.App.DownloadManager.Request.VisibilityHidden" /></c>, this requires the permission
 android.permission.DOWNLOAD_WITHOUT_NOTIFICATION.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setNotificationVisibility(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetShowRunningNotification">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetShowRunningNotification (bool show);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetShowRunningNotification(bool show) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShowRunningNotification", "(Z)Landroid/app/DownloadManager$Request;", "GetSetShowRunningNotification_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="show" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="show">whether the download manager should show a notification for this download.</param>
        <summary>Control whether a system notification is posted by the download manager while this
 download is running.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether a system notification is posted by the download manager while this
 download is running. If enabled, the download manager posts notifications about downloads
 through the system <c><see cref="T:Android.App.NotificationManager" /></c>. By default, a notification is
 shown.

 If set to false, this requires the permission
 android.permission.DOWNLOAD_WITHOUT_NOTIFICATION.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setShowRunningNotification(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetTitle (Java.Lang.ICharSequence title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetTitle(class Java.Lang.ICharSequence title) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)Landroid/app/DownloadManager$Request;", "GetSetTitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>Set the title of this download, to be displayed in notifications (if enabled).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the title of this download, to be displayed in notifications (if enabled).  If no
 title is given, a default one will be assigned based on the download filename, once the
 download starts.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setTitle(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public Android.App.DownloadManager.Request SetTitle (string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.DownloadManager/Request SetTitle(string title) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleInDownloadsUi">
      <MemberSignature Language="C#" Value="public virtual Android.App.DownloadManager.Request SetVisibleInDownloadsUi (bool isVisible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.DownloadManager/Request SetVisibleInDownloadsUi(bool isVisible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVisibleInDownloadsUi", "(Z)Landroid/app/DownloadManager$Request;", "GetSetVisibleInDownloadsUi_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadManager+Request</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isVisible">whether to display this download in the Downloads UI</param>
        <summary>Set whether this download should be displayed in the system's Downloads UI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether this download should be displayed in the system's Downloads UI. True by
 default.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#setVisibleInDownloadsUi(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibilityHidden">
      <MemberSignature Language="C#" Value="public const Android.App.DownloadVisibility VisibilityHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.DownloadVisibility VisibilityHidden = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VISIBILITY_HIDDEN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.DownloadVisibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadVisibility</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>This download doesn't show in the UI or in the notifications.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This download doesn't show in the UI or in the notifications.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_HIDDEN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityVisible">
      <MemberSignature Language="C#" Value="public const Android.App.DownloadVisibility VisibilityVisible = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.DownloadVisibility VisibilityVisible = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VISIBILITY_VISIBLE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.DownloadVisibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadVisibility</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>This download is visible but only shows in the notifications
 while it's in progress.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This download is visible but only shows in the notifications
 while it's in progress.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_VISIBLE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityVisibleNotifyCompleted">
      <MemberSignature Language="C#" Value="public const Android.App.DownloadVisibility VisibilityVisibleNotifyCompleted = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.DownloadVisibility VisibilityVisibleNotifyCompleted = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VISIBILITY_VISIBLE_NOTIFY_COMPLETED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.DownloadVisibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadVisibility</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This download is visible and shows in the notifications while
 in progress and after completion.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This download is visible and shows in the notifications while
 in progress and after completion.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_VISIBLE_NOTIFY_COMPLETED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityVisibleNotifyOnlyCompletion">
      <MemberSignature Language="C#" Value="public const Android.App.DownloadVisibility VisibilityVisibleNotifyOnlyCompletion = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.DownloadVisibility VisibilityVisibleNotifyOnlyCompletion = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.DownloadVisibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.DownloadVisibility</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>This download shows in the notifications after completion ONLY.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This download shows in the notifications after completion ONLY.
 It is usuable only with
 <c><see cref="M:Android.App.DownloadManager.AddCompletedDownload(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
  </Members>
</Type>
