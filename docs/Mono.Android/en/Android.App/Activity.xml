<Type Name="Activity" FullName="Android.App.Activity">
  <TypeSignature Language="C#" Value="public class Activity : Android.Views.ContextThemeWrapper, Android.Content.IComponentCallbacks2, Android.Views.KeyEvent.ICallback, Android.Views.LayoutInflater.IFactory2, Android.Views.View.IOnCreateContextMenuListener, Android.Views.Window.ICallback, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Activity extends Android.Views.ContextThemeWrapper implements class Android.Content.IComponentCallbacks, class Android.Content.IComponentCallbacks2, class Android.Runtime.IJavaObject, class Android.Views.KeyEvent/ICallback, class Android.Views.LayoutInflater/IFactory, class Android.Views.LayoutInflater/IFactory2, class Android.Views.View/IOnCreateContextMenuListener, class Android.Views.Window/ICallback, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.App.Activity" />
  <TypeSignature Language="F#" Value="type Activity = class&#xA;    inherit ContextThemeWrapper&#xA;    interface IComponentCallbacks&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IComponentCallbacks2&#xA;    interface KeyEvent.ICallback&#xA;    interface LayoutInflater.IFactory&#xA;    interface LayoutInflater.IFactory2&#xA;    interface View.IOnCreateContextMenuListener&#xA;    interface Window.ICallback" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.ContextThemeWrapper</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Content.IComponentCallbacks</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Content.IComponentCallbacks2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.KeyEvent+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.LayoutInflater+IFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.LayoutInflater+IFactory2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.View+IOnCreateContextMenuListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.Window+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/Activity", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/Activity", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An activity is a single, focused thing that the user can do.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/Activity" title="Reference documentation">Java documentation for <code>android.app.Activity</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Activity (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Activity : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Activity" Usage="new Android.App.Activity (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionBar">
      <MemberSignature Language="C#" Value="public virtual Android.App.ActionBar? ActionBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.ActionBar ActionBar" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ActionBar" />
      <MemberSignature Language="F#" Value="member this.ActionBar : Android.App.ActionBar" Usage="Android.App.Activity.ActionBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActionBar", "()Landroid/app/ActionBar;", "GetGetActionBarHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActionBar", "()Landroid/app/ActionBar;", "GetGetActionBarHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.ActionBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a reference to this activity's ActionBar.</summary>
        <value>The Activity's ActionBar, or null if it does not have one.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getActionBar()" title="Reference documentation">Java documentation for <code>android.app.Activity.getActionBar()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddContentView">
      <MemberSignature Language="C#" Value="public virtual void AddContentView (Android.Views.View? view, Android.Views.ViewGroup.LayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.AddContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member AddContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit&#xA;override this.AddContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit" Usage="activity.AddContentView (view, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Add an additional content view to the activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#addContentView(android.view.View,%20android.view.LayoutParams)" title="Reference documentation">Java documentation for <code>android.app.Activity.addContentView(android.view.View, android.view.LayoutParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Android.App.Application? Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Application Application" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Application" />
      <MemberSignature Language="F#" Value="member this.Application : Android.App.Application" Usage="Android.App.Activity.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getApplication", "()Landroid/app/Application;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getApplication", "()Landroid/app/Application;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the application that owns this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getApplication()" title="Reference documentation">Java documentation for <code>android.app.Activity.getApplication()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallingActivity">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ComponentName? CallingActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ComponentName CallingActivity" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.CallingActivity" />
      <MemberSignature Language="F#" Value="member this.CallingActivity : Android.Content.ComponentName" Usage="Android.App.Activity.CallingActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingActivity", "()Landroid/content/ComponentName;", "GetGetCallingActivityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingActivity", "()Landroid/content/ComponentName;", "GetGetCallingActivityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the name of the activity that invoked this activity.</summary>
        <value>The ComponentName of the activity that will receive your
                    reply, or null if none.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getCallingActivity()" title="Reference documentation">Java documentation for <code>android.app.Activity.getCallingActivity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallingPackage">
      <MemberSignature Language="C#" Value="public virtual string? CallingPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CallingPackage" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.CallingPackage" />
      <MemberSignature Language="F#" Value="member this.CallingPackage : string" Usage="Android.App.Activity.CallingPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingPackage", "()Ljava/lang/String;", "GetGetCallingPackageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingPackage", "()Ljava/lang/String;", "GetGetCallingPackageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the name of the package that invoked this activity.</summary>
        <value>The package of the activity that will receive your
                    reply, or null if none.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getCallingPackage()" title="Reference documentation">Java documentation for <code>android.app.Activity.getCallingPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChangingConfigurations">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ConfigChanges ChangingConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ConfigChanges ChangingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ChangingConfigurations" />
      <MemberSignature Language="F#" Value="member this.ChangingConfigurations : Android.Content.PM.ConfigChanges" Usage="Android.App.Activity.ChangingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ConfigChanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this activity is being destroyed because it can not handle a
            configuration parameter being changed (and thus its
            <c>#onConfigurationChanged(Configuration)</c> method is
            &lt;em&gt;not&lt;/em&gt; being called), then you can use this method to discover
            the set of changes that have occurred while in the process of being
            destroyed.</summary>
        <value>Returns a bit field of the configuration parameters that are
            changing, as defined by the <c>android.content.res.Configuration</c>
            class.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getChangingConfigurations()" title="Reference documentation">Java documentation for <code>android.app.Activity.getChangingConfigurations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CloseContextMenu">
      <MemberSignature Language="C#" Value="public virtual void CloseContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseContextMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.CloseContextMenu" />
      <MemberSignature Language="F#" Value="abstract member CloseContextMenu : unit -&gt; unit&#xA;override this.CloseContextMenu : unit -&gt; unit" Usage="activity.CloseContextMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closeContextMenu", "()V", "GetCloseContextMenuHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closeContextMenu", "()V", "GetCloseContextMenuHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Programmatically closes the most recently opened context menu, if showing.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#closeContextMenu()" title="Reference documentation">Java documentation for <code>android.app.Activity.closeContextMenu()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CloseOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void CloseOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOptionsMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.CloseOptionsMenu" />
      <MemberSignature Language="F#" Value="abstract member CloseOptionsMenu : unit -&gt; unit&#xA;override this.CloseOptionsMenu : unit -&gt; unit" Usage="activity.CloseOptionsMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closeOptionsMenu", "()V", "GetCloseOptionsMenuHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closeOptionsMenu", "()V", "GetCloseOptionsMenuHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Progammatically closes the options menu.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#closeOptionsMenu()" title="Reference documentation">Java documentation for <code>android.app.Activity.closeOptionsMenu()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComponentName">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ComponentName? ComponentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ComponentName ComponentName" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ComponentName" />
      <MemberSignature Language="F#" Value="member this.ComponentName : Android.Content.ComponentName" Usage="Android.App.Activity.ComponentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getComponentName", "()Landroid/content/ComponentName;", "GetGetComponentNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getComponentName", "()Landroid/content/ComponentName;", "GetGetComponentNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the complete component name of this activity.</summary>
        <value>Returns the complete component name for this activity</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getComponentName()" title="Reference documentation">Java documentation for <code>android.app.Activity.getComponentName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContentScene">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Scene? ContentScene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Scene ContentScene" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ContentScene" />
      <MemberSignature Language="F#" Value="member this.ContentScene : Android.Transitions.Scene" Usage="Android.App.Activity.ContentScene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentScene", "()Landroid/transition/Scene;", "GetGetContentSceneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentScene", "()Landroid/transition/Scene;", "GetGetContentSceneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Scene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the <c>Scene</c> representing this window's current content.</summary>
        <value>Current Scene being shown or null</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getContentScene()" title="Reference documentation">Java documentation for <code>android.app.Activity.getContentScene()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTransitionManager">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.TransitionManager? ContentTransitionManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.TransitionManager ContentTransitionManager" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ContentTransitionManager" />
      <MemberSignature Language="F#" Value="member this.ContentTransitionManager : Android.Transitions.TransitionManager with get, set" Usage="Android.App.Activity.ContentTransitionManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentTransitionManager", "()Landroid/transition/TransitionManager;", "GetGetContentTransitionManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentTransitionManager", "()Landroid/transition/TransitionManager;", "GetGetContentTransitionManagerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContentTransitionManager", "(Landroid/transition/TransitionManager;)V", "GetSetContentTransitionManager_Landroid_transition_TransitionManager_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContentTransitionManager", "(Landroid/transition/TransitionManager;)V", "GetSetContentTransitionManager_Landroid_transition_TransitionManager_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.TransitionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tm">The TransitionManager to use for scene changes.</param>
        <summary>Retrieve the <c>TransitionManager</c> responsible for default transitions in this window. -or- Set the <c>TransitionManager</c> to use for default transitions in this window.</summary>
        <value>This window's content TransitionManager or null if none is set.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getContentTransitionManager()" title="Reference documentation">Java documentation for <code>android.app.Activity.getContentTransitionManager()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setContentTransitionManager(android.transition.TransitionManager)" title="Reference documentation">Java documentation for <code>android.app.Activity.setContentTransitionManager(android.transition.TransitionManager)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePendingResult">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent? CreatePendingResult (int requestCode, Android.Content.Intent data, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent CreatePendingResult(int32 requestCode, class Android.Content.Intent data, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.CreatePendingResult(System.Int32,Android.Content.Intent,Android.App.PendingIntentFlags)" />
      <MemberSignature Language="F#" Value="abstract member CreatePendingResult : int * Android.Content.Intent * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent&#xA;override this.CreatePendingResult : int * Android.Content.Intent * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="activity.CreatePendingResult (requestCode, data, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createPendingResult", "(ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "GetCreatePendingResult_ILandroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createPendingResult", "(ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "GetCreatePendingResult_ILandroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requestCode">Private request code for the sender that will be
            associated with the result data when it is returned.  The sender can not
            modify this value, allowing you to identify incoming results.</param>
        <param name="data">Default data to supply in the result, which may be modified
            by the sender.</param>
        <param name="flags">May be <c>PendingIntent#FLAG_ONE_SHOT PendingIntent.FLAG_ONE_SHOT</c>,
            <c>PendingIntent#FLAG_NO_CREATE PendingIntent.FLAG_NO_CREATE</c>,
            <c>PendingIntent#FLAG_CANCEL_CURRENT PendingIntent.FLAG_CANCEL_CURRENT</c>,
            <c>PendingIntent#FLAG_UPDATE_CURRENT PendingIntent.FLAG_UPDATE_CURRENT</c>,
            or any of the flags as supported by
            <c>Intent#fillIn Intent.fillIn()</c> to control which unspecified parts
            of the intent that can be supplied when the actual send happens.</param>
        <summary>Create a new PendingIntent object which you can hand to others
            for them to use to send result data back to your
            <c>#onActivityResult</c> callback.</summary>
        <returns>Returns an existing or new PendingIntent matching the given
            parameters.  May return null only if
            <c>PendingIntent#FLAG_NO_CREATE PendingIntent.FLAG_NO_CREATE</c> has been
            supplied.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#createPendingResult(int,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.createPendingResult(int, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.PendingIntent" />
      </Docs>
    </Member>
    <Member MemberName="CurrentFocus">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? CurrentFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View CurrentFocus" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.CurrentFocus" />
      <MemberSignature Language="F#" Value="member this.CurrentFocus : Android.Views.View" Usage="Android.App.Activity.CurrentFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentFocus", "()Landroid/view/View;", "GetGetCurrentFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentFocus", "()Landroid/view/View;", "GetGetCurrentFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Calls <c>android.view.Window#getCurrentFocus</c> on the
            Window of this Activity to return the currently focused view.</summary>
        <value>View The current View with focus or null.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getCurrentFocus()" title="Reference documentation">Java documentation for <code>android.app.Activity.getCurrentFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.Window" />
        <altmember cref="P:Android.Views.Window.CurrentFocus" />
      </Docs>
    </Member>
    <Member MemberName="DismissDialog">
      <MemberSignature Language="C#" Value="public void DismissDialog (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DismissDialog(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DismissDialog(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DismissDialog : int -&gt; unit" Usage="activity.DismissDialog id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dismissDialog", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dismissDialog", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The id of the managed dialog.</param>
        <summary>Dismiss a dialog that was previously shown via <c>#showDialog(int)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dismissDialog(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.dismissDialog(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the id was not previously shown via
   <see cref="M:Android.App.Activity.ShowDialog(System.Int32)" />.</exception>
        <altmember cref="M:Android.App.Activity.OnCreateDialog(System.Int32, Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPrepareDialog(System.Int32, Android.App.Dialog, Android.App.Dialog)" />
        <altmember cref="M:Android.App.Activity.ShowDialog(System.Int32)" />
        <altmember cref="M:Android.App.Activity.RemoveDialog(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="DismissKeyboardShortcutsHelper">
      <MemberSignature Language="C#" Value="public void DismissKeyboardShortcutsHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DismissKeyboardShortcutsHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DismissKeyboardShortcutsHelper" />
      <MemberSignature Language="F#" Value="member this.DismissKeyboardShortcutsHelper : unit -&gt; unit" Usage="activity.DismissKeyboardShortcutsHelper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dismissKeyboardShortcutsHelper", "()V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dismissKeyboardShortcutsHelper", "()V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dismiss the Keyboard Shortcuts screen.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dismissKeyboardShortcutsHelper()" title="Reference documentation">Java documentation for <code>android.app.Activity.dismissKeyboardShortcutsHelper()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericMotionEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchGenericMotionEvent (Android.Views.MotionEvent? ev);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchGenericMotionEvent(class Android.Views.MotionEvent ev) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DispatchGenericMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool" Usage="activity.DispatchGenericMotionEvent ev" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchGenericMotionEvent(Android.Views.MotionEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ev" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="ev">The generic motion event.</param>
        <summary>Called to process generic motion events.</summary>
        <returns>boolean Return true if this event was consumed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dispatchGenericMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.dispatchGenericMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DispatchKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyEvent : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyEvent : Android.Views.KeyEvent -&gt; bool" Usage="activity.DispatchKeyEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchKeyEvent(Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event.</param>
        <param name="event">The key event.</param>
        <summary>Called to process key events.</summary>
        <returns>boolean Return true if this event was consumed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dispatchKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.dispatchKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyShortcutEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyShortcutEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyShortcutEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DispatchKeyShortcutEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool" Usage="activity.DispatchKeyShortcutEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchKeyShortcutEvent(Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key shortcut event.</param>
        <param name="event">The key shortcut event.</param>
        <summary>Called to process a key shortcut event.</summary>
        <returns>True if this event was consumed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dispatchKeyShortcutEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.dispatchKeyShortcutEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DispatchPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchPopulateAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchPopulateAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; bool&#xA;override this.DispatchPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; bool" Usage="activity.DispatchPopulateAccessibilityEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event.</param>
        <summary>Called to process population of <see cref="T:Android.Views.Accessibility.AccessibilityEvent" />s.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTouchEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchTouchEvent (Android.Views.MotionEvent? ev);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTouchEvent(class Android.Views.MotionEvent ev) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DispatchTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchTouchEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchTouchEvent : Android.Views.MotionEvent -&gt; bool" Usage="activity.DispatchTouchEvent ev" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchTouchEvent(Android.Views.MotionEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ev" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="ev">The touch screen event.</param>
        <summary>Called to process touch screen events.</summary>
        <returns>boolean Return true if this event was consumed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dispatchTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.dispatchTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTrackballEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchTrackballEvent (Android.Views.MotionEvent? ev);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTrackballEvent(class Android.Views.MotionEvent ev) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.DispatchTrackballEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool" Usage="activity.DispatchTrackballEvent ev" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.DispatchTrackballEvent(Android.Views.MotionEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ev" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="ev">The trackball event.</param>
        <summary>Called to process trackball events.</summary>
        <returns>boolean Return true if this event was consumed.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dispatchTrackballEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.dispatchTrackballEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public virtual void Dump (string prefix, Java.IO.FileDescriptor? fd, Java.IO.PrintWriter writer, string[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(string prefix, class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter writer, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.Dump(System.String,Java.IO.FileDescriptor,Java.IO.PrintWriter,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Dump : string * Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit&#xA;override this.Dump : string * Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit" Usage="activity.Dump (prefix, fd, writer, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="writer" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="prefix">Desired prefix to prepend at each line of output.</param>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="writer">The PrintWriter to which you should dump your state.  This will be
            closed for you after you return.</param>
        <param name="args">additional arguments to the dump request.</param>
        <summary>Print the Activity's state into the given stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#dump(java.lang.String,%20java.io.FileDescriptor,%20java.io.PrintWriter,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.app.Activity.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="EnterPictureInPictureMode">
      <MemberSignature Language="C#" Value="public virtual void EnterPictureInPictureMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterPictureInPictureMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.EnterPictureInPictureMode" />
      <MemberSignature Language="F#" Value="abstract member EnterPictureInPictureMode : unit -&gt; unit&#xA;override this.EnterPictureInPictureMode : unit -&gt; unit" Usage="activity.EnterPictureInPictureMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enterPictureInPictureMode", "()V", "GetEnterPictureInPictureModeHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enterPictureInPictureMode", "()V", "GetEnterPictureInPictureModeHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Puts the activity in picture-in-picture mode if possible in the current system state.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#enterPictureInPictureMode()" title="Reference documentation">Java documentation for <code>android.app.Activity.enterPictureInPictureMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterPictureInPictureMode">
      <MemberSignature Language="C#" Value="public virtual bool EnterPictureInPictureMode (Android.App.PictureInPictureParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnterPictureInPictureMode(class Android.App.PictureInPictureParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.EnterPictureInPictureMode(Android.App.PictureInPictureParams)" />
      <MemberSignature Language="F#" Value="abstract member EnterPictureInPictureMode : Android.App.PictureInPictureParams -&gt; bool&#xA;override this.EnterPictureInPictureMode : Android.App.PictureInPictureParams -&gt; bool" Usage="activity.EnterPictureInPictureMode params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enterPictureInPictureMode", "(Landroid/app/PictureInPictureParams;)Z", "GetEnterPictureInPictureMode_Landroid_app_PictureInPictureParams_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enterPictureInPictureMode", "(Landroid/app/PictureInPictureParams;)Z", "GetEnterPictureInPictureMode_Landroid_app_PictureInPictureParams_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.App.PictureInPictureParams" />
      </Parameters>
      <Docs>
        <param name="params">non-null parameters to be combined with previously set parameters when entering
            picture-in-picture.</param>
        <summary>Puts the activity in picture-in-picture mode if possible in the current system state.</summary>
        <returns>true if the system successfully put this activity into picture-in-picture mode or was
            already in picture-in-picture mode (see <c>#isInPictureInPictureMode()</c>). If the device
            does not support picture-in-picture, return false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#enterPictureInPictureMode(android.app.PictureInPictureParams)" title="Reference documentation">Java documentation for <code>android.app.Activity.enterPictureInPictureMode(android.app.PictureInPictureParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindViewById">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? FindViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FindViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FindViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FindViewById : int -&gt; Android.Views.View&#xA;override this.FindViewById : int -&gt; Android.Views.View" Usage="activity.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds a view that was identified by the <c>android:id</c> XML attribute
            that was processed in <c>#onCreate</c>.</summary>
        <returns>a view with given ID if found, or <c>null</c> otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#findViewById(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.findViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? FindViewById&lt;T&gt; (int id) where T : Android.Views.View;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindViewById&lt;(class Android.Views.View) T&gt;(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FindViewById``1(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.FindViewById : int -&gt; 'T (requires 'T :&gt; Android.Views.View)" Usage="activity.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.Views.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The Type of the view to be returned (Button, ListView, etc.).</typeparam>
        <param name="id">The id of the view to find.</param>
        <summary>Finds a view that was identified by the id attribute from the XML layout resource.</summary>
        <returns>The view if found or null otherwise.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public virtual void Finish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finish() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.Finish" />
      <MemberSignature Language="F#" Value="abstract member Finish : unit -&gt; unit&#xA;override this.Finish : unit -&gt; unit" Usage="activity.Finish " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finish", "()V", "GetFinishHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finish", "()V", "GetFinishHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this when your activity is done and should be closed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finish()" title="Reference documentation">Java documentation for <code>android.app.Activity.finish()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FinishActivity">
      <MemberSignature Language="C#" Value="public virtual void FinishActivity (int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishActivity(int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FinishActivity(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FinishActivity : int -&gt; unit&#xA;override this.FinishActivity : int -&gt; unit" Usage="activity.FinishActivity requestCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishActivity", "(I)V", "GetFinishActivity_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishActivity", "(I)V", "GetFinishActivity_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="requestCode">The request code of the activity that you had
                               given to startActivityForResult().  If there are multiple
                               activities started with this request code, they
                               will all be finished.</param>
        <summary>Force finish another activity that you had previously started with
            <c>#startActivityForResult</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finishActivity(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.finishActivity(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FinishActivityFromChild">
      <MemberSignature Language="C#" Value="public virtual void FinishActivityFromChild (Android.App.Activity child, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishActivityFromChild(class Android.App.Activity child, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FinishActivityFromChild(Android.App.Activity,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FinishActivityFromChild : Android.App.Activity * int -&gt; unit&#xA;override this.FinishActivityFromChild : Android.App.Activity * int -&gt; unit" Usage="activity.FinishActivityFromChild (child, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishActivityFromChild", "(Landroid/app/Activity;I)V", "GetFinishActivityFromChild_Landroid_app_Activity_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishActivityFromChild", "(Landroid/app/Activity;I)V", "GetFinishActivityFromChild_Landroid_app_Activity_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">The activity making the call.</param>
        <param name="requestCode">Request code that had been used to start the
                               activity.</param>
        <summary>This is called when a child activity of this one calls its
            finishActivity().</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finishActivityFromChild(android.app.Activity,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.finishActivityFromChild(android.app.Activity, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FinishAffinity">
      <MemberSignature Language="C#" Value="public virtual void FinishAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishAffinity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FinishAffinity" />
      <MemberSignature Language="F#" Value="abstract member FinishAffinity : unit -&gt; unit&#xA;override this.FinishAffinity : unit -&gt; unit" Usage="activity.FinishAffinity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishAffinity", "()V", "GetFinishAffinityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishAffinity", "()V", "GetFinishAffinityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finish this activity as well as all activities immediately below it
            in the current task that have the same affinity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finishAffinity()" title="Reference documentation">Java documentation for <code>android.app.Activity.finishAffinity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FinishAfterTransition">
      <MemberSignature Language="C#" Value="public virtual void FinishAfterTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishAfterTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FinishAfterTransition" />
      <MemberSignature Language="F#" Value="abstract member FinishAfterTransition : unit -&gt; unit&#xA;override this.FinishAfterTransition : unit -&gt; unit" Usage="activity.FinishAfterTransition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishAfterTransition", "()V", "GetFinishAfterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishAfterTransition", "()V", "GetFinishAfterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reverses the Activity Scene entry Transition and triggers the calling Activity
            to reverse its exit Transition.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finishAfterTransition()" title="Reference documentation">Java documentation for <code>android.app.Activity.finishAfterTransition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishAndRemoveTask">
      <MemberSignature Language="C#" Value="public virtual void FinishAndRemoveTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishAndRemoveTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FinishAndRemoveTask" />
      <MemberSignature Language="F#" Value="abstract member FinishAndRemoveTask : unit -&gt; unit&#xA;override this.FinishAndRemoveTask : unit -&gt; unit" Usage="activity.FinishAndRemoveTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishAndRemoveTask", "()V", "GetFinishAndRemoveTaskHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishAndRemoveTask", "()V", "GetFinishAndRemoveTaskHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this when your activity is done and should be closed and the task should be completely
            removed as a part of finishing the root activity of the task.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finishAndRemoveTask()" title="Reference documentation">Java documentation for <code>android.app.Activity.finishAndRemoveTask()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishFromChild">
      <MemberSignature Language="C#" Value="public virtual void FinishFromChild (Android.App.Activity? child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishFromChild(class Android.App.Activity child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.FinishFromChild(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member FinishFromChild : Android.App.Activity -&gt; unit&#xA;override this.FinishFromChild : Android.App.Activity -&gt; unit" Usage="activity.FinishFromChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finishFromChild", "(Landroid/app/Activity;)V", "GetFinishFromChild_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finishFromChild", "(Landroid/app/Activity;)V", "GetFinishFromChild_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="child">The activity making the call.</param>
        <summary>This is called when a child activity of this one calls its
            <c>#finish</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#finishFromChild(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Activity.finishFromChild(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.Finish" />
      </Docs>
    </Member>
    <Member MemberName="FocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? FocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.FocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.FocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.App.Activity.FocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FragmentManager">
      <MemberSignature Language="C#" Value="public virtual Android.App.FragmentManager? FragmentManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.FragmentManager FragmentManager" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.FragmentManager" />
      <MemberSignature Language="F#" Value="member this.FragmentManager : Android.App.FragmentManager" Usage="Android.App.Activity.FragmentManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFragmentManager", "()Landroid/app/FragmentManager;", "GetGetFragmentManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFragmentManager", "()Landroid/app/FragmentManager;", "GetGetFragmentManagerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.FragmentManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the FragmentManager for interacting with fragments associated
            with this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getFragmentManager()" title="Reference documentation">Java documentation for <code>android.app.Activity.getFragmentManager()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferences">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ISharedPreferences? GetPreferences (Android.Content.FileCreationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ISharedPreferences GetPreferences(valuetype Android.Content.FileCreationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.GetPreferences(Android.Content.FileCreationMode)" />
      <MemberSignature Language="F#" Value="abstract member GetPreferences : Android.Content.FileCreationMode -&gt; Android.Content.ISharedPreferences&#xA;override this.GetPreferences : Android.Content.FileCreationMode -&gt; Android.Content.ISharedPreferences" Usage="activity.GetPreferences mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPreferences", "(I)Landroid/content/SharedPreferences;", "GetGetPreferences_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPreferences", "(I)Landroid/content/SharedPreferences;", "GetGetPreferences_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ISharedPreferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Content.FileCreationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">Operating mode.  Use <c>#MODE_PRIVATE</c> for the default
                        operation.</param>
        <summary>Retrieve a <c>SharedPreferences</c> object for accessing preferences
            that are private to this activity.</summary>
        <returns>Returns the single SharedPreferences instance that can be used
                    to retrieve and modify the preference values.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getPreferences(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.getPreferences(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasWindowFocus">
      <MemberSignature Language="C#" Value="public virtual bool HasWindowFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWindowFocus" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.HasWindowFocus" />
      <MemberSignature Language="F#" Value="member this.HasWindowFocus : bool" Usage="Android.App.Activity.HasWindowFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasWindowFocus", "()Z", "GetHasWindowFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasWindowFocus", "()Z", "GetHasWindowFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this activity's &lt;em&gt;main&lt;/em&gt; window currently has window focus.</summary>
        <value>True if this activity's main window currently has window focus.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#hasWindowFocus()" title="Reference documentation">Java documentation for <code>android.app.Activity.hasWindowFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.App.Activity.OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="Immersive">
      <MemberSignature Language="C#" Value="public virtual bool Immersive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Immersive" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Immersive" />
      <MemberSignature Language="F#" Value="member this.Immersive : bool with get, set" Usage="Android.App.Activity.Immersive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isImmersive", "()Z", "GetIsImmersiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isImmersive", "()Z", "GetIsImmersiveHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setImmersive", "(Z)V", "GetSetImmersive_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setImmersive", "(Z)V", "GetSetImmersive_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bit indicating that this activity is "immersive" and should not be
            interrupted by notifications if possible. -or- Adjust the current immersive mode setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isImmersive()" title="Reference documentation">Java documentation for <code>android.app.Activity.isImmersive()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setImmersive(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setImmersive(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="P:Android.App.Activity.Immersive" />
        <altmember cref="P:Android.App.Activity.Immersive" />
      </Docs>
    </Member>
    <Member MemberName="InstanceCount">
      <MemberSignature Language="C#" Value="public static long InstanceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 InstanceCount" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.InstanceCount" />
      <MemberSignature Language="F#" Value="member this.InstanceCount : int64" Usage="Android.App.Activity.InstanceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstanceCount", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInstanceCount", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent? Intent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Intent Intent" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Intent" />
      <MemberSignature Language="F#" Value="member this.Intent : Android.Content.Intent with get, set" Usage="Android.App.Activity.Intent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIntent", "()Landroid/content/Intent;", "GetGetIntentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getIntent", "()Landroid/content/Intent;", "GetGetIntentHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setIntent", "(Landroid/content/Intent;)V", "GetSetIntent_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setIntent", "(Landroid/content/Intent;)V", "GetSetIntent_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newIntent">The new Intent object to return from getIntent</param>
        <summary>Return the intent that started this activity. -or- Change the intent returned by <c>#getIntent</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getIntent()" title="Reference documentation">Java documentation for <code>android.app.Activity.getIntent()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setIntent(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.setIntent(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.Intent" />
        <altmember cref="M:Android.App.Activity.OnNewIntent(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void InvalidateOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateOptionsMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.InvalidateOptionsMenu" />
      <MemberSignature Language="F#" Value="abstract member InvalidateOptionsMenu : unit -&gt; unit&#xA;override this.InvalidateOptionsMenu : unit -&gt; unit" Usage="activity.InvalidateOptionsMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidateOptionsMenu", "()V", "GetInvalidateOptionsMenuHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidateOptionsMenu", "()V", "GetInvalidateOptionsMenuHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Declare that the options menu has changed, so should be recreated.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#invalidateOptionsMenu()" title="Reference documentation">Java documentation for <code>android.app.Activity.invalidateOptionsMenu()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsActivityTransitionRunning">
      <MemberSignature Language="C#" Value="public virtual bool IsActivityTransitionRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActivityTransitionRunning" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsActivityTransitionRunning" />
      <MemberSignature Language="F#" Value="member this.IsActivityTransitionRunning : bool" Usage="Android.App.Activity.IsActivityTransitionRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActivityTransitionRunning", "()Z", "GetIsActivityTransitionRunningHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isActivityTransitionRunning", "()Z", "GetIsActivityTransitionRunningHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether there are any activity transitions currently running on this
            activity.</summary>
        <value>true if a transition is currently running on this activity, false otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isActivityTransitionRunning()" title="Reference documentation">Java documentation for <code>android.app.Activity.isActivityTransitionRunning()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChangingConfigurations">
      <MemberSignature Language="C#" Value="public virtual bool IsChangingConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChangingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsChangingConfigurations" />
      <MemberSignature Language="F#" Value="member this.IsChangingConfigurations : bool" Usage="Android.App.Activity.IsChangingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isChangingConfigurations", "()Z", "GetIsChangingConfigurationsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isChangingConfigurations", "()Z", "GetIsChangingConfigurationsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check to see whether this activity is in the process of being destroyed in order to be
            recreated with a new configuration.</summary>
        <value>If the activity is being torn down in order to be recreated with a new configuration,
            returns true; else returns false.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isChangingConfigurations()" title="Reference documentation">Java documentation for <code>android.app.Activity.isChangingConfigurations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsChild">
      <MemberSignature Language="C#" Value="public bool IsChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChild" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsChild" />
      <MemberSignature Language="F#" Value="member this.IsChild : bool" Usage="Android.App.Activity.IsChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isChild", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isChild", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is this activity embedded inside of another activity?</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isChild()" title="Reference documentation">Java documentation for <code>android.app.Activity.isChild()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public virtual bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsDestroyed" />
      <MemberSignature Language="F#" Value="member this.IsDestroyed : bool" Usage="Android.App.Activity.IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the final <c>#onDestroy()</c> call has been made
            on the Activity, so this instance is now dead.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isDestroyed()" title="Reference documentation">Java documentation for <code>android.app.Activity.isDestroyed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsFinishing">
      <MemberSignature Language="C#" Value="public virtual bool IsFinishing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinishing" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsFinishing" />
      <MemberSignature Language="F#" Value="member this.IsFinishing : bool" Usage="Android.App.Activity.IsFinishing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFinishing", "()Z", "GetIsFinishingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFinishing", "()Z", "GetIsFinishingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check to see whether this activity is in the process of finishing,
            either because you called <c>#finish</c> on it or someone else
            has requested that it finished.</summary>
        <value>If the activity is finishing, returns true; else returns false.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isFinishing()" title="Reference documentation">Java documentation for <code>android.app.Activity.isFinishing()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.Finish" />
      </Docs>
    </Member>
    <Member MemberName="IsInMultiWindowMode">
      <MemberSignature Language="C#" Value="public virtual bool IsInMultiWindowMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInMultiWindowMode" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsInMultiWindowMode" />
      <MemberSignature Language="F#" Value="member this.IsInMultiWindowMode : bool" Usage="Android.App.Activity.IsInMultiWindowMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInMultiWindowMode", "()Z", "GetIsInMultiWindowModeHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInMultiWindowMode", "()Z", "GetIsInMultiWindowModeHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the activity is currently in multi-window mode.</summary>
        <value>True if the activity is in multi-window mode.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isInMultiWindowMode()" title="Reference documentation">Java documentation for <code>android.app.Activity.isInMultiWindowMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInPictureInPictureMode">
      <MemberSignature Language="C#" Value="public virtual bool IsInPictureInPictureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPictureInPictureMode" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsInPictureInPictureMode" />
      <MemberSignature Language="F#" Value="member this.IsInPictureInPictureMode : bool" Usage="Android.App.Activity.IsInPictureInPictureMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInPictureInPictureMode", "()Z", "GetIsInPictureInPictureModeHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInPictureInPictureMode", "()Z", "GetIsInPictureInPictureModeHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the activity is currently in picture-in-picture mode.</summary>
        <value>True if the activity is in picture-in-picture mode.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isInPictureInPictureMode()" title="Reference documentation">Java documentation for <code>android.app.Activity.isInPictureInPictureMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLaunchedFromBubble">
      <MemberSignature Language="C#" Value="public virtual bool IsLaunchedFromBubble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLaunchedFromBubble" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsLaunchedFromBubble" />
      <MemberSignature Language="F#" Value="member this.IsLaunchedFromBubble : bool" Usage="Android.App.Activity.IsLaunchedFromBubble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLaunchedFromBubble", "()Z", "GetIsLaunchedFromBubbleHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLaunchedFromBubble", "()Z", "GetIsLaunchedFromBubbleHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this activity is launched from a bubble.</summary>
        <value>
          <c>true</c> if the activity is launched from a bubble.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isLaunchedFromBubble()" title="Reference documentation">Java documentation for <code>android.app.Activity.isLaunchedFromBubble()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalVoiceInteractionSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalVoiceInteractionSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalVoiceInteractionSupported" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsLocalVoiceInteractionSupported" />
      <MemberSignature Language="F#" Value="member this.IsLocalVoiceInteractionSupported : bool" Usage="Android.App.Activity.IsLocalVoiceInteractionSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLocalVoiceInteractionSupported", "()Z", "GetIsLocalVoiceInteractionSupportedHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLocalVoiceInteractionSupported", "()Z", "GetIsLocalVoiceInteractionSupportedHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Queries whether the currently enabled voice interaction service supports returning
            a voice interactor for use by the activity.</summary>
        <value>whether the current voice interaction service supports local voice interaction</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isLocalVoiceInteractionSupported()" title="Reference documentation">Java documentation for <code>android.app.Activity.isLocalVoiceInteractionSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTaskRoot">
      <MemberSignature Language="C#" Value="public virtual bool IsTaskRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTaskRoot" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsTaskRoot" />
      <MemberSignature Language="F#" Value="member this.IsTaskRoot : bool" Usage="Android.App.Activity.IsTaskRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTaskRoot", "()Z", "GetIsTaskRootHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTaskRoot", "()Z", "GetIsTaskRootHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this activity is the root of a task.</summary>
        <value>True if this is the root activity, else false.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isTaskRoot()" title="Reference documentation">Java documentation for <code>android.app.Activity.isTaskRoot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsVoiceInteraction">
      <MemberSignature Language="C#" Value="public virtual bool IsVoiceInteraction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVoiceInteraction" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsVoiceInteraction" />
      <MemberSignature Language="F#" Value="member this.IsVoiceInteraction : bool" Usage="Android.App.Activity.IsVoiceInteraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVoiceInteraction", "()Z", "GetIsVoiceInteractionHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVoiceInteraction", "()Z", "GetIsVoiceInteractionHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether this activity is running as part of a voice interaction with the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isVoiceInteraction()" title="Reference documentation">Java documentation for <code>android.app.Activity.isVoiceInteraction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVoiceInteractionRoot">
      <MemberSignature Language="C#" Value="public virtual bool IsVoiceInteractionRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVoiceInteractionRoot" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.IsVoiceInteractionRoot" />
      <MemberSignature Language="F#" Value="member this.IsVoiceInteractionRoot : bool" Usage="Android.App.Activity.IsVoiceInteractionRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVoiceInteractionRoot", "()Z", "GetIsVoiceInteractionRootHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVoiceInteractionRoot", "()Z", "GetIsVoiceInteractionRootHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c>#isVoiceInteraction</c>, but only returns <c>true</c> if this is also the root
            of a voice interaction.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#isVoiceInteractionRoot()" title="Reference documentation">Java documentation for <code>android.app.Activity.isVoiceInteractionRoot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Activity.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastNonConfigurationInstance">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? LastNonConfigurationInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object LastNonConfigurationInstance" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.LastNonConfigurationInstance" />
      <MemberSignature Language="F#" Value="member this.LastNonConfigurationInstance : Java.Lang.Object" Usage="Android.App.Activity.LastNonConfigurationInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLastNonConfigurationInstance", "()Ljava/lang/Object;", "GetGetLastNonConfigurationInstanceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLastNonConfigurationInstance", "()Ljava/lang/Object;", "GetGetLastNonConfigurationInstanceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the non-configuration instance data that was previously
            returned by <c>#onRetainNonConfigurationInstance()</c>.</summary>
        <value>the object previously returned by <c>#onRetainNonConfigurationInstance()</c></value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getLastNonConfigurationInstance()" title="Reference documentation">Java documentation for <code>android.app.Activity.getLastNonConfigurationInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LayoutInflater">
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutInflater LayoutInflater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater LayoutInflater" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.LayoutInflater" />
      <MemberSignature Language="F#" Value="member this.LayoutInflater : Android.Views.LayoutInflater" Usage="Android.App.Activity.LayoutInflater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for calling
            <c>android.view.Window#getLayoutInflater</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getLayoutInflater()" title="Reference documentation">Java documentation for <code>android.app.Activity.getLayoutInflater()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoaderManager">
      <MemberSignature Language="C#" Value="public virtual Android.App.LoaderManager? LoaderManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.LoaderManager LoaderManager" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.LoaderManager" />
      <MemberSignature Language="F#" Value="member this.LoaderManager : Android.App.LoaderManager" Usage="Android.App.Activity.LoaderManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLoaderManager", "()Landroid/app/LoaderManager;", "GetGetLoaderManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLoaderManager", "()Landroid/app/LoaderManager;", "GetGetLoaderManagerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.LoaderManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the LoaderManager for this activity, creating it if needed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getLoaderManager()" title="Reference documentation">Java documentation for <code>android.app.Activity.getLoaderManager()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LocalClassName">
      <MemberSignature Language="C#" Value="public virtual string LocalClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalClassName" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.LocalClassName" />
      <MemberSignature Language="F#" Value="member this.LocalClassName : string" Usage="Android.App.Activity.LocalClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalClassName", "()Ljava/lang/String;", "GetGetLocalClassNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalClassName", "()Ljava/lang/String;", "GetGetLocalClassNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns class name for this activity with the package prefix removed.</summary>
        <value>The local class name.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getLocalClassName()" title="Reference documentation">Java documentation for <code>android.app.Activity.getLocalClassName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ManagedQuery">
      <MemberSignature Language="C#" Value="public Android.Database.ICursor? ManagedQuery (Android.Net.Uri? uri, string[]? projection, string? selection, string[]? selectionArgs, string? sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Database.ICursor ManagedQuery(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ManagedQuery(Android.Net.Uri,System.String[],System.String,System.String[],System.String)" />
      <MemberSignature Language="F#" Value="member this.ManagedQuery : Android.Net.Uri * string[] * string * string[] * string -&gt; Android.Database.ICursor" Usage="activity.ManagedQuery (uri, projection, selection, selectionArgs, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("managedQuery", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("managedQuery", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI of the content provider to query.</param>
        <param name="projection">List of columns to return.</param>
        <param name="selection">SQL WHERE clause.</param>
        <param name="selectionArgs">The arguments to selection, if any ?s are pesent</param>
        <param name="sortOrder">SQL ORDER BY clause.</param>
        <summary>Wrapper around
            <c>ContentResolver#query(android.net.Uri , String[], String, String[], String)</c>
            that gives the resulting <c>Cursor</c> to call
            <c>#startManagingCursor</c> so that the activity will manage its
            lifecycle for you.</summary>
        <returns>The Cursor that was returned by query().</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#managedQuery(android.net.Uri,%20java.lang.String[],%20java.lang.String,%20java.lang.String[],%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.Activity.managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri, System.String[], System.String[], System.String[], System.String[])" />
        <altmember cref="M:Android.App.Activity.StartManagingCursor(Android.Database.ICursor)" />
      </Docs>
    </Member>
    <Member MemberName="MaxNumPictureInPictureActions">
      <MemberSignature Language="C#" Value="public virtual int MaxNumPictureInPictureActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxNumPictureInPictureActions" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.MaxNumPictureInPictureActions" />
      <MemberSignature Language="F#" Value="member this.MaxNumPictureInPictureActions : int" Usage="Android.App.Activity.MaxNumPictureInPictureActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxNumPictureInPictureActions", "()I", "GetGetMaxNumPictureInPictureActionsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxNumPictureInPictureActions", "()I", "GetGetMaxNumPictureInPictureActionsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of actions that will be displayed in the picture-in-picture UI when the
            user interacts with the activity currently in picture-in-picture mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getMaxNumPictureInPictureActions()" title="Reference documentation">Java documentation for <code>android.app.Activity.getMaxNumPictureInPictureActions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaController">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaController? MediaController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaController MediaController" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.MediaController" />
      <MemberSignature Language="F#" Value="member this.MediaController : Android.Media.Session.MediaController with get, set" Usage="Android.App.Activity.MediaController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMediaController", "()Landroid/media/session/MediaController;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMediaController", "()Landroid/media/session/MediaController;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMediaController", "(Landroid/media/session/MediaController;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMediaController", "(Landroid/media/session/MediaController;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="controller">The controller for the session which should receive
                       media keys and volume changes.</param>
        <summary>Gets the controller which should be receiving media key and volume events
            while this activity is in the foreground. -or- Sets a <c>MediaController</c> to send media keys and volume changes to.</summary>
        <value>The controller which should receive events.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getMediaController()" title="Reference documentation">Java documentation for <code>android.app.Activity.getMediaController()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setMediaController(android.media.session.MediaController)" title="Reference documentation">Java documentation for <code>android.app.Activity.setMediaController(android.media.session.MediaController)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.App.Activity.MediaController" />
      </Docs>
    </Member>
    <Member MemberName="MenuInflater">
      <MemberSignature Language="C#" Value="public virtual Android.Views.MenuInflater MenuInflater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.MenuInflater MenuInflater" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.MenuInflater" />
      <MemberSignature Language="F#" Value="member this.MenuInflater : Android.Views.MenuInflater" Usage="Android.App.Activity.MenuInflater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMenuInflater", "()Landroid/view/MenuInflater;", "GetGetMenuInflaterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMenuInflater", "()Landroid/view/MenuInflater;", "GetGetMenuInflaterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.MenuInflater</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>MenuInflater</c> with this context.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getMenuInflater()" title="Reference documentation">Java documentation for <code>android.app.Activity.getMenuInflater()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MoveTaskToBack">
      <MemberSignature Language="C#" Value="public virtual bool MoveTaskToBack (bool nonRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveTaskToBack(bool nonRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.MoveTaskToBack(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member MoveTaskToBack : bool -&gt; bool&#xA;override this.MoveTaskToBack : bool -&gt; bool" Usage="activity.MoveTaskToBack nonRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("moveTaskToBack", "(Z)Z", "GetMoveTaskToBack_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("moveTaskToBack", "(Z)Z", "GetMoveTaskToBack_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonRoot">If false then this only works if the activity is the root
                           of a task; if true it will work for any activity in
                           a task.</param>
        <summary>Move the task containing this activity to the back of the activity
            stack.</summary>
        <returns>If the task was moved (or it was already at the
                    back) true is returned, else false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#moveTaskToBack(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.moveTaskToBack(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUpTo">
      <MemberSignature Language="C#" Value="public virtual bool NavigateUpTo (Android.Content.Intent? upIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NavigateUpTo(class Android.Content.Intent upIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.NavigateUpTo(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member NavigateUpTo : Android.Content.Intent -&gt; bool&#xA;override this.NavigateUpTo : Android.Content.Intent -&gt; bool" Usage="activity.NavigateUpTo upIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("navigateUpTo", "(Landroid/content/Intent;)Z", "GetNavigateUpTo_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("navigateUpTo", "(Landroid/content/Intent;)Z", "GetNavigateUpTo_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="upIntent">An intent representing the target destination for up navigation</param>
        <summary>Navigate from this activity to the activity specified by upIntent, finishing this activity
            in the process.</summary>
        <returns>true if up navigation successfully reached the activity indicated by upIntent and
                    upIntent was delivered to it. false if an instance of the indicated activity could
                    not be found and this activity was simply finished normally.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#navigateUpTo(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.navigateUpTo(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUpToFromChild">
      <MemberSignature Language="C#" Value="public virtual bool NavigateUpToFromChild (Android.App.Activity? child, Android.Content.Intent? upIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NavigateUpToFromChild(class Android.App.Activity child, class Android.Content.Intent upIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.NavigateUpToFromChild(Android.App.Activity,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member NavigateUpToFromChild : Android.App.Activity * Android.Content.Intent -&gt; bool&#xA;override this.NavigateUpToFromChild : Android.App.Activity * Android.Content.Intent -&gt; bool" Usage="activity.NavigateUpToFromChild (child, upIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("navigateUpToFromChild", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "GetNavigateUpToFromChild_Landroid_app_Activity_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("navigateUpToFromChild", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "GetNavigateUpToFromChild_Landroid_app_Activity_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
        <Parameter Name="upIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="child">The activity making the call.</param>
        <param name="upIntent">An intent representing the target destination for up navigation</param>
        <summary>This is called when a child activity of this one calls its
            <c>#navigateUpTo</c> method.</summary>
        <returns>true if up navigation successfully reached the activity indicated by upIntent and
                    upIntent was delivered to it. false if an instance of the indicated activity could
                    not be found and this activity was simply finished normally.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#navigateUpToFromChild(android.app.Activity,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.navigateUpToFromChild(android.app.Activity, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnActionModeFinished">
      <MemberSignature Language="C#" Value="public virtual void OnActionModeFinished (Android.Views.ActionMode? mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionModeFinished(class Android.Views.ActionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnActionModeFinished(Android.Views.ActionMode)" />
      <MemberSignature Language="F#" Value="abstract member OnActionModeFinished : Android.Views.ActionMode -&gt; unit&#xA;override this.OnActionModeFinished : Android.Views.ActionMode -&gt; unit" Usage="activity.OnActionModeFinished mode" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnActionModeFinished(Android.Views.ActionMode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActionModeFinished", "(Landroid/view/ActionMode;)V", "GetOnActionModeFinished_Landroid_view_ActionMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActionModeFinished", "(Landroid/view/ActionMode;)V", "GetOnActionModeFinished_Landroid_view_ActionMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Views.ActionMode" />
      </Parameters>
      <Docs>
        <param name="mode">The action mode that just finished.</param>
        <summary>Notifies the activity that an action mode has finished.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onActionModeFinished(android.view.ActionMode)" title="Reference documentation">Java documentation for <code>android.app.Activity.onActionModeFinished(android.view.ActionMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnActionModeStarted">
      <MemberSignature Language="C#" Value="public virtual void OnActionModeStarted (Android.Views.ActionMode? mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActionModeStarted(class Android.Views.ActionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnActionModeStarted(Android.Views.ActionMode)" />
      <MemberSignature Language="F#" Value="abstract member OnActionModeStarted : Android.Views.ActionMode -&gt; unit&#xA;override this.OnActionModeStarted : Android.Views.ActionMode -&gt; unit" Usage="activity.OnActionModeStarted mode" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnActionModeStarted(Android.Views.ActionMode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActionModeStarted", "(Landroid/view/ActionMode;)V", "GetOnActionModeStarted_Landroid_view_ActionMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActionModeStarted", "(Landroid/view/ActionMode;)V", "GetOnActionModeStarted_Landroid_view_ActionMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Views.ActionMode" />
      </Parameters>
      <Docs>
        <param name="mode">The new action mode.</param>
        <summary>Notifies the Activity that an action mode has been started.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onActionModeStarted(android.view.ActionMode)" title="Reference documentation">Java documentation for <code>android.app.Activity.onActionModeStarted(android.view.ActionMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnActivityReenter">
      <MemberSignature Language="C#" Value="public virtual void OnActivityReenter (int resultCode, Android.Content.Intent? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActivityReenter(int32 resultCode, class Android.Content.Intent data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnActivityReenter(System.Int32,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnActivityReenter : int * Android.Content.Intent -&gt; unit&#xA;override this.OnActivityReenter : int * Android.Content.Intent -&gt; unit" Usage="activity.OnActivityReenter (resultCode, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActivityReenter", "(ILandroid/content/Intent;)V", "GetOnActivityReenter_ILandroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActivityReenter", "(ILandroid/content/Intent;)V", "GetOnActivityReenter_ILandroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultCode" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="resultCode">The integer result code returned by the child activity
                              through its setResult().</param>
        <param name="data">An Intent, which can return result data to the caller
                          (various data can be attached to Intent "extras").</param>
        <summary>Called when an activity you launched with an activity transition exposes this
            Activity through a returning activity transition, giving you the resultCode
            and any additional data from it.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onActivityReenter(int,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onActivityReenter(int, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityResult">
      <MemberSignature Language="C#" Value="protected virtual void OnActivityResult (int requestCode, Android.App.Result resultCode, Android.Content.Intent? data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivityResult(int32 requestCode, valuetype Android.App.Result resultCode, class Android.Content.Intent data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnActivityResult(System.Int32,Android.App.Result,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnActivityResult : int * Android.App.Result * Android.Content.Intent -&gt; unit&#xA;override this.OnActivityResult : int * Android.App.Result * Android.Content.Intent -&gt; unit" Usage="activity.OnActivityResult (requestCode, resultCode, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActivityResult", "(IILandroid/content/Intent;)V", "GetOnActivityResult_IILandroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActivityResult", "(IILandroid/content/Intent;)V", "GetOnActivityResult_IILandroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="resultCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="data" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="requestCode">The integer request code originally supplied to
                               startActivityForResult(), allowing you to identify who this
                               result came from.</param>
        <param name="resultCode">The integer result code returned by the child activity
                              through its setResult().</param>
        <param name="data">An Intent, which can return result data to the caller
                          (various data can be attached to Intent "extras").</param>
        <summary>Called when an activity you launched exits, giving you the requestCode
            you started it with, the resultCode it returned, and any additional
            data from it.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onActivityResult(int,%20int,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onActivityResult(int, int, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" />
        <altmember cref="M:Android.App.Activity.CreatePendingResult(System.Int32, Android.Content.Intent, Android.Content.Intent)" />
        <altmember cref="M:Android.App.Activity.SetResult(Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="OnAttachedToWindow">
      <MemberSignature Language="C#" Value="public virtual void OnAttachedToWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAttachedToWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnAttachedToWindow" />
      <MemberSignature Language="F#" Value="abstract member OnAttachedToWindow : unit -&gt; unit&#xA;override this.OnAttachedToWindow : unit -&gt; unit" Usage="activity.OnAttachedToWindow " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnAttachedToWindow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the main window associated with the activity has been
            attached to the window manager.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onAttachedToWindow()" title="Reference documentation">Java documentation for <code>android.app.Activity.onAttachedToWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.OnAttachedToWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnAttachFragment">
      <MemberSignature Language="C#" Value="public virtual void OnAttachFragment (Android.App.Fragment? fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAttachFragment(class Android.App.Fragment fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnAttachFragment(Android.App.Fragment)" />
      <MemberSignature Language="F#" Value="abstract member OnAttachFragment : Android.App.Fragment -&gt; unit&#xA;override this.OnAttachFragment : Android.App.Fragment -&gt; unit" Usage="activity.OnAttachFragment fragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAttachFragment", "(Landroid/app/Fragment;)V", "GetOnAttachFragment_Landroid_app_Fragment_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAttachFragment", "(Landroid/app/Fragment;)V", "GetOnAttachFragment_Landroid_app_Fragment_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Android.App.Fragment" />
      </Parameters>
      <Docs>
        <param name="fragment">To be added.</param>
        <summary>Called when a Fragment is being attached to this activity, immediately
            after the call to its <c>Fragment#onAttach Fragment.onAttach()</c>
            method and before <c>Fragment#onCreate Fragment.onCreate()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onAttachFragment(android.app.Fragment)" title="Reference documentation">Java documentation for <code>android.app.Activity.onAttachFragment(android.app.Fragment)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnBackInvokedDispatcher">
      <MemberSignature Language="C#" Value="public virtual Android.Window.IOnBackInvokedDispatcher OnBackInvokedDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Window.IOnBackInvokedDispatcher OnBackInvokedDispatcher" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.OnBackInvokedDispatcher" />
      <MemberSignature Language="F#" Value="member this.OnBackInvokedDispatcher : Android.Window.IOnBackInvokedDispatcher" Usage="Android.App.Activity.OnBackInvokedDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;", "GetGetOnBackInvokedDispatcherHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;", "GetGetOnBackInvokedDispatcherHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Window.IOnBackInvokedDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>OnBackInvokedDispatcher</c> instance associated with the window that this
            activity is attached to.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getOnBackInvokedDispatcher()" title="Reference documentation">Java documentation for <code>android.app.Activity.getOnBackInvokedDispatcher()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackPressed">
      <MemberSignature Language="C#" Value="public virtual void OnBackPressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBackPressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnBackPressed" />
      <MemberSignature Language="F#" Value="abstract member OnBackPressed : unit -&gt; unit&#xA;override this.OnBackPressed : unit -&gt; unit" Usage="activity.OnBackPressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBackPressed", "()V", "GetOnBackPressedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBackPressed", "()V", "GetOnBackPressedHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the activity has detected the user's press of the back key.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onBackPressed()" title="Reference documentation">Java documentation for <code>android.app.Activity.onBackPressed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnChildTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildTitleChanged (Android.App.Activity? childActivity, Java.Lang.ICharSequence? title);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildTitleChanged(class Android.App.Activity childActivity, class Java.Lang.ICharSequence title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnChildTitleChanged(Android.App.Activity,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member OnChildTitleChanged : Android.App.Activity * Java.Lang.ICharSequence -&gt; unit&#xA;override this.OnChildTitleChanged : Android.App.Activity * Java.Lang.ICharSequence -&gt; unit" Usage="activity.OnChildTitleChanged (childActivity, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onChildTitleChanged", "(Landroid/app/Activity;Ljava/lang/CharSequence;)V", "GetOnChildTitleChanged_Landroid_app_Activity_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onChildTitleChanged", "(Landroid/app/Activity;Ljava/lang/CharSequence;)V", "GetOnChildTitleChanged_Landroid_app_Activity_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="Android.App.Activity" />
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="childActivity">To be added.</param>
        <param name="title">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnChildTitleChanged">
      <MemberSignature Language="C#" Value="protected void OnChildTitleChanged (Android.App.Activity? childActivity, string? title);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChildTitleChanged(class Android.App.Activity childActivity, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnChildTitleChanged(Android.App.Activity,System.String)" />
      <MemberSignature Language="F#" Value="member this.OnChildTitleChanged : Android.App.Activity * string -&gt; unit" Usage="activity.OnChildTitleChanged (childActivity, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="Android.App.Activity" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childActivity">To be added.</param>
        <param name="title">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="C#" Value="public virtual void OnConfigurationChanged (Android.Content.Res.Configuration newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnConfigurationChanged(Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member OnConfigurationChanged : Android.Content.Res.Configuration -&gt; unit&#xA;override this.OnConfigurationChanged : Android.Content.Res.Configuration -&gt; unit" Usage="activity.OnConfigurationChanged newConfig" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IComponentCallbacks.OnConfigurationChanged(Android.Content.Res.Configuration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new device configuration.</param>
        <summary>Called by the system when the device configuration changes while your
            activity is running.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onConfigurationChanged(android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.app.Activity.onConfigurationChanged(android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnContentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnContentChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnContentChanged" />
      <MemberSignature Language="F#" Value="abstract member OnContentChanged : unit -&gt; unit&#xA;override this.OnContentChanged : unit -&gt; unit" Usage="activity.OnContentChanged " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnContentChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onContentChanged", "()V", "GetOnContentChangedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onContentChanged", "()V", "GetOnContentChangedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This hook is called whenever the content view of the screen changes
 (due to a call to
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Views Window SetContentView(Android Views View, LayoutParams)';scope=Xamarin" title="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)">M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)</a></format> or
 <see cref="M:Android.Views.Window.AddContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnContextItemSelected">
      <MemberSignature Language="C#" Value="public virtual bool OnContextItemSelected (Android.Views.IMenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnContextItemSelected(class Android.Views.IMenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnContextItemSelected(Android.Views.IMenuItem)" />
      <MemberSignature Language="F#" Value="abstract member OnContextItemSelected : Android.Views.IMenuItem -&gt; bool&#xA;override this.OnContextItemSelected : Android.Views.IMenuItem -&gt; bool" Usage="activity.OnContextItemSelected item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onContextItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnContextItemSelected_Landroid_view_MenuItem_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onContextItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnContextItemSelected_Landroid_view_MenuItem_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Android.Views.IMenuItem" />
      </Parameters>
      <Docs>
        <param name="item">The context menu item that was selected.</param>
        <summary>This hook is called whenever an item in a context menu is selected.</summary>
        <returns>boolean Return false to allow normal context menu processing to
                    proceed, true to consume it here.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onContextItemSelected(android.view.MenuItem)" title="Reference documentation">Java documentation for <code>android.app.Activity.onContextItemSelected(android.view.MenuItem)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuClosed">
      <MemberSignature Language="C#" Value="public virtual void OnContextMenuClosed (Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnContextMenuClosed(class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnContextMenuClosed(Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuClosed : Android.Views.IMenu -&gt; unit&#xA;override this.OnContextMenuClosed : Android.Views.IMenu -&gt; unit" Usage="activity.OnContextMenuClosed menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onContextMenuClosed", "(Landroid/view/Menu;)V", "GetOnContextMenuClosed_Landroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onContextMenuClosed", "(Landroid/view/Menu;)V", "GetOnContextMenuClosed_Landroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The context menu that is being closed.</param>
        <summary>This hook is called whenever the context menu is being closed (either by
            the user canceling the menu with the back/menu button, or when an item is
            selected).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onContextMenuClosed(android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onContextMenuClosed(android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="protected virtual void OnCreate (Android.OS.Bundle? savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreate(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnCreate : Android.OS.Bundle -&gt; unit&#xA;override this.OnCreate : Android.OS.Bundle -&gt; unit" Usage="activity.OnCreate savedInstanceState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">If the activity is being re-initialized after
                previously being shut down then this Bundle contains the data it most
                recently supplied in <c>#onSaveInstanceState</c>.  &lt;b&gt;<i>Note: Otherwise it is null.</i>&lt;/b&gt;</param>
        <summary>Called when the activity is starting.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreate(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreate(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnStart" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPostCreate(Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate (Android.OS.Bundle? savedInstanceState, Android.OS.PersistableBundle? persistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate(class Android.OS.Bundle savedInstanceState, class Android.OS.PersistableBundle persistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreate(Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member OnCreate : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.OnCreate : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="activity.OnCreate (savedInstanceState, persistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnCreate_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnCreate_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
        <Parameter Name="persistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">if the activity is being re-initialized after
                previously being shut down then this Bundle contains the data it most
                recently supplied in <c>#onSaveInstanceState</c>.
                &lt;b&gt;<i>Note: Otherwise it is null.</i>&lt;/b&gt;</param>
        <param name="persistentState">if the activity is being re-initialized after
                previously being shut down or powered off then this Bundle contains the data it most
                recently supplied to outPersistentState in <c>#onSaveInstanceState</c>.
                &lt;b&gt;<i>Note: Otherwise it is null.</i>&lt;/b&gt;</param>
        <summary>Same as <c>#onCreate(android.os.Bundle)</c> but called for those activities created with
            the attribute <c>android.R.attr#persistableMode</c> set to
            <c>persistAcrossReboots</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreate(android.os.Bundle,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreate(android.os.Bundle, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnStart" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPostCreate(Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateContextMenu">
      <MemberSignature Language="C#" Value="public virtual void OnCreateContextMenu (Android.Views.IContextMenu? menu, Android.Views.View? v, Android.Views.IContextMenuContextMenuInfo? menuInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateContextMenu(class Android.Views.IContextMenu menu, class Android.Views.View v, class Android.Views.IContextMenuContextMenuInfo menuInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateContextMenu(Android.Views.IContextMenu,Android.Views.View,Android.Views.IContextMenuContextMenuInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateContextMenu : Android.Views.IContextMenu * Android.Views.View * Android.Views.IContextMenuContextMenuInfo -&gt; unit&#xA;override this.OnCreateContextMenu : Android.Views.IContextMenu * Android.Views.View * Android.Views.IContextMenuContextMenuInfo -&gt; unit" Usage="activity.OnCreateContextMenu (menu, v, menuInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.View.IOnCreateContextMenuListener.OnCreateContextMenu(Android.Views.IContextMenu,Android.Views.View,Android.Views.IContextMenuContextMenuInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateContextMenu", "(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V", "GetOnCreateContextMenu_Landroid_view_ContextMenu_Landroid_view_View_Landroid_view_ContextMenu_ContextMenuInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateContextMenu", "(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V", "GetOnCreateContextMenu_Landroid_view_ContextMenu_Landroid_view_View_Landroid_view_ContextMenu_ContextMenuInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IContextMenu" />
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="menuInfo" Type="Android.Views.IContextMenuContextMenuInfo" />
      </Parameters>
      <Docs>
        <param name="menu">The context menu that is being built</param>
        <param name="v">The view for which the context menu is being built</param>
        <param name="menuInfo">Extra information about the item for which the
            context menu should be shown. This information will vary
            depending on the class of v.
</param>
        <summary>Called when a context menu for the <c>view</c> is about to be shown.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateContextMenu(android.view.ContextMenu,%20android.view.View,%20android.view.ContextMenuInfo)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenuInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateDescription">
      <MemberSignature Language="C#" Value="public string? OnCreateDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string OnCreateDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateDescription" />
      <MemberSignature Language="F#" Value="member this.OnCreateDescription : unit -&gt; string" Usage="activity.OnCreateDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a new description for this activity.</summary>
        <returns>A description of what the user is doing.  It should be short and
                    sweet (only a few words).</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateDescription()" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateDescription()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDescriptionFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? OnCreateDescriptionFormatted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence OnCreateDescriptionFormatted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateDescriptionFormatted" />
      <MemberSignature Language="F#" Value="abstract member OnCreateDescriptionFormatted : unit -&gt; Java.Lang.ICharSequence&#xA;override this.OnCreateDescriptionFormatted : unit -&gt; Java.Lang.ICharSequence" Usage="activity.OnCreateDescriptionFormatted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateDescription", "()Ljava/lang/CharSequence;", "GetOnCreateDescriptionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateDescription", "()Ljava/lang/CharSequence;", "GetOnCreateDescriptionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a new description for this activity.</summary>
        <returns>A description of what the user is doing.  It should be short and
                    sweet (only a few words).</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateDescription()" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateDescription()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreateThumbnail(Android.Graphics.Bitmap, Android.Graphics.Canvas)" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPause" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateDialog">
      <MemberSignature Language="C#" Value="protected virtual Android.App.Dialog? OnCreateDialog (int id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.App.Dialog OnCreateDialog(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateDialog(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateDialog : int -&gt; Android.App.Dialog&#xA;override this.OnCreateDialog : int -&gt; Android.App.Dialog" Usage="activity.OnCreateDialog id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateDialog", "(I)Landroid/app/Dialog;", "GetOnCreateDialog_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateDialog", "(I)Landroid/app/Dialog;", "GetOnCreateDialog_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Dialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateDialog(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateDialog(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateDialog">
      <MemberSignature Language="C#" Value="protected virtual Android.App.Dialog? OnCreateDialog (int id, Android.OS.Bundle? args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.App.Dialog OnCreateDialog(int32 id, class Android.OS.Bundle args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateDialog(System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateDialog : int * Android.OS.Bundle -&gt; Android.App.Dialog&#xA;override this.OnCreateDialog : int * Android.OS.Bundle -&gt; Android.App.Dialog" Usage="activity.OnCreateDialog (id, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateDialog", "(ILandroid/os/Bundle;)Landroid/app/Dialog;", "GetOnCreateDialog_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateDialog", "(ILandroid/os/Bundle;)Landroid/app/Dialog;", "GetOnCreateDialog_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Dialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="id">The id of the dialog.</param>
        <param name="args">The dialog arguments provided to <c>#showDialog(int, Bundle)</c>.</param>
        <summary>Callback for creating dialogs that are managed (saved and restored) for you
            by the activity.</summary>
        <returns>The dialog.  If you return null, the dialog will not be created.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateDialog(int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateDialog(int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.App.Activity.OnPrepareDialog(System.Int32, Android.App.Dialog, Android.App.Dialog)" />
        <altmember cref="M:Android.App.Activity.ShowDialog(System.Int32, Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.DismissDialog(System.Int32)" />
        <altmember cref="M:Android.App.Activity.RemoveDialog(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateNavigateUpTaskStack">
      <MemberSignature Language="C#" Value="public virtual void OnCreateNavigateUpTaskStack (Android.App.TaskStackBuilder? builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateNavigateUpTaskStack(class Android.App.TaskStackBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateNavigateUpTaskStack(Android.App.TaskStackBuilder)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateNavigateUpTaskStack : Android.App.TaskStackBuilder -&gt; unit&#xA;override this.OnCreateNavigateUpTaskStack : Android.App.TaskStackBuilder -&gt; unit" Usage="activity.OnCreateNavigateUpTaskStack builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", "GetOnCreateNavigateUpTaskStack_Landroid_app_TaskStackBuilder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", "GetOnCreateNavigateUpTaskStack_Landroid_app_TaskStackBuilder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Android.App.TaskStackBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">An empty TaskStackBuilder - the application should add intents representing
                           the desired task stack</param>
        <summary>Define the synthetic task stack that will be generated during Up navigation from
            a different task.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual bool OnCreateOptionsMenu (Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCreateOptionsMenu(class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateOptionsMenu(Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateOptionsMenu : Android.Views.IMenu -&gt; bool&#xA;override this.OnCreateOptionsMenu : Android.Views.IMenu -&gt; bool" Usage="activity.OnCreateOptionsMenu menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateOptionsMenu", "(Landroid/view/Menu;)Z", "GetOnCreateOptionsMenu_Landroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateOptionsMenu", "(Landroid/view/Menu;)Z", "GetOnCreateOptionsMenu_Landroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The options menu in which you place your items.</param>
        <summary>Initialize the contents of the Activity's standard options menu.</summary>
        <returns>You must return true for the menu to be displayed;
                    if you return false it will not be shown.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateOptionsMenu(android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateOptionsMenu(android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnPrepareOptionsMenu(Android.Views.IMenu)" />
        <altmember cref="M:Android.App.Activity.OnOptionsItemSelected(Android.Views.IMenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatePanelMenu">
      <MemberSignature Language="C#" Value="public virtual bool OnCreatePanelMenu (int featureId, Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCreatePanelMenu(int32 featureId, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreatePanelMenu(System.Int32,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnCreatePanelMenu : int * Android.Views.IMenu -&gt; bool&#xA;override this.OnCreatePanelMenu : int * Android.Views.IMenu -&gt; bool" Usage="activity.OnCreatePanelMenu (featureId, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnCreatePanelMenu(System.Int32,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreatePanelMenu", "(ILandroid/view/Menu;)Z", "GetOnCreatePanelMenu_ILandroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreatePanelMenu", "(ILandroid/view/Menu;)Z", "GetOnCreatePanelMenu_ILandroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel being created.</param>
        <param name="menu">The menu inside the panel.</param>
        <summary>Default implementation of
            <c>android.view.Window.Callback#onCreatePanelMenu</c>
            for activities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreatePanelMenu(int,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreatePanelMenu(int, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatePanelView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreatePanelView (int featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreatePanelView(int32 featureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreatePanelView(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnCreatePanelView : int -&gt; Android.Views.View&#xA;override this.OnCreatePanelView : int -&gt; Android.Views.View" Usage="activity.OnCreatePanelView featureId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnCreatePanelView(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreatePanelView", "(I)Landroid/view/View;", "GetOnCreatePanelView_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreatePanelView", "(I)Landroid/view/View;", "GetOnCreatePanelView_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">Which panel is being created.</param>
        <summary>Default implementation of
            <c>android.view.Window.Callback#onCreatePanelView</c>
            for activities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreatePanelView(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreatePanelView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateThumbnail">
      <MemberSignature Language="C#" Value="public virtual bool OnCreateThumbnail (Android.Graphics.Bitmap? outBitmap, Android.Graphics.Canvas? canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCreateThumbnail(class Android.Graphics.Bitmap outBitmap, class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateThumbnail(Android.Graphics.Bitmap,Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateThumbnail : Android.Graphics.Bitmap * Android.Graphics.Canvas -&gt; bool&#xA;override this.OnCreateThumbnail : Android.Graphics.Bitmap * Android.Graphics.Canvas -&gt; bool" Usage="activity.OnCreateThumbnail (outBitmap, canvas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateThumbnail", "(Landroid/graphics/Bitmap;Landroid/graphics/Canvas;)Z", "GetOnCreateThumbnail_Landroid_graphics_Bitmap_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateThumbnail", "(Landroid/graphics/Bitmap;Landroid/graphics/Canvas;)Z", "GetOnCreateThumbnail_Landroid_graphics_Bitmap_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outBitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="outBitmap">The bitmap to contain the thumbnail.</param>
        <param name="canvas">Can be used to render into the bitmap.</param>
        <summary>Generate a new thumbnail for this activity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateThumbnail(android.graphics.Bitmap,%20android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreateDescriptionFormatted" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPause" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreateView (string name, Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateView(string name, class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateView(System.String,Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : string * Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : string * Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="activity.OnCreateView (name, context, attrs)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.LayoutInflater.IFactory.OnCreateView(System.String,Android.Content.Context,Android.Util.IAttributeSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateView", "(Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateView", "(Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="name">Tag name to be inflated.</param>
        <param name="context">The context the view is being created in.</param>
        <param name="attrs">Inflation attributes as specified in XML file.</param>
        <summary>Standard implementation of
            <c>android.view.LayoutInflater.Factory#onCreateView</c> used when
            inflating with the LayoutInflater returned by <c>#getSystemService</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateView(java.lang.String,%20android.content.Context,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.LayoutInflater.CreateView(System.String, System.String, System.String)" />
        <altmember cref="P:Android.Views.Window.LayoutInflater" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreateView (Android.Views.View? parent, string name, Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateView(class Android.Views.View parent, string name, class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnCreateView(Android.Views.View,System.String,Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : Android.Views.View * string * Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : Android.Views.View * string * Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="activity.OnCreateView (parent, name, context, attrs)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.LayoutInflater.IFactory2.OnCreateView(Android.Views.View,System.String,Android.Content.Context,Android.Util.IAttributeSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="parent">The parent that the created view will be placed
 in; <i>note that this may be null</i>.</param>
        <param name="name">Tag name to be inflated.</param>
        <param name="context">The context the view is being created in.</param>
        <param name="attrs">Inflation attributes as specified in XML file.</param>
        <summary>Standard implementation of
            <c>android.view.LayoutInflater.Factory2#onCreateView(View, String, Context, AttributeSet)</c>
            used when inflating with the LayoutInflater returned by <c>#getSystemService</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onCreateView(android.view.View,%20java.lang.String,%20android.content.Context,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.app.Activity.onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Views.LayoutInflater.CreateView(System.String, System.String, System.String)" />
        <altmember cref="P:Android.Views.Window.LayoutInflater" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="protected virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnDestroy" />
      <MemberSignature Language="F#" Value="abstract member OnDestroy : unit -&gt; unit&#xA;override this.OnDestroy : unit -&gt; unit" Usage="activity.OnDestroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Perform any final cleanup before an activity is destroyed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onDestroy()" title="Reference documentation">Java documentation for <code>android.app.Activity.onDestroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnPause" />
        <altmember cref="M:Android.App.Activity.OnStop" />
        <altmember cref="M:Android.App.Activity.Finish" />
        <altmember cref="P:Android.App.Activity.IsFinishing" />
      </Docs>
    </Member>
    <Member MemberName="OnDetachedFromWindow">
      <MemberSignature Language="C#" Value="public virtual void OnDetachedFromWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDetachedFromWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnDetachedFromWindow" />
      <MemberSignature Language="F#" Value="abstract member OnDetachedFromWindow : unit -&gt; unit&#xA;override this.OnDetachedFromWindow : unit -&gt; unit" Usage="activity.OnDetachedFromWindow " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnDetachedFromWindow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the main window associated with the activity has been
            detached from the window manager.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onDetachedFromWindow()" title="Reference documentation">Java documentation for <code>android.app.Activity.onDetachedFromWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.OnDetachedFromWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnEnterAnimationComplete">
      <MemberSignature Language="C#" Value="public virtual void OnEnterAnimationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEnterAnimationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnEnterAnimationComplete" />
      <MemberSignature Language="F#" Value="abstract member OnEnterAnimationComplete : unit -&gt; unit&#xA;override this.OnEnterAnimationComplete : unit -&gt; unit" Usage="activity.OnEnterAnimationComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onEnterAnimationComplete", "()V", "GetOnEnterAnimationCompleteHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onEnterAnimationComplete", "()V", "GetOnEnterAnimationCompleteHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Activities cannot draw during the period that their windows are animating in.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onEnterAnimationComplete()" title="Reference documentation">Java documentation for <code>android.app.Activity.onEnterAnimationComplete()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGenericMotionEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnGenericMotionEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnGenericMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnGenericMotionEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnGenericMotionEvent : Android.Views.MotionEvent -&gt; bool" Usage="activity.OnGenericMotionEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetOnGenericMotionEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetOnGenericMotionEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The generic motion event being processed.</param>
        <param name="event">The generic motion event being processed.</param>
        <summary>Called when a generic motion event was not handled by any of the
            views inside of the activity.</summary>
        <returns>Return true if you have consumed the event, false if you haven't.
            The default implementation always returns false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onGenericMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onGenericMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDirectActions">
      <MemberSignature Language="C#" Value="public virtual void OnGetDirectActions (Android.OS.CancellationSignal cancellationSignal, Java.Util.Functions.IConsumer callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGetDirectActions(class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Functions.IConsumer callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnGetDirectActions(Android.OS.CancellationSignal,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnGetDirectActions : Android.OS.CancellationSignal * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.OnGetDirectActions : Android.OS.CancellationSignal * Java.Util.Functions.IConsumer -&gt; unit" Usage="activity.OnGetDirectActions (cancellationSignal, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onGetDirectActions", "(Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V", "GetOnGetDirectActions_Landroid_os_CancellationSignal_Ljava_util_function_Consumer_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onGetDirectActions", "(Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V", "GetOnGetDirectActions_Landroid_os_CancellationSignal_Ljava_util_function_Consumer_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="callback" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="cancellationSignal">A signal to cancel the operation in progress.</param>
        <param name="callback">The callback to send the action list. The actions list cannot
                contain <c>null</c> elements. You can call this on any thread.</param>
        <summary>Returns the list of direct actions supported by the app.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onGetDirectActions(android.os.CancellationSignal,%20java.util.function.Consumer%3Cjava.util.List%3Candroid.app.DirectAction%3E%3E)" title="Reference documentation">Java documentation for <code>android.app.Activity.onGetDirectActions(android.os.CancellationSignal, java.util.function.Consumer&lt;java.util.List&lt;android.app.DirectAction&gt;&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyDown (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyDown(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnKeyDown(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyDown : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="activity.OnKeyDown (keyCode, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyDown(Android.Views.Keycode,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Called when a key was pressed down and not handled by any of the views
            inside of the activity.</summary>
        <returns>Return <c>true</c> to prevent this event from being propagated
            further, or <c>false</c> to indicate that you have not handled
            this event and it should continue to be propagated.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onKeyDown(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onKeyDown(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnKeyUp(Android.Views.Keycode, Android.Views.KeyEvent)" />
        <altmember cref="T:Android.Views.KeyEvent" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyLongPress">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyLongPress (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyLongPress(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnKeyLongPress(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyLongPress : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyLongPress : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="activity.OnKeyLongPress (keyCode, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyLongPress(Android.Views.Keycode,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyLongPress(int, KeyEvent)
            KeyEvent.Callback.onKeyLongPress()</c>: always returns false (doesn't handle
            the event).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onKeyLongPress(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onKeyLongPress(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyMultiple">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyMultiple (Android.Views.Keycode keyCode, int repeatCount, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyMultiple(valuetype Android.Views.Keycode keyCode, int32 repeatCount, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnKeyMultiple(Android.Views.Keycode,System.Int32,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyMultiple : Android.Views.Keycode * int * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyMultiple : Android.Views.Keycode * int * Android.Views.KeyEvent -&gt; bool" Usage="activity.OnKeyMultiple (keyCode, repeatCount, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyMultiple(Android.Views.Keycode,System.Int32,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeatCount" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="repeatCount">Number of pairs as returned by event.getRepeatCount().</param>
        <param name="e">Description of the key event.</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent)
            KeyEvent.Callback.onKeyMultiple()</c>: always returns false (doesn't handle
            the event).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onKeyMultiple(int,%20int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onKeyMultiple(int, int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyShortcut">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyShortcut (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyShortcut(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnKeyShortcut(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyShortcut : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyShortcut : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="activity.OnKeyShortcut (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyShortcut", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyShortcut_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyShortcut", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyShortcut_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">Description of the key event.</param>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="event">Description of the key event.</param>
        <summary>Called when a key shortcut event is not handled by any of the views in the Activity.</summary>
        <returns>True if the key shortcut was handled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onKeyShortcut(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onKeyShortcut(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyUp (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyUp(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnKeyUp(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyUp : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="activity.OnKeyUp (keyCode, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyUp(Android.Views.Keycode,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Called when a key was released and not handled by any of the views
            inside of the activity.</summary>
        <returns>Return <c>true</c> to prevent this event from being propagated
            further, or <c>false</c> to indicate that you have not handled
            this event and it should continue to be propagated.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onKeyUp(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onKeyUp(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnKeyDown(Android.Views.Keycode, Android.Views.KeyEvent)" />
        <altmember cref="T:Android.Views.KeyEvent" />
      </Docs>
    </Member>
    <Member MemberName="OnLocalVoiceInteractionStarted">
      <MemberSignature Language="C#" Value="public virtual void OnLocalVoiceInteractionStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLocalVoiceInteractionStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnLocalVoiceInteractionStarted" />
      <MemberSignature Language="F#" Value="abstract member OnLocalVoiceInteractionStarted : unit -&gt; unit&#xA;override this.OnLocalVoiceInteractionStarted : unit -&gt; unit" Usage="activity.OnLocalVoiceInteractionStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLocalVoiceInteractionStarted", "()V", "GetOnLocalVoiceInteractionStartedHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLocalVoiceInteractionStarted", "()V", "GetOnLocalVoiceInteractionStartedHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback to indicate that <c>#startLocalVoiceInteraction(Bundle)</c> has resulted in a
            voice interaction session being started.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onLocalVoiceInteractionStarted()" title="Reference documentation">Java documentation for <code>android.app.Activity.onLocalVoiceInteractionStarted()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocalVoiceInteractionStopped">
      <MemberSignature Language="C#" Value="public virtual void OnLocalVoiceInteractionStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLocalVoiceInteractionStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnLocalVoiceInteractionStopped" />
      <MemberSignature Language="F#" Value="abstract member OnLocalVoiceInteractionStopped : unit -&gt; unit&#xA;override this.OnLocalVoiceInteractionStopped : unit -&gt; unit" Usage="activity.OnLocalVoiceInteractionStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLocalVoiceInteractionStopped", "()V", "GetOnLocalVoiceInteractionStoppedHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLocalVoiceInteractionStopped", "()V", "GetOnLocalVoiceInteractionStoppedHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback to indicate that the local voice interaction has stopped either
            because it was requested through a call to <c>#stopLocalVoiceInteraction()</c>
            or because it was canceled by the user.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onLocalVoiceInteractionStopped()" title="Reference documentation">Java documentation for <code>android.app.Activity.onLocalVoiceInteractionStopped()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLowMemory">
      <MemberSignature Language="C#" Value="public virtual void OnLowMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLowMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnLowMemory" />
      <MemberSignature Language="F#" Value="abstract member OnLowMemory : unit -&gt; unit&#xA;override this.OnLowMemory : unit -&gt; unit" Usage="activity.OnLowMemory " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IComponentCallbacks.OnLowMemory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLowMemory", "()V", "GetOnLowMemoryHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLowMemory", "()V", "GetOnLowMemoryHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the overall system is running low on memory, and
 actively running processes should trim their memory usage.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemSelected">
      <MemberSignature Language="C#" Value="public virtual bool OnMenuItemSelected (int featureId, Android.Views.IMenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMenuItemSelected(int32 featureId, class Android.Views.IMenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnMenuItemSelected(System.Int32,Android.Views.IMenuItem)" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemSelected : int * Android.Views.IMenuItem -&gt; bool&#xA;override this.OnMenuItemSelected : int * Android.Views.IMenuItem -&gt; bool" Usage="activity.OnMenuItemSelected (featureId, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnMenuItemSelected(System.Int32,Android.Views.IMenuItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMenuItemSelected", "(ILandroid/view/MenuItem;)Z", "GetOnMenuItemSelected_ILandroid_view_MenuItem_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMenuItemSelected", "(ILandroid/view/MenuItem;)Z", "GetOnMenuItemSelected_ILandroid_view_MenuItem_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="item" Type="Android.Views.IMenuItem" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that the menu is in.</param>
        <param name="item">The menu item that was selected.</param>
        <summary>Default implementation of
            <c>android.view.Window.Callback#onMenuItemSelected</c>
            for activities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onMenuItemSelected(int,%20android.view.MenuItem)" title="Reference documentation">Java documentation for <code>android.app.Activity.onMenuItemSelected(int, android.view.MenuItem)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuOpened">
      <MemberSignature Language="C#" Value="public virtual bool OnMenuOpened (int featureId, Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMenuOpened(int32 featureId, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnMenuOpened(System.Int32,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnMenuOpened : int * Android.Views.IMenu -&gt; bool&#xA;override this.OnMenuOpened : int * Android.Views.IMenu -&gt; bool" Usage="activity.OnMenuOpened (featureId, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnMenuOpened(System.Int32,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMenuOpened", "(ILandroid/view/Menu;)Z", "GetOnMenuOpened_ILandroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMenuOpened", "(ILandroid/view/Menu;)Z", "GetOnMenuOpened_ILandroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that the menu is in.</param>
        <param name="menu">The menu that is opened.</param>
        <summary>To be added</summary>
        <returns>The default implementation returns true.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onMenuOpened(int,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onMenuOpened(int, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMultiWindowModeChanged">
      <MemberSignature Language="C#" Value="public virtual void OnMultiWindowModeChanged (bool isInMultiWindowMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMultiWindowModeChanged(bool isInMultiWindowMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnMultiWindowModeChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnMultiWindowModeChanged : bool -&gt; unit&#xA;override this.OnMultiWindowModeChanged : bool -&gt; unit" Usage="activity.OnMultiWindowModeChanged isInMultiWindowMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMultiWindowModeChanged", "(Z)V", "GetOnMultiWindowModeChanged_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMultiWindowModeChanged", "(Z)V", "GetOnMultiWindowModeChanged_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInMultiWindowMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isInMultiWindowMode">True if the activity is in multi-window mode.</param>
        <summary>Called by the system when the activity changes from fullscreen mode to multi-window mode and
            visa-versa.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onMultiWindowModeChanged(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.onMultiWindowModeChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultiWindowModeChanged">
      <MemberSignature Language="C#" Value="public virtual void OnMultiWindowModeChanged (bool isInMultiWindowMode, Android.Content.Res.Configuration? newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMultiWindowModeChanged(bool isInMultiWindowMode, class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnMultiWindowModeChanged(System.Boolean,Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member OnMultiWindowModeChanged : bool * Android.Content.Res.Configuration -&gt; unit&#xA;override this.OnMultiWindowModeChanged : bool * Android.Content.Res.Configuration -&gt; unit" Usage="activity.OnMultiWindowModeChanged (isInMultiWindowMode, newConfig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMultiWindowModeChanged", "(ZLandroid/content/res/Configuration;)V", "GetOnMultiWindowModeChanged_ZLandroid_content_res_Configuration_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMultiWindowModeChanged", "(ZLandroid/content/res/Configuration;)V", "GetOnMultiWindowModeChanged_ZLandroid_content_res_Configuration_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInMultiWindowMode" Type="System.Boolean" />
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="isInMultiWindowMode">True if the activity is in multi-window mode.</param>
        <param name="newConfig">The new configuration of the activity with the state
                             <paramref>isInMultiWindowMode</paramref>.</param>
        <summary>Called by the system when the activity changes from fullscreen mode to multi-window mode and
            visa-versa.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onMultiWindowModeChanged(boolean,%20android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.app.Activity.onMultiWindowModeChanged(boolean, android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigateUp">
      <MemberSignature Language="C#" Value="public virtual bool OnNavigateUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnNavigateUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnNavigateUp" />
      <MemberSignature Language="F#" Value="abstract member OnNavigateUp : unit -&gt; bool&#xA;override this.OnNavigateUp : unit -&gt; bool" Usage="activity.OnNavigateUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNavigateUp", "()Z", "GetOnNavigateUpHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNavigateUp", "()Z", "GetOnNavigateUpHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is called whenever the user chooses to navigate Up within your application's
            activity hierarchy from the action bar.</summary>
        <returns>true if Up navigation completed successfully and this Activity was finished,
                    false otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onNavigateUp()" title="Reference documentation">Java documentation for <code>android.app.Activity.onNavigateUp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigateUpFromChild">
      <MemberSignature Language="C#" Value="public virtual bool OnNavigateUpFromChild (Android.App.Activity? child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnNavigateUpFromChild(class Android.App.Activity child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnNavigateUpFromChild(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigateUpFromChild : Android.App.Activity -&gt; bool&#xA;override this.OnNavigateUpFromChild : Android.App.Activity -&gt; bool" Usage="activity.OnNavigateUpFromChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNavigateUpFromChild", "(Landroid/app/Activity;)Z", "GetOnNavigateUpFromChild_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNavigateUpFromChild", "(Landroid/app/Activity;)Z", "GetOnNavigateUpFromChild_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="child">The activity making the call.</param>
        <summary>This is called when a child activity of this one attempts to navigate up.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onNavigateUpFromChild(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Activity.onNavigateUpFromChild(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnNewIntent">
      <MemberSignature Language="C#" Value="protected virtual void OnNewIntent (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewIntent(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnNewIntent(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnNewIntent : Android.Content.Intent -&gt; unit&#xA;override this.OnNewIntent : Android.Content.Intent -&gt; unit" Usage="activity.OnNewIntent intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNewIntent", "(Landroid/content/Intent;)V", "GetOnNewIntent_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNewIntent", "(Landroid/content/Intent;)V", "GetOnNewIntent_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The new intent that was started for the activity.</param>
        <summary>This is called for activities that set launchMode to "singleTop" in
            their package, or if a client used the <c>Intent#FLAG_ACTIVITY_SINGLE_TOP</c>
            flag when calling <c>#startActivity</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onNewIntent(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onNewIntent(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.Intent" />
        <altmember cref="P:Android.App.Activity.Intent" />
        <altmember cref="M:Android.App.Activity.OnResume" />
      </Docs>
    </Member>
    <Member MemberName="OnOptionsItemSelected">
      <MemberSignature Language="C#" Value="public virtual bool OnOptionsItemSelected (Android.Views.IMenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnOptionsItemSelected(class Android.Views.IMenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnOptionsItemSelected(Android.Views.IMenuItem)" />
      <MemberSignature Language="F#" Value="abstract member OnOptionsItemSelected : Android.Views.IMenuItem -&gt; bool&#xA;override this.OnOptionsItemSelected : Android.Views.IMenuItem -&gt; bool" Usage="activity.OnOptionsItemSelected item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onOptionsItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnOptionsItemSelected_Landroid_view_MenuItem_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onOptionsItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnOptionsItemSelected_Landroid_view_MenuItem_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Android.Views.IMenuItem" />
      </Parameters>
      <Docs>
        <param name="item">The menu item that was selected.</param>
        <summary>This hook is called whenever an item in your options menu is selected.</summary>
        <returns>boolean Return false to allow normal menu processing to
                    proceed, true to consume it here.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onOptionsItemSelected(android.view.MenuItem)" title="Reference documentation">Java documentation for <code>android.app.Activity.onOptionsItemSelected(android.view.MenuItem)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreateOptionsMenu(Android.Views.IMenu)" />
      </Docs>
    </Member>
    <Member MemberName="OnOptionsMenuClosed">
      <MemberSignature Language="C#" Value="public virtual void OnOptionsMenuClosed (Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnOptionsMenuClosed(class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnOptionsMenuClosed(Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnOptionsMenuClosed : Android.Views.IMenu -&gt; unit&#xA;override this.OnOptionsMenuClosed : Android.Views.IMenu -&gt; unit" Usage="activity.OnOptionsMenuClosed menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onOptionsMenuClosed", "(Landroid/view/Menu;)V", "GetOnOptionsMenuClosed_Landroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onOptionsMenuClosed", "(Landroid/view/Menu;)V", "GetOnOptionsMenuClosed_Landroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The options menu as last shown or first initialized by
                        onCreateOptionsMenu().</param>
        <summary>This hook is called whenever the options menu is being closed (either by the user canceling
            the menu with the back/menu button, or when an item is selected).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onOptionsMenuClosed(android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onOptionsMenuClosed(android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPanelClosed">
      <MemberSignature Language="C#" Value="public virtual void OnPanelClosed (int featureId, Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPanelClosed(int32 featureId, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPanelClosed(System.Int32,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnPanelClosed : int * Android.Views.IMenu -&gt; unit&#xA;override this.OnPanelClosed : int * Android.Views.IMenu -&gt; unit" Usage="activity.OnPanelClosed (featureId, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnPanelClosed(System.Int32,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPanelClosed", "(ILandroid/view/Menu;)V", "GetOnPanelClosed_ILandroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPanelClosed", "(ILandroid/view/Menu;)V", "GetOnPanelClosed_ILandroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that is being displayed.</param>
        <param name="menu">If onCreatePanelView() returned null, this is the Menu
            being displayed in the panel.
</param>
        <summary>Default implementation of
            <c>android.view.Window.Callback#onPanelClosed(int, Menu)</c> for
            activities.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPanelClosed(int,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPanelClosed(int, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="protected virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPause" />
      <MemberSignature Language="F#" Value="abstract member OnPause : unit -&gt; unit&#xA;override this.OnPause : unit -&gt; unit" Usage="activity.OnPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called as part of the activity lifecycle when the user no longer actively interacts with the
            activity, but it is still visible on screen.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPause()" title="Reference documentation">Java documentation for <code>android.app.Activity.onPause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnResume" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="OnPerformDirectAction">
      <MemberSignature Language="C#" Value="public virtual void OnPerformDirectAction (string actionId, Android.OS.Bundle arguments, Android.OS.CancellationSignal cancellationSignal, Java.Util.Functions.IConsumer resultListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPerformDirectAction(string actionId, class Android.OS.Bundle arguments, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Functions.IConsumer resultListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPerformDirectAction(System.String,Android.OS.Bundle,Android.OS.CancellationSignal,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnPerformDirectAction : string * Android.OS.Bundle * Android.OS.CancellationSignal * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.OnPerformDirectAction : string * Android.OS.Bundle * Android.OS.CancellationSignal * Java.Util.Functions.IConsumer -&gt; unit" Usage="activity.OnPerformDirectAction (actionId, arguments, cancellationSignal, resultListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPerformDirectAction", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V", "GetOnPerformDirectAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_os_CancellationSignal_Ljava_util_function_Consumer_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPerformDirectAction", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V", "GetOnPerformDirectAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_os_CancellationSignal_Ljava_util_function_Consumer_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionId" Type="System.String" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="resultListener" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="actionId">The ID for the action you previously reported via
                <c>#onGetDirectActions(CancellationSignal, Consumer)</c>.</param>
        <param name="arguments">Any additional arguments provided by the caller that are
                specific to the given action.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress.</param>
        <param name="resultListener">The callback to provide the result back to the caller.
                You can call this on any thread. The result bundle is action specific.</param>
        <summary>This is called to perform an action previously defined by the app.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPerformDirectAction(java.lang.String,%20android.os.Bundle,%20android.os.CancellationSignal,%20java.util.function.Consumer%3Candroid.os.Bundle%3E)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPerformDirectAction(java.lang.String, android.os.Bundle, android.os.CancellationSignal, java.util.function.Consumer&lt;android.os.Bundle&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPictureInPictureModeChanged">
      <MemberSignature Language="C#" Value="public virtual void OnPictureInPictureModeChanged (bool isInPictureInPictureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPictureInPictureModeChanged(bool isInPictureInPictureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPictureInPictureModeChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnPictureInPictureModeChanged : bool -&gt; unit&#xA;override this.OnPictureInPictureModeChanged : bool -&gt; unit" Usage="activity.OnPictureInPictureModeChanged isInPictureInPictureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPictureInPictureModeChanged", "(Z)V", "GetOnPictureInPictureModeChanged_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPictureInPictureModeChanged", "(Z)V", "GetOnPictureInPictureModeChanged_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInPictureInPictureMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isInPictureInPictureMode">True if the activity is in picture-in-picture mode.</param>
        <summary>Called by the system when the activity changes to and from picture-in-picture mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPictureInPictureModeChanged(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPictureInPictureModeChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPictureInPictureModeChanged">
      <MemberSignature Language="C#" Value="public virtual void OnPictureInPictureModeChanged (bool isInPictureInPictureMode, Android.Content.Res.Configuration? newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPictureInPictureModeChanged(bool isInPictureInPictureMode, class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPictureInPictureModeChanged(System.Boolean,Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member OnPictureInPictureModeChanged : bool * Android.Content.Res.Configuration -&gt; unit&#xA;override this.OnPictureInPictureModeChanged : bool * Android.Content.Res.Configuration -&gt; unit" Usage="activity.OnPictureInPictureModeChanged (isInPictureInPictureMode, newConfig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPictureInPictureModeChanged", "(ZLandroid/content/res/Configuration;)V", "GetOnPictureInPictureModeChanged_ZLandroid_content_res_Configuration_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPictureInPictureModeChanged", "(ZLandroid/content/res/Configuration;)V", "GetOnPictureInPictureModeChanged_ZLandroid_content_res_Configuration_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInPictureInPictureMode" Type="System.Boolean" />
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="isInPictureInPictureMode">True if the activity is in picture-in-picture mode.</param>
        <param name="newConfig">The new configuration of the activity with the state
                             <paramref>isInPictureInPictureMode</paramref>.</param>
        <summary>Called by the system when the activity changes to and from picture-in-picture mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPictureInPictureModeChanged(boolean,%20android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPictureInPictureModeChanged(boolean, android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPictureInPictureRequested">
      <MemberSignature Language="C#" Value="public virtual bool OnPictureInPictureRequested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPictureInPictureRequested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPictureInPictureRequested" />
      <MemberSignature Language="F#" Value="abstract member OnPictureInPictureRequested : unit -&gt; bool&#xA;override this.OnPictureInPictureRequested : unit -&gt; bool" Usage="activity.OnPictureInPictureRequested " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPictureInPictureRequested", "()Z", "GetOnPictureInPictureRequestedHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPictureInPictureRequested", "()Z", "GetOnPictureInPictureRequestedHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is called by the system in various cases where picture in picture mode should be
            entered if supported.</summary>
        <returns>
          <c>true</c> if the activity received this callback regardless of if it acts on it
            or not. If <c>false</c>, the framework will assume the app hasn't been updated to leverage
            this callback and will in turn send a legacy callback of <c>#onUserLeaveHint()</c> for the
            app to enter picture-in-picture mode.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPictureInPictureRequested()" title="Reference documentation">Java documentation for <code>android.app.Activity.onPictureInPictureRequested()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPictureInPictureUiStateChanged">
      <MemberSignature Language="C#" Value="public virtual void OnPictureInPictureUiStateChanged (Android.App.PictureInPictureUiState pipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPictureInPictureUiStateChanged(class Android.App.PictureInPictureUiState pipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPictureInPictureUiStateChanged(Android.App.PictureInPictureUiState)" />
      <MemberSignature Language="F#" Value="abstract member OnPictureInPictureUiStateChanged : Android.App.PictureInPictureUiState -&gt; unit&#xA;override this.OnPictureInPictureUiStateChanged : Android.App.PictureInPictureUiState -&gt; unit" Usage="activity.OnPictureInPictureUiStateChanged pipState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPictureInPictureUiStateChanged", "(Landroid/app/PictureInPictureUiState;)V", "GetOnPictureInPictureUiStateChanged_Landroid_app_PictureInPictureUiState_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPictureInPictureUiStateChanged", "(Landroid/app/PictureInPictureUiState;)V", "GetOnPictureInPictureUiStateChanged_Landroid_app_PictureInPictureUiState_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipState" Type="Android.App.PictureInPictureUiState" />
      </Parameters>
      <Docs>
        <param name="pipState">the new Picture-in-Picture state.</param>
        <summary>Called by the system when the activity is in PiP and has state changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPictureInPictureUiStateChanged(android.app.PictureInPictureUiState)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPictureInPictureUiStateChanged(android.app.PictureInPictureUiState)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostCreate">
      <MemberSignature Language="C#" Value="protected virtual void OnPostCreate (Android.OS.Bundle? savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostCreate(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPostCreate(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnPostCreate : Android.OS.Bundle -&gt; unit&#xA;override this.OnPostCreate : Android.OS.Bundle -&gt; unit" Usage="activity.OnPostCreate savedInstanceState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPostCreate", "(Landroid/os/Bundle;)V", "GetOnPostCreate_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPostCreate", "(Landroid/os/Bundle;)V", "GetOnPostCreate_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">If the activity is being re-initialized after
                previously being shut down then this Bundle contains the data it most
                recently supplied in <c>#onSaveInstanceState</c>.  &lt;b&gt;<i>Note: Otherwise it is null.</i>&lt;/b&gt;</param>
        <summary>Called when activity start-up is complete (after <c>#onStart</c>
            and <c>#onRestoreInstanceState</c> have been called).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPostCreate(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPostCreate(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="OnPostCreate">
      <MemberSignature Language="C#" Value="public virtual void OnPostCreate (Android.OS.Bundle? savedInstanceState, Android.OS.PersistableBundle? persistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPostCreate(class Android.OS.Bundle savedInstanceState, class Android.OS.PersistableBundle persistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPostCreate(Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member OnPostCreate : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.OnPostCreate : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="activity.OnPostCreate (savedInstanceState, persistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPostCreate", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnPostCreate_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPostCreate", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnPostCreate_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
        <Parameter Name="persistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">The data most recently supplied in <c>#onSaveInstanceState</c></param>
        <param name="persistentState">The data caming from the PersistableBundle first
            saved in <c>#onSaveInstanceState(Bundle, PersistableBundle)</c>.</param>
        <summary>This is the same as <c>#onPostCreate(Bundle)</c> but is called for activities
            created with the attribute <c>android.R.attr#persistableMode</c> set to
            <c>persistAcrossReboots</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPostCreate(android.os.Bundle,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPostCreate(android.os.Bundle, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="OnPostResume">
      <MemberSignature Language="C#" Value="protected virtual void OnPostResume ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPostResume" />
      <MemberSignature Language="F#" Value="abstract member OnPostResume : unit -&gt; unit&#xA;override this.OnPostResume : unit -&gt; unit" Usage="activity.OnPostResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPostResume", "()V", "GetOnPostResumeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPostResume", "()V", "GetOnPostResumeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when activity resume is complete (after <c>#onResume</c> has
            been called).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPostResume()" title="Reference documentation">Java documentation for <code>android.app.Activity.onPostResume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnResume" />
      </Docs>
    </Member>
    <Member MemberName="OnPrepareDialog">
      <MemberSignature Language="C#" Value="protected virtual void OnPrepareDialog (int id, Android.App.Dialog? dialog);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrepareDialog(int32 id, class Android.App.Dialog dialog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPrepareDialog(System.Int32,Android.App.Dialog)" />
      <MemberSignature Language="F#" Value="abstract member OnPrepareDialog : int * Android.App.Dialog -&gt; unit&#xA;override this.OnPrepareDialog : int * Android.App.Dialog -&gt; unit" Usage="activity.OnPrepareDialog (id, dialog)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPrepareDialog", "(ILandroid/app/Dialog;)V", "GetOnPrepareDialog_ILandroid_app_Dialog_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPrepareDialog", "(ILandroid/app/Dialog;)V", "GetOnPrepareDialog_ILandroid_app_Dialog_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="dialog" Type="Android.App.Dialog" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="dialog">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPrepareDialog(int,%20android.app.Dialog)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPrepareDialog(int, android.app.Dialog)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPrepareDialog">
      <MemberSignature Language="C#" Value="protected virtual void OnPrepareDialog (int id, Android.App.Dialog? dialog, Android.OS.Bundle? args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrepareDialog(int32 id, class Android.App.Dialog dialog, class Android.OS.Bundle args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPrepareDialog(System.Int32,Android.App.Dialog,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnPrepareDialog : int * Android.App.Dialog * Android.OS.Bundle -&gt; unit&#xA;override this.OnPrepareDialog : int * Android.App.Dialog * Android.OS.Bundle -&gt; unit" Usage="activity.OnPrepareDialog (id, dialog, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPrepareDialog", "(ILandroid/app/Dialog;Landroid/os/Bundle;)V", "GetOnPrepareDialog_ILandroid_app_Dialog_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPrepareDialog", "(ILandroid/app/Dialog;Landroid/os/Bundle;)V", "GetOnPrepareDialog_ILandroid_app_Dialog_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="dialog" Type="Android.App.Dialog" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="id">The id of the managed dialog.</param>
        <param name="dialog">The dialog.</param>
        <param name="args">The dialog arguments provided to <c>#showDialog(int, Bundle)</c>.</param>
        <summary>Provides an opportunity to prepare a managed dialog before it is being
            shown.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPrepareDialog(int,%20android.app.Dialog,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPrepareDialog(int, android.app.Dialog, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.App.Activity.OnCreateDialog(System.Int32, Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.ShowDialog(System.Int32)" />
        <altmember cref="M:Android.App.Activity.DismissDialog(System.Int32)" />
        <altmember cref="M:Android.App.Activity.RemoveDialog(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnPrepareNavigateUpTaskStack">
      <MemberSignature Language="C#" Value="public virtual void OnPrepareNavigateUpTaskStack (Android.App.TaskStackBuilder? builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPrepareNavigateUpTaskStack(class Android.App.TaskStackBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPrepareNavigateUpTaskStack(Android.App.TaskStackBuilder)" />
      <MemberSignature Language="F#" Value="abstract member OnPrepareNavigateUpTaskStack : Android.App.TaskStackBuilder -&gt; unit&#xA;override this.OnPrepareNavigateUpTaskStack : Android.App.TaskStackBuilder -&gt; unit" Usage="activity.OnPrepareNavigateUpTaskStack builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPrepareNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", "GetOnPrepareNavigateUpTaskStack_Landroid_app_TaskStackBuilder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPrepareNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", "GetOnPrepareNavigateUpTaskStack_Landroid_app_TaskStackBuilder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Android.App.TaskStackBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">A TaskStackBuilder that has been populated with Intents by
                           onCreateNavigateUpTaskStack.</param>
        <summary>Prepare the synthetic task stack that will be generated during Up navigation
            from a different task.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnPrepareOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual bool OnPrepareOptionsMenu (Android.Views.IMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPrepareOptionsMenu(class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPrepareOptionsMenu(Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnPrepareOptionsMenu : Android.Views.IMenu -&gt; bool&#xA;override this.OnPrepareOptionsMenu : Android.Views.IMenu -&gt; bool" Usage="activity.OnPrepareOptionsMenu menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPrepareOptionsMenu", "(Landroid/view/Menu;)Z", "GetOnPrepareOptionsMenu_Landroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPrepareOptionsMenu", "(Landroid/view/Menu;)Z", "GetOnPrepareOptionsMenu_Landroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The options menu as last shown or first initialized by
                        onCreateOptionsMenu().</param>
        <summary>Prepare the Screen's standard options menu to be displayed.</summary>
        <returns>You must return true for the menu to be displayed;
                    if you return false it will not be shown.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPrepareOptionsMenu(android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPrepareOptionsMenu(android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreateOptionsMenu(Android.Views.IMenu)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreparePanel">
      <MemberSignature Language="C#" Value="public virtual bool OnPreparePanel (int featureId, Android.Views.View? view, Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPreparePanel(int32 featureId, class Android.Views.View view, class Android.Views.IMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnPreparePanel(System.Int32,Android.Views.View,Android.Views.IMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnPreparePanel : int * Android.Views.View * Android.Views.IMenu -&gt; bool&#xA;override this.OnPreparePanel : int * Android.Views.View * Android.Views.IMenu -&gt; bool" Usage="activity.OnPreparePanel (featureId, view, menu)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnPreparePanel(System.Int32,Android.Views.View,Android.Views.IMenu)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPreparePanel", "(ILandroid/view/View;Landroid/view/Menu;)Z", "GetOnPreparePanel_ILandroid_view_View_Landroid_view_Menu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPreparePanel", "(ILandroid/view/View;Landroid/view/Menu;)Z", "GetOnPreparePanel_ILandroid_view_View_Landroid_view_Menu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="featureId">The panel that is being displayed.</param>
        <param name="view">The View that was returned by onCreatePanelView().</param>
        <param name="menu">If onCreatePanelView() returned null, this is the Menu
             being displayed in the panel.</param>
        <summary>Default implementation of
            <c>android.view.Window.Callback#onPreparePanel</c>
            for activities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onPreparePanel(int,%20android.view.View,%20android.view.Menu)" title="Reference documentation">Java documentation for <code>android.app.Activity.onPreparePanel(int, android.view.View, android.view.Menu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnProvideAssistContent">
      <MemberSignature Language="C#" Value="public virtual void OnProvideAssistContent (Android.App.Assist.AssistContent? outContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideAssistContent(class Android.App.Assist.AssistContent outContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnProvideAssistContent(Android.App.Assist.AssistContent)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideAssistContent : Android.App.Assist.AssistContent -&gt; unit&#xA;override this.OnProvideAssistContent : Android.App.Assist.AssistContent -&gt; unit" Usage="activity.OnProvideAssistContent outContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideAssistContent", "(Landroid/app/assist/AssistContent;)V", "GetOnProvideAssistContent_Landroid_app_assist_AssistContent_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideAssistContent", "(Landroid/app/assist/AssistContent;)V", "GetOnProvideAssistContent_Landroid_app_assist_AssistContent_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outContent" Type="Android.App.Assist.AssistContent" />
      </Parameters>
      <Docs>
        <param name="outContent">The assist content to return.</param>
        <summary>This is called when the user is requesting an assist, to provide references
            to content related to the current activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onProvideAssistContent(android.app.assist.AssistContent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onProvideAssistContent(android.app.assist.AssistContent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProvideAssistData">
      <MemberSignature Language="C#" Value="public virtual void OnProvideAssistData (Android.OS.Bundle? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideAssistData(class Android.OS.Bundle data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnProvideAssistData(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideAssistData : Android.OS.Bundle -&gt; unit&#xA;override this.OnProvideAssistData : Android.OS.Bundle -&gt; unit" Usage="activity.OnProvideAssistData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideAssistData", "(Landroid/os/Bundle;)V", "GetOnProvideAssistData_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideAssistData", "(Landroid/os/Bundle;)V", "GetOnProvideAssistData_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>This is called when the user is requesting an assist, to build a full
            <c>Intent#ACTION_ASSIST</c> Intent with all of the context of the current
            application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onProvideAssistData(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onProvideAssistData(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnProvideKeyboardShortcuts">
      <MemberSignature Language="C#" Value="public virtual void OnProvideKeyboardShortcuts (System.Collections.Generic.IList&lt;Android.Views.KeyboardShortcutGroup&gt;? data, Android.Views.IMenu? menu, int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideKeyboardShortcuts(class System.Collections.Generic.IList`1&lt;class Android.Views.KeyboardShortcutGroup&gt; data, class Android.Views.IMenu menu, int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnProvideKeyboardShortcuts(System.Collections.Generic.IList{Android.Views.KeyboardShortcutGroup},Android.Views.IMenu,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideKeyboardShortcuts : System.Collections.Generic.IList&lt;Android.Views.KeyboardShortcutGroup&gt; * Android.Views.IMenu * int -&gt; unit&#xA;override this.OnProvideKeyboardShortcuts : System.Collections.Generic.IList&lt;Android.Views.KeyboardShortcutGroup&gt; * Android.Views.IMenu * int -&gt; unit" Usage="activity.OnProvideKeyboardShortcuts (data, menu, deviceId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnProvideKeyboardShortcuts(System.Collections.Generic.IList{Android.Views.KeyboardShortcutGroup},Android.Views.IMenu,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideKeyboardShortcuts", "(Ljava/util/List;Landroid/view/Menu;I)V", "GetOnProvideKeyboardShortcuts_Ljava_util_List_Landroid_view_Menu_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideKeyboardShortcuts", "(Ljava/util/List;Landroid/view/Menu;I)V", "GetOnProvideKeyboardShortcuts_Ljava_util_List_Landroid_view_Menu_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;Android.Views.KeyboardShortcutGroup&gt;" />
        <Parameter Name="menu" Type="Android.Views.IMenu" />
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="menu">To be added.</param>
        <param name="deviceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProvideReferrer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Uri? OnProvideReferrer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Uri OnProvideReferrer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnProvideReferrer" />
      <MemberSignature Language="F#" Value="abstract member OnProvideReferrer : unit -&gt; Android.Net.Uri&#xA;override this.OnProvideReferrer : unit -&gt; Android.Net.Uri" Usage="activity.OnProvideReferrer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideReferrer", "()Landroid/net/Uri;", "GetOnProvideReferrerHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideReferrer", "()Landroid/net/Uri;", "GetOnProvideReferrerHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Override to generate the desired referrer for the content currently being shown
            by the app.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onProvideReferrer()" title="Reference documentation">Java documentation for <code>android.app.Activity.onProvideReferrer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestPermissionsResult">
      <MemberSignature Language="C#" Value="public virtual void OnRequestPermissionsResult (int requestCode, string[] permissions, Android.Content.PM.Permission[] grantResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRequestPermissionsResult(int32 requestCode, string[] permissions, valuetype Android.Content.PM.Permission[] grantResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnRequestPermissionsResult(System.Int32,System.String[],Android.Content.PM.Permission[])" />
      <MemberSignature Language="F#" Value="abstract member OnRequestPermissionsResult : int * string[] * Android.Content.PM.Permission[] -&gt; unit&#xA;override this.OnRequestPermissionsResult : int * string[] * Android.Content.PM.Permission[] -&gt; unit" Usage="activity.OnRequestPermissionsResult (requestCode, permissions, grantResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRequestPermissionsResult", "(I[Ljava/lang/String;[I)V", "GetOnRequestPermissionsResult_IarrayLjava_lang_String_arrayIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRequestPermissionsResult", "(I[Ljava/lang/String;[I)V", "GetOnRequestPermissionsResult_IarrayLjava_lang_String_arrayIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="permissions" Type="System.String[]" />
        <Parameter Name="grantResults" Type="Android.Content.PM.Permission[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requestCode">The request code passed in <c>#requestPermissions(String[], int)</c>.</param>
        <param name="permissions">The requested permissions. Never null.</param>
        <param name="grantResults">The grant results for the corresponding permissions
                which is either <c>android.content.pm.PackageManager#PERMISSION_GRANTED</c>
                or <c>android.content.pm.PackageManager#PERMISSION_DENIED</c>. Never null.</param>
        <summary>Callback for the result from requesting permissions.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onRequestPermissionsResult(int,%20java.lang.String[],%20int[])" title="Reference documentation">Java documentation for <code>android.app.Activity.onRequestPermissionsResult(int, java.lang.String[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRestart">
      <MemberSignature Language="C#" Value="protected virtual void OnRestart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRestart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnRestart" />
      <MemberSignature Language="F#" Value="abstract member OnRestart : unit -&gt; unit&#xA;override this.OnRestart : unit -&gt; unit" Usage="activity.OnRestart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestart", "()V", "GetOnRestartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestart", "()V", "GetOnRestartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after <c>#onStop</c> when the current activity is being
            re-displayed to the user (the user has navigated back to it).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onRestart()" title="Reference documentation">Java documentation for <code>android.app.Activity.onRestart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnStop" />
        <altmember cref="M:Android.App.Activity.OnStart" />
        <altmember cref="M:Android.App.Activity.OnResume" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreInstanceState">
      <MemberSignature Language="C#" Value="protected virtual void OnRestoreInstanceState (Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRestoreInstanceState(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnRestoreInstanceState : Android.OS.Bundle -&gt; unit&#xA;override this.OnRestoreInstanceState : Android.OS.Bundle -&gt; unit" Usage="activity.OnRestoreInstanceState savedInstanceState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Bundle;)V", "GetOnRestoreInstanceState_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Bundle;)V", "GetOnRestoreInstanceState_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">the data most recently supplied in <c>#onSaveInstanceState</c>.</param>
        <summary>This method is called after <c>#onStart</c> when the activity is
            being re-initialized from a previously saved state, given here in
            &lt;var&gt;savedInstanceState&lt;/var&gt;.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onRestoreInstanceState(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onRestoreInstanceState(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPostCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnResume" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreInstanceState">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreInstanceState (Android.OS.Bundle? savedInstanceState, Android.OS.PersistableBundle? persistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreInstanceState(class Android.OS.Bundle savedInstanceState, class Android.OS.PersistableBundle persistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member OnRestoreInstanceState : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.OnRestoreInstanceState : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="activity.OnRestoreInstanceState (savedInstanceState, persistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnRestoreInstanceState_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnRestoreInstanceState_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
        <Parameter Name="persistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">the data most recently supplied in <c>#onSaveInstanceState</c>
                or null.</param>
        <param name="persistentState">the data most recently supplied in <c>#onSaveInstanceState</c>
                or null.</param>
        <summary>This is the same as <c>#onRestoreInstanceState(Bundle)</c> but is called for activities
            created with the attribute <c>android.R.attr#persistableMode</c> set to
            <c>persistAcrossReboots</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onRestoreInstanceState(android.os.Bundle,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPostCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnResume" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="OnResume">
      <MemberSignature Language="C#" Value="protected virtual void OnResume ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnResume" />
      <MemberSignature Language="F#" Value="abstract member OnResume : unit -&gt; unit&#xA;override this.OnResume : unit -&gt; unit" Usage="activity.OnResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after <c>#onRestoreInstanceState</c>, <c>#onRestart</c>, or <c>#onPause</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onResume()" title="Reference documentation">Java documentation for <code>android.app.Activity.onResume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnRestart" />
        <altmember cref="M:Android.App.Activity.OnPostResume" />
        <altmember cref="M:Android.App.Activity.OnPause" />
      </Docs>
    </Member>
    <Member MemberName="OnRetainNonConfigurationInstance">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? OnRetainNonConfigurationInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object OnRetainNonConfigurationInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnRetainNonConfigurationInstance" />
      <MemberSignature Language="F#" Value="abstract member OnRetainNonConfigurationInstance : unit -&gt; Java.Lang.Object&#xA;override this.OnRetainNonConfigurationInstance : unit -&gt; Java.Lang.Object" Usage="activity.OnRetainNonConfigurationInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRetainNonConfigurationInstance", "()Ljava/lang/Object;", "GetOnRetainNonConfigurationInstanceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRetainNonConfigurationInstance", "()Ljava/lang/Object;", "GetOnRetainNonConfigurationInstanceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the system, as part of destroying an
            activity due to a configuration change, when it is known that a new
            instance will immediately be created for the new configuration.</summary>
        <returns>any Object holding the desired state to propagate to the
                    next activity instance</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onRetainNonConfigurationInstance()" title="Reference documentation">Java documentation for <code>android.app.Activity.onRetainNonConfigurationInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="C#" Value="protected virtual void OnSaveInstanceState (Android.OS.Bundle outState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSaveInstanceState(class Android.OS.Bundle outState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnSaveInstanceState : Android.OS.Bundle -&gt; unit&#xA;override this.OnSaveInstanceState : Android.OS.Bundle -&gt; unit" Usage="activity.OnSaveInstanceState outState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSaveInstanceState", "(Landroid/os/Bundle;)V", "GetOnSaveInstanceState_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSaveInstanceState", "(Landroid/os/Bundle;)V", "GetOnSaveInstanceState_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="outState">Bundle in which to place your saved state.</param>
        <summary>Called to retrieve per-instance state from an activity before being killed
            so that the state can be restored in <c>#onCreate</c> or
            <c>#onRestoreInstanceState</c> (the <c>Bundle</c> populated by this method
            will be passed to both).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onSaveInstanceState(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onSaveInstanceState(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPause" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="C#" Value="public virtual void OnSaveInstanceState (Android.OS.Bundle outState, Android.OS.PersistableBundle outPersistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSaveInstanceState(class Android.OS.Bundle outState, class Android.OS.PersistableBundle outPersistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member OnSaveInstanceState : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.OnSaveInstanceState : Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="activity.OnSaveInstanceState (outState, outPersistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSaveInstanceState", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnSaveInstanceState_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSaveInstanceState", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetOnSaveInstanceState_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outState" Type="Android.OS.Bundle" />
        <Parameter Name="outPersistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="outState">Bundle in which to place your saved state.</param>
        <param name="outPersistentState">State which will be saved across reboots.</param>
        <summary>This is the same as <c>#onSaveInstanceState</c> but is called for activities
            created with the attribute <c>android.R.attr#persistableMode</c> set to
            <c>persistAcrossReboots</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onSaveInstanceState(android.os.Bundle,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle, Android.OS.PersistableBundle)" />
        <altmember cref="M:Android.App.Activity.OnPause" />
      </Docs>
    </Member>
    <Member MemberName="OnSearchRequested">
      <MemberSignature Language="C#" Value="public virtual bool OnSearchRequested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnSearchRequested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnSearchRequested" />
      <MemberSignature Language="F#" Value="abstract member OnSearchRequested : unit -&gt; bool&#xA;override this.OnSearchRequested : unit -&gt; bool" Usage="activity.OnSearchRequested " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnSearchRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSearchRequested", "()Z", "GetOnSearchRequestedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSearchRequested", "()Z", "GetOnSearchRequestedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the user signals the desire to start a search.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onSearchRequested()" title="Reference documentation">Java documentation for <code>android.app.Activity.onSearchRequested()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnSearchRequested(Android.Views.SearchEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnSearchRequested">
      <MemberSignature Language="C#" Value="public virtual bool OnSearchRequested (Android.Views.SearchEvent? searchEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnSearchRequested(class Android.Views.SearchEvent searchEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnSearchRequested(Android.Views.SearchEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnSearchRequested : Android.Views.SearchEvent -&gt; bool&#xA;override this.OnSearchRequested : Android.Views.SearchEvent -&gt; bool" Usage="activity.OnSearchRequested searchEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnSearchRequested(Android.Views.SearchEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSearchRequested", "(Landroid/view/SearchEvent;)Z", "GetOnSearchRequested_Landroid_view_SearchEvent_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSearchRequested", "(Landroid/view/SearchEvent;)Z", "GetOnSearchRequested_Landroid_view_SearchEvent_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchEvent" Type="Android.Views.SearchEvent" />
      </Parameters>
      <Docs>
        <param name="searchEvent">The <c>SearchEvent</c> that signaled this search.</param>
        <summary>This hook is called when the user signals the desire to start a search.</summary>
        <returns>Returns <c>true</c> if search launched, and <c>false</c> if the activity does
            not respond to search.  The default implementation always returns <c>true</c>, except
            when in <c>Configuration#UI_MODE_TYPE_TELEVISION</c> mode where it returns false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onSearchRequested(android.view.SearchEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onSearchRequested(android.view.SearchEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected virtual void OnStart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnStart" />
      <MemberSignature Language="F#" Value="abstract member OnStart : unit -&gt; unit&#xA;override this.OnStart : unit -&gt; unit" Usage="activity.OnStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStart", "()V", "GetOnStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStart", "()V", "GetOnStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after <c>#onCreate</c> &amp;mdash; or after <c>#onRestart</c> when
            the activity had been stopped, but is now again being displayed to the
            user.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onStart()" title="Reference documentation">Java documentation for <code>android.app.Activity.onStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnStop" />
        <altmember cref="M:Android.App.Activity.OnResume" />
      </Docs>
    </Member>
    <Member MemberName="OnStateNotSaved">
      <MemberSignature Language="C#" Value="public virtual void OnStateNotSaved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStateNotSaved() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnStateNotSaved" />
      <MemberSignature Language="F#" Value="abstract member OnStateNotSaved : unit -&gt; unit&#xA;override this.OnStateNotSaved : unit -&gt; unit" Usage="activity.OnStateNotSaved " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStateNotSaved", "()V", "GetOnStateNotSavedHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStateNotSaved", "()V", "GetOnStateNotSavedHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when an <c>#onResume</c> is coming up, prior to other pre-resume callbacks
            such as <c>#onNewIntent</c> and <c>#onActivityResult</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onStateNotSaved()" title="Reference documentation">Java documentation for <code>android.app.Activity.onStateNotSaved()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnStop" />
      <MemberSignature Language="F#" Value="abstract member OnStop : unit -&gt; unit&#xA;override this.OnStop : unit -&gt; unit" Usage="activity.OnStop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStop", "()V", "GetOnStopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStop", "()V", "GetOnStopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when you are no longer visible to the user.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onStop()" title="Reference documentation">Java documentation for <code>android.app.Activity.onStop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnRestart" />
        <altmember cref="M:Android.App.Activity.OnResume" />
        <altmember cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnDestroy" />
      </Docs>
    </Member>
    <Member MemberName="OnTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTitleChanged (Java.Lang.ICharSequence? title, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTitleChanged(class Java.Lang.ICharSequence title, valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnTitleChanged(Java.Lang.ICharSequence,Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member OnTitleChanged : Java.Lang.ICharSequence * Android.Graphics.Color -&gt; unit&#xA;override this.OnTitleChanged : Java.Lang.ICharSequence * Android.Graphics.Color -&gt; unit" Usage="activity.OnTitleChanged (title, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTitleChanged", "(Ljava/lang/CharSequence;I)V", "GetOnTitleChanged_Ljava_lang_CharSequence_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTitleChanged", "(Ljava/lang/CharSequence;I)V", "GetOnTitleChanged_Ljava_lang_CharSequence_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="color">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTitleChanged">
      <MemberSignature Language="C#" Value="protected void OnTitleChanged (string? title, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnTitleChanged(string title, valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnTitleChanged(System.String,Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="member this.OnTitleChanged : string * Android.Graphics.Color -&gt; unit" Usage="activity.OnTitleChanged (title, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTopResumedActivityChanged">
      <MemberSignature Language="C#" Value="public virtual void OnTopResumedActivityChanged (bool isTopResumedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTopResumedActivityChanged(bool isTopResumedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnTopResumedActivityChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnTopResumedActivityChanged : bool -&gt; unit&#xA;override this.OnTopResumedActivityChanged : bool -&gt; unit" Usage="activity.OnTopResumedActivityChanged isTopResumedActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTopResumedActivityChanged", "(Z)V", "GetOnTopResumedActivityChanged_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTopResumedActivityChanged", "(Z)V", "GetOnTopResumedActivityChanged_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isTopResumedActivity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isTopResumedActivity">
          <c>true</c> if it's the topmost resumed activity in the system,
                                        <c>false</c> otherwise. A call with this as <c>true</c> will
                                        always be followed by another one with <c>false</c>.</param>
        <summary>Called when activity gets or loses the top resumed position in the system.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onTopResumedActivityChanged(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.onTopResumedActivityChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnTouchEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnTouchEvent : Android.Views.MotionEvent -&gt; bool" Usage="activity.OnTouchEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The touch screen event being processed.</param>
        <param name="event">The touch screen event being processed.</param>
        <summary>Called when a touch screen event was not handled by any of the views
            under it.</summary>
        <returns>Return true if you have consumed the event, false if you haven't.
            The default implementation always returns false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTrackballEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnTrackballEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnTrackballEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnTrackballEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnTrackballEvent : Android.Views.MotionEvent -&gt; bool" Usage="activity.OnTrackballEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTrackballEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTrackballEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The trackball event being processed.</param>
        <param name="event">The trackball event being processed.</param>
        <summary>Called when the trackball was moved and not handled by any of the
            views inside of the activity.</summary>
        <returns>Return true if you have consumed the event, false if you haven't.
            The default implementation always returns false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onTrackballEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.onTrackballEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTrimMemory">
      <MemberSignature Language="C#" Value="public virtual void OnTrimMemory (Android.Content.TrimMemory level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTrimMemory(valuetype Android.Content.TrimMemory level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnTrimMemory(Android.Content.TrimMemory)" />
      <MemberSignature Language="F#" Value="abstract member OnTrimMemory : Android.Content.TrimMemory -&gt; unit&#xA;override this.OnTrimMemory : Android.Content.TrimMemory -&gt; unit" Usage="activity.OnTrimMemory level" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IComponentCallbacks2.OnTrimMemory(Android.Content.TrimMemory)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTrimMemory", "(I)V", "GetOnTrimMemory_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTrimMemory", "(I)V", "GetOnTrimMemory_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Android.Content.TrimMemory">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="level">The context of the trim, giving a hint of the amount of
 trimming the application may like to perform.  May be
 <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryComplete" />, <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryModerate" />,
 <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryBackground" />, <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryUiHidden" />,
 <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningCritical" />, <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningLow" />,
 or <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningModerate" />.
</param>
        <summary>Called when the operating system has determined that it is a good
 time for a process to trim unneeded memory from its process.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnUserInteraction">
      <MemberSignature Language="C#" Value="public virtual void OnUserInteraction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUserInteraction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnUserInteraction" />
      <MemberSignature Language="F#" Value="abstract member OnUserInteraction : unit -&gt; unit&#xA;override this.OnUserInteraction : unit -&gt; unit" Usage="activity.OnUserInteraction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserInteraction", "()V", "GetOnUserInteractionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserInteraction", "()V", "GetOnUserInteractionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called whenever a key, touch, or trackball event is dispatched to the
            activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onUserInteraction()" title="Reference documentation">Java documentation for <code>android.app.Activity.onUserInteraction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.App.Activity.OnUserLeaveHint" />
      </Docs>
    </Member>
    <Member MemberName="OnUserLeaveHint">
      <MemberSignature Language="C#" Value="protected virtual void OnUserLeaveHint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserLeaveHint() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnUserLeaveHint" />
      <MemberSignature Language="F#" Value="abstract member OnUserLeaveHint : unit -&gt; unit&#xA;override this.OnUserLeaveHint : unit -&gt; unit" Usage="activity.OnUserLeaveHint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserLeaveHint", "()V", "GetOnUserLeaveHintHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserLeaveHint", "()V", "GetOnUserLeaveHintHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called as part of the activity lifecycle when an activity is about to go
            into the background as the result of user choice.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onUserLeaveHint()" title="Reference documentation">Java documentation for <code>android.app.Activity.onUserLeaveHint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.App.Activity.OnUserInteraction" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleBehindCanceled">
      <MemberSignature Language="C#" Value="public virtual void OnVisibleBehindCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVisibleBehindCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnVisibleBehindCanceled" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleBehindCanceled : unit -&gt; unit&#xA;override this.OnVisibleBehindCanceled : unit -&gt; unit" Usage="activity.OnVisibleBehindCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onVisibleBehindCanceled", "()V", "GetOnVisibleBehindCanceledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onVisibleBehindCanceled", "()V", "GetOnVisibleBehindCanceledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when a translucent activity over this activity is becoming opaque or another
            activity is being launched.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onVisibleBehindCanceled()" title="Reference documentation">Java documentation for <code>android.app.Activity.onVisibleBehindCanceled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.RequestVisibleBehind(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowAttributesChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWindowAttributesChanged (Android.Views.WindowManagerLayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowAttributesChanged(class Android.Views.WindowManagerLayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowAttributesChanged : Android.Views.WindowManagerLayoutParams -&gt; unit&#xA;override this.OnWindowAttributesChanged : Android.Views.WindowManagerLayoutParams -&gt; unit" Usage="activity.OnWindowAttributesChanged params" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowAttributesChanged", "(Landroid/view/WindowManager$LayoutParams;)V", "GetOnWindowAttributesChanged_Landroid_view_WindowManager_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowAttributesChanged", "(Landroid/view/WindowManager$LayoutParams;)V", "GetOnWindowAttributesChanged_Landroid_view_WindowManager_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.Views.WindowManagerLayoutParams" />
      </Parameters>
      <Docs>
        <param name="params">To be added.</param>
        <summary>This is called whenever the current window attributes change.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWindowFocusChanged (bool hasFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowFocusChanged(bool hasFocus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnWindowFocusChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowFocusChanged : bool -&gt; unit&#xA;override this.OnWindowFocusChanged : bool -&gt; unit" Usage="activity.OnWindowFocusChanged hasFocus" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowFocusChanged(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasFocus">Whether the window of this activity has focus.</param>
        <summary>Called when the current <c>Window</c> of the activity gains or loses
            focus.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onWindowFocusChanged(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.onWindowFocusChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.HasWindowFocus" />
        <altmember cref="M:Android.App.Activity.OnResume" />
        <altmember cref="M:Android.Views.View.OnWindowFocusChanged(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowStartingActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? OnWindowStartingActionMode (Android.Views.ActionMode.ICallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode OnWindowStartingActionMode(class Android.Views.ActionMode/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowStartingActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode&#xA;override this.OnWindowStartingActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode" Usage="activity.OnWindowStartingActionMode callback" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback that should control the new action mode</param>
        <summary>Give the Activity a chance to control the UI for an action mode requested
            by the system.</summary>
        <returns>The new action mode, or &lt;code&gt;null&lt;/code&gt; if the activity does not want to
                    provide special handling for this action mode. (It will be handled by the system.)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onWindowStartingActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.app.Activity.onWindowStartingActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowStartingActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? OnWindowStartingActionMode (Android.Views.ActionMode.ICallback? callback, Android.Views.ActionModeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode OnWindowStartingActionMode(class Android.Views.ActionMode/ICallback callback, valuetype Android.Views.ActionModeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback,Android.Views.ActionModeType)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowStartingActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode&#xA;override this.OnWindowStartingActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode" Usage="activity.OnWindowStartingActionMode (callback, type)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Window.ICallback.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback,Android.Views.ActionModeType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowStartingActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetOnWindowStartingActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
        <Parameter Name="type" Type="Android.Views.ActionModeType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">The callback that should control the new action mode</param>
        <param name="type">To be added.</param>
        <summary>Give the Activity a chance to control the UI for an action mode requested
            by the system.</summary>
        <returns>The new action mode, or &lt;code&gt;null&lt;/code&gt; if the activity does not want to
                    provide special handling for this action mode. (It will be handled by the system.)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#onWindowStartingActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.app.Activity.onWindowStartingActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenContextMenu">
      <MemberSignature Language="C#" Value="public virtual void OpenContextMenu (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenContextMenu(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OpenContextMenu(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member OpenContextMenu : Android.Views.View -&gt; unit&#xA;override this.OpenContextMenu : Android.Views.View -&gt; unit" Usage="activity.OpenContextMenu view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openContextMenu", "(Landroid/view/View;)V", "GetOpenContextMenu_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openContextMenu", "(Landroid/view/View;)V", "GetOpenContextMenu_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view to show the context menu for.</param>
        <summary>Programmatically opens the context menu for a particular <c>view</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#openContextMenu(android.view.View)" title="Reference documentation">Java documentation for <code>android.app.Activity.openContextMenu(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void OpenOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenOptionsMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OpenOptionsMenu" />
      <MemberSignature Language="F#" Value="abstract member OpenOptionsMenu : unit -&gt; unit&#xA;override this.OpenOptionsMenu : unit -&gt; unit" Usage="activity.OpenOptionsMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openOptionsMenu", "()V", "GetOpenOptionsMenuHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openOptionsMenu", "()V", "GetOpenOptionsMenuHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Programmatically opens the options menu.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#openOptionsMenu()" title="Reference documentation">Java documentation for <code>android.app.Activity.openOptionsMenu()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OverridePendingTransition">
      <MemberSignature Language="C#" Value="public virtual void OverridePendingTransition (int enterAnim, int exitAnim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OverridePendingTransition(int32 enterAnim, int32 exitAnim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OverridePendingTransition(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OverridePendingTransition : int * int -&gt; unit&#xA;override this.OverridePendingTransition : int * int -&gt; unit" Usage="activity.OverridePendingTransition (enterAnim, exitAnim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("overridePendingTransition", "(II)V", "GetOverridePendingTransition_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("overridePendingTransition", "(II)V", "GetOverridePendingTransition_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enterAnim" Type="System.Int32" />
        <Parameter Name="exitAnim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enterAnim">A resource ID of the animation resource to use for
            the incoming activity.  Use 0 for no animation.</param>
        <param name="exitAnim">A resource ID of the animation resource to use for
            the outgoing activity.  Use 0 for no animation.</param>
        <summary>Call immediately after one of the flavors of <c>#startActivity(Intent)</c>
            or <c>#finish</c> to specify an explicit transition animation to
            perform next.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#overridePendingTransition(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.overridePendingTransition(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OverridePendingTransition">
      <MemberSignature Language="C#" Value="public virtual void OverridePendingTransition (int enterAnim, int exitAnim, int backgroundColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OverridePendingTransition(int32 enterAnim, int32 exitAnim, int32 backgroundColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.OverridePendingTransition(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OverridePendingTransition : int * int * int -&gt; unit&#xA;override this.OverridePendingTransition : int * int * int -&gt; unit" Usage="activity.OverridePendingTransition (enterAnim, exitAnim, backgroundColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("overridePendingTransition", "(III)V", "GetOverridePendingTransition_IIIHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("overridePendingTransition", "(III)V", "GetOverridePendingTransition_IIIHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enterAnim" Type="System.Int32" />
        <Parameter Name="exitAnim" Type="System.Int32" />
        <Parameter Name="backgroundColor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enterAnim">A resource ID of the animation resource to use for
            the incoming activity.  Use 0 for no animation.</param>
        <param name="exitAnim">A resource ID of the animation resource to use for
            the outgoing activity.  Use 0 for no animation.</param>
        <param name="backgroundColor">The background color to use for the background during the animation if
            the animation requires a background. Set to 0 to not override the default color.</param>
        <summary>Call immediately after one of the flavors of <c>#startActivity(Intent)</c>
            or <c>#finish</c> to specify an explicit transition animation to
            perform next.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#overridePendingTransition(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.overridePendingTransition(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Android.App.Activity? Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Activity Parent" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Android.App.Activity" Usage="Android.App.Activity.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParent", "()Landroid/app/Activity;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParent", "()Landroid/app/Activity;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the parent activity if this view is an embedded child.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getParent()" title="Reference documentation">Java documentation for <code>android.app.Activity.getParent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentActivityIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent? ParentActivityIntent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Intent ParentActivityIntent" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ParentActivityIntent" />
      <MemberSignature Language="F#" Value="member this.ParentActivityIntent : Android.Content.Intent" Usage="Android.App.Activity.ParentActivityIntent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParentActivityIntent", "()Landroid/content/Intent;", "GetGetParentActivityIntentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParentActivityIntent", "()Landroid/content/Intent;", "GetGetParentActivityIntentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtain an <c>Intent</c> that will launch an explicit target activity specified by
            this activity's logical parent.</summary>
        <value>a new Intent targeting the defined parent of this activity or null if
                    there is no valid parent.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getParentActivityIntent()" title="Reference documentation">Java documentation for <code>android.app.Activity.getParentActivityIntent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="PostponeEnterTransition">
      <MemberSignature Language="C#" Value="public virtual void PostponeEnterTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostponeEnterTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.PostponeEnterTransition" />
      <MemberSignature Language="F#" Value="abstract member PostponeEnterTransition : unit -&gt; unit&#xA;override this.PostponeEnterTransition : unit -&gt; unit" Usage="activity.PostponeEnterTransition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postponeEnterTransition", "()V", "GetPostponeEnterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postponeEnterTransition", "()V", "GetPostponeEnterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Postpone the entering activity transition when Activity was started with
            <c>android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,
            android.util.Pair[])</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#postponeEnterTransition()" title="Reference documentation">Java documentation for <code>android.app.Activity.postponeEnterTransition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recreate">
      <MemberSignature Language="C#" Value="public virtual void Recreate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Recreate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.Recreate" />
      <MemberSignature Language="F#" Value="abstract member Recreate : unit -&gt; unit&#xA;override this.Recreate : unit -&gt; unit" Usage="activity.Recreate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("recreate", "()V", "GetRecreateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("recreate", "()V", "GetRecreateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cause this Activity to be recreated with a new instance.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#recreate()" title="Reference documentation">Java documentation for <code>android.app.Activity.recreate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Referrer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Uri? Referrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Uri Referrer" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Referrer" />
      <MemberSignature Language="F#" Value="member this.Referrer : Android.Net.Uri" Usage="Android.App.Activity.Referrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReferrer", "()Landroid/net/Uri;", "GetGetReferrerHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReferrer", "()Landroid/net/Uri;", "GetGetReferrerHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return information about who launched this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getReferrer()" title="Reference documentation">Java documentation for <code>android.app.Activity.getReferrer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterActivityLifecycleCallbacks">
      <MemberSignature Language="C#" Value="public virtual void RegisterActivityLifecycleCallbacks (Android.App.Application.IActivityLifecycleCallbacks callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterActivityLifecycleCallbacks(class Android.App.Application/IActivityLifecycleCallbacks callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RegisterActivityLifecycleCallbacks(Android.App.Application.IActivityLifecycleCallbacks)" />
      <MemberSignature Language="F#" Value="abstract member RegisterActivityLifecycleCallbacks : Android.App.Application.IActivityLifecycleCallbacks -&gt; unit&#xA;override this.RegisterActivityLifecycleCallbacks : Android.App.Application.IActivityLifecycleCallbacks -&gt; unit" Usage="activity.RegisterActivityLifecycleCallbacks callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerActivityLifecycleCallbacks", "(Landroid/app/Application$ActivityLifecycleCallbacks;)V", "GetRegisterActivityLifecycleCallbacks_Landroid_app_Application_ActivityLifecycleCallbacks_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerActivityLifecycleCallbacks", "(Landroid/app/Application$ActivityLifecycleCallbacks;)V", "GetRegisterActivityLifecycleCallbacks_Landroid_app_Application_ActivityLifecycleCallbacks_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.App.Application+IActivityLifecycleCallbacks" />
      </Parameters>
      <Docs>
        <param name="callback">The callback instance to register</param>
        <summary>Register an <c>Application.ActivityLifecycleCallbacks</c> instance that receives
            lifecycle callbacks for only this Activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#registerActivityLifecycleCallbacks(android.app.ActivityLifecycleCallbacks)" title="Reference documentation">Java documentation for <code>android.app.Activity.registerActivityLifecycleCallbacks(android.app.ActivityLifecycleCallbacks)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForContextMenu">
      <MemberSignature Language="C#" Value="public virtual void RegisterForContextMenu (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterForContextMenu(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RegisterForContextMenu(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member RegisterForContextMenu : Android.Views.View -&gt; unit&#xA;override this.RegisterForContextMenu : Android.Views.View -&gt; unit" Usage="activity.RegisterForContextMenu view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerForContextMenu", "(Landroid/view/View;)V", "GetRegisterForContextMenu_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerForContextMenu", "(Landroid/view/View;)V", "GetRegisterForContextMenu_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view that should show a context menu.</param>
        <summary>Registers a context menu to be shown for the given view (multiple views
            can show the context menu).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#registerForContextMenu(android.view.View)" title="Reference documentation">Java documentation for <code>android.app.Activity.registerForContextMenu(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.UnregisterForContextMenu(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstance">
      <MemberSignature Language="C#" Value="public virtual bool ReleaseInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReleaseInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ReleaseInstance" />
      <MemberSignature Language="F#" Value="abstract member ReleaseInstance : unit -&gt; bool&#xA;override this.ReleaseInstance : unit -&gt; bool" Usage="activity.ReleaseInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("releaseInstance", "()Z", "GetReleaseInstanceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("releaseInstance", "()Z", "GetReleaseInstanceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ask that the local app instance of this activity be released to free up its memory.</summary>
        <returns>Returns true if the activity was in a state that it has started the process
            of destroying its current instance; returns false if for any reason this could not
            be done: it is currently visible to the user, it is already being destroyed, it is
            being finished, it hasn't yet saved its state, etc.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#releaseInstance()" title="Reference documentation">Java documentation for <code>android.app.Activity.releaseInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDialog">
      <MemberSignature Language="C#" Value="public void RemoveDialog (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDialog(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RemoveDialog(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RemoveDialog : int -&gt; unit" Usage="activity.RemoveDialog id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeDialog", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeDialog", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The id of the managed dialog.</param>
        <summary>Removes any internal references to a dialog managed by this Activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#removeDialog(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.removeDialog(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnCreateDialog(System.Int32, Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPrepareDialog(System.Int32, Android.App.Dialog, Android.App.Dialog)" />
        <altmember cref="M:Android.App.Activity.ShowDialog(System.Int32)" />
        <altmember cref="M:Android.App.Activity.DismissDialog(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFullyDrawn">
      <MemberSignature Language="C#" Value="public virtual void ReportFullyDrawn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportFullyDrawn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ReportFullyDrawn" />
      <MemberSignature Language="F#" Value="abstract member ReportFullyDrawn : unit -&gt; unit&#xA;override this.ReportFullyDrawn : unit -&gt; unit" Usage="activity.ReportFullyDrawn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reportFullyDrawn", "()V", "GetReportFullyDrawnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reportFullyDrawn", "()V", "GetReportFullyDrawnHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report to the system that your app is now fully drawn, for diagnostic and
            optimization purposes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#reportFullyDrawn()" title="Reference documentation">Java documentation for <code>android.app.Activity.reportFullyDrawn()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestDragAndDropPermissions">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DragAndDropPermissions? RequestDragAndDropPermissions (Android.Views.DragEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.DragAndDropPermissions RequestDragAndDropPermissions(class Android.Views.DragEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RequestDragAndDropPermissions(Android.Views.DragEvent)" />
      <MemberSignature Language="F#" Value="abstract member RequestDragAndDropPermissions : Android.Views.DragEvent -&gt; Android.Views.DragAndDropPermissions&#xA;override this.RequestDragAndDropPermissions : Android.Views.DragEvent -&gt; Android.Views.DragAndDropPermissions" Usage="activity.RequestDragAndDropPermissions e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestDragAndDropPermissions", "(Landroid/view/DragEvent;)Landroid/view/DragAndDropPermissions;", "GetRequestDragAndDropPermissions_Landroid_view_DragEvent_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestDragAndDropPermissions", "(Landroid/view/DragEvent;)Landroid/view/DragAndDropPermissions;", "GetRequestDragAndDropPermissions_Landroid_view_DragEvent_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragAndDropPermissions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.DragEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="event">Drag event</param>
        <summary>Create <c>DragAndDropPermissions</c> object bound to this activity and controlling the
            access permissions for content URIs associated with the <c>DragEvent</c>.</summary>
        <returns>The <c>DragAndDropPermissions</c> object used to control access to the content URIs.
            Null if no content URIs are associated with the event or if permissions could not be granted.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#requestDragAndDropPermissions(android.view.DragEvent)" title="Reference documentation">Java documentation for <code>android.app.Activity.requestDragAndDropPermissions(android.view.DragEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestedOrientation">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ScreenOrientation RequestedOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ScreenOrientation RequestedOrientation" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.RequestedOrientation" />
      <MemberSignature Language="F#" Value="member this.RequestedOrientation : Android.Content.PM.ScreenOrientation with get, set" Usage="Android.App.Activity.RequestedOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRequestedOrientation", "()I", "GetGetRequestedOrientationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRequestedOrientation", "()I", "GetGetRequestedOrientationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRequestedOrientation", "(I)V", "GetSetRequestedOrientation_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRequestedOrientation", "(I)V", "GetSetRequestedOrientation_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ScreenOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="requestedOrientation">An orientation constant as used in
            <c>ActivityInfo#screenOrientation ActivityInfo.screenOrientation</c>.</param>
        <summary>Return the current requested orientation of the activity. -or- Change the desired orientation of this activity.</summary>
        <value>Returns an orientation constant as used in
            <c>ActivityInfo#screenOrientation ActivityInfo.screenOrientation</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getRequestedOrientation()" title="Reference documentation">Java documentation for <code>android.app.Activity.getRequestedOrientation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setRequestedOrientation(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setRequestedOrientation(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestPermissions">
      <MemberSignature Language="C#" Value="public void RequestPermissions (string[] permissions, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestPermissions(string[] permissions, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RequestPermissions(System.String[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequestPermissions : string[] * int -&gt; unit" Usage="activity.RequestPermissions (permissions, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestPermissions", "([Ljava/lang/String;I)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestPermissions", "([Ljava/lang/String;I)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.String[]" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="permissions">The requested permissions. Must me non-null and not empty.</param>
        <param name="requestCode">Application specific request code to match with a result
               reported to <c>#onRequestPermissionsResult(int, String[], int[])</c>.
               Should be &gt;= 0.</param>
        <summary>Requests permissions to be granted to this application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#requestPermissions(java.lang.String[],%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.requestPermissions(java.lang.String[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestShowKeyboardShortcuts">
      <MemberSignature Language="C#" Value="public void RequestShowKeyboardShortcuts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestShowKeyboardShortcuts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RequestShowKeyboardShortcuts" />
      <MemberSignature Language="F#" Value="member this.RequestShowKeyboardShortcuts : unit -&gt; unit" Usage="activity.RequestShowKeyboardShortcuts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestShowKeyboardShortcuts", "()V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestShowKeyboardShortcuts", "()V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request the Keyboard Shortcuts screen to show up.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#requestShowKeyboardShortcuts()" title="Reference documentation">Java documentation for <code>android.app.Activity.requestShowKeyboardShortcuts()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestVisibleBehind">
      <MemberSignature Language="C#" Value="public virtual bool RequestVisibleBehind (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestVisibleBehind(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RequestVisibleBehind(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member RequestVisibleBehind : bool -&gt; bool&#xA;override this.RequestVisibleBehind : bool -&gt; bool" Usage="activity.RequestVisibleBehind visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestVisibleBehind", "(Z)Z", "GetRequestVisibleBehind_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestVisibleBehind", "(Z)Z", "GetRequestVisibleBehind_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">true to notify the system that the activity wishes to be visible behind other
                           translucent activities, false to indicate otherwise. Resources must be
                           released when passing false to this method.</param>
        <summary>Activities that want to remain visible behind a translucent activity above them must call
            this method anytime between the start of <c>#onResume()</c> and the return from
            <c>#onPause()</c>.</summary>
        <returns>the resulting visibiity state. If true the activity will remain visible beyond
                 <c>#onPause()</c> if the next activity is translucent or not fullscreen. If false
                 then the activity may not count on being visible behind other translucent activities,
                 and must stop any media playback and release resources.
                 Returning false may occur in lieu of a call to <c>#onVisibleBehindCanceled()</c> so
                 the return value must be checked.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#requestVisibleBehind(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.requestVisibleBehind(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Activity.OnVisibleBehindCanceled" />
      </Docs>
    </Member>
    <Member MemberName="RequestWindowFeature">
      <MemberSignature Language="C#" Value="public bool RequestWindowFeature (Android.Views.WindowFeatures featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestWindowFeature(valuetype Android.Views.WindowFeatures featureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RequestWindowFeature(Android.Views.WindowFeatures)" />
      <MemberSignature Language="F#" Value="member this.RequestWindowFeature : Android.Views.WindowFeatures -&gt; bool" Usage="activity.RequestWindowFeature featureId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestWindowFeature", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestWindowFeature", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">The desired feature as defined in
                             <c>android.view.Window</c>.</param>
        <summary>Enable extended window features.</summary>
        <returns>Returns true if the requested feature is supported and now
                    enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#requestWindowFeature(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.requestWindowFeature(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.RequestFeature(Android.Views.WindowFeatures)" />
      </Docs>
    </Member>
    <Member MemberName="RequireViewById">
      <MemberSignature Language="C#" Value="public Java.Lang.Object RequireViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object RequireViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RequireViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequireViewById : int -&gt; Java.Lang.Object" Usage="activity.RequireViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds a view that was  identified by the <c>android:id</c> XML attribute that was processed
            in <c>#onCreate</c>, or throws an IllegalArgumentException if the ID is invalid, or there is
            no matching view in the hierarchy.</summary>
        <returns>a view with given ID</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#requireViewById(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.requireViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunOnUiThread">
      <MemberSignature Language="C#" Value="public void RunOnUiThread (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunOnUiThread(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RunOnUiThread(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="member this.RunOnUiThread : Java.Lang.IRunnable -&gt; unit" Usage="activity.RunOnUiThread action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runOnUiThread", "(Ljava/lang/Runnable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runOnUiThread", "(Ljava/lang/Runnable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">the action to run on the UI thread</param>
        <summary>Runs the specified action on the UI thread.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#runOnUiThread(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.app.Activity.runOnUiThread(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RunOnUiThread">
      <MemberSignature Language="C#" Value="public void RunOnUiThread (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunOnUiThread(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.RunOnUiThread(System.Action)" />
      <MemberSignature Language="F#" Value="member this.RunOnUiThread : Action -&gt; unit" Usage="activity.RunOnUiThread action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchEvent">
      <MemberSignature Language="C#" Value="public Android.Views.SearchEvent? SearchEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.SearchEvent SearchEvent" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.SearchEvent" />
      <MemberSignature Language="F#" Value="member this.SearchEvent : Android.Views.SearchEvent" Usage="Android.App.Activity.SearchEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSearchEvent", "()Landroid/view/SearchEvent;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSearchEvent", "()Landroid/view/SearchEvent;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SearchEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>During the onSearchRequested() callbacks, this function will return the
            <c>SearchEvent</c> that triggered the callback, if it exists.</summary>
        <value>SearchEvent The SearchEvent that triggered the <c>#onSearchRequested</c> callback.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getSearchEvent()" title="Reference documentation">Java documentation for <code>android.app.Activity.getSearchEvent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActionBar">
      <MemberSignature Language="C#" Value="public virtual void SetActionBar (Android.Widget.Toolbar? toolbar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetActionBar(class Android.Widget.Toolbar toolbar) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetActionBar(Android.Widget.Toolbar)" />
      <MemberSignature Language="F#" Value="abstract member SetActionBar : Android.Widget.Toolbar -&gt; unit&#xA;override this.SetActionBar : Android.Widget.Toolbar -&gt; unit" Usage="activity.SetActionBar toolbar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setActionBar", "(Landroid/widget/Toolbar;)V", "GetSetActionBar_Landroid_widget_Toolbar_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setActionBar", "(Landroid/widget/Toolbar;)V", "GetSetActionBar_Landroid_widget_Toolbar_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolbar" Type="Android.Widget.Toolbar" />
      </Parameters>
      <Docs>
        <param name="toolbar">Toolbar to set as the Activity's action bar, or <c>null</c> to clear it</param>
        <summary>Set a <c>android.widget.Toolbar Toolbar</c> to act as the <c>ActionBar</c> for this
            Activity window.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setActionBar(android.widget.Toolbar)" title="Reference documentation">Java documentation for <code>android.app.Activity.setActionBar(android.widget.Toolbar)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public virtual void SetContentView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetContentView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : Android.Views.View -&gt; unit&#xA;override this.SetContentView : Android.Views.View -&gt; unit" Usage="activity.SetContentView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <summary>Set the activity content to an explicit view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setContentView(android.view.View)" title="Reference documentation">Java documentation for <code>android.app.Activity.setContentView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.SetContentView(System.Int32)" />
        <altmember cref="M:Android.App.Activity.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public virtual void SetContentView (int layoutResID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(int32 layoutResID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetContentView(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : int -&gt; unit&#xA;override this.SetContentView : int -&gt; unit" Usage="activity.SetContentView layoutResID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutResID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="layoutResID">Resource ID to be inflated.</param>
        <summary>Set the activity content from a layout resource.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setContentView(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setContentView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.SetContentView(Android.Views.View)" />
        <altmember cref="M:Android.App.Activity.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public virtual void SetContentView (Android.Views.View? view, Android.Views.ViewGroup.LayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit&#xA;override this.SetContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit" Usage="activity.SetContentView (view, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Set the activity content from a layout resource.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setContentView(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setContentView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.SetContentView(Android.Views.View)" />
        <altmember cref="M:Android.App.Activity.SetContentView(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDefaultKeyMode">
      <MemberSignature Language="C#" Value="public void SetDefaultKeyMode (Android.App.DefaultKey mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultKeyMode(valuetype Android.App.DefaultKey mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetDefaultKeyMode(Android.App.DefaultKey)" />
      <MemberSignature Language="F#" Value="member this.SetDefaultKeyMode : Android.App.DefaultKey -&gt; unit" Usage="activity.SetDefaultKeyMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultKeyMode", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultKeyMode", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.App.DefaultKey">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">The desired default key mode constant.</param>
        <summary>Select the default key handling for this activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setDefaultKeyMode(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setDefaultKeyMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.OnKeyDown(Android.Views.Keycode, Android.Views.KeyEvent)" />
      </Docs>
    </Member>
    <Member MemberName="SetEnterSharedElementCallback">
      <MemberSignature Language="C#" Value="public virtual void SetEnterSharedElementCallback (Android.App.SharedElementCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEnterSharedElementCallback(class Android.App.SharedElementCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetEnterSharedElementCallback(Android.App.SharedElementCallback)" />
      <MemberSignature Language="F#" Value="abstract member SetEnterSharedElementCallback : Android.App.SharedElementCallback -&gt; unit&#xA;override this.SetEnterSharedElementCallback : Android.App.SharedElementCallback -&gt; unit" Usage="activity.SetEnterSharedElementCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEnterSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", "GetSetEnterSharedElementCallback_Landroid_app_SharedElementCallback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEnterSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", "GetSetEnterSharedElementCallback_Landroid_app_SharedElementCallback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.App.SharedElementCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Used to manipulate shared element transitions on the launched Activity.</param>
        <summary>When <c>android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,
            android.view.View, String)</c> was used to start an Activity, &lt;var&gt;callback&lt;/var&gt;
            will be called to handle shared elements on the <i>launched</i> Activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setEnterSharedElementCallback(android.app.SharedElementCallback)" title="Reference documentation">Java documentation for <code>android.app.Activity.setEnterSharedElementCallback(android.app.SharedElementCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExitSharedElementCallback">
      <MemberSignature Language="C#" Value="public virtual void SetExitSharedElementCallback (Android.App.SharedElementCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExitSharedElementCallback(class Android.App.SharedElementCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetExitSharedElementCallback(Android.App.SharedElementCallback)" />
      <MemberSignature Language="F#" Value="abstract member SetExitSharedElementCallback : Android.App.SharedElementCallback -&gt; unit&#xA;override this.SetExitSharedElementCallback : Android.App.SharedElementCallback -&gt; unit" Usage="activity.SetExitSharedElementCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setExitSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", "GetSetExitSharedElementCallback_Landroid_app_SharedElementCallback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setExitSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", "GetSetExitSharedElementCallback_Landroid_app_SharedElementCallback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.App.SharedElementCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Used to manipulate shared element transitions on the launching Activity.</param>
        <summary>When <c>android.app.ActivityOptions#makeSceneTransitionAnimation(Activity,
            android.view.View, String)</c> was used to start an Activity, &lt;var&gt;callback&lt;/var&gt;
            will be called to handle shared elements on the <i>launching</i> Activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setExitSharedElementCallback(android.app.SharedElementCallback)" title="Reference documentation">Java documentation for <code>android.app.Activity.setExitSharedElementCallback(android.app.SharedElementCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawable">
      <MemberSignature Language="C#" Value="public void SetFeatureDrawable (Android.Views.WindowFeatures featureId, Android.Graphics.Drawables.Drawable? drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFeatureDrawable(valuetype Android.Views.WindowFeatures featureId, class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetFeatureDrawable(Android.Views.WindowFeatures,Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="member this.SetFeatureDrawable : Android.Views.WindowFeatures * Android.Graphics.Drawables.Drawable -&gt; unit" Usage="activity.SetFeatureDrawable (featureId, drawable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="drawable">To be added.</param>
        <summary>Convenience for calling
            <c>android.view.Window#setFeatureDrawable(int, Drawable)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setFeatureDrawable(int,%20android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.app.Activity.setFeatureDrawable(int, android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableAlpha">
      <MemberSignature Language="C#" Value="public void SetFeatureDrawableAlpha (Android.Views.WindowFeatures featureId, int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFeatureDrawableAlpha(valuetype Android.Views.WindowFeatures featureId, int32 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetFeatureDrawableAlpha(Android.Views.WindowFeatures,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetFeatureDrawableAlpha : Android.Views.WindowFeatures * int -&gt; unit" Usage="activity.SetFeatureDrawableAlpha (featureId, alpha)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawableAlpha", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawableAlpha", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>Convenience for calling
            <c>android.view.Window#setFeatureDrawableAlpha</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setFeatureDrawableAlpha(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setFeatureDrawableAlpha(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableResource">
      <MemberSignature Language="C#" Value="public void SetFeatureDrawableResource (Android.Views.WindowFeatures featureId, int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFeatureDrawableResource(valuetype Android.Views.WindowFeatures featureId, int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetFeatureDrawableResource(Android.Views.WindowFeatures,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetFeatureDrawableResource : Android.Views.WindowFeatures * int -&gt; unit" Usage="activity.SetFeatureDrawableResource (featureId, resId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawableResource", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawableResource", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="resId">To be added.</param>
        <summary>Convenience for calling
            <c>android.view.Window#setFeatureDrawableResource</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setFeatureDrawableResource(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setFeatureDrawableResource(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableUri">
      <MemberSignature Language="C#" Value="public void SetFeatureDrawableUri (Android.Views.WindowFeatures featureId, Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFeatureDrawableUri(valuetype Android.Views.WindowFeatures featureId, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetFeatureDrawableUri(Android.Views.WindowFeatures,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="member this.SetFeatureDrawableUri : Android.Views.WindowFeatures * Android.Net.Uri -&gt; unit" Usage="activity.SetFeatureDrawableUri (featureId, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawableUri", "(ILandroid/net/Uri;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawableUri", "(ILandroid/net/Uri;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="uri">To be added.</param>
        <summary>Convenience for calling
            <c>android.view.Window#setFeatureDrawableUri</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setFeatureDrawableUri(int,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.app.Activity.setFeatureDrawableUri(int, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFinishOnTouchOutside">
      <MemberSignature Language="C#" Value="public virtual void SetFinishOnTouchOutside (bool finish);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFinishOnTouchOutside(bool finish) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetFinishOnTouchOutside(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFinishOnTouchOutside : bool -&gt; unit&#xA;override this.SetFinishOnTouchOutside : bool -&gt; unit" Usage="activity.SetFinishOnTouchOutside finish" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFinishOnTouchOutside", "(Z)V", "GetSetFinishOnTouchOutside_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFinishOnTouchOutside", "(Z)V", "GetSetFinishOnTouchOutside_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finish" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finish">To be added.</param>
        <summary>Sets whether this activity is finished when touched outside its window's
            bounds.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setFinishOnTouchOutside(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setFinishOnTouchOutside(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetInheritShowWhenLocked">
      <MemberSignature Language="C#" Value="public virtual void SetInheritShowWhenLocked (bool inheritShowWhenLocked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInheritShowWhenLocked(bool inheritShowWhenLocked) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetInheritShowWhenLocked(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetInheritShowWhenLocked : bool -&gt; unit&#xA;override this.SetInheritShowWhenLocked : bool -&gt; unit" Usage="activity.SetInheritShowWhenLocked inheritShowWhenLocked" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInheritShowWhenLocked", "(Z)V", "GetSetInheritShowWhenLocked_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInheritShowWhenLocked", "(Z)V", "GetSetInheritShowWhenLocked_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inheritShowWhenLocked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inheritShowWhenLocked">
          <c>true</c> to show the <c>Activity</c> on top of the lock
                                         screen when this activity has another activity behind it with
                                         the showWhenLock attribute set; <c>false</c> otherwise.</param>
        <summary>Specifies whether this <c>Activity</c> should be shown on top of the lock screen whenever
            the lockscreen is up and this activity has another activity behind it with the showWhenLock
            attribute set.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setInheritShowWhenLocked(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setInheritShowWhenLocked(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocusContext">
      <MemberSignature Language="C#" Value="public virtual void SetLocusContext (Android.Content.LocusId? locusId, Android.OS.Bundle? bundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocusContext(class Android.Content.LocusId locusId, class Android.OS.Bundle bundle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetLocusContext(Android.Content.LocusId,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SetLocusContext : Android.Content.LocusId * Android.OS.Bundle -&gt; unit&#xA;override this.SetLocusContext : Android.Content.LocusId * Android.OS.Bundle -&gt; unit" Usage="activity.SetLocusContext (locusId, bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLocusContext", "(Landroid/content/LocusId;Landroid/os/Bundle;)V", "GetSetLocusContext_Landroid_content_LocusId_Landroid_os_Bundle_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLocusContext", "(Landroid/content/LocusId;Landroid/os/Bundle;)V", "GetSetLocusContext_Landroid_content_LocusId_Landroid_os_Bundle_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locusId" Type="Android.Content.LocusId" />
        <Parameter Name="bundle" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="locusId">a unique, stable id that identifies this <c>Activity</c> instance. LocusId
                 is an opaque ID that links this Activity's state to different Android concepts:
                 <c>android.content.pm.ShortcutInfo.Builder#setLocusId(android.content.LocusId)
                 setLocusId</c>. LocusID is null by default or if you explicitly reset it.</param>
        <param name="bundle">extras set or updated as part of this locus context. This may help provide
                 additional metadata such as URLs, conversation participants specific to this
                 <c>Activity</c>'s context. Bundle can be null if additional metadata is not needed.
                 Bundle should always be null for null locusId.</param>
        <summary>Sets the <c>android.content.LocusId</c> for this activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setLocusContext(android.content.LocusId,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.setLocusContext(android.content.LocusId, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPersistent">
      <MemberSignature Language="C#" Value="public virtual void SetPersistent (bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPersistent(bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetPersistent(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetPersistent : bool -&gt; unit&#xA;override this.SetPersistent : bool -&gt; unit" Usage="activity.SetPersistent isPersistent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPersistent", "(Z)V", "GetSetPersistent_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPersistent", "(Z)V", "GetSetPersistent_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isPersistent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setPersistent(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setPersistent(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPictureInPictureParams">
      <MemberSignature Language="C#" Value="public virtual void SetPictureInPictureParams (Android.App.PictureInPictureParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPictureInPictureParams(class Android.App.PictureInPictureParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetPictureInPictureParams(Android.App.PictureInPictureParams)" />
      <MemberSignature Language="F#" Value="abstract member SetPictureInPictureParams : Android.App.PictureInPictureParams -&gt; unit&#xA;override this.SetPictureInPictureParams : Android.App.PictureInPictureParams -&gt; unit" Usage="activity.SetPictureInPictureParams params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPictureInPictureParams", "(Landroid/app/PictureInPictureParams;)V", "GetSetPictureInPictureParams_Landroid_app_PictureInPictureParams_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPictureInPictureParams", "(Landroid/app/PictureInPictureParams;)V", "GetSetPictureInPictureParams_Landroid_app_PictureInPictureParams_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.App.PictureInPictureParams" />
      </Parameters>
      <Docs>
        <param name="params">the new parameters for the picture-in-picture.</param>
        <summary>Updates the properties of the picture-in-picture activity, or sets it to be used later when
            <c>#enterPictureInPictureMode()</c> is called.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setPictureInPictureParams(android.app.PictureInPictureParams)" title="Reference documentation">Java documentation for <code>android.app.Activity.setPictureInPictureParams(android.app.PictureInPictureParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProgress">
      <MemberSignature Language="C#" Value="public void SetProgress (int progress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProgress(int32 progress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetProgress(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetProgress : int -&gt; unit" Usage="activity.SetProgress progress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProgress", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProgress", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="progress">The progress for the progress bar. Valid ranges are from
                       0 to 10000 (both inclusive). If 10000 is given, the progress
                       bar will be completely filled and will fade out.</param>
        <summary>Sets the progress for the progress bars in the title.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setProgress(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setProgress(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetProgressBarIndeterminate">
      <MemberSignature Language="C#" Value="public void SetProgressBarIndeterminate (bool indeterminate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProgressBarIndeterminate(bool indeterminate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetProgressBarIndeterminate(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetProgressBarIndeterminate : bool -&gt; unit" Usage="activity.SetProgressBarIndeterminate indeterminate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProgressBarIndeterminate", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProgressBarIndeterminate", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indeterminate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="indeterminate">Whether the horizontal progress bar should be indeterminate.</param>
        <summary>Sets whether the horizontal progress bar in the title should be indeterminate (the circular
            is always indeterminate).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setProgressBarIndeterminate(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setProgressBarIndeterminate(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetProgressBarIndeterminateVisibility">
      <MemberSignature Language="C#" Value="public void SetProgressBarIndeterminateVisibility (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProgressBarIndeterminateVisibility(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetProgressBarIndeterminateVisibility(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetProgressBarIndeterminateVisibility : bool -&gt; unit" Usage="activity.SetProgressBarIndeterminateVisibility visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProgressBarIndeterminateVisibility", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProgressBarIndeterminateVisibility", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Whether to show the progress bars in the title.</param>
        <summary>Sets the visibility of the indeterminate progress bar in the title.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setProgressBarIndeterminateVisibility(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setProgressBarIndeterminateVisibility(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetProgressBarVisibility">
      <MemberSignature Language="C#" Value="public void SetProgressBarVisibility (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProgressBarVisibility(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetProgressBarVisibility(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetProgressBarVisibility : bool -&gt; unit" Usage="activity.SetProgressBarVisibility visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProgressBarVisibility", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProgressBarVisibility", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Whether to show the progress bars in the title.</param>
        <summary>Sets the visibility of the progress bar in the title.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setProgressBarVisibility(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setProgressBarVisibility(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRecentsScreenshotEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetRecentsScreenshotEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecentsScreenshotEnabled(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetRecentsScreenshotEnabled(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetRecentsScreenshotEnabled : bool -&gt; unit&#xA;override this.SetRecentsScreenshotEnabled : bool -&gt; unit" Usage="activity.SetRecentsScreenshotEnabled enabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRecentsScreenshotEnabled", "(Z)V", "GetSetRecentsScreenshotEnabled_ZHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRecentsScreenshotEnabled", "(Z)V", "GetSetRecentsScreenshotEnabled_ZHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <c>true</c> to enable recents screenshots; <c>false</c> otherwise.</param>
        <summary>If set to false, this indicates to the system that it should never take a
            screenshot of the activity to be used as a representation in recents screen.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setRecentsScreenshotEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setRecentsScreenshotEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (Android.App.Result resultCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(valuetype Android.App.Result resultCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetResult(Android.App.Result)" />
      <MemberSignature Language="F#" Value="member this.SetResult : Android.App.Result -&gt; unit" Usage="activity.SetResult resultCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setResult", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setResult", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resultCode">The result code to propagate back to the originating
                              activity, often RESULT_CANCELED or RESULT_OK</param>
        <summary>Call this to set the result that your activity will return to its
            caller.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setResult(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setResult(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.SetResult(Android.App.Result, Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (Android.App.Result resultCode, Android.Content.Intent? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(valuetype Android.App.Result resultCode, class Android.Content.Intent data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetResult(Android.App.Result,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="member this.SetResult : Android.App.Result * Android.Content.Intent -&gt; unit" Usage="activity.SetResult (resultCode, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setResult", "(ILandroid/content/Intent;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setResult", "(ILandroid/content/Intent;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="data" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="resultCode">The result code to propagate back to the originating
                              activity, often RESULT_CANCELED or RESULT_OK</param>
        <param name="data">The data to propagate back to the originating activity.</param>
        <summary>Call this to set the result that your activity will return to its
            caller.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setResult(int,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.setResult(int, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.SetResult(Android.App.Result)" />
      </Docs>
    </Member>
    <Member MemberName="SetSecondaryProgress">
      <MemberSignature Language="C#" Value="public void SetSecondaryProgress (int secondaryProgress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSecondaryProgress(int32 secondaryProgress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetSecondaryProgress(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetSecondaryProgress : int -&gt; unit" Usage="activity.SetSecondaryProgress secondaryProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSecondaryProgress", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSecondaryProgress", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secondaryProgress" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="secondaryProgress">The secondary progress for the progress bar. Valid ranges are from
                       0 to 10000 (both inclusive).</param>
        <summary>Sets the secondary progress for the progress bar in the title.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setSecondaryProgress(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setSecondaryProgress(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShouldDockBigOverlays">
      <MemberSignature Language="C#" Value="public virtual void SetShouldDockBigOverlays (bool shouldDockBigOverlays);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShouldDockBigOverlays(bool shouldDockBigOverlays) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetShouldDockBigOverlays(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetShouldDockBigOverlays : bool -&gt; unit&#xA;override this.SetShouldDockBigOverlays : bool -&gt; unit" Usage="activity.SetShouldDockBigOverlays shouldDockBigOverlays" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShouldDockBigOverlays", "(Z)V", "GetSetShouldDockBigOverlays_ZHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShouldDockBigOverlays", "(Z)V", "GetSetShouldDockBigOverlays_ZHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldDockBigOverlays" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shouldDockBigOverlays">indicates that big overlays should be docked next to the
                                         activity instead of overlay its content</param>
        <summary>Specifies a preference to dock big overlays like the expanded picture-in-picture on TV
            (see <c>PictureInPictureParams.Builder#setExpandedAspectRatio</c>).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setShouldDockBigOverlays(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setShouldDockBigOverlays(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShowWhenLocked">
      <MemberSignature Language="C#" Value="public virtual void SetShowWhenLocked (bool showWhenLocked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShowWhenLocked(bool showWhenLocked) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetShowWhenLocked(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetShowWhenLocked : bool -&gt; unit&#xA;override this.SetShowWhenLocked : bool -&gt; unit" Usage="activity.SetShowWhenLocked showWhenLocked" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShowWhenLocked", "(Z)V", "GetSetShowWhenLocked_ZHandler", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShowWhenLocked", "(Z)V", "GetSetShowWhenLocked_ZHandler", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showWhenLocked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showWhenLocked">
          <c>true</c> to show the <c>Activity</c> on top of the lock screen;
                                              <c>false</c> otherwise.</param>
        <summary>Specifies whether an <c>Activity</c> should be shown on top of the lock screen whenever
            the lockscreen is up and the activity is resumed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setShowWhenLocked(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setShowWhenLocked(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTaskDescription">
      <MemberSignature Language="C#" Value="public virtual void SetTaskDescription (Android.App.ActivityManager.TaskDescription? taskDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTaskDescription(class Android.App.ActivityManager/TaskDescription taskDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetTaskDescription(Android.App.ActivityManager.TaskDescription)" />
      <MemberSignature Language="F#" Value="abstract member SetTaskDescription : Android.App.ActivityManager.TaskDescription -&gt; unit&#xA;override this.SetTaskDescription : Android.App.ActivityManager.TaskDescription -&gt; unit" Usage="activity.SetTaskDescription taskDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTaskDescription", "(Landroid/app/ActivityManager$TaskDescription;)V", "GetSetTaskDescription_Landroid_app_ActivityManager_TaskDescription_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTaskDescription", "(Landroid/app/ActivityManager$TaskDescription;)V", "GetSetTaskDescription_Landroid_app_ActivityManager_TaskDescription_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskDescription" Type="Android.App.ActivityManager+TaskDescription" />
      </Parameters>
      <Docs>
        <param name="taskDescription">The TaskDescription properties that describe the task with this activity</param>
        <summary>Sets information describing the task with this activity for presentation inside the Recents
            System UI.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setTaskDescription(android.app.TaskDescription)" title="Reference documentation">Java documentation for <code>android.app.Activity.setTaskDescription(android.app.TaskDescription)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.ActivityManager.GetRecentTasks(System.Int32, Android.App.RecentTaskFlags)" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public virtual void SetTitle (int titleId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitle(int32 titleId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetTitle(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetTitle : int -&gt; unit&#xA;override this.SetTitle : int -&gt; unit" Usage="activity.SetTitle titleId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTitle", "(I)V", "GetSetTitle_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTitle", "(I)V", "GetSetTitle_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="titleId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="titleId">To be added.</param>
        <summary>Change the title associated with this activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setTitle(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setTitle(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTranslucent">
      <MemberSignature Language="C#" Value="public virtual bool SetTranslucent (bool translucent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTranslucent(bool translucent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetTranslucent(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetTranslucent : bool -&gt; bool&#xA;override this.SetTranslucent : bool -&gt; bool" Usage="activity.SetTranslucent translucent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTranslucent", "(Z)Z", "GetSetTranslucent_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTranslucent", "(Z)Z", "GetSetTranslucent_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="translucent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="translucent">
          <c>true</c> convert from opaque to translucent.
                               <c>false</c> convert from translucent to opaque.</param>
        <summary>Convert an activity, which particularly with <c>android.R.attr#windowIsTranslucent</c> or
            <c>android.R.attr#windowIsFloating</c> attribute, to a fullscreen opaque activity, or
            convert it from opaque back to translucent.</summary>
        <returns>The result of setting translucency. Return <c>true</c> if set successfully,
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setTranslucent(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setTranslucent(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTurnScreenOn">
      <MemberSignature Language="C#" Value="public virtual void SetTurnScreenOn (bool turnScreenOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTurnScreenOn(bool turnScreenOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetTurnScreenOn(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetTurnScreenOn : bool -&gt; unit&#xA;override this.SetTurnScreenOn : bool -&gt; unit" Usage="activity.SetTurnScreenOn turnScreenOn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTurnScreenOn", "(Z)V", "GetSetTurnScreenOn_ZHandler", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTurnScreenOn", "(Z)V", "GetSetTurnScreenOn_ZHandler", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnScreenOn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="turnScreenOn">
          <c>true</c> to turn on the screen; <c>false</c> otherwise.</param>
        <summary>Specifies whether the screen should be turned on when the <c>Activity</c> is resumed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setTurnScreenOn(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setTurnScreenOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisible">
      <MemberSignature Language="C#" Value="public virtual void SetVisible (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVisible(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetVisible(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetVisible : bool -&gt; unit&#xA;override this.SetVisible : bool -&gt; unit" Usage="activity.SetVisible visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVisible", "(Z)V", "GetSetVisible_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVisible", "(Z)V", "GetSetVisible_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Control whether this activity's main window is visible.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setVisible(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.setVisible(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetVrModeEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetVrModeEnabled (bool enabled, Android.Content.ComponentName requestedComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVrModeEnabled(bool enabled, class Android.Content.ComponentName requestedComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.SetVrModeEnabled(System.Boolean,Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member SetVrModeEnabled : bool * Android.Content.ComponentName -&gt; unit&#xA;override this.SetVrModeEnabled : bool * Android.Content.ComponentName -&gt; unit" Usage="activity.SetVrModeEnabled (enabled, requestedComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVrModeEnabled", "(ZLandroid/content/ComponentName;)V", "GetSetVrModeEnabled_ZLandroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVrModeEnabled", "(ZLandroid/content/ComponentName;)V", "GetSetVrModeEnabled_ZLandroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="requestedComponent" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <c>true</c> to enable this mode.</param>
        <param name="requestedComponent">the name of the component to use as a
                   <c>android.service.vr.VrListenerService</c> while VR mode is enabled.</param>
        <summary>Enable or disable virtual reality (VR) mode for this Activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setVrModeEnabled(boolean,%20android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.Activity.setVrModeEnabled(boolean, android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDockBigOverlays">
      <MemberSignature Language="C#" Value="public virtual bool ShouldDockBigOverlays ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldDockBigOverlays() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShouldDockBigOverlays" />
      <MemberSignature Language="F#" Value="abstract member ShouldDockBigOverlays : unit -&gt; bool&#xA;override this.ShouldDockBigOverlays : unit -&gt; bool" Usage="activity.ShouldDockBigOverlays " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldDockBigOverlays", "()Z", "GetShouldDockBigOverlaysHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldDockBigOverlays", "()Z", "GetShouldDockBigOverlaysHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether big overlays should be docked next to the activity as set by
            <c>#setShouldDockBigOverlays</c>.</summary>
        <returns>
          <c>true</c> if big overlays should be docked next to the activity instead
                    of overlay its content</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#shouldDockBigOverlays()" title="Reference documentation">Java documentation for <code>android.app.Activity.shouldDockBigOverlays()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldShowRequestPermissionRationale">
      <MemberSignature Language="C#" Value="public virtual bool ShouldShowRequestPermissionRationale (string permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldShowRequestPermissionRationale(string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShouldShowRequestPermissionRationale(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ShouldShowRequestPermissionRationale : string -&gt; bool&#xA;override this.ShouldShowRequestPermissionRationale : string -&gt; bool" Usage="activity.ShouldShowRequestPermissionRationale permission" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldShowRequestPermissionRationale", "(Ljava/lang/String;)Z", "GetShouldShowRequestPermissionRationale_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldShowRequestPermissionRationale", "(Ljava/lang/String;)Z", "GetShouldShowRequestPermissionRationale_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permission">A permission your app wants to request.</param>
        <summary>Gets whether you should show UI with rationale before requesting a permission.</summary>
        <returns>Whether you should show permission rationale UI.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#shouldShowRequestPermissionRationale(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.Activity.shouldShowRequestPermissionRationale(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUpRecreateTask">
      <MemberSignature Language="C#" Value="public virtual bool ShouldUpRecreateTask (Android.Content.Intent? targetIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldUpRecreateTask(class Android.Content.Intent targetIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShouldUpRecreateTask(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member ShouldUpRecreateTask : Android.Content.Intent -&gt; bool&#xA;override this.ShouldUpRecreateTask : Android.Content.Intent -&gt; bool" Usage="activity.ShouldUpRecreateTask targetIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldUpRecreateTask", "(Landroid/content/Intent;)Z", "GetShouldUpRecreateTask_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldUpRecreateTask", "(Landroid/content/Intent;)Z", "GetShouldUpRecreateTask_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="targetIntent">An intent representing the target destination for up navigation</param>
        <summary>Returns true if the app should recreate the task when navigating 'up' from this activity
            by using targetIntent.</summary>
        <returns>true if navigating up should recreate a new task stack, false if the same task
                    should be used for the destination</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#shouldUpRecreateTask(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.shouldUpRecreateTask(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ShowAssist">
      <MemberSignature Language="C#" Value="public virtual bool ShowAssist (Android.OS.Bundle? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowAssist(class Android.OS.Bundle args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShowAssist(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member ShowAssist : Android.OS.Bundle -&gt; bool&#xA;override this.ShowAssist : Android.OS.Bundle -&gt; bool" Usage="activity.ShowAssist args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showAssist", "(Landroid/os/Bundle;)Z", "GetShowAssist_Landroid_os_Bundle_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showAssist", "(Landroid/os/Bundle;)Z", "GetShowAssist_Landroid_os_Bundle_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>Ask to have the current assistant shown to the user.</summary>
        <returns>Returns true if the assistant was successfully invoked, else false.  For example
            false will be returned if the caller is not the current top activity.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#showAssist(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.showAssist(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public void ShowDialog (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowDialog(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShowDialog(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : int -&gt; unit" Usage="activity.ShowDialog id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showDialog", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showDialog", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Simple version of <c>#showDialog(int, Bundle)</c> that does not
            take any arguments.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#showDialog(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.showDialog(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public bool ShowDialog (int id, Android.OS.Bundle? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShowDialog(int32 id, class Android.OS.Bundle args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShowDialog(System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : int * Android.OS.Bundle -&gt; bool" Usage="activity.ShowDialog (id, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showDialog", "(ILandroid/os/Bundle;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showDialog", "(ILandroid/os/Bundle;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="id">The id of the managed dialog.</param>
        <param name="args">Arguments to pass through to the dialog.  These will be saved
            and restored for you.  Note that if the dialog is already created,
            <c>#onCreateDialog(int, Bundle)</c> will not be called with the new
            arguments but <c>#onPrepareDialog(int, Dialog, Bundle)</c> will be.
            If you need to rebuild the dialog, call <c>#removeDialog(int)</c> first.</param>
        <summary>Show a dialog managed by this activity.</summary>
        <returns>Returns true if the Dialog was created; false is returned if
            it is not created because <c>#onCreateDialog(int, Bundle)</c> returns false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#showDialog(int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.showDialog(int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="T:Android.App.Dialog" />
        <altmember cref="M:Android.App.Activity.OnCreateDialog(System.Int32, Android.OS.Bundle)" />
        <altmember cref="M:Android.App.Activity.OnPrepareDialog(System.Int32, Android.App.Dialog, Android.App.Dialog)" />
        <altmember cref="M:Android.App.Activity.DismissDialog(System.Int32)" />
        <altmember cref="M:Android.App.Activity.RemoveDialog(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ShowLockTaskEscapeMessage">
      <MemberSignature Language="C#" Value="public virtual void ShowLockTaskEscapeMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowLockTaskEscapeMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.ShowLockTaskEscapeMessage" />
      <MemberSignature Language="F#" Value="abstract member ShowLockTaskEscapeMessage : unit -&gt; unit&#xA;override this.ShowLockTaskEscapeMessage : unit -&gt; unit" Usage="activity.ShowLockTaskEscapeMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showLockTaskEscapeMessage", "()V", "GetShowLockTaskEscapeMessageHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showLockTaskEscapeMessage", "()V", "GetShowLockTaskEscapeMessageHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Shows the user the system defined message for telling the user how to exit
            lock task mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#showLockTaskEscapeMessage()" title="Reference documentation">Java documentation for <code>android.app.Activity.showLockTaskEscapeMessage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplashScreen">
      <MemberSignature Language="C#" Value="public Android.Window.ISplashScreen SplashScreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Window.ISplashScreen SplashScreen" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.SplashScreen" />
      <MemberSignature Language="F#" Value="member this.SplashScreen : Android.Window.ISplashScreen" Usage="Android.App.Activity.SplashScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSplashScreen", "()Landroid/window/SplashScreen;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSplashScreen", "()Landroid/window/SplashScreen;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Window.ISplashScreen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the interface that activity use to talk to the splash screen.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getSplashScreen()" title="Reference documentation">Java documentation for <code>android.app.Activity.getSplashScreen()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? StartActionMode (Android.Views.ActionMode.ICallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode StartActionMode(class Android.Views.ActionMode/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActionMode(Android.Views.ActionMode.ICallback)" />
      <MemberSignature Language="F#" Value="abstract member StartActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode&#xA;override this.StartActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode" Usage="activity.StartActionMode callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback that will manage lifecycle events for this action mode</param>
        <summary>Start an action mode of the default type <c>ActionMode#TYPE_PRIMARY</c>.</summary>
        <returns>The ActionMode that was started, or null if it was canceled</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="T:Android.Views.ActionMode" />
      </Docs>
    </Member>
    <Member MemberName="StartActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? StartActionMode (Android.Views.ActionMode.ICallback? callback, Android.Views.ActionModeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode StartActionMode(class Android.Views.ActionMode/ICallback callback, valuetype Android.Views.ActionModeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActionMode(Android.Views.ActionMode.ICallback,Android.Views.ActionModeType)" />
      <MemberSignature Language="F#" Value="abstract member StartActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode&#xA;override this.StartActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode" Usage="activity.StartActionMode (callback, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
        <Parameter Name="type" Type="Android.Views.ActionModeType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">Callback that will manage lifecycle events for this action mode</param>
        <param name="type">To be added.</param>
        <summary>Start an action mode of the default type <c>ActionMode#TYPE_PRIMARY</c>.</summary>
        <returns>The ActionMode that was started, or null if it was canceled</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivityForResult">
      <MemberSignature Language="C#" Value="public virtual void StartActivityForResult (Android.Content.Intent? intent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityForResult(class Android.Content.Intent intent, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityForResult : Android.Content.Intent * int -&gt; unit&#xA;override this.StartActivityForResult : Android.Content.Intent * int -&gt; unit" Usage="activity.StartActivityForResult (intent, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityForResult", "(Landroid/content/Intent;I)V", "GetStartActivityForResult_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityForResult", "(Landroid/content/Intent;I)V", "GetStartActivityForResult_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">If &gt;= 0, this code will be returned in
                               onActivityResult() when the activity exits.</param>
        <summary>Same as calling <c>#startActivityForResult(Intent, int, Bundle)</c>
            with no options.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityForResult(android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityForResult(android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.ActivityNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityForResult">
      <MemberSignature Language="C#" Value="public void StartActivityForResult (Type activityType, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartActivityForResult(class System.Type activityType, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityForResult(System.Type,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.StartActivityForResult : Type * int -&gt; unit" Usage="activity.StartActivityForResult (activityType, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="activityType">To be added.</param>
        <param name="requestCode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivityForResult">
      <MemberSignature Language="C#" Value="public virtual void StartActivityForResult (Android.Content.Intent? intent, int requestCode, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityForResult(class Android.Content.Intent intent, int32 requestCode, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityForResult : Android.Content.Intent * int * Android.OS.Bundle -&gt; unit&#xA;override this.StartActivityForResult : Android.Content.Intent * int * Android.OS.Bundle -&gt; unit" Usage="activity.StartActivityForResult (intent, requestCode, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityForResult", "(Landroid/content/Intent;ILandroid/os/Bundle;)V", "GetStartActivityForResult_Landroid_content_Intent_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityForResult", "(Landroid/content/Intent;ILandroid/os/Bundle;)V", "GetStartActivityForResult_Landroid_content_Intent_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">If &gt;= 0, this code will be returned in
                               onActivityResult() when the activity exits.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>Launch an activity for which you would like a result when it finished.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityForResult(android.content.Intent,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityForResult(android.content.Intent, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.ActivityNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityFromChild">
      <MemberSignature Language="C#" Value="public virtual void StartActivityFromChild (Android.App.Activity child, Android.Content.Intent? intent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityFromChild(class Android.App.Activity child, class Android.Content.Intent intent, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityFromChild(Android.App.Activity,Android.Content.Intent,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityFromChild : Android.App.Activity * Android.Content.Intent * int -&gt; unit&#xA;override this.StartActivityFromChild : Android.App.Activity * Android.Content.Intent * int -&gt; unit" Usage="activity.StartActivityFromChild (child, intent, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityFromChild", "(Landroid/app/Activity;Landroid/content/Intent;I)V", "GetStartActivityFromChild_Landroid_app_Activity_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityFromChild", "(Landroid/app/Activity;Landroid/content/Intent;I)V", "GetStartActivityFromChild_Landroid_app_Activity_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">The activity making the call.</param>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">Reply request code.  &lt; 0 if reply is not requested.</param>
        <summary>Same as calling <c>#startActivityFromChild(Activity, Intent, int, Bundle)</c>
            with no options.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityFromChild(android.app.Activity,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityFromChild(android.app.Activity, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.ActivityNotFoundException" />
        <altmember cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityFromChild">
      <MemberSignature Language="C#" Value="public virtual void StartActivityFromChild (Android.App.Activity child, Android.Content.Intent? intent, int requestCode, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityFromChild(class Android.App.Activity child, class Android.Content.Intent intent, int32 requestCode, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityFromChild(Android.App.Activity,Android.Content.Intent,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityFromChild : Android.App.Activity * Android.Content.Intent * int * Android.OS.Bundle -&gt; unit&#xA;override this.StartActivityFromChild : Android.App.Activity * Android.Content.Intent * int * Android.OS.Bundle -&gt; unit" Usage="activity.StartActivityFromChild (child, intent, requestCode, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityFromChild", "(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V", "GetStartActivityFromChild_Landroid_app_Activity_Landroid_content_Intent_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityFromChild", "(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V", "GetStartActivityFromChild_Landroid_app_Activity_Landroid_content_Intent_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="child">The activity making the call.</param>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">Reply request code.  &lt; 0 if reply is not requested.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>This is called when a child activity of this one calls its
            <c>#startActivity</c> or <c>#startActivityForResult</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityFromChild(android.app.Activity,%20android.content.Intent,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityFromChild(android.app.Activity, android.content.Intent, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.ActivityNotFoundException" />
        <altmember cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityFromFragment">
      <MemberSignature Language="C#" Value="public virtual void StartActivityFromFragment (Android.App.Fragment fragment, Android.Content.Intent? intent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityFromFragment(class Android.App.Fragment fragment, class Android.Content.Intent intent, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityFromFragment(Android.App.Fragment,Android.Content.Intent,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityFromFragment : Android.App.Fragment * Android.Content.Intent * int -&gt; unit&#xA;override this.StartActivityFromFragment : Android.App.Fragment * Android.Content.Intent * int -&gt; unit" Usage="activity.StartActivityFromFragment (fragment, intent, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityFromFragment", "(Landroid/app/Fragment;Landroid/content/Intent;I)V", "GetStartActivityFromFragment_Landroid_app_Fragment_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityFromFragment", "(Landroid/app/Fragment;Landroid/content/Intent;I)V", "GetStartActivityFromFragment_Landroid_app_Fragment_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Android.App.Fragment" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fragment">The fragment making the call.</param>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">Reply request code.  &lt; 0 if reply is not requested.</param>
        <summary>Same as calling <c>#startActivityFromFragment(Fragment, Intent, int, Bundle)</c>
            with no options.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityFromFragment(android.app.Fragment,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityFromFragment(android.app.Fragment, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Android.Content.ActivityNotFoundException" />
        <altmember cref="M:Android.App.Fragment.StartActivity(Android.Content.Intent)" />
        <altmember cref="M:Android.App.Fragment.StartActivityForResult(Android.Content.Intent, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityFromFragment">
      <MemberSignature Language="C#" Value="public virtual void StartActivityFromFragment (Android.App.Fragment fragment, Android.Content.Intent? intent, int requestCode, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityFromFragment(class Android.App.Fragment fragment, class Android.Content.Intent intent, int32 requestCode, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityFromFragment(Android.App.Fragment,Android.Content.Intent,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityFromFragment : Android.App.Fragment * Android.Content.Intent * int * Android.OS.Bundle -&gt; unit&#xA;override this.StartActivityFromFragment : Android.App.Fragment * Android.Content.Intent * int * Android.OS.Bundle -&gt; unit" Usage="activity.StartActivityFromFragment (fragment, intent, requestCode, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityFromFragment", "(Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)V", "GetStartActivityFromFragment_Landroid_app_Fragment_Landroid_content_Intent_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityFromFragment", "(Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)V", "GetStartActivityFromFragment_Landroid_app_Fragment_Landroid_content_Intent_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Android.App.Fragment" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="fragment">The fragment making the call.</param>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">Reply request code.  &lt; 0 if reply is not requested.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>This is called when a Fragment in this activity calls its
            <c>Fragment#startActivity</c> or <c>Fragment#startActivityForResult</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityFromFragment(android.app.Fragment,%20android.content.Intent,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.ActivityNotFoundException" />
        <altmember cref="M:Android.App.Fragment.StartActivity(Android.Content.Intent)" />
        <altmember cref="M:Android.App.Fragment.StartActivityForResult(Android.Content.Intent, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityIfNeeded">
      <MemberSignature Language="C#" Value="public virtual bool StartActivityIfNeeded (Android.Content.Intent intent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartActivityIfNeeded(class Android.Content.Intent intent, int32 requestCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityIfNeeded(Android.Content.Intent,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityIfNeeded : Android.Content.Intent * int -&gt; bool&#xA;override this.StartActivityIfNeeded : Android.Content.Intent * int -&gt; bool" Usage="activity.StartActivityIfNeeded (intent, requestCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityIfNeeded", "(Landroid/content/Intent;I)Z", "GetStartActivityIfNeeded_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityIfNeeded", "(Landroid/content/Intent;I)Z", "GetStartActivityIfNeeded_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">If &gt;= 0, this code will be returned in
                    onActivityResult() when the activity exits, as described in
                    <c>#startActivityForResult</c>.</param>
        <summary>Same as calling <c>#startActivityIfNeeded(Intent, int, Bundle)</c>
            with no options.</summary>
        <returns>If a new activity was launched then true is returned; otherwise
                    false is returned and you must handle the Intent yourself.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityIfNeeded(android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityIfNeeded(android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityIfNeeded">
      <MemberSignature Language="C#" Value="public virtual bool StartActivityIfNeeded (Android.Content.Intent intent, int requestCode, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartActivityIfNeeded(class Android.Content.Intent intent, int32 requestCode, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartActivityIfNeeded(Android.Content.Intent,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivityIfNeeded : Android.Content.Intent * int * Android.OS.Bundle -&gt; bool&#xA;override this.StartActivityIfNeeded : Android.Content.Intent * int * Android.OS.Bundle -&gt; bool" Usage="activity.StartActivityIfNeeded (intent, requestCode, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivityIfNeeded", "(Landroid/content/Intent;ILandroid/os/Bundle;)Z", "GetStartActivityIfNeeded_Landroid_content_Intent_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivityIfNeeded", "(Landroid/content/Intent;ILandroid/os/Bundle;)Z", "GetStartActivityIfNeeded_Landroid_content_Intent_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to start.</param>
        <param name="requestCode">If &gt;= 0, this code will be returned in
                    onActivityResult() when the activity exits, as described in
                    <c>#startActivityForResult</c>.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>A special variation to launch an activity only if a new activity
            instance is needed to handle the given Intent.</summary>
        <returns>If a new activity was launched then true is returned; otherwise
                    false is returned and you must handle the Intent yourself.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startActivityIfNeeded(android.content.Intent,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startActivityIfNeeded(android.content.Intent, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSenderForResult">
      <MemberSignature Language="C#" Value="public virtual void StartIntentSenderForResult (Android.Content.IntentSender? intent, int requestCode, Android.Content.Intent? fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartIntentSenderForResult(class Android.Content.IntentSender intent, int32 requestCode, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartIntentSenderForResult(Android.Content.IntentSender,System.Int32,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartIntentSenderForResult : Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int -&gt; unit&#xA;override this.StartIntentSenderForResult : Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int -&gt; unit" Usage="activity.StartIntentSenderForResult (intent, requestCode, fillInIntent, flagsMask, flagsValues, extraFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startIntentSenderForResult", "(Landroid/content/IntentSender;ILandroid/content/Intent;III)V", "GetStartIntentSenderForResult_Landroid_content_IntentSender_ILandroid_content_Intent_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startIntentSenderForResult", "(Landroid/content/IntentSender;ILandroid/content/Intent;III)V", "GetStartIntentSenderForResult_Landroid_content_IntentSender_ILandroid_content_Intent_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">The IntentSender to launch.</param>
        <param name="requestCode">If &gt;= 0, this code will be returned in
                               onActivityResult() when the activity exits.</param>
        <param name="fillInIntent">If non-null, this will be provided as the
            intent parameter to <c>IntentSender#sendIntent</c>.</param>
        <param name="flagsMask">Intent flags in the original IntentSender that you
            would like to change.</param>
        <param name="flagsValues">Desired values for any bits set in
            &lt;var&gt;flagsMask&lt;/var&gt;</param>
        <param name="extraFlags">Always set to 0.</param>
        <summary>Same as calling <c>#startIntentSenderForResult(IntentSender, int,
            Intent, int, int, int, Bundle)</c> with no options.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startIntentSenderForResult(android.content.IntentSender,%20int,%20android.content.Intent,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSenderForResult">
      <MemberSignature Language="C#" Value="public virtual void StartIntentSenderForResult (Android.Content.IntentSender? intent, int requestCode, Android.Content.Intent? fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartIntentSenderForResult(class Android.Content.IntentSender intent, int32 requestCode, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartIntentSenderForResult(Android.Content.IntentSender,System.Int32,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartIntentSenderForResult : Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int * Android.OS.Bundle -&gt; unit&#xA;override this.StartIntentSenderForResult : Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int * Android.OS.Bundle -&gt; unit" Usage="activity.StartIntentSenderForResult (intent, requestCode, fillInIntent, flagsMask, flagsValues, extraFlags, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startIntentSenderForResult", "(Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "GetStartIntentSenderForResult_Landroid_content_IntentSender_ILandroid_content_Intent_IIILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startIntentSenderForResult", "(Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "GetStartIntentSenderForResult_Landroid_content_IntentSender_ILandroid_content_Intent_IIILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The IntentSender to launch.</param>
        <param name="requestCode">If &gt;= 0, this code will be returned in
                               onActivityResult() when the activity exits.</param>
        <param name="fillInIntent">If non-null, this will be provided as the
            intent parameter to <c>IntentSender#sendIntent</c>.</param>
        <param name="flagsMask">Intent flags in the original IntentSender that you
            would like to change.</param>
        <param name="flagsValues">Desired values for any bits set in
            &lt;var&gt;flagsMask&lt;/var&gt;</param>
        <param name="extraFlags">Always set to 0.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.  If options
            have also been supplied by the IntentSender, options given here will
            override any that conflict with those given by the IntentSender.</param>
        <summary>Like <c>#startActivityForResult(Intent, int)</c>, but allowing you
            to use a IntentSender to describe the activity to be started.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startIntentSenderForResult(android.content.IntentSender,%20int,%20android.content.Intent,%20int,%20int,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSenderFromChild">
      <MemberSignature Language="C#" Value="public virtual void StartIntentSenderFromChild (Android.App.Activity? child, Android.Content.IntentSender? intent, int requestCode, Android.Content.Intent? fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartIntentSenderFromChild(class Android.App.Activity child, class Android.Content.IntentSender intent, int32 requestCode, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartIntentSenderFromChild(Android.App.Activity,Android.Content.IntentSender,System.Int32,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member StartIntentSenderFromChild : Android.App.Activity * Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int -&gt; unit&#xA;override this.StartIntentSenderFromChild : Android.App.Activity * Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int -&gt; unit" Usage="activity.StartIntentSenderFromChild (child, intent, requestCode, fillInIntent, flagsMask, flagsValues, extraFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startIntentSenderFromChild", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;III)V", "GetStartIntentSenderFromChild_Landroid_app_Activity_Landroid_content_IntentSender_ILandroid_content_Intent_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startIntentSenderFromChild", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;III)V", "GetStartIntentSenderFromChild_Landroid_app_Activity_Landroid_content_IntentSender_ILandroid_content_Intent_IIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="intent">To be added.</param>
        <param name="requestCode">To be added.</param>
        <param name="fillInIntent">To be added.</param>
        <param name="flagsMask">To be added.</param>
        <param name="flagsValues">To be added.</param>
        <param name="extraFlags">To be added.</param>
        <summary>Same as calling <c>#startIntentSenderFromChild(Activity, IntentSender,
            int, Intent, int, int, int, Bundle)</c> with no options.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startIntentSenderFromChild(android.app.Activity,%20android.content.IntentSender,%20int,%20android.content.Intent,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Activity.startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
      </Docs>
    </Member>
    <Member MemberName="StartIntentSenderFromChild">
      <MemberSignature Language="C#" Value="public virtual void StartIntentSenderFromChild (Android.App.Activity? child, Android.Content.IntentSender? intent, int requestCode, Android.Content.Intent? fillInIntent, Android.Content.ActivityFlags flagsMask, Android.Content.ActivityFlags flagsValues, int extraFlags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartIntentSenderFromChild(class Android.App.Activity child, class Android.Content.IntentSender intent, int32 requestCode, class Android.Content.Intent fillInIntent, valuetype Android.Content.ActivityFlags flagsMask, valuetype Android.Content.ActivityFlags flagsValues, int32 extraFlags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartIntentSenderFromChild(Android.App.Activity,Android.Content.IntentSender,System.Int32,Android.Content.Intent,Android.Content.ActivityFlags,Android.Content.ActivityFlags,System.Int32,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartIntentSenderFromChild : Android.App.Activity * Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int * Android.OS.Bundle -&gt; unit&#xA;override this.StartIntentSenderFromChild : Android.App.Activity * Android.Content.IntentSender * int * Android.Content.Intent * Android.Content.ActivityFlags * Android.Content.ActivityFlags * int * Android.OS.Bundle -&gt; unit" Usage="activity.StartIntentSenderFromChild (child, intent, requestCode, fillInIntent, flagsMask, flagsValues, extraFlags, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startIntentSenderFromChild", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "GetStartIntentSenderFromChild_Landroid_app_Activity_Landroid_content_IntentSender_ILandroid_content_Intent_IIILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startIntentSenderFromChild", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "GetStartIntentSenderFromChild_Landroid_app_Activity_Landroid_content_IntentSender_ILandroid_content_Intent_IIILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.App.Activity" />
        <Parameter Name="intent" Type="Android.Content.IntentSender" />
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="fillInIntent" Type="Android.Content.Intent" />
        <Parameter Name="flagsMask" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flagsValues" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extraFlags" Type="System.Int32" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="intent">To be added.</param>
        <param name="requestCode">To be added.</param>
        <param name="fillInIntent">To be added.</param>
        <param name="flagsMask">To be added.</param>
        <param name="flagsValues">To be added.</param>
        <param name="extraFlags">To be added.</param>
        <param name="options">To be added.</param>
        <summary>Like <c>#startActivityFromChild(Activity, Intent, int)</c>, but
            taking a IntentSender; see
            <c>#startIntentSenderForResult(IntentSender, int, Intent, int, int, int)</c>
            for more information.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startIntentSenderFromChild(android.app.Activity,%20android.content.IntentSender,%20int,%20android.content.Intent,%20int,%20int,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Android.Content.IntentSender.SendIntentException" />
      </Docs>
    </Member>
    <Member MemberName="StartLocalVoiceInteraction">
      <MemberSignature Language="C#" Value="public virtual void StartLocalVoiceInteraction (Android.OS.Bundle? privateOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartLocalVoiceInteraction(class Android.OS.Bundle privateOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartLocalVoiceInteraction(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartLocalVoiceInteraction : Android.OS.Bundle -&gt; unit&#xA;override this.StartLocalVoiceInteraction : Android.OS.Bundle -&gt; unit" Usage="activity.StartLocalVoiceInteraction privateOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startLocalVoiceInteraction", "(Landroid/os/Bundle;)V", "GetStartLocalVoiceInteraction_Landroid_os_Bundle_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startLocalVoiceInteraction", "(Landroid/os/Bundle;)V", "GetStartLocalVoiceInteraction_Landroid_os_Bundle_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateOptions" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="privateOptions">a Bundle of private arguments to the current voice interaction service</param>
        <summary>Starts a local voice interaction session.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startLocalVoiceInteraction(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startLocalVoiceInteraction(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartLockTask">
      <MemberSignature Language="C#" Value="public virtual void StartLockTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartLockTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartLockTask" />
      <MemberSignature Language="F#" Value="abstract member StartLockTask : unit -&gt; unit&#xA;override this.StartLockTask : unit -&gt; unit" Usage="activity.StartLockTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startLockTask", "()V", "GetStartLockTaskHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startLockTask", "()V", "GetStartLockTaskHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request to put this activity in a mode where the user is locked to a restricted set of
            applications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startLockTask()" title="Reference documentation">Java documentation for <code>android.app.Activity.startLockTask()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartManagingCursor">
      <MemberSignature Language="C#" Value="public virtual void StartManagingCursor (Android.Database.ICursor? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartManagingCursor(class Android.Database.ICursor c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartManagingCursor(Android.Database.ICursor)" />
      <MemberSignature Language="F#" Value="abstract member StartManagingCursor : Android.Database.ICursor -&gt; unit&#xA;override this.StartManagingCursor : Android.Database.ICursor -&gt; unit" Usage="activity.StartManagingCursor c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startManagingCursor", "(Landroid/database/Cursor;)V", "GetStartManagingCursor_Landroid_database_Cursor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startManagingCursor", "(Landroid/database/Cursor;)V", "GetStartManagingCursor_Landroid_database_Cursor_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Database.ICursor" />
      </Parameters>
      <Docs>
        <param name="c">The Cursor to be managed.</param>
        <summary>This method allows the activity to take care of managing the given
            <c>Cursor</c>'s lifecycle for you based on the activity's lifecycle.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startManagingCursor(android.database.Cursor)" title="Reference documentation">Java documentation for <code>android.app.Activity.startManagingCursor(android.database.Cursor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.ManagedQuery(Android.Net.Uri, System.String[], System.String[], System.String[], System.String[])" />
        <altmember cref="M:Android.App.Activity.StopManagingCursor(Android.Database.ICursor)" />
      </Docs>
    </Member>
    <Member MemberName="StartNextMatchingActivity">
      <MemberSignature Language="C#" Value="public virtual bool StartNextMatchingActivity (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartNextMatchingActivity(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartNextMatchingActivity(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member StartNextMatchingActivity : Android.Content.Intent -&gt; bool&#xA;override this.StartNextMatchingActivity : Android.Content.Intent -&gt; bool" Usage="activity.StartNextMatchingActivity intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startNextMatchingActivity", "(Landroid/content/Intent;)Z", "GetStartNextMatchingActivity_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startNextMatchingActivity", "(Landroid/content/Intent;)Z", "GetStartNextMatchingActivity_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to dispatch to the next activity.  For
            correct behavior, this must be the same as the Intent that started
            your own activity; the only changes you can make are to the extras
            inside of it.</param>
        <summary>Same as calling <c>#startNextMatchingActivity(Intent, Bundle)</c> with
            no options.</summary>
        <returns>Returns a boolean indicating whether there was another Activity
            to start: true if there was a next activity to start, false if there
            wasn't.  In general, if true is returned you will then want to call
            finish() on yourself.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startNextMatchingActivity(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Activity.startNextMatchingActivity(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartNextMatchingActivity">
      <MemberSignature Language="C#" Value="public virtual bool StartNextMatchingActivity (Android.Content.Intent intent, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartNextMatchingActivity(class Android.Content.Intent intent, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartNextMatchingActivity(Android.Content.Intent,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartNextMatchingActivity : Android.Content.Intent * Android.OS.Bundle -&gt; bool&#xA;override this.StartNextMatchingActivity : Android.Content.Intent * Android.OS.Bundle -&gt; bool" Usage="activity.StartNextMatchingActivity (intent, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startNextMatchingActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)Z", "GetStartNextMatchingActivity_Landroid_content_Intent_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startNextMatchingActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)Z", "GetStartNextMatchingActivity_Landroid_content_Intent_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to dispatch to the next activity.  For
            correct behavior, this must be the same as the Intent that started
            your own activity; the only changes you can make are to the extras
            inside of it.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>Special version of starting an activity, for use when you are replacing
            other activity components.</summary>
        <returns>Returns a boolean indicating whether there was another Activity
            to start: true if there was a next activity to start, false if there
            wasn't.  In general, if true is returned you will then want to call
            finish() on yourself.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startNextMatchingActivity(android.content.Intent,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.startNextMatchingActivity(android.content.Intent, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartPostponedEnterTransition">
      <MemberSignature Language="C#" Value="public virtual void StartPostponedEnterTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartPostponedEnterTransition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartPostponedEnterTransition" />
      <MemberSignature Language="F#" Value="abstract member StartPostponedEnterTransition : unit -&gt; unit&#xA;override this.StartPostponedEnterTransition : unit -&gt; unit" Usage="activity.StartPostponedEnterTransition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startPostponedEnterTransition", "()V", "GetStartPostponedEnterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startPostponedEnterTransition", "()V", "GetStartPostponedEnterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begin postponed transitions after <c>#postponeEnterTransition()</c> was called.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startPostponedEnterTransition()" title="Reference documentation">Java documentation for <code>android.app.Activity.startPostponedEnterTransition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSearch">
      <MemberSignature Language="C#" Value="public virtual void StartSearch (string? initialQuery, bool selectInitialQuery, Android.OS.Bundle? appSearchData, bool globalSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartSearch(string initialQuery, bool selectInitialQuery, class Android.OS.Bundle appSearchData, bool globalSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StartSearch(System.String,System.Boolean,Android.OS.Bundle,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member StartSearch : string * bool * Android.OS.Bundle * bool -&gt; unit&#xA;override this.StartSearch : string * bool * Android.OS.Bundle * bool -&gt; unit" Usage="activity.StartSearch (initialQuery, selectInitialQuery, appSearchData, globalSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startSearch", "(Ljava/lang/String;ZLandroid/os/Bundle;Z)V", "GetStartSearch_Ljava_lang_String_ZLandroid_os_Bundle_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startSearch", "(Ljava/lang/String;ZLandroid/os/Bundle;Z)V", "GetStartSearch_Ljava_lang_String_ZLandroid_os_Bundle_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialQuery" Type="System.String" />
        <Parameter Name="selectInitialQuery" Type="System.Boolean" />
        <Parameter Name="appSearchData" Type="Android.OS.Bundle" />
        <Parameter Name="globalSearch" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialQuery">Any non-null non-empty string will be inserted as
            pre-entered text in the search query box.</param>
        <param name="selectInitialQuery">If true, the initial query will be preselected, which means that
            any further typing will replace it.  This is useful for cases where an entire pre-formed
            query is being inserted.  If false, the selection point will be placed at the end of the
            inserted query.  This is useful when the inserted query is text that the user entered,
            and the user would expect to be able to keep typing.  <i>This parameter is only meaningful
            if initialQuery is a non-empty string.</i></param>
        <param name="appSearchData">An application can insert application-specific
            context here, in order to improve quality or specificity of its own
            searches.  This data will be returned with SEARCH intent(s).  Null if
            no extra data is required.</param>
        <param name="globalSearch">If false, this will only launch the search that has been specifically
            defined by the application (which is usually defined as a local search).  If no default
            search is defined in the current application or activity, global search will be launched.
            If true, this will always launch a platform-global (e.g. web-based) search instead.</param>
        <summary>This hook is called to launch the search UI.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#startSearch(java.lang.String,%20boolean,%20android.os.Bundle,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.startSearch(java.lang.String, boolean, android.os.Bundle, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.App.SearchManager" />
        <altmember cref="M:Android.App.Activity.OnSearchRequested" />
      </Docs>
    </Member>
    <Member MemberName="StopLocalVoiceInteraction">
      <MemberSignature Language="C#" Value="public virtual void StopLocalVoiceInteraction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLocalVoiceInteraction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StopLocalVoiceInteraction" />
      <MemberSignature Language="F#" Value="abstract member StopLocalVoiceInteraction : unit -&gt; unit&#xA;override this.StopLocalVoiceInteraction : unit -&gt; unit" Usage="activity.StopLocalVoiceInteraction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopLocalVoiceInteraction", "()V", "GetStopLocalVoiceInteractionHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopLocalVoiceInteraction", "()V", "GetStopLocalVoiceInteractionHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request to terminate the current voice interaction that was previously started
            using <c>#startLocalVoiceInteraction(Bundle)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#stopLocalVoiceInteraction()" title="Reference documentation">Java documentation for <code>android.app.Activity.stopLocalVoiceInteraction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLockTask">
      <MemberSignature Language="C#" Value="public virtual void StopLockTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLockTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StopLockTask" />
      <MemberSignature Language="F#" Value="abstract member StopLockTask : unit -&gt; unit&#xA;override this.StopLockTask : unit -&gt; unit" Usage="activity.StopLockTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopLockTask", "()V", "GetStopLockTaskHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopLockTask", "()V", "GetStopLockTaskHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop the current task from being locked.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#stopLockTask()" title="Reference documentation">Java documentation for <code>android.app.Activity.stopLockTask()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.App.ActivityManager.LockTaskModeState" />
      </Docs>
    </Member>
    <Member MemberName="StopManagingCursor">
      <MemberSignature Language="C#" Value="public virtual void StopManagingCursor (Android.Database.ICursor? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopManagingCursor(class Android.Database.ICursor c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.StopManagingCursor(Android.Database.ICursor)" />
      <MemberSignature Language="F#" Value="abstract member StopManagingCursor : Android.Database.ICursor -&gt; unit&#xA;override this.StopManagingCursor : Android.Database.ICursor -&gt; unit" Usage="activity.StopManagingCursor c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopManagingCursor", "(Landroid/database/Cursor;)V", "GetStopManagingCursor_Landroid_database_Cursor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopManagingCursor", "(Landroid/database/Cursor;)V", "GetStopManagingCursor_Landroid_database_Cursor_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Database.ICursor" />
      </Parameters>
      <Docs>
        <param name="c">The Cursor that was being managed.</param>
        <summary>Given a Cursor that was previously given to
            <c>#startManagingCursor</c>, stop the activity's management of that
            cursor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#stopManagingCursor(android.database.Cursor)" title="Reference documentation">Java documentation for <code>android.app.Activity.stopManagingCursor(android.database.Cursor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.StartManagingCursor(Android.Database.ICursor)" />
      </Docs>
    </Member>
    <Member MemberName="TakeKeyEvents">
      <MemberSignature Language="C#" Value="public virtual void TakeKeyEvents (bool get);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeKeyEvents(bool get) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.TakeKeyEvents(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TakeKeyEvents : bool -&gt; unit&#xA;override this.TakeKeyEvents : bool -&gt; unit" Usage="activity.TakeKeyEvents get" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeKeyEvents", "(Z)V", "GetTakeKeyEvents_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeKeyEvents", "(Z)V", "GetTakeKeyEvents_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>Request that key events come to this activity.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#takeKeyEvents(boolean)" title="Reference documentation">Java documentation for <code>android.app.Activity.takeKeyEvents(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.TakeKeyEvents(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TaskId">
      <MemberSignature Language="C#" Value="public virtual int TaskId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TaskId" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.TaskId" />
      <MemberSignature Language="F#" Value="member this.TaskId : int" Usage="Android.App.Activity.TaskId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTaskId", "()I", "GetGetTaskIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTaskId", "()I", "GetGetTaskIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the identifier of the task this activity is in.</summary>
        <value>Task identifier, an opaque integer.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getTaskId()" title="Reference documentation">Java documentation for <code>android.app.Activity.getTaskId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Activity.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Activity.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string? Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Title" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="Android.App.Activity.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleColor">
      <MemberSignature Language="C#" Value="public Android.Graphics.Color TitleColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color TitleColor" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.TitleColor" />
      <MemberSignature Language="F#" Value="member this.TitleColor : Android.Graphics.Color with get, set" Usage="Android.App.Activity.TitleColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTitleColor", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTitleColor", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTitleColor", "(I)V", "GetSetTitleColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTitleColor", "(I)V", "GetSetTitleColor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Change the color of the title associated with this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setTitleColor(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setTitleColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TitleFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? TitleFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TitleFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.TitleFormatted" />
      <MemberSignature Language="F#" Value="member this.TitleFormatted : Java.Lang.ICharSequence with get, set" Usage="Android.App.Activity.TitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTitle", "()Ljava/lang/CharSequence;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTitle", "()Ljava/lang/CharSequence;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Change the title associated with this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setTitle(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.Activity.setTitle(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TriggerSearch">
      <MemberSignature Language="C#" Value="public virtual void TriggerSearch (string? query, Android.OS.Bundle? appSearchData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TriggerSearch(string query, class Android.OS.Bundle appSearchData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.TriggerSearch(System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member TriggerSearch : string * Android.OS.Bundle -&gt; unit&#xA;override this.TriggerSearch : string * Android.OS.Bundle -&gt; unit" Usage="activity.TriggerSearch (query, appSearchData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("triggerSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetTriggerSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("triggerSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetTriggerSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="appSearchData" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="query">The query to trigger.  If empty, the request will be ignored.</param>
        <param name="appSearchData">An application can insert application-specific
            context here, in order to improve quality or specificity of its own
            searches.  This data will be returned with SEARCH intent(s).  Null if
            no extra data is required.</param>
        <summary>Similar to <c>#startSearch</c>, but actually fires off the search query after invoking
            the search dialog.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#triggerSearch(java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Activity.triggerSearch(java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterActivityLifecycleCallbacks">
      <MemberSignature Language="C#" Value="public virtual void UnregisterActivityLifecycleCallbacks (Android.App.Application.IActivityLifecycleCallbacks callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterActivityLifecycleCallbacks(class Android.App.Application/IActivityLifecycleCallbacks callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.UnregisterActivityLifecycleCallbacks(Android.App.Application.IActivityLifecycleCallbacks)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterActivityLifecycleCallbacks : Android.App.Application.IActivityLifecycleCallbacks -&gt; unit&#xA;override this.UnregisterActivityLifecycleCallbacks : Android.App.Application.IActivityLifecycleCallbacks -&gt; unit" Usage="activity.UnregisterActivityLifecycleCallbacks callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterActivityLifecycleCallbacks", "(Landroid/app/Application$ActivityLifecycleCallbacks;)V", "GetUnregisterActivityLifecycleCallbacks_Landroid_app_Application_ActivityLifecycleCallbacks_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterActivityLifecycleCallbacks", "(Landroid/app/Application$ActivityLifecycleCallbacks;)V", "GetUnregisterActivityLifecycleCallbacks_Landroid_app_Application_ActivityLifecycleCallbacks_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.App.Application+IActivityLifecycleCallbacks" />
      </Parameters>
      <Docs>
        <param name="callback">The callback instance to unregister</param>
        <summary>Unregister an <c>Application.ActivityLifecycleCallbacks</c> previously registered
            with <c>#registerActivityLifecycleCallbacks</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#unregisterActivityLifecycleCallbacks(android.app.ActivityLifecycleCallbacks)" title="Reference documentation">Java documentation for <code>android.app.Activity.unregisterActivityLifecycleCallbacks(android.app.ActivityLifecycleCallbacks)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForContextMenu">
      <MemberSignature Language="C#" Value="public virtual void UnregisterForContextMenu (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterForContextMenu(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Activity.UnregisterForContextMenu(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterForContextMenu : Android.Views.View -&gt; unit&#xA;override this.UnregisterForContextMenu : Android.Views.View -&gt; unit" Usage="activity.UnregisterForContextMenu view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterForContextMenu", "(Landroid/view/View;)V", "GetUnregisterForContextMenu_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterForContextMenu", "(Landroid/view/View;)V", "GetUnregisterForContextMenu_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view that should stop showing a context menu.</param>
        <summary>Prevents a context menu to be shown for the given view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#unregisterForContextMenu(android.view.View)" title="Reference documentation">Java documentation for <code>android.app.Activity.unregisterForContextMenu(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Activity.RegisterForContextMenu(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="VoiceInteractor">
      <MemberSignature Language="C#" Value="public virtual Android.App.VoiceInteractor? VoiceInteractor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.VoiceInteractor VoiceInteractor" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.VoiceInteractor" />
      <MemberSignature Language="F#" Value="member this.VoiceInteractor : Android.App.VoiceInteractor" Usage="Android.App.Activity.VoiceInteractor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVoiceInteractor", "()Landroid/app/VoiceInteractor;", "GetGetVoiceInteractorHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVoiceInteractor", "()Landroid/app/VoiceInteractor;", "GetGetVoiceInteractorHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.VoiceInteractor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the active <c>VoiceInteractor</c> that the user is going through to
            interact with this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getVoiceInteractor()" title="Reference documentation">Java documentation for <code>android.app.Activity.getVoiceInteractor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeControlStream">
      <MemberSignature Language="C#" Value="public Android.Media.Stream VolumeControlStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Stream VolumeControlStream" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.VolumeControlStream" />
      <MemberSignature Language="F#" Value="member this.VolumeControlStream : Android.Media.Stream with get, set" Usage="Android.App.Activity.VolumeControlStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVolumeControlStream", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVolumeControlStream", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVolumeControlStream", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVolumeControlStream", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="streamType">The type of the audio stream whose volume should be
                       changed by the hardware volume controls.</param>
        <summary>Gets the suggested audio stream whose volume should be changed by the
            hardware volume controls. -or- Suggests an audio stream whose volume should be changed by the hardware
            volume controls.</summary>
        <value>The suggested audio stream type whose volume should be changed by
                    the hardware volume controls.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getVolumeControlStream()" title="Reference documentation">Java documentation for <code>android.app.Activity.getVolumeControlStream()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#setVolumeControlStream(int)" title="Reference documentation">Java documentation for <code>android.app.Activity.setVolumeControlStream(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.VolumeControlStream" />
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Window? Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window Window" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.Window" />
      <MemberSignature Language="F#" Value="member this.Window : Android.Views.Window" Usage="Android.App.Activity.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindow", "()Landroid/view/Window;", "GetGetWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindow", "()Landroid/view/Window;", "GetGetWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current <c>android.view.Window</c> for the activity.</summary>
        <value>Window The current window, or null if the activity is not
                    visual.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getWindow()" title="Reference documentation">Java documentation for <code>android.app.Activity.getWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowManager">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IWindowManager? WindowManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IWindowManager WindowManager" />
      <MemberSignature Language="DocId" Value="P:Android.App.Activity.WindowManager" />
      <MemberSignature Language="F#" Value="member this.WindowManager : Android.Views.IWindowManager" Usage="Android.App.Activity.WindowManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IWindowManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the window manager for showing custom windows.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Activity#getWindowManager()" title="Reference documentation">Java documentation for <code>android.app.Activity.getWindowManager()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
