<Type Name="Instrumentation" FullName="Android.App.Instrumentation">
  <TypeSignature Language="C#" Value="public class Instrumentation : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Instrumentation extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.Instrumentation" />
  <TypeSignature Language="F#" Value="type Instrumentation = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/Instrumentation", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/Instrumentation", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Base class for implementing application instrumentation code.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/Instrumentation" title="Reference documentation">Java documentation for <code>android.app.Instrumentation</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Instrumentation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Instrumentation (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Instrumentation : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Instrumentation" Usage="new Android.App.Instrumentation (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireLooperManager">
      <MemberSignature Language="C#" Value="public virtual Android.OS.TestLooperManager? AcquireLooperManager (Android.OS.Looper? looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.TestLooperManager AcquireLooperManager(class Android.OS.Looper looper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.AcquireLooperManager(Android.OS.Looper)" />
      <MemberSignature Language="F#" Value="abstract member AcquireLooperManager : Android.OS.Looper -&gt; Android.OS.TestLooperManager&#xA;override this.AcquireLooperManager : Android.OS.Looper -&gt; Android.OS.TestLooperManager" Usage="instrumentation.AcquireLooperManager looper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acquireLooperManager", "(Landroid/os/Looper;)Landroid/os/TestLooperManager;", "GetAcquireLooperManager_Landroid_os_Looper_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acquireLooperManager", "(Landroid/os/Looper;)Landroid/os/TestLooperManager;", "GetAcquireLooperManager_Landroid_os_Looper_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.TestLooperManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="looper">To be added.</param>
        <summary>Takes control of the execution of messages on the specified looper until
            <c>TestLooperManager#release</c> is called.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#acquireLooperManager(android.os.Looper)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.acquireLooperManager(android.os.Looper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonitor">
      <MemberSignature Language="C#" Value="public virtual void AddMonitor (Android.App.Instrumentation.ActivityMonitor? monitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMonitor(class Android.App.Instrumentation/ActivityMonitor monitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.AddMonitor(Android.App.Instrumentation.ActivityMonitor)" />
      <MemberSignature Language="F#" Value="abstract member AddMonitor : Android.App.Instrumentation.ActivityMonitor -&gt; unit&#xA;override this.AddMonitor : Android.App.Instrumentation.ActivityMonitor -&gt; unit" Usage="instrumentation.AddMonitor monitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addMonitor", "(Landroid/app/Instrumentation$ActivityMonitor;)V", "GetAddMonitor_Landroid_app_Instrumentation_ActivityMonitor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addMonitor", "(Landroid/app/Instrumentation$ActivityMonitor;)V", "GetAddMonitor_Landroid_app_Instrumentation_ActivityMonitor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitor" Type="Android.App.Instrumentation+ActivityMonitor" />
      </Parameters>
      <Docs>
        <param name="monitor">The new ActivityMonitor to see.</param>
        <summary>Add a new <c>ActivityMonitor</c> that will be checked whenever an 
            activity is started.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#addMonitor(android.app.ActivityMonitor)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.addMonitor(android.app.ActivityMonitor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Instrumentation.AddMonitor(Android.Content.IntentFilter, .ActivityResult, .ActivityResult)" />
        <altmember cref="M:Android.App.Instrumentation.CheckMonitorHit(.ActivityMonitor, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonitor">
      <MemberSignature Language="C#" Value="public virtual Android.App.Instrumentation.ActivityMonitor? AddMonitor (Android.Content.IntentFilter? filter, Android.App.Instrumentation.ActivityResult? result, bool block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Instrumentation/ActivityMonitor AddMonitor(class Android.Content.IntentFilter filter, class Android.App.Instrumentation/ActivityResult result, bool block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.AddMonitor(Android.Content.IntentFilter,Android.App.Instrumentation.ActivityResult,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AddMonitor : Android.Content.IntentFilter * Android.App.Instrumentation.ActivityResult * bool -&gt; Android.App.Instrumentation.ActivityMonitor&#xA;override this.AddMonitor : Android.Content.IntentFilter * Android.App.Instrumentation.ActivityResult * bool -&gt; Android.App.Instrumentation.ActivityMonitor" Usage="instrumentation.AddMonitor (filter, result, block)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addMonitor", "(Landroid/content/IntentFilter;Landroid/app/Instrumentation$ActivityResult;Z)Landroid/app/Instrumentation$ActivityMonitor;", "GetAddMonitor_Landroid_content_IntentFilter_Landroid_app_Instrumentation_ActivityResult_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addMonitor", "(Landroid/content/IntentFilter;Landroid/app/Instrumentation$ActivityResult;Z)Landroid/app/Instrumentation$ActivityMonitor;", "GetAddMonitor_Landroid_content_IntentFilter_Landroid_app_Instrumentation_ActivityResult_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Instrumentation+ActivityMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="result" Type="Android.App.Instrumentation+ActivityResult" />
        <Parameter Name="block" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filter">The set of intents this monitor is responsible for.</param>
        <param name="result">A canned result to return if the monitor is hit; can 
               be null.</param>
        <param name="block">Controls whether the monitor should block the activity 
              start (returning its canned result) or let the call
              proceed.</param>
        <param name="monitor">The new ActivityMonitor to see.</param>
        <summary>Add a new <c>ActivityMonitor</c> that will be checked whenever an 
            activity is started.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#addMonitor(android.app.ActivityMonitor)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.addMonitor(android.app.ActivityMonitor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Instrumentation.AddMonitor(.ActivityMonitor)" />
        <altmember cref="M:Android.App.Instrumentation.CheckMonitorHit(.ActivityMonitor, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonitor">
      <MemberSignature Language="C#" Value="public virtual Android.App.Instrumentation.ActivityMonitor? AddMonitor (string? cls, Android.App.Instrumentation.ActivityResult? result, bool block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Instrumentation/ActivityMonitor AddMonitor(string cls, class Android.App.Instrumentation/ActivityResult result, bool block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.AddMonitor(System.String,Android.App.Instrumentation.ActivityResult,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AddMonitor : string * Android.App.Instrumentation.ActivityResult * bool -&gt; Android.App.Instrumentation.ActivityMonitor&#xA;override this.AddMonitor : string * Android.App.Instrumentation.ActivityResult * bool -&gt; Android.App.Instrumentation.ActivityMonitor" Usage="instrumentation.AddMonitor (cls, result, block)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addMonitor", "(Ljava/lang/String;Landroid/app/Instrumentation$ActivityResult;Z)Landroid/app/Instrumentation$ActivityMonitor;", "GetAddMonitor_Ljava_lang_String_Landroid_app_Instrumentation_ActivityResult_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addMonitor", "(Ljava/lang/String;Landroid/app/Instrumentation$ActivityResult;Z)Landroid/app/Instrumentation$ActivityMonitor;", "GetAddMonitor_Ljava_lang_String_Landroid_app_Instrumentation_ActivityResult_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Instrumentation+ActivityMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cls" Type="System.String" />
        <Parameter Name="result" Type="Android.App.Instrumentation+ActivityResult" />
        <Parameter Name="block" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cls">The activity class this monitor is responsible for.</param>
        <param name="result">A canned result to return if the monitor is hit; can 
               be null.</param>
        <param name="block">Controls whether the monitor should block the activity 
              start (returning its canned result) or let the call
              proceed.</param>
        <param name="monitor">The new ActivityMonitor to see.</param>
        <summary>Add a new <c>ActivityMonitor</c> that will be checked whenever an 
            activity is started.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#addMonitor(android.app.ActivityMonitor)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.addMonitor(android.app.ActivityMonitor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Instrumentation.AddMonitor(.ActivityMonitor)" />
        <altmember cref="M:Android.App.Instrumentation.CheckMonitorHit(.ActivityMonitor, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddResults">
      <MemberSignature Language="C#" Value="public virtual void AddResults (Android.OS.Bundle? results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResults(class Android.OS.Bundle results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.AddResults(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member AddResults : Android.OS.Bundle -&gt; unit&#xA;override this.AddResults : Android.OS.Bundle -&gt; unit" Usage="instrumentation.AddResults results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addResults", "(Landroid/os/Bundle;)V", "GetAddResults_Landroid_os_Bundle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addResults", "(Landroid/os/Bundle;)V", "GetAddResults_Landroid_os_Bundle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="results">To be added.</param>
        <summary>Report some results in the middle of instrumentation execution.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#addResults(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.addResults(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocCounts">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle? AllocCounts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle AllocCounts" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.AllocCounts" />
      <MemberSignature Language="F#" Value="member this.AllocCounts : Android.OS.Bundle" Usage="Android.App.Instrumentation.AllocCounts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllocCounts", "()Landroid/os/Bundle;", "GetGetAllocCountsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllocCounts", "()Landroid/os/Bundle;", "GetGetAllocCountsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a bundle with the current results from the allocation counting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getAllocCounts()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getAllocCounts()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinderCounts">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle? BinderCounts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle BinderCounts" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.BinderCounts" />
      <MemberSignature Language="F#" Value="member this.BinderCounts : Android.OS.Bundle" Usage="Android.App.Instrumentation.BinderCounts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBinderCounts", "()Landroid/os/Bundle;", "GetGetBinderCountsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBinderCounts", "()Landroid/os/Bundle;", "GetGetBinderCountsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a bundle with the counts for various binder counts for this process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getBinderCounts()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getBinderCounts()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnCreate">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnCreate (Android.App.Activity? activity, Android.OS.Bundle? icicle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnCreate(class Android.App.Activity activity, class Android.OS.Bundle icicle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnCreate(Android.App.Activity,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnCreate : Android.App.Activity * Android.OS.Bundle -&gt; unit&#xA;override this.CallActivityOnCreate : Android.App.Activity * Android.OS.Bundle -&gt; unit" Usage="instrumentation.CallActivityOnCreate (activity, icicle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnCreate", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnCreate_Landroid_app_Activity_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnCreate", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnCreate_Landroid_app_Activity_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="icicle" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being created.</param>
        <param name="icicle">The previously frozen state (or null) to pass through to onCreate().</param>
        <summary>Perform calling of an activity's <c>Activity#onCreate</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnCreate(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnCreate(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnCreate">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnCreate (Android.App.Activity? activity, Android.OS.Bundle? icicle, Android.OS.PersistableBundle? persistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnCreate(class Android.App.Activity activity, class Android.OS.Bundle icicle, class Android.OS.PersistableBundle persistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnCreate(Android.App.Activity,Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnCreate : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.CallActivityOnCreate : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="instrumentation.CallActivityOnCreate (activity, icicle, persistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnCreate", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnCreate_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnCreate", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnCreate_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="icicle" Type="Android.OS.Bundle" />
        <Parameter Name="persistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="persistentState">The previously persisted state (or null)
</param>
        <param name="activity">The activity being created.</param>
        <param name="icicle">The previously frozen state (or null) to pass through to onCreate().</param>
        <summary>Perform calling of an activity's <c>Activity#onCreate</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnCreate(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnCreate(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnDestroy">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnDestroy (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnDestroy(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnDestroy(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnDestroy : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnDestroy : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnDestroy activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnDestroy", "(Landroid/app/Activity;)V", "GetCallActivityOnDestroy_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnDestroy", "(Landroid/app/Activity;)V", "GetCallActivityOnDestroy_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnNewIntent">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnNewIntent (Android.App.Activity? activity, Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnNewIntent(class Android.App.Activity activity, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnNewIntent(Android.App.Activity,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnNewIntent : Android.App.Activity * Android.Content.Intent -&gt; unit&#xA;override this.CallActivityOnNewIntent : Android.App.Activity * Android.Content.Intent -&gt; unit" Usage="instrumentation.CallActivityOnNewIntent (activity, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnNewIntent", "(Landroid/app/Activity;Landroid/content/Intent;)V", "GetCallActivityOnNewIntent_Landroid_app_Activity_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnNewIntent", "(Landroid/app/Activity;Landroid/content/Intent;)V", "GetCallActivityOnNewIntent_Landroid_app_Activity_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="activity">The activity receiving a new Intent.</param>
        <param name="intent">The new intent being received.</param>
        <summary>Perform calling of an activity's <c>Activity#onNewIntent</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnNewIntent(android.app.Activity,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnNewIntent(android.app.Activity, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnPause">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnPause (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnPause(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnPause(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnPause : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnPause : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnPause activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnPause", "(Landroid/app/Activity;)V", "GetCallActivityOnPause_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnPause", "(Landroid/app/Activity;)V", "GetCallActivityOnPause_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being paused.</param>
        <summary>Perform calling of an activity's <c>Activity#onPause</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnPause(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnPause(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnPictureInPictureRequested">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnPictureInPictureRequested (Android.App.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnPictureInPictureRequested(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnPictureInPictureRequested(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnPictureInPictureRequested : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnPictureInPictureRequested : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnPictureInPictureRequested activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnPictureInPictureRequested", "(Landroid/app/Activity;)V", "GetCallActivityOnPictureInPictureRequested_Landroid_app_Activity_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnPictureInPictureRequested", "(Landroid/app/Activity;)V", "GetCallActivityOnPictureInPictureRequested_Landroid_app_Activity_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being notified that picture-in-picture is being requested.</param>
        <summary>Perform calling of an activity's <c>Activity#onPictureInPictureRequested</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnPictureInPictureRequested(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnPictureInPictureRequested(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnPostCreate">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnPostCreate (Android.App.Activity activity, Android.OS.Bundle? savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnPostCreate(class Android.App.Activity activity, class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnPostCreate(Android.App.Activity,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnPostCreate : Android.App.Activity * Android.OS.Bundle -&gt; unit&#xA;override this.CallActivityOnPostCreate : Android.App.Activity * Android.OS.Bundle -&gt; unit" Usage="instrumentation.CallActivityOnPostCreate (activity, savedInstanceState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnPostCreate", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnPostCreate_Landroid_app_Activity_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnPostCreate", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnPostCreate_Landroid_app_Activity_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being created.</param>
        <param name="savedInstanceState">The previously saved state (or null) to pass through to
                          onPostCreate().</param>
        <summary>Perform calling of an activity's <c>Activity#onPostCreate</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnPostCreate(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnPostCreate(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnPostCreate">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnPostCreate (Android.App.Activity activity, Android.OS.Bundle? savedInstanceState, Android.OS.PersistableBundle? persistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnPostCreate(class Android.App.Activity activity, class Android.OS.Bundle savedInstanceState, class Android.OS.PersistableBundle persistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnPostCreate(Android.App.Activity,Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnPostCreate : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.CallActivityOnPostCreate : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="instrumentation.CallActivityOnPostCreate (activity, savedInstanceState, persistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnPostCreate", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnPostCreate_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnPostCreate", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnPostCreate_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
        <Parameter Name="persistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="persistentState">To be added.</param>
        <param name="activity">The activity being created.</param>
        <param name="savedInstanceState">The previously saved state (or null) to pass through to
                          onPostCreate().</param>
        <summary>Perform calling of an activity's <c>Activity#onPostCreate</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnPostCreate(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnPostCreate(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnRestart">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnRestart (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnRestart(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnRestart(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnRestart : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnRestart : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnRestart activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnRestart", "(Landroid/app/Activity;)V", "GetCallActivityOnRestart_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnRestart", "(Landroid/app/Activity;)V", "GetCallActivityOnRestart_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being restarted.</param>
        <summary>Perform calling of an activity's <c>Activity#onRestart</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnRestart(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnRestart(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnRestoreInstanceState">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnRestoreInstanceState (Android.App.Activity activity, Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnRestoreInstanceState(class Android.App.Activity activity, class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnRestoreInstanceState(Android.App.Activity,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnRestoreInstanceState : Android.App.Activity * Android.OS.Bundle -&gt; unit&#xA;override this.CallActivityOnRestoreInstanceState : Android.App.Activity * Android.OS.Bundle -&gt; unit" Usage="instrumentation.CallActivityOnRestoreInstanceState (activity, savedInstanceState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnRestoreInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnRestoreInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnRestoreInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnRestoreInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being restored.</param>
        <param name="savedInstanceState">The previously saved state being restored.</param>
        <summary>Perform calling of an activity's <c>Activity#onRestoreInstanceState</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnRestoreInstanceState(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnRestoreInstanceState">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnRestoreInstanceState (Android.App.Activity activity, Android.OS.Bundle? savedInstanceState, Android.OS.PersistableBundle? persistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnRestoreInstanceState(class Android.App.Activity activity, class Android.OS.Bundle savedInstanceState, class Android.OS.PersistableBundle persistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnRestoreInstanceState(Android.App.Activity,Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnRestoreInstanceState : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.CallActivityOnRestoreInstanceState : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="instrumentation.CallActivityOnRestoreInstanceState (activity, savedInstanceState, persistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnRestoreInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnRestoreInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnRestoreInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnRestoreInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
        <Parameter Name="persistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="persistentState">The previously persisted state (or null)
</param>
        <param name="activity">The activity being restored.</param>
        <param name="savedInstanceState">The previously saved state being restored.</param>
        <summary>Perform calling of an activity's <c>Activity#onRestoreInstanceState</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnRestoreInstanceState(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnResume">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnResume (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnResume(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnResume(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnResume : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnResume : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnResume activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnResume", "(Landroid/app/Activity;)V", "GetCallActivityOnResume_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnResume", "(Landroid/app/Activity;)V", "GetCallActivityOnResume_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being resumed.</param>
        <summary>Perform calling of an activity's <c>Activity#onResume</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnResume(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnResume(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnSaveInstanceState">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnSaveInstanceState (Android.App.Activity activity, Android.OS.Bundle outState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnSaveInstanceState(class Android.App.Activity activity, class Android.OS.Bundle outState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnSaveInstanceState(Android.App.Activity,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnSaveInstanceState : Android.App.Activity * Android.OS.Bundle -&gt; unit&#xA;override this.CallActivityOnSaveInstanceState : Android.App.Activity * Android.OS.Bundle -&gt; unit" Usage="instrumentation.CallActivityOnSaveInstanceState (activity, outState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnSaveInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnSaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnSaveInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;)V", "GetCallActivityOnSaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="outState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being saved.</param>
        <param name="outState">The bundle to pass to the call.</param>
        <summary>Perform calling of an activity's <c>Activity#onSaveInstanceState</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnSaveInstanceState(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnSaveInstanceState">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnSaveInstanceState (Android.App.Activity activity, Android.OS.Bundle outState, Android.OS.PersistableBundle outPersistentState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnSaveInstanceState(class Android.App.Activity activity, class Android.OS.Bundle outState, class Android.OS.PersistableBundle outPersistentState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnSaveInstanceState(Android.App.Activity,Android.OS.Bundle,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnSaveInstanceState : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit&#xA;override this.CallActivityOnSaveInstanceState : Android.App.Activity * Android.OS.Bundle * Android.OS.PersistableBundle -&gt; unit" Usage="instrumentation.CallActivityOnSaveInstanceState (activity, outState, outPersistentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnSaveInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnSaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnSaveInstanceState", "(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "GetCallActivityOnSaveInstanceState_Landroid_app_Activity_Landroid_os_Bundle_Landroid_os_PersistableBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="outState" Type="Android.OS.Bundle" />
        <Parameter Name="outPersistentState" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="outPersistentState">The persistent bundle to pass to the call.
</param>
        <param name="activity">The activity being saved.</param>
        <param name="outState">The bundle to pass to the call.</param>
        <summary>Perform calling of an activity's <c>Activity#onSaveInstanceState</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnSaveInstanceState(android.app.Activity,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnStart">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnStart (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnStart(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnStart(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnStart : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnStart : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnStart activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnStart", "(Landroid/app/Activity;)V", "GetCallActivityOnStart_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnStart", "(Landroid/app/Activity;)V", "GetCallActivityOnStart_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being started.</param>
        <summary>Perform calling of an activity's <c>Activity#onStart</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnStart(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnStart(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnStop">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnStop (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnStop(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnStop(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnStop : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnStop : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnStop activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnStop", "(Landroid/app/Activity;)V", "GetCallActivityOnStop_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnStop", "(Landroid/app/Activity;)V", "GetCallActivityOnStop_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being stopped.</param>
        <summary>Perform calling of an activity's <c>Activity#onStop</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnStop(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnStop(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallActivityOnUserLeaving">
      <MemberSignature Language="C#" Value="public virtual void CallActivityOnUserLeaving (Android.App.Activity? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallActivityOnUserLeaving(class Android.App.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallActivityOnUserLeaving(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member CallActivityOnUserLeaving : Android.App.Activity -&gt; unit&#xA;override this.CallActivityOnUserLeaving : Android.App.Activity -&gt; unit" Usage="instrumentation.CallActivityOnUserLeaving activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callActivityOnUserLeaving", "(Landroid/app/Activity;)V", "GetCallActivityOnUserLeaving_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callActivityOnUserLeaving", "(Landroid/app/Activity;)V", "GetCallActivityOnUserLeaving_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">The activity being notified that the user has navigated away</param>
        <summary>Perform calling of an activity's <c>Activity#onUserLeaveHint</c> method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callActivityOnUserLeaving(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callActivityOnUserLeaving(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CallApplicationOnCreate">
      <MemberSignature Language="C#" Value="public virtual void CallApplicationOnCreate (Android.App.Application? app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CallApplicationOnCreate(class Android.App.Application app) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CallApplicationOnCreate(Android.App.Application)" />
      <MemberSignature Language="F#" Value="abstract member CallApplicationOnCreate : Android.App.Application -&gt; unit&#xA;override this.CallApplicationOnCreate : Android.App.Application -&gt; unit" Usage="instrumentation.CallApplicationOnCreate app" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callApplicationOnCreate", "(Landroid/app/Application;)V", "GetCallApplicationOnCreate_Landroid_app_Application_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callApplicationOnCreate", "(Landroid/app/Application;)V", "GetCallApplicationOnCreate_Landroid_app_Application_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Android.App.Application" />
      </Parameters>
      <Docs>
        <param name="app">The application being created.</param>
        <summary>Perform calling of the application's <c>Application#onCreate</c>
            method.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#callApplicationOnCreate(android.app.Application)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.callApplicationOnCreate(android.app.Application)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckMonitorHit">
      <MemberSignature Language="C#" Value="public virtual bool CheckMonitorHit (Android.App.Instrumentation.ActivityMonitor? monitor, int minHits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckMonitorHit(class Android.App.Instrumentation/ActivityMonitor monitor, int32 minHits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.CheckMonitorHit(Android.App.Instrumentation.ActivityMonitor,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CheckMonitorHit : Android.App.Instrumentation.ActivityMonitor * int -&gt; bool&#xA;override this.CheckMonitorHit : Android.App.Instrumentation.ActivityMonitor * int -&gt; bool" Usage="instrumentation.CheckMonitorHit (monitor, minHits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkMonitorHit", "(Landroid/app/Instrumentation$ActivityMonitor;I)Z", "GetCheckMonitorHit_Landroid_app_Instrumentation_ActivityMonitor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkMonitorHit", "(Landroid/app/Instrumentation$ActivityMonitor;I)Z", "GetCheckMonitorHit_Landroid_app_Instrumentation_ActivityMonitor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitor" Type="Android.App.Instrumentation+ActivityMonitor" />
        <Parameter Name="minHits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="monitor">The ActivityMonitor to check.</param>
        <param name="minHits">The minimum number of hits required.</param>
        <summary>Test whether an existing <c>ActivityMonitor</c> has been hit.</summary>
        <returns>True if the hit count has been reached, else false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#checkMonitorHit(android.app.ActivityMonitor,%20int)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.checkMonitorHit(android.app.ActivityMonitor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Instrumentation.AddMonitor(.ActivityMonitor)" />
      </Docs>
    </Member>
    <Member MemberName="ComponentName">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ComponentName? ComponentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ComponentName ComponentName" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.ComponentName" />
      <MemberSignature Language="F#" Value="member this.ComponentName : Android.Content.ComponentName" Usage="Android.App.Instrumentation.ComponentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getComponentName", "()Landroid/content/ComponentName;", "GetGetComponentNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getComponentName", "()Landroid/content/ComponentName;", "GetGetComponentNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns complete component name of this instrumentation.</summary>
        <value>Returns the complete component name for this instrumentation.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getComponentName()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getComponentName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context? Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.Context" />
      <MemberSignature Language="F#" Value="member this.Context : Android.Content.Context" Usage="Android.App.Instrumentation.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Context of this instrumentation's package.</summary>
        <value>The instrumentation's package context.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getContext()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Instrumentation.TargetContext" />
      </Docs>
    </Member>
    <Member MemberName="EndPerformanceSnapshot">
      <MemberSignature Language="C#" Value="public virtual void EndPerformanceSnapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndPerformanceSnapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.EndPerformanceSnapshot" />
      <MemberSignature Language="F#" Value="abstract member EndPerformanceSnapshot : unit -&gt; unit&#xA;override this.EndPerformanceSnapshot : unit -&gt; unit" Usage="instrumentation.EndPerformanceSnapshot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endPerformanceSnapshot", "()V", "GetEndPerformanceSnapshotHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endPerformanceSnapshot", "()V", "GetEndPerformanceSnapshotHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public virtual void Finish (Android.App.Result resultCode, Android.OS.Bundle? results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finish(valuetype Android.App.Result resultCode, class Android.OS.Bundle results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.Finish(Android.App.Result,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member Finish : Android.App.Result * Android.OS.Bundle -&gt; unit&#xA;override this.Finish : Android.App.Result * Android.OS.Bundle -&gt; unit" Usage="instrumentation.Finish (resultCode, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("finish", "(ILandroid/os/Bundle;)V", "GetFinish_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("finish", "(ILandroid/os/Bundle;)V", "GetFinish_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="results" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="resultCode">Overall success/failure of instrumentation.</param>
        <param name="results">Any results to send back to the code that started the 
                           instrumentation.</param>
        <summary>Terminate instrumentation of the application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#finish(int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.finish(int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetUiAutomation">
      <MemberSignature Language="C#" Value="public virtual Android.App.UiAutomation? GetUiAutomation (Android.App.UiAutomationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.UiAutomation GetUiAutomation(valuetype Android.App.UiAutomationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.GetUiAutomation(Android.App.UiAutomationFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetUiAutomation : Android.App.UiAutomationFlags -&gt; Android.App.UiAutomation&#xA;override this.GetUiAutomation : Android.App.UiAutomationFlags -&gt; Android.App.UiAutomation" Usage="instrumentation.GetUiAutomation flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUiAutomation", "(I)Landroid/app/UiAutomation;", "GetGetUiAutomation_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUiAutomation", "(I)Landroid/app/UiAutomation;", "GetGetUiAutomation_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.UiAutomationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <summary>Gets the <c>UiAutomation</c> instance with no flags set.</summary>
        <returns>The UI automation instance.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getUiAutomation()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getUiAutomation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeContextMenuAction">
      <MemberSignature Language="C#" Value="public virtual bool InvokeContextMenuAction (Android.App.Activity? targetActivity, int id, Android.Views.MenuPerformFlags flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeContextMenuAction(class Android.App.Activity targetActivity, int32 id, valuetype Android.Views.MenuPerformFlags flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.InvokeContextMenuAction(Android.App.Activity,System.Int32,Android.Views.MenuPerformFlags)" />
      <MemberSignature Language="F#" Value="abstract member InvokeContextMenuAction : Android.App.Activity * int * Android.Views.MenuPerformFlags -&gt; bool&#xA;override this.InvokeContextMenuAction : Android.App.Activity * int * Android.Views.MenuPerformFlags -&gt; bool" Usage="instrumentation.InvokeContextMenuAction (targetActivity, id, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeContextMenuAction", "(Landroid/app/Activity;II)Z", "GetInvokeContextMenuAction_Landroid_app_Activity_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invokeContextMenuAction", "(Landroid/app/Activity;II)Z", "GetInvokeContextMenuAction_Landroid_app_Activity_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetActivity" Type="Android.App.Activity" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flag" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetActivity">The activity in question.</param>
        <param name="id">The identifier associated with the context menu item.</param>
        <param name="flag">Additional flags, if any.</param>
        <summary>Show the context menu for the currently focused view and executes a
            particular context menu item.</summary>
        <returns>Whether the invocation was successful (for example, it could be
                    false if item is disabled).</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#invokeContextMenuAction(android.app.Activity,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.invokeContextMenuAction(android.app.Activity, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMenuActionSync">
      <MemberSignature Language="C#" Value="public virtual bool InvokeMenuActionSync (Android.App.Activity? targetActivity, int id, Android.Views.MenuPerformFlags flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeMenuActionSync(class Android.App.Activity targetActivity, int32 id, valuetype Android.Views.MenuPerformFlags flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.InvokeMenuActionSync(Android.App.Activity,System.Int32,Android.Views.MenuPerformFlags)" />
      <MemberSignature Language="F#" Value="abstract member InvokeMenuActionSync : Android.App.Activity * int * Android.Views.MenuPerformFlags -&gt; bool&#xA;override this.InvokeMenuActionSync : Android.App.Activity * int * Android.Views.MenuPerformFlags -&gt; bool" Usage="instrumentation.InvokeMenuActionSync (targetActivity, id, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invokeMenuActionSync", "(Landroid/app/Activity;II)Z", "GetInvokeMenuActionSync_Landroid_app_Activity_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invokeMenuActionSync", "(Landroid/app/Activity;II)Z", "GetInvokeMenuActionSync_Landroid_app_Activity_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetActivity" Type="Android.App.Activity" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flag" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetActivity">The activity in question.</param>
        <param name="id">The identifier associated with the menu item.</param>
        <param name="flag">Additional flags, if any.</param>
        <summary>Execute a particular menu item.</summary>
        <returns>Whether the invocation was successful (for example, it could be
                    false if item is disabled).</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#invokeMenuActionSync(android.app.Activity,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.invokeMenuActionSync(android.app.Activity, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsProfiling">
      <MemberSignature Language="C#" Value="public virtual bool IsProfiling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProfiling" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.IsProfiling" />
      <MemberSignature Language="F#" Value="member this.IsProfiling : bool" Usage="Android.App.Instrumentation.IsProfiling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isProfiling", "()Z", "GetIsProfilingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isProfiling", "()Z", "GetIsProfilingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether this instrumentation was started with profiling enabled.</summary>
        <value>Returns true if profiling was enabled when starting, else false.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#isProfiling()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.isProfiling()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Instrumentation.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewActivity">
      <MemberSignature Language="C#" Value="public virtual Android.App.Activity? NewActivity (Java.Lang.ClassLoader? cl, string? className, Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Activity NewActivity(class Java.Lang.ClassLoader cl, string className, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.NewActivity(Java.Lang.ClassLoader,System.String,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member NewActivity : Java.Lang.ClassLoader * string * Android.Content.Intent -&gt; Android.App.Activity&#xA;override this.NewActivity : Java.Lang.ClassLoader * string * Android.Content.Intent -&gt; Android.App.Activity" Usage="instrumentation.NewActivity (cl, className, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newActivity", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;", "GetNewActivity_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newActivity", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;", "GetNewActivity_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl" Type="Java.Lang.ClassLoader" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="cl">The ClassLoader with which to instantiate the object.</param>
        <param name="className">The name of the class implementing the Activity
                  object.</param>
        <param name="clazz">The Class of the desired Activity</param>
        <param name="context">The base context for the activity to use</param>
        <param name="token">The token for this activity to communicate with</param>
        <param name="application">The application object (if any)</param>
        <param name="intent">The intent that started this Activity</param>
        <param name="info">ActivityInfo from the manifest</param>
        <param name="title">The title, typically retrieved from the ActivityInfo record</param>
        <param name="parent">The parent Activity (if any)</param>
        <param name="id">The embedded Id (if any)</param>
        <param name="lastNonConfigurationInstance">Arbitrary object that will be
            available via <c>Activity#getLastNonConfigurationInstance()
            Activity.getLastNonConfigurationInstance()</c>.</param>
        <summary>Perform instantiation of an <c>Activity</c> object.</summary>
        <returns>Returns the instantiated activity</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#newActivity(java.lang.Class,%20android.content.Context,%20android.os.IBinder,%20android.app.Application,%20android.content.Intent,%20android.content.pm.ActivityInfo,%20java.lang.CharSequence,%20android.app.Activity,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InstantiationException" />
        <exception cref="T:Java.Lang.IllegalAccessException" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="NewActivity">
      <MemberSignature Language="C#" Value="public virtual Android.App.Activity? NewActivity (Java.Lang.Class? clazz, Android.Content.Context? context, Android.OS.IBinder? token, Android.App.Application? application, Android.Content.Intent? intent, Android.Content.PM.ActivityInfo? info, Java.Lang.ICharSequence? title, Android.App.Activity? parent, string? id, Java.Lang.Object? lastNonConfigurationInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Activity NewActivity(class Java.Lang.Class clazz, class Android.Content.Context context, class Android.OS.IBinder token, class Android.App.Application application, class Android.Content.Intent intent, class Android.Content.PM.ActivityInfo info, class Java.Lang.ICharSequence title, class Android.App.Activity parent, string id, class Java.Lang.Object lastNonConfigurationInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.NewActivity(Java.Lang.Class,Android.Content.Context,Android.OS.IBinder,Android.App.Application,Android.Content.Intent,Android.Content.PM.ActivityInfo,Java.Lang.ICharSequence,Android.App.Activity,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member NewActivity : Java.Lang.Class * Android.Content.Context * Android.OS.IBinder * Android.App.Application * Android.Content.Intent * Android.Content.PM.ActivityInfo * Java.Lang.ICharSequence * Android.App.Activity * string * Java.Lang.Object -&gt; Android.App.Activity&#xA;override this.NewActivity : Java.Lang.Class * Android.Content.Context * Android.OS.IBinder * Android.App.Application * Android.Content.Intent * Android.Content.PM.ActivityInfo * Java.Lang.ICharSequence * Android.App.Activity * string * Java.Lang.Object -&gt; Android.App.Activity" Usage="instrumentation.NewActivity (clazz, context, token, application, intent, info, title, parent, id, lastNonConfigurationInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newActivity", "(Ljava/lang/Class;Landroid/content/Context;Landroid/os/IBinder;Landroid/app/Application;Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/CharSequence;Landroid/app/Activity;Ljava/lang/String;Ljava/lang/Object;)Landroid/app/Activity;", "GetNewActivity_Ljava_lang_Class_Landroid_content_Context_Landroid_os_IBinder_Landroid_app_Application_Landroid_content_Intent_Landroid_content_pm_ActivityInfo_Ljava_lang_CharSequence_Landroid_app_Activity_Ljava_lang_String_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newActivity", "(Ljava/lang/Class;Landroid/content/Context;Landroid/os/IBinder;Landroid/app/Application;Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/CharSequence;Landroid/app/Activity;Ljava/lang/String;Ljava/lang/Object;)Landroid/app/Activity;", "GetNewActivity_Ljava_lang_Class_Landroid_content_Context_Landroid_os_IBinder_Landroid_app_Application_Landroid_content_Intent_Landroid_content_pm_ActivityInfo_Ljava_lang_CharSequence_Landroid_app_Activity_Ljava_lang_String_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="token" Type="Android.OS.IBinder" />
        <Parameter Name="application" Type="Android.App.Application" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="info" Type="Android.Content.PM.ActivityInfo" />
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
        <Parameter Name="parent" Type="Android.App.Activity" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastNonConfigurationInstance" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="clazz">The Class of the desired Activity</param>
        <param name="context">The base context for the activity to use</param>
        <param name="token">The token for this activity to communicate with</param>
        <param name="application">The application object (if any)</param>
        <param name="intent">The intent that started this Activity</param>
        <param name="info">ActivityInfo from the manifest</param>
        <param name="title">The title, typically retrieved from the ActivityInfo record</param>
        <param name="parent">The parent Activity (if any)</param>
        <param name="id">The embedded Id (if any)</param>
        <param name="lastNonConfigurationInstance">Arbitrary object that will be
            available via <c>Activity#getLastNonConfigurationInstance()
            Activity.getLastNonConfigurationInstance()</c>.</param>
        <summary>Perform instantiation of an <c>Activity</c> object.</summary>
        <returns>Returns the instantiated activity</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#newActivity(java.lang.Class,%20android.content.Context,%20android.os.IBinder,%20android.app.Application,%20android.content.Intent,%20android.content.pm.ActivityInfo,%20java.lang.CharSequence,%20android.app.Activity,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewActivity">
      <MemberSignature Language="C#" Value="public Android.App.Activity? NewActivity (Java.Lang.Class? clazz, Android.Content.Context? context, Android.OS.IBinder? token, Android.App.Application? application, Android.Content.Intent? intent, Android.Content.PM.ActivityInfo? info, string? title, Android.App.Activity? parent, string? id, Java.Lang.Object? lastNonConfigurationInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Activity NewActivity(class Java.Lang.Class clazz, class Android.Content.Context context, class Android.OS.IBinder token, class Android.App.Application application, class Android.Content.Intent intent, class Android.Content.PM.ActivityInfo info, string title, class Android.App.Activity parent, string id, class Java.Lang.Object lastNonConfigurationInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.NewActivity(Java.Lang.Class,Android.Content.Context,Android.OS.IBinder,Android.App.Application,Android.Content.Intent,Android.Content.PM.ActivityInfo,System.String,Android.App.Activity,System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.NewActivity : Java.Lang.Class * Android.Content.Context * Android.OS.IBinder * Android.App.Application * Android.Content.Intent * Android.Content.PM.ActivityInfo * string * Android.App.Activity * string * Java.Lang.Object -&gt; Android.App.Activity" Usage="instrumentation.NewActivity (clazz, context, token, application, intent, info, title, parent, id, lastNonConfigurationInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="token" Type="Android.OS.IBinder" />
        <Parameter Name="application" Type="Android.App.Application" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="info" Type="Android.Content.PM.ActivityInfo" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="parent" Type="Android.App.Activity" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastNonConfigurationInstance" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="clazz">The Class of the desired Activity</param>
        <param name="context">The base context for the activity to use</param>
        <param name="token">The token for this activity to communicate with</param>
        <param name="application">The application object (if any)</param>
        <param name="intent">The intent that started this Activity</param>
        <param name="info">ActivityInfo from the manifest</param>
        <param name="title">The title, typically retrieved from the ActivityInfo record</param>
        <param name="parent">The parent Activity (if any)</param>
        <param name="id">The embedded Id (if any)</param>
        <param name="lastNonConfigurationInstance">Arbitrary object that will be
            available via <c>Activity#getLastNonConfigurationInstance()
            Activity.getLastNonConfigurationInstance()</c>.</param>
        <summary>Perform instantiation of an <c>Activity</c> object.</summary>
        <returns>Returns the instantiated activity</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#newActivity(java.lang.Class,%20android.content.Context,%20android.os.IBinder,%20android.app.Application,%20android.content.Intent,%20android.content.pm.ActivityInfo,%20java.lang.CharSequence,%20android.app.Activity,%20java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewApplication">
      <MemberSignature Language="C#" Value="public static Android.App.Application? NewApplication (Java.Lang.Class? clazz, Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.Application NewApplication(class Java.Lang.Class clazz, class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.NewApplication(Java.Lang.Class,Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member NewApplication : Java.Lang.Class * Android.Content.Context -&gt; Android.App.Application" Usage="Android.App.Instrumentation.NewApplication (clazz, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newApplication", "(Ljava/lang/Class;Landroid/content/Context;)Landroid/app/Application;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newApplication", "(Ljava/lang/Class;Landroid/content/Context;)Landroid/app/Application;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Application</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clazz" Type="Java.Lang.Class" />
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="clazz">The class used to create an Application object from.</param>
        <param name="context">The context to initialize the application with</param>
        <summary>Perform instantiation of the process's <c>Application</c> object.</summary>
        <returns>The newly instantiated Application object.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#newApplication(java.lang.Class,%20android.content.Context)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.newApplication(java.lang.Class, android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewApplication">
      <MemberSignature Language="C#" Value="public virtual Android.App.Application? NewApplication (Java.Lang.ClassLoader? cl, string? className, Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Application NewApplication(class Java.Lang.ClassLoader cl, string className, class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.NewApplication(Java.Lang.ClassLoader,System.String,Android.Content.Context)" />
      <MemberSignature Language="F#" Value="abstract member NewApplication : Java.Lang.ClassLoader * string * Android.Content.Context -&gt; Android.App.Application&#xA;override this.NewApplication : Java.Lang.ClassLoader * string * Android.Content.Context -&gt; Android.App.Application" Usage="instrumentation.NewApplication (cl, className, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newApplication", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Context;)Landroid/app/Application;", "GetNewApplication_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Context_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newApplication", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Context;)Landroid/app/Application;", "GetNewApplication_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Context_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Application</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl" Type="Java.Lang.ClassLoader" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="cl">The ClassLoader with which to instantiate the object.</param>
        <param name="className">The name of the class implementing the Application
                  object.</param>
        <param name="clazz">The class used to create an Application object from.</param>
        <param name="context">The context to initialize the application with</param>
        <summary>Perform instantiation of the process's <c>Application</c> object.</summary>
        <returns>The newly instantiated Application object.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#newApplication(java.lang.Class,%20android.content.Context)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.newApplication(java.lang.Class, android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.InstantiationException" />
        <exception cref="T:Java.Lang.IllegalAccessException" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate (Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate(class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.OnCreate(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member OnCreate : Android.OS.Bundle -&gt; unit&#xA;override this.OnCreate : Android.OS.Bundle -&gt; unit" Usage="instrumentation.OnCreate arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="arguments">Any additional arguments that were supplied when the 
                             instrumentation was started.</param>
        <summary>Called when the instrumentation is starting, before any application code
            has been loaded.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#onCreate(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.onCreate(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.OnDestroy" />
      <MemberSignature Language="F#" Value="abstract member OnDestroy : unit -&gt; unit&#xA;override this.OnDestroy : unit -&gt; unit" Usage="instrumentation.OnDestroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the instrumented application is stopping, after all of the
            normal application cleanup has occurred.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#onDestroy()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.onDestroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="public virtual bool OnException (Java.Lang.Object? obj, Java.Lang.Throwable? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnException(class Java.Lang.Object obj, class Java.Lang.Throwable e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.OnException(Java.Lang.Object,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member OnException : Java.Lang.Object * Java.Lang.Throwable -&gt; bool&#xA;override this.OnException : Java.Lang.Object * Java.Lang.Throwable -&gt; bool" Usage="instrumentation.OnException (obj, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onException", "(Ljava/lang/Object;Ljava/lang/Throwable;)Z", "GetOnException_Ljava_lang_Object_Ljava_lang_Throwable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onException", "(Ljava/lang/Object;Ljava/lang/Throwable;)Z", "GetOnException_Ljava_lang_Object_Ljava_lang_Throwable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="obj">The client object that generated the exception.  May be an
                       Application, Activity, BroadcastReceiver, Service, or null.</param>
        <param name="e">The exception that was thrown.</param>
        <summary>This is called whenever the system captures an unhandled exception that
            was thrown by the application.</summary>
        <returns>To allow normal system exception process to occur, return false.
                    If true is returned, the system will proceed as if the exception
                    didn't happen.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#onException(java.lang.Object,%20java.lang.Throwable)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.onException(java.lang.Object, java.lang.Throwable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="public virtual void OnStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.OnStart" />
      <MemberSignature Language="F#" Value="abstract member OnStart : unit -&gt; unit&#xA;override this.OnStart : unit -&gt; unit" Usage="instrumentation.OnStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStart", "()V", "GetOnStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStart", "()V", "GetOnStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method where the instrumentation thread enters execution.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#onStart()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.onStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProcessName">
      <MemberSignature Language="C#" Value="public virtual string? ProcessName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProcessName" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.ProcessName" />
      <MemberSignature Language="F#" Value="member this.ProcessName : string" Usage="Android.App.Instrumentation.ProcessName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProcessName", "()Ljava/lang/String;", "GetGetProcessNameHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProcessName", "()Ljava/lang/String;", "GetGetProcessNameHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the name of the process this instrumentation is running in.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getProcessName()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getProcessName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMonitor">
      <MemberSignature Language="C#" Value="public virtual void RemoveMonitor (Android.App.Instrumentation.ActivityMonitor? monitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveMonitor(class Android.App.Instrumentation/ActivityMonitor monitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.RemoveMonitor(Android.App.Instrumentation.ActivityMonitor)" />
      <MemberSignature Language="F#" Value="abstract member RemoveMonitor : Android.App.Instrumentation.ActivityMonitor -&gt; unit&#xA;override this.RemoveMonitor : Android.App.Instrumentation.ActivityMonitor -&gt; unit" Usage="instrumentation.RemoveMonitor monitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeMonitor", "(Landroid/app/Instrumentation$ActivityMonitor;)V", "GetRemoveMonitor_Landroid_app_Instrumentation_ActivityMonitor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeMonitor", "(Landroid/app/Instrumentation$ActivityMonitor;)V", "GetRemoveMonitor_Landroid_app_Instrumentation_ActivityMonitor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitor" Type="Android.App.Instrumentation+ActivityMonitor" />
      </Parameters>
      <Docs>
        <param name="monitor">The monitor to remove.</param>
        <summary>Remove an <c>ActivityMonitor</c> that was previously added with 
            <c>#addMonitor</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#removeMonitor(android.app.ActivityMonitor)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.removeMonitor(android.app.ActivityMonitor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Instrumentation.AddMonitor(.ActivityMonitor)" />
      </Docs>
    </Member>
    <Member MemberName="ReportKeyIdentifier">
      <MemberSignature Language="C#" Value="public const string ReportKeyIdentifier;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReportKeyIdentifier" />
      <MemberSignature Language="DocId" Value="F:Android.App.Instrumentation.ReportKeyIdentifier" />
      <MemberSignature Language="F#" Value="val mutable ReportKeyIdentifier : string" Usage="Android.App.Instrumentation.ReportKeyIdentifier" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REPORT_KEY_IDENTIFIER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REPORT_KEY_IDENTIFIER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If included in the status or final bundle sent to an IInstrumentationWatcher, this key 
            identifies the class that is writing the report.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#REPORT_KEY_IDENTIFIER" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.REPORT_KEY_IDENTIFIER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReportKeyStreamresult">
      <MemberSignature Language="C#" Value="public const string ReportKeyStreamresult;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReportKeyStreamresult" />
      <MemberSignature Language="DocId" Value="F:Android.App.Instrumentation.ReportKeyStreamresult" />
      <MemberSignature Language="F#" Value="val mutable ReportKeyStreamresult : string" Usage="Android.App.Instrumentation.ReportKeyStreamresult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("REPORT_KEY_STREAMRESULT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("REPORT_KEY_STREAMRESULT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If included in the status or final bundle sent to an IInstrumentationWatcher, this key 
            identifies a string which can simply be printed to the output stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#REPORT_KEY_STREAMRESULT" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.REPORT_KEY_STREAMRESULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RunOnMainSync">
      <MemberSignature Language="C#" Value="public virtual void RunOnMainSync (Java.Lang.IRunnable? runner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunOnMainSync(class Java.Lang.IRunnable runner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.RunOnMainSync(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member RunOnMainSync : Java.Lang.IRunnable -&gt; unit&#xA;override this.RunOnMainSync : Java.Lang.IRunnable -&gt; unit" Usage="instrumentation.RunOnMainSync runner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("runOnMainSync", "(Ljava/lang/Runnable;)V", "GetRunOnMainSync_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("runOnMainSync", "(Ljava/lang/Runnable;)V", "GetRunOnMainSync_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runner" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runner">The code to run on the main thread.</param>
        <summary>Execute a call on the application's main thread, blocking until it is
            complete.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#runOnMainSync(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.runOnMainSync(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RunOnMainSync">
      <MemberSignature Language="C#" Value="public void RunOnMainSync (Action runner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunOnMainSync(class System.Action runner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.RunOnMainSync(System.Action)" />
      <MemberSignature Language="F#" Value="member this.RunOnMainSync : Action -&gt; unit" Usage="instrumentation.RunOnMainSync runner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runner" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="runner">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCharacterSync">
      <MemberSignature Language="C#" Value="public virtual void SendCharacterSync (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCharacterSync(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendCharacterSync(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="abstract member SendCharacterSync : Android.Views.Keycode -&gt; unit&#xA;override this.SendCharacterSync : Android.Views.Keycode -&gt; unit" Usage="instrumentation.SendCharacterSync keyCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendCharacterSync", "(I)V", "GetSendCharacterSync_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendCharacterSync", "(I)V", "GetSendCharacterSync_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code of the character to send.</param>
        <summary>Higher-level method for sending both the down and up key events for a
            particular character key code.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendCharacterSync(int)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendCharacterSync(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendKeyDownUpSync">
      <MemberSignature Language="C#" Value="public virtual void SendKeyDownUpSync (Android.Views.Keycode key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeyDownUpSync(valuetype Android.Views.Keycode key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendKeyDownUpSync(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="abstract member SendKeyDownUpSync : Android.Views.Keycode -&gt; unit&#xA;override this.SendKeyDownUpSync : Android.Views.Keycode -&gt; unit" Usage="instrumentation.SendKeyDownUpSync key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendKeyDownUpSync", "(I)V", "GetSendKeyDownUpSync_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendKeyDownUpSync", "(I)V", "GetSendKeyDownUpSync_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="key">The integer keycode for the event.</param>
        <summary>Sends an up and down key event sync to the currently focused window.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendKeyDownUpSync(int)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendKeyDownUpSync(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendKeySync">
      <MemberSignature Language="C#" Value="public virtual void SendKeySync (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeySync(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendKeySync(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member SendKeySync : Android.Views.KeyEvent -&gt; unit&#xA;override this.SendKeySync : Android.Views.KeyEvent -&gt; unit" Usage="instrumentation.SendKeySync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendKeySync", "(Landroid/view/KeyEvent;)V", "GetSendKeySync_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendKeySync", "(Landroid/view/KeyEvent;)V", "GetSendKeySync_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event to send to the current focus.
</param>
        <param name="event">The event to send to the current focus.</param>
        <summary>Send a key event to the currently focused window/view and wait for it to
            be processed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendKeySync(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendKeySync(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendPointerSync">
      <MemberSignature Language="C#" Value="public virtual void SendPointerSync (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendPointerSync(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendPointerSync(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member SendPointerSync : Android.Views.MotionEvent -&gt; unit&#xA;override this.SendPointerSync : Android.Views.MotionEvent -&gt; unit" Usage="instrumentation.SendPointerSync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendPointerSync", "(Landroid/view/MotionEvent;)V", "GetSendPointerSync_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendPointerSync", "(Landroid/view/MotionEvent;)V", "GetSendPointerSync_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">A motion event describing the pointer action.  (As noted in 
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Views MotionEvent Obtain(System Int64,System Int64,System Int64,System Int64,System Int64,System Int64)';scope=Xamarin" title="M:Android.Views.MotionEvent.Obtain(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">M:Android.Views.MotionEvent.Obtain(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)</a></format>, be sure to use 
 <see cref="M:Android.OS.SystemClock.UptimeMillis" /> as the timebase.
</param>
        <param name="event">A motion event describing the pointer action.  (As noted in 
            <c>MotionEvent#obtain(long, long, int, float, float, int)</c>, be sure to use 
            <c>SystemClock#uptimeMillis()</c> as the timebase.</param>
        <summary>Dispatch a pointer event.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendPointerSync(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendPointerSync(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendStatus">
      <MemberSignature Language="C#" Value="public virtual void SendStatus (Android.App.Result resultCode, Android.OS.Bundle? results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStatus(valuetype Android.App.Result resultCode, class Android.OS.Bundle results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendStatus(Android.App.Result,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SendStatus : Android.App.Result * Android.OS.Bundle -&gt; unit&#xA;override this.SendStatus : Android.App.Result * Android.OS.Bundle -&gt; unit" Usage="instrumentation.SendStatus (resultCode, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendStatus", "(ILandroid/os/Bundle;)V", "GetSendStatus_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendStatus", "(ILandroid/os/Bundle;)V", "GetSendStatus_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultCode" Type="Android.App.Result">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="results" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="resultCode">Current success/failure of instrumentation.</param>
        <param name="results">Any results to send back to the code that started the instrumentation.</param>
        <summary>Provide a status report about the application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendStatus(int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendStatus(int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendStringSync">
      <MemberSignature Language="C#" Value="public virtual void SendStringSync (string? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStringSync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendStringSync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SendStringSync : string -&gt; unit&#xA;override this.SendStringSync : string -&gt; unit" Usage="instrumentation.SendStringSync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendStringSync", "(Ljava/lang/String;)V", "GetSendStringSync_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendStringSync", "(Ljava/lang/String;)V", "GetSendStringSync_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to be sent.</param>
        <summary>Sends the key events corresponding to the text to the app being
            instrumented.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendStringSync(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendStringSync(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SendTrackballEventSync">
      <MemberSignature Language="C#" Value="public virtual void SendTrackballEventSync (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendTrackballEventSync(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SendTrackballEventSync(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member SendTrackballEventSync : Android.Views.MotionEvent -&gt; unit&#xA;override this.SendTrackballEventSync : Android.Views.MotionEvent -&gt; unit" Usage="instrumentation.SendTrackballEventSync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendTrackballEventSync", "(Landroid/view/MotionEvent;)V", "GetSendTrackballEventSync_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendTrackballEventSync", "(Landroid/view/MotionEvent;)V", "GetSendTrackballEventSync_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">A motion event describing the trackball action.  (As noted in 
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Views MotionEvent Obtain(System Int64,System Int64,System Int64,System Int64,System Int64,System Int64)';scope=Xamarin" title="M:Android.Views.MotionEvent.Obtain(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">M:Android.Views.MotionEvent.Obtain(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)</a></format>, be sure to use 
 <see cref="M:Android.OS.SystemClock.UptimeMillis" /> as the timebase.
</param>
        <param name="event">A motion event describing the trackball action.  (As noted in 
            <c>MotionEvent#obtain(long, long, int, float, float, int)</c>, be sure to use 
            <c>SystemClock#uptimeMillis()</c> as the timebase.</param>
        <summary>Dispatch a trackball event.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#sendTrackballEventSync(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.sendTrackballEventSync(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAutomaticPerformanceSnapshots">
      <MemberSignature Language="C#" Value="public virtual void SetAutomaticPerformanceSnapshots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutomaticPerformanceSnapshots() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SetAutomaticPerformanceSnapshots" />
      <MemberSignature Language="F#" Value="abstract member SetAutomaticPerformanceSnapshots : unit -&gt; unit&#xA;override this.SetAutomaticPerformanceSnapshots : unit -&gt; unit" Usage="instrumentation.SetAutomaticPerformanceSnapshots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAutomaticPerformanceSnapshots", "()V", "GetSetAutomaticPerformanceSnapshotsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAutomaticPerformanceSnapshots", "()V", "GetSetAutomaticPerformanceSnapshotsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInTouchMode">
      <MemberSignature Language="C#" Value="public virtual void SetInTouchMode (bool inTouch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInTouchMode(bool inTouch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.SetInTouchMode(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetInTouchMode : bool -&gt; unit&#xA;override this.SetInTouchMode : bool -&gt; unit" Usage="instrumentation.SetInTouchMode inTouch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInTouchMode", "(Z)V", "GetSetInTouchMode_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInTouchMode", "(Z)V", "GetSetInTouchMode_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inTouch" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inTouch">Set to true to be in touch mode, false to be in
            focus mode.</param>
        <summary>Force the global system in or out of touch mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#setInTouchMode(boolean)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.setInTouchMode(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="instrumentation.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create and start a new thread in which to run instrumentation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#start()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartActivitySync">
      <MemberSignature Language="C#" Value="public virtual Android.App.Activity? StartActivitySync (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Activity StartActivitySync(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StartActivitySync(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member StartActivitySync : Android.Content.Intent -&gt; Android.App.Activity&#xA;override this.StartActivitySync : Android.Content.Intent -&gt; Android.App.Activity" Usage="instrumentation.StartActivitySync intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivitySync", "(Landroid/content/Intent;)Landroid/app/Activity;", "GetStartActivitySync_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivitySync", "(Landroid/content/Intent;)Landroid/app/Activity;", "GetStartActivitySync_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">Description of the activity to start.</param>
        <summary>Start a new activity and wait for it to begin running before returning.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#startActivitySync(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.startActivitySync(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="StartActivitySync">
      <MemberSignature Language="C#" Value="public virtual Android.App.Activity StartActivitySync (Android.Content.Intent intent, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Activity StartActivitySync(class Android.Content.Intent intent, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StartActivitySync(Android.Content.Intent,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivitySync : Android.Content.Intent * Android.OS.Bundle -&gt; Android.App.Activity&#xA;override this.StartActivitySync : Android.Content.Intent * Android.OS.Bundle -&gt; Android.App.Activity" Usage="instrumentation.StartActivitySync (intent, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivitySync", "(Landroid/content/Intent;Landroid/os/Bundle;)Landroid/app/Activity;", "GetStartActivitySync_Landroid_content_Intent_Landroid_os_Bundle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivitySync", "(Landroid/content/Intent;Landroid/os/Bundle;)Landroid/app/Activity;", "GetStartActivitySync_Landroid_content_Intent_Landroid_os_Bundle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="intent">Description of the activity to start.</param>
        <summary>Start a new activity and wait for it to begin running before returning.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#startActivitySync(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.startActivitySync(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAllocCounting">
      <MemberSignature Language="C#" Value="public virtual void StartAllocCounting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAllocCounting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StartAllocCounting" />
      <MemberSignature Language="F#" Value="abstract member StartAllocCounting : unit -&gt; unit&#xA;override this.StartAllocCounting : unit -&gt; unit" Usage="instrumentation.StartAllocCounting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startAllocCounting", "()V", "GetStartAllocCountingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startAllocCounting", "()V", "GetStartAllocCountingHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartPerformanceSnapshot">
      <MemberSignature Language="C#" Value="public virtual void StartPerformanceSnapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartPerformanceSnapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StartPerformanceSnapshot" />
      <MemberSignature Language="F#" Value="abstract member StartPerformanceSnapshot : unit -&gt; unit&#xA;override this.StartPerformanceSnapshot : unit -&gt; unit" Usage="instrumentation.StartPerformanceSnapshot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startPerformanceSnapshot", "()V", "GetStartPerformanceSnapshotHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startPerformanceSnapshot", "()V", "GetStartPerformanceSnapshotHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartProfiling">
      <MemberSignature Language="C#" Value="public virtual void StartProfiling ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartProfiling() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StartProfiling" />
      <MemberSignature Language="F#" Value="abstract member StartProfiling : unit -&gt; unit&#xA;override this.StartProfiling : unit -&gt; unit" Usage="instrumentation.StartProfiling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startProfiling", "()V", "GetStartProfilingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startProfiling", "()V", "GetStartProfilingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method will start profiling if isProfiling() returns true.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#startProfiling()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.startProfiling()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopAllocCounting">
      <MemberSignature Language="C#" Value="public virtual void StopAllocCounting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopAllocCounting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StopAllocCounting" />
      <MemberSignature Language="F#" Value="abstract member StopAllocCounting : unit -&gt; unit&#xA;override this.StopAllocCounting : unit -&gt; unit" Usage="instrumentation.StopAllocCounting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopAllocCounting", "()V", "GetStopAllocCountingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopAllocCounting", "()V", "GetStopAllocCountingHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopProfiling">
      <MemberSignature Language="C#" Value="public virtual void StopProfiling ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProfiling() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.StopProfiling" />
      <MemberSignature Language="F#" Value="abstract member StopProfiling : unit -&gt; unit&#xA;override this.StopProfiling : unit -&gt; unit" Usage="instrumentation.StopProfiling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopProfiling", "()V", "GetStopProfilingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopProfiling", "()V", "GetStopProfilingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops profiling if isProfiling() returns true.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#stopProfiling()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.stopProfiling()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TargetContext">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context? TargetContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context TargetContext" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.TargetContext" />
      <MemberSignature Language="F#" Value="member this.TargetContext : Android.Content.Context" Usage="Android.App.Instrumentation.TargetContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTargetContext", "()Landroid/content/Context;", "GetGetTargetContextHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTargetContext", "()Landroid/content/Context;", "GetGetTargetContextHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a Context for the target application being instrumented.</summary>
        <value>A Context in the target application.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getTargetContext()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getTargetContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Instrumentation.Context" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Instrumentation.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Instrumentation.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UiAutomation">
      <MemberSignature Language="C#" Value="public virtual Android.App.UiAutomation? UiAutomation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.UiAutomation UiAutomation" />
      <MemberSignature Language="DocId" Value="P:Android.App.Instrumentation.UiAutomation" />
      <MemberSignature Language="F#" Value="member this.UiAutomation : Android.App.UiAutomation" Usage="Android.App.Instrumentation.UiAutomation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUiAutomation", "()Landroid/app/UiAutomation;", "GetGetUiAutomationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUiAutomation", "()Landroid/app/UiAutomation;", "GetGetUiAutomationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c>UiAutomation</c> instance with no flags set.</summary>
        <value>The UI automation instance.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#getUiAutomation()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.getUiAutomation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="T:Android.App.UiAutomation" />
      </Docs>
    </Member>
    <Member MemberName="WaitForIdle">
      <MemberSignature Language="C#" Value="public virtual void WaitForIdle (Java.Lang.IRunnable? recipient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WaitForIdle(class Java.Lang.IRunnable recipient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.WaitForIdle(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member WaitForIdle : Java.Lang.IRunnable -&gt; unit&#xA;override this.WaitForIdle : Java.Lang.IRunnable -&gt; unit" Usage="instrumentation.WaitForIdle recipient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("waitForIdle", "(Ljava/lang/Runnable;)V", "GetWaitForIdle_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("waitForIdle", "(Ljava/lang/Runnable;)V", "GetWaitForIdle_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="recipient">Called the next time the thread's message queue is
                             idle.</param>
        <summary>Schedule a callback for when the application's main thread goes idle
            (has no more events to process).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#waitForIdle(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.waitForIdle(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WaitForIdle">
      <MemberSignature Language="C#" Value="public void WaitForIdle (Action recipient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForIdle(class System.Action recipient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.WaitForIdle(System.Action)" />
      <MemberSignature Language="F#" Value="member this.WaitForIdle : Action -&gt; unit" Usage="instrumentation.WaitForIdle recipient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="recipient">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForIdleSync">
      <MemberSignature Language="C#" Value="public virtual void WaitForIdleSync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WaitForIdleSync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.WaitForIdleSync" />
      <MemberSignature Language="F#" Value="abstract member WaitForIdleSync : unit -&gt; unit&#xA;override this.WaitForIdleSync : unit -&gt; unit" Usage="instrumentation.WaitForIdleSync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("waitForIdleSync", "()V", "GetWaitForIdleSyncHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("waitForIdleSync", "()V", "GetWaitForIdleSyncHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Synchronously wait for the application to be idle.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#waitForIdleSync()" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.waitForIdleSync()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WaitForMonitor">
      <MemberSignature Language="C#" Value="public virtual Android.App.Activity? WaitForMonitor (Android.App.Instrumentation.ActivityMonitor? monitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Activity WaitForMonitor(class Android.App.Instrumentation/ActivityMonitor monitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.WaitForMonitor(Android.App.Instrumentation.ActivityMonitor)" />
      <MemberSignature Language="F#" Value="abstract member WaitForMonitor : Android.App.Instrumentation.ActivityMonitor -&gt; Android.App.Activity&#xA;override this.WaitForMonitor : Android.App.Instrumentation.ActivityMonitor -&gt; Android.App.Activity" Usage="instrumentation.WaitForMonitor monitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("waitForMonitor", "(Landroid/app/Instrumentation$ActivityMonitor;)Landroid/app/Activity;", "GetWaitForMonitor_Landroid_app_Instrumentation_ActivityMonitor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("waitForMonitor", "(Landroid/app/Instrumentation$ActivityMonitor;)Landroid/app/Activity;", "GetWaitForMonitor_Landroid_app_Instrumentation_ActivityMonitor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitor" Type="Android.App.Instrumentation+ActivityMonitor" />
      </Parameters>
      <Docs>
        <param name="monitor">The ActivityMonitor to wait for.</param>
        <summary>Wait for an existing <c>ActivityMonitor</c> to be hit.</summary>
        <returns>The Activity object that matched the monitor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#waitForMonitor(android.app.ActivityMonitor)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.waitForMonitor(android.app.ActivityMonitor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WaitForMonitorWithTimeout">
      <MemberSignature Language="C#" Value="public virtual Android.App.Activity? WaitForMonitorWithTimeout (Android.App.Instrumentation.ActivityMonitor? monitor, long timeOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Activity WaitForMonitorWithTimeout(class Android.App.Instrumentation/ActivityMonitor monitor, int64 timeOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Instrumentation.WaitForMonitorWithTimeout(Android.App.Instrumentation.ActivityMonitor,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member WaitForMonitorWithTimeout : Android.App.Instrumentation.ActivityMonitor * int64 -&gt; Android.App.Activity&#xA;override this.WaitForMonitorWithTimeout : Android.App.Instrumentation.ActivityMonitor * int64 -&gt; Android.App.Activity" Usage="instrumentation.WaitForMonitorWithTimeout (monitor, timeOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("waitForMonitorWithTimeout", "(Landroid/app/Instrumentation$ActivityMonitor;J)Landroid/app/Activity;", "GetWaitForMonitorWithTimeout_Landroid_app_Instrumentation_ActivityMonitor_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("waitForMonitorWithTimeout", "(Landroid/app/Instrumentation$ActivityMonitor;J)Landroid/app/Activity;", "GetWaitForMonitorWithTimeout_Landroid_app_Instrumentation_ActivityMonitor_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monitor" Type="Android.App.Instrumentation+ActivityMonitor" />
        <Parameter Name="timeOut" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="monitor">The ActivityMonitor to wait for.</param>
        <param name="timeOut">The timeout value in milliseconds.</param>
        <summary>Wait for an existing <c>ActivityMonitor</c> to be hit till the timeout
            expires.</summary>
        <returns>The Activity object that matched the monitor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/Instrumentation#waitForMonitorWithTimeout(android.app.ActivityMonitor,%20long)" title="Reference documentation">Java documentation for <code>android.app.Instrumentation.waitForMonitorWithTimeout(android.app.ActivityMonitor, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
