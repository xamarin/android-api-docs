<Type Name="AppOpsManager" FullName="Android.App.AppOpsManager">
  <TypeSignature Language="C#" Value="public class AppOpsManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppOpsManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/AppOpsManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>API for interacting with "application operation" tracking.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">API for interacting with "application operation" tracking.

 </para>
      <para tool="javadoc-to-mdoc">This API is not generally intended for third party application developers; most
 features are only available to system applications.  Obtain an instance of it through
 <c><see cref="M:Android.Content.Context.GetSystemService(System.String)" /></c> with
 <c><see cref="F:Android.Content.Context.AppOpsService" /></c>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/AppOpsManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppOpsManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOp">
      <MemberSignature Language="C#" Value="public virtual Android.App.AppOpsManagerMode CheckOp (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.AppOpsManagerMode CheckOp(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkOp", "(Ljava/lang/String;ILjava/lang/String;)I", "GetCheckOp_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">The operation to check.  One of the OPSTR_* constants.</param>
        <param name="uid">The user id of the application attempting to perform the operation.</param>
        <param name="packageName">The name of the application attempting to perform the operation.</param>
        <summary>Do a quick check for whether an application might be able to perform an operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Do a quick check for whether an application might be able to perform an operation.
 This is <i>not</i> a security check; you must use <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>
 or <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c> for your actual security checks, which also
 ensure that the given uid and package name are consistent.  This function can just be
 used for a quick check to see if an operation has been disabled for the application,
 as an early reject of some work.  This does not modify the time stamp or other data
 about the operation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#checkOp(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 19" />
        <exception cref="T:Java.Lang.SecurityException">If the app has been configured to crash on this op.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckOpNoThrow">
      <MemberSignature Language="C#" Value="public virtual Android.App.AppOpsManagerMode CheckOpNoThrow (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.AppOpsManagerMode CheckOpNoThrow(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkOpNoThrow", "(Ljava/lang/String;ILjava/lang/String;)I", "GetCheckOpNoThrow_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">To be added.</param>
        <param name="uid">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>Like <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c> but instead of throwing a <c><see cref="T:Java.Lang.SecurityException" /></c> it
 returns <c><see cref="F:Android.App.AppOpsManager.ModeErrored" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c> but instead of throwing a <c><see cref="T:Java.Lang.SecurityException" /></c> it
 returns <c><see cref="F:Android.App.AppOpsManager.ModeErrored" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#checkOpNoThrow(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPackage">
      <MemberSignature Language="C#" Value="public virtual void CheckPackage (int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckPackage(int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkPackage", "(ILjava/lang/String;)V", "GetCheckPackage_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uid">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>Do a quick check to validate if a package name belongs to a UID.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Do a quick check to validate if a package name belongs to a UID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#checkPackage(int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">if the package name doesn't belong to the given
             UID, or if ownership cannot be verified.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FinishOp">
      <MemberSignature Language="C#" Value="public virtual void FinishOp (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishOp(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finishOp", "(Ljava/lang/String;ILjava/lang/String;)V", "GetFinishOp_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">To be added.</param>
        <param name="uid">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>Report that an application is no longer performing an operation that had previously
 been started with <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report that an application is no longer performing an operation that had previously
 been started with <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>.  There is no validation of input
 or result; the parameters supplied here must be the exact same ones previously passed
 in when starting the operation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#finishOp(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeAllowed">
      <MemberSignature Language="C#" Value="public const Android.App.AppOpsManagerMode ModeAllowed = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.AppOpsManagerMode ModeAllowed = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODE_ALLOWED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.AppOpsManagerMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Result from <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>: the given caller is
 allowed to perform the given operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Result from <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>: the given caller is
 allowed to perform the given operation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_ALLOWED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeDefault">
      <MemberSignature Language="C#" Value="public const Android.App.AppOpsManagerMode ModeDefault = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.AppOpsManagerMode ModeDefault = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODE_DEFAULT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.AppOpsManagerMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Result from <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>: the given caller should
 use its default security check.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Result from <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>: the given caller should
 use its default security check.  This mode is not normally used; it should only be used
 with appop permissions, and callers must explicitly check for it and deal with it.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_DEFAULT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeErrored">
      <MemberSignature Language="C#" Value="public const Android.App.AppOpsManagerMode ModeErrored = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.AppOpsManagerMode ModeErrored = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODE_ERRORED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.AppOpsManagerMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Result from <c><see cref="M:Android.App.AppOpsManager.CheckOpNoThrow(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOpNoThrow(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOpNoThrow(System.String,System.Int32,System.Int32)" /></c>: the
 given caller is not allowed to perform the given operation, and this attempt should
 cause it to have a fatal error, typically a <c><see cref="T:Java.Lang.SecurityException" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Result from <c><see cref="M:Android.App.AppOpsManager.CheckOpNoThrow(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOpNoThrow(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOpNoThrow(System.String,System.Int32,System.Int32)" /></c>: the
 given caller is not allowed to perform the given operation, and this attempt should
 cause it to have a fatal error, typically a <c><see cref="T:Java.Lang.SecurityException" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_ERRORED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeIgnored">
      <MemberSignature Language="C#" Value="public const Android.App.AppOpsManagerMode ModeIgnored = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.AppOpsManagerMode ModeIgnored = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODE_IGNORED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.AppOpsManagerMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Result from <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>: the given caller is
 not allowed to perform the given operation, and this attempt should
 <i>silently fail</i> (it should not cause the app to crash).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Result from <c><see cref="M:Android.App.AppOpsManager.CheckOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c>: the given caller is
 not allowed to perform the given operation, and this attempt should
 <i>silently fail</i> (it should not cause the app to crash).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_IGNORED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteOp">
      <MemberSignature Language="C#" Value="public virtual Android.App.AppOpsManagerMode NoteOp (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.AppOpsManagerMode NoteOp(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("noteOp", "(Ljava/lang/String;ILjava/lang/String;)I", "GetNoteOp_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">The operation to note.  One of the OPSTR_* constants.</param>
        <param name="uid">The user id of the application attempting to perform the operation.</param>
        <param name="packageName">The name of the application attempting to perform the operation.</param>
        <summary>Make note of an application performing an operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Make note of an application performing an operation.  Note that you must pass
 in both the uid and name of the application to be checked; this function will verify
 that these two match, and if not, return <c><see cref="F:Android.App.AppOpsManager.ModeIgnored" /></c>.  If this call
 succeeds, the last execution time of the operation for this app will be updated to
 the current time.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#noteOp(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">If the app has been configured to crash on this op.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NoteOpNoThrow">
      <MemberSignature Language="C#" Value="public virtual Android.App.AppOpsManagerMode NoteOpNoThrow (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.AppOpsManagerMode NoteOpNoThrow(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("noteOpNoThrow", "(Ljava/lang/String;ILjava/lang/String;)I", "GetNoteOpNoThrow_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">To be added.</param>
        <param name="uid">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>Like <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c> but instead of throwing a <c><see cref="T:Java.Lang.SecurityException" /></c> it
 returns <c><see cref="F:Android.App.AppOpsManager.ModeErrored" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.App.AppOpsManager.NoteOp(System.String,System.Int32,System.Int32)" /></c> but instead of throwing a <c><see cref="T:Java.Lang.SecurityException" /></c> it
 returns <c><see cref="F:Android.App.AppOpsManager.ModeErrored" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#noteOpNoThrow(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpstrCoarseLocation">
      <MemberSignature Language="C#" Value="public const string OpstrCoarseLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OpstrCoarseLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OPSTR_COARSE_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Access to coarse location information.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Access to coarse location information. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_COARSE_LOCATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpstrFineLocation">
      <MemberSignature Language="C#" Value="public const string OpstrFineLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OpstrFineLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OPSTR_FINE_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Access to fine location information.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Access to fine location information. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_FINE_LOCATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpstrGetUsageStats">
      <MemberSignature Language="C#" Value="public const string OpstrGetUsageStats;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OpstrGetUsageStats" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OPSTR_GET_USAGE_STATS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Access to <c><see cref="T:Android.App.Usage.UsageStatsManager" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Access to <c><see cref="T:Android.App.Usage.UsageStatsManager" /></c>. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_GET_USAGE_STATS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpstrMonitorHighPowerLocation">
      <MemberSignature Language="C#" Value="public const string OpstrMonitorHighPowerLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OpstrMonitorHighPowerLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OPSTR_MONITOR_HIGH_POWER_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Continually monitoring location data with a relatively high power request.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Continually monitoring location data with a relatively high power request. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_MONITOR_HIGH_POWER_LOCATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpstrMonitorLocation">
      <MemberSignature Language="C#" Value="public const string OpstrMonitorLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string OpstrMonitorLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OPSTR_MONITOR_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Continually monitoring location data.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Continually monitoring location data. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_MONITOR_LOCATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOp">
      <MemberSignature Language="C#" Value="public virtual Android.App.AppOpsManagerMode StartOp (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.AppOpsManagerMode StartOp(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startOp", "(Ljava/lang/String;ILjava/lang/String;)I", "GetStartOp_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">The operation to start.  One of the OPSTR_* constants.</param>
        <param name="uid">The user id of the application attempting to perform the operation.</param>
        <param name="packageName">The name of the application attempting to perform the operation.</param>
        <summary>Report that an application has started executing a long-running operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Report that an application has started executing a long-running operation.  Note that you
 must pass in both the uid and name of the application to be checked; this function will
 verify that these two match, and if not, return <c><see cref="F:Android.App.AppOpsManager.ModeIgnored" /></c>.  If this call
 succeeds, the last execution time of the operation for this app will be updated to
 the current time and the operation will be marked as "running".  In this case you must
 later call <c><see cref="M:Android.App.AppOpsManager.FinishOp(System.String,System.Int32,System.Int32)" /></c> to report when the application is no
 longer performing the operation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#startOp(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">If the app has been configured to crash on this op.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StartOpNoThrow">
      <MemberSignature Language="C#" Value="public virtual Android.App.AppOpsManagerMode StartOpNoThrow (string op, int uid, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.AppOpsManagerMode StartOpNoThrow(string op, int32 uid, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startOpNoThrow", "(Ljava/lang/String;ILjava/lang/String;)I", "GetStartOpNoThrow_Ljava_lang_String_ILjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.AppOpsManagerMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="op">To be added.</param>
        <param name="uid">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>Like <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c> but instead of throwing a <c><see cref="T:Java.Lang.SecurityException" /></c> it
 returns <c><see cref="F:Android.App.AppOpsManager.ModeErrored" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.App.AppOpsManager.StartOp(System.String,System.Int32,System.Int32)" /></c> but instead of throwing a <c><see cref="T:Java.Lang.SecurityException" /></c> it
 returns <c><see cref="F:Android.App.AppOpsManager.ModeErrored" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#startOpNoThrow(java.lang.String, int, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWatchingMode">
      <MemberSignature Language="C#" Value="public virtual void StartWatchingMode (string op, string packageName, Android.App.AppOpsManager.IOnOpChangedListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartWatchingMode(string op, string packageName, class Android.App.AppOpsManager/IOnOpChangedListener callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startWatchingMode", "(Ljava/lang/String;Ljava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V", "GetStartWatchingMode_Ljava_lang_String_Ljava_lang_String_Landroid_app_AppOpsManager_OnOpChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.String" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="callback" Type="Android.App.AppOpsManager+IOnOpChangedListener" />
      </Parameters>
      <Docs>
        <param name="op">The operation to monitor, one of OPSTR_*.</param>
        <param name="packageName">The name of the application to monitor.</param>
        <param name="callback">Where to report changes.
</param>
        <summary>Monitor for changes to the operating mode for the given op in the given app package.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Monitor for changes to the operating mode for the given op in the given app package.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#startWatchingMode(java.lang.String, java.lang.String, android.app.AppOpsManager.OnOpChangedListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopWatchingMode">
      <MemberSignature Language="C#" Value="public virtual void StopWatchingMode (Android.App.AppOpsManager.IOnOpChangedListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopWatchingMode(class Android.App.AppOpsManager/IOnOpChangedListener callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopWatchingMode", "(Landroid/app/AppOpsManager$OnOpChangedListener;)V", "GetStopWatchingMode_Landroid_app_AppOpsManager_OnOpChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.App.AppOpsManager+IOnOpChangedListener" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Stop monitoring that was previously started with <c><see cref="M:Android.App.AppOpsManager.StartWatchingMode(System.String,System.String,System.String)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop monitoring that was previously started with <c><see cref="M:Android.App.AppOpsManager.StartWatchingMode(System.String,System.String,System.String)" /></c>.  All
 monitoring associated with this callback will be removed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/AppOpsManager.html#stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
