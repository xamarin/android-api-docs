<Type Name="TaskStackBuilder" FullName="Android.App.TaskStackBuilder">
  <TypeSignature Language="C#" Value="public class TaskStackBuilder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskStackBuilder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.TaskStackBuilder" />
  <TypeSignature Language="F#" Value="type TaskStackBuilder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/TaskStackBuilder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/TaskStackBuilder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Utility class for constructing synthetic back stacks for cross-task navigation
            on Android 3.</summary>
    <remarks>
      <para>Utility class for constructing synthetic back stacks for cross-task navigation
            on Android 3.0 and newer.</para>
      <para>In API level 11 (Android 3.0/Honeycomb) the recommended conventions for
            app navigation using the back key changed. The back key's behavior is local
            to the current task and does not capture navigation across different tasks.
            Navigating across tasks and easily reaching the previous task is accomplished
            through the "recents" UI, accessible through the software-provided Recents key
            on the navigation or system bar. On devices with the older hardware button configuration
            the recents UI can be accessed with a long press on the Home key.</para>
      <para>When crossing from one task stack to another post-Android 3.0,
            the application should synthesize a back stack/history for the new task so that
            the user may navigate out of the new task and back to the Launcher by repeated
            presses of the back key. Back key presses should not navigate across task stacks.</para>
      <para>TaskStackBuilder provides a way to obey the correct conventions
            around cross-task navigation.</para>
      <para>&lt;div class="special reference"&gt;
            &lt;h3&gt;About Navigation&lt;/h3&gt;
            For more detailed information about tasks, the back stack, and navigation design guidelines,
            please read
            <see href="https://developer.android.com/guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back Stack</see>
            from the developer guide and <see href="https://developer.android.com/design/patterns/navigation.html">Navigation</see>
            from the design guide.
            &lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/TaskStackBuilder" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskStackBuilder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.TaskStackBuilder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.TaskStackBuilder" Usage="new Android.App.TaskStackBuilder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNextIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder? AddNextIntent (Android.Content.Intent? nextIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddNextIntent(class Android.Content.Intent nextIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.AddNextIntent(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member AddNextIntent : Android.Content.Intent -&gt; Android.App.TaskStackBuilder&#xA;override this.AddNextIntent : Android.Content.Intent -&gt; Android.App.TaskStackBuilder" Usage="taskStackBuilder.AddNextIntent nextIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNextIntent", "(Landroid/content/Intent;)Landroid/app/TaskStackBuilder;", "GetAddNextIntent_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNextIntent", "(Landroid/content/Intent;)Landroid/app/TaskStackBuilder;", "GetAddNextIntent_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="nextIntent">Intent for the next Activity in the synthesized task stack</param>
        <summary>Add a new Intent to the task stack.</summary>
        <returns>This TaskStackBuilder for method chaining</returns>
        <remarks>
          <para>Add a new Intent to the task stack. The most recently added Intent will invoke
            the Activity at the top of the final task stack.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#addNextIntent(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.addNextIntent(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddNextIntentWithParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder? AddNextIntentWithParentStack (Android.Content.Intent? nextIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddNextIntentWithParentStack(class Android.Content.Intent nextIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.AddNextIntentWithParentStack(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member AddNextIntentWithParentStack : Android.Content.Intent -&gt; Android.App.TaskStackBuilder&#xA;override this.AddNextIntentWithParentStack : Android.Content.Intent -&gt; Android.App.TaskStackBuilder" Usage="taskStackBuilder.AddNextIntentWithParentStack nextIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNextIntentWithParentStack", "(Landroid/content/Intent;)Landroid/app/TaskStackBuilder;", "GetAddNextIntentWithParentStack_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNextIntentWithParentStack", "(Landroid/content/Intent;)Landroid/app/TaskStackBuilder;", "GetAddNextIntentWithParentStack_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="nextIntent">Intent for the topmost Activity in the synthesized task stack.
                              Its chain of parents as specified in the manifest will be added.</param>
        <summary>Add a new Intent with the resolved chain of parents for the target activity to
            the task stack.</summary>
        <returns>This TaskStackBuilder for method chaining.</returns>
        <remarks>
          <para>Add a new Intent with the resolved chain of parents for the target activity to
            the task stack.</para>
          <para>This is equivalent to calling <c>#addParentStack(ComponentName) addParentStack</c>
            with the resolved ComponentName of nextIntent (if it can be resolved), followed by
            <c>#addNextIntent(Intent) addNextIntent</c> with nextIntent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#addNextIntentWithParentStack(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.addNextIntentWithParentStack(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder? AddParentStack (Android.App.Activity? sourceActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddParentStack(class Android.App.Activity sourceActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.AddParentStack(Android.App.Activity)" />
      <MemberSignature Language="F#" Value="abstract member AddParentStack : Android.App.Activity -&gt; Android.App.TaskStackBuilder&#xA;override this.AddParentStack : Android.App.Activity -&gt; Android.App.TaskStackBuilder" Usage="taskStackBuilder.AddParentStack sourceActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addParentStack", "(Landroid/app/Activity;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Landroid_app_Activity_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addParentStack", "(Landroid/app/Activity;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Landroid_app_Activity_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">All parents of this activity will be added</param>
        <summary>Add the activity parent chain as specified by the
            <c>Activity#getParentActivityIntent() getParentActivityIntent()</c> method of the activity
            specified and the <c>android.R.attr#parentActivityName parentActivityName</c> attributes
            of each successive activity (or activity-alias) element in the application's manifest
            to the task stack builder.</summary>
        <returns>This TaskStackBuilder for method chaining</returns>
        <remarks>
          <para>Add the activity parent chain as specified by the
            <c>Activity#getParentActivityIntent() getParentActivityIntent()</c> method of the activity
            specified and the <c>android.R.attr#parentActivityName parentActivityName</c> attributes
            of each successive activity (or activity-alias) element in the application's manifest
            to the task stack builder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#addParentStack(android.app.Activity)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.addParentStack(android.app.Activity)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder? AddParentStack (Android.Content.ComponentName? sourceActivityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddParentStack(class Android.Content.ComponentName sourceActivityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.AddParentStack(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member AddParentStack : Android.Content.ComponentName -&gt; Android.App.TaskStackBuilder&#xA;override this.AddParentStack : Android.Content.ComponentName -&gt; Android.App.TaskStackBuilder" Usage="taskStackBuilder.AddParentStack sourceActivityName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addParentStack", "(Landroid/content/ComponentName;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addParentStack", "(Landroid/content/ComponentName;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="sourceActivityName">Must specify an Activity component. All parents of
                                      this activity will be added</param>
        <summary>Add the activity parent chain as specified by the
            <c>android.R.attr#parentActivityName parentActivityName</c> attribute of the activity
            (or activity-alias) element in the application's manifest to the task stack builder.</summary>
        <returns>This TaskStackBuilder for method chaining</returns>
        <remarks>
          <para>Add the activity parent chain as specified by the
            <c>android.R.attr#parentActivityName parentActivityName</c> attribute of the activity
            (or activity-alias) element in the application's manifest to the task stack builder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#addParentStack(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.addParentStack(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder? AddParentStack (Java.Lang.Class? sourceActivityClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddParentStack(class Java.Lang.Class sourceActivityClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.AddParentStack(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member AddParentStack : Java.Lang.Class -&gt; Android.App.TaskStackBuilder&#xA;override this.AddParentStack : Java.Lang.Class -&gt; Android.App.TaskStackBuilder" Usage="taskStackBuilder.AddParentStack sourceActivityClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addParentStack", "(Ljava/lang/Class;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Ljava_lang_Class_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addParentStack", "(Ljava/lang/Class;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Ljava_lang_Class_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivityClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="sourceActivityClass">All parents of this activity will be added</param>
        <summary>Add the activity parent chain as specified by the
            <c>android.R.attr#parentActivityName parentActivityName</c> attribute of the activity
            (or activity-alias) element in the application's manifest to the task stack builder.</summary>
        <returns>This TaskStackBuilder for method chaining</returns>
        <remarks>
          <para>Add the activity parent chain as specified by the
            <c>android.R.attr#parentActivityName parentActivityName</c> attribute of the activity
            (or activity-alias) element in the application's manifest to the task stack builder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#addParentStack(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.addParentStack(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.App.TaskStackBuilder? Create (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.TaskStackBuilder Create(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.Create(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Content.Context -&gt; Android.App.TaskStackBuilder" Usage="Android.App.TaskStackBuilder.Create context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("create", "(Landroid/content/Context;)Landroid/app/TaskStackBuilder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("create", "(Landroid/content/Context;)Landroid/app/TaskStackBuilder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that will launch the new task stack or generate a PendingIntent</param>
        <summary>Return a new TaskStackBuilder for launching a fresh task stack consisting
            of a series of activities.</summary>
        <returns>A new TaskStackBuilder</returns>
        <remarks>
          <para>Return a new TaskStackBuilder for launching a fresh task stack consisting
            of a series of activities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#create(android.content.Context)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.create(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="EditIntentAt">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent? EditIntentAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent EditIntentAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.EditIntentAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EditIntentAt : int -&gt; Android.Content.Intent&#xA;override this.EditIntentAt : int -&gt; Android.Content.Intent" Usage="taskStackBuilder.EditIntentAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("editIntentAt", "(I)Landroid/content/Intent;", "GetEditIntentAt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("editIntentAt", "(I)Landroid/content/Intent;", "GetEditIntentAt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index from 0-getIntentCount()</param>
        <summary>Return the intent at the specified index for modification.</summary>
        <returns>the intent at position index</returns>
        <remarks>
          <para>Return the intent at the specified index for modification.
            Useful if you need to modify the flags or extras of an intent that was previously added,
            for example with <c>#addParentStack(Activity)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#editIntentAt(int)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.editIntentAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetIntents">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent[] GetIntents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent[] GetIntents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.GetIntents" />
      <MemberSignature Language="F#" Value="abstract member GetIntents : unit -&gt; Android.Content.Intent[]&#xA;override this.GetIntents : unit -&gt; Android.Content.Intent[]" Usage="taskStackBuilder.GetIntents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getIntents", "()[Landroid/content/Intent;", "GetGetIntentsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getIntents", "()[Landroid/content/Intent;", "GetGetIntentsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an array containing the intents added to this builder.</summary>
        <returns>An array containing the intents added to this builder.</returns>
        <remarks>
          <para>Return an array containing the intents added to this builder. The intent at the
            root of the task stack will appear as the first item in the array and the
            intent at the top of the stack will appear as the last item.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#getIntents()" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.getIntents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetPendingIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent? GetPendingIntent (int requestCode, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetPendingIntent(int32 requestCode, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.GetPendingIntent(System.Int32,Android.App.PendingIntentFlags)" />
      <MemberSignature Language="F#" Value="abstract member GetPendingIntent : int * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent&#xA;override this.GetPendingIntent : int * Android.App.PendingIntentFlags -&gt; Android.App.PendingIntent" Usage="taskStackBuilder.GetPendingIntent (requestCode, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPendingIntent", "(II)Landroid/app/PendingIntent;", "GetGetPendingIntent_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPendingIntent", "(II)Landroid/app/PendingIntent;", "GetGetPendingIntent_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requestCode">Private request code for the sender</param>
        <param name="flags">May be <c>PendingIntent#FLAG_ONE_SHOT</c>,
                         <c>PendingIntent#FLAG_NO_CREATE</c>, <c>PendingIntent#FLAG_CANCEL_CURRENT</c>,
                         <c>PendingIntent#FLAG_UPDATE_CURRENT</c>, or any of the flags supported by
                         <c>Intent#fillIn(Intent, int)</c> to control which unspecified parts of the
                         intent that can be supplied when the actual send happens.</param>
        <summary>Obtain a <c>PendingIntent</c> for launching the task constructed by this builder so far.</summary>
        <returns>The obtained PendingIntent</returns>
        <remarks>
          <para>Obtain a <c>PendingIntent</c> for launching the task constructed by this builder so far.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#getPendingIntent(int,%20int)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.getPendingIntent(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetPendingIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent? GetPendingIntent (int requestCode, Android.App.PendingIntentFlags flags, Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetPendingIntent(int32 requestCode, valuetype Android.App.PendingIntentFlags flags, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.GetPendingIntent(System.Int32,Android.App.PendingIntentFlags,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member GetPendingIntent : int * Android.App.PendingIntentFlags * Android.OS.Bundle -&gt; Android.App.PendingIntent&#xA;override this.GetPendingIntent : int * Android.App.PendingIntentFlags * Android.OS.Bundle -&gt; Android.App.PendingIntent" Usage="taskStackBuilder.GetPendingIntent (requestCode, flags, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPendingIntent", "(IILandroid/os/Bundle;)Landroid/app/PendingIntent;", "GetGetPendingIntent_IILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPendingIntent", "(IILandroid/os/Bundle;)Landroid/app/PendingIntent;", "GetGetPendingIntent_IILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="requestCode">Private request code for the sender</param>
        <param name="flags">May be <c>PendingIntent#FLAG_ONE_SHOT</c>,
                         <c>PendingIntent#FLAG_NO_CREATE</c>, <c>PendingIntent#FLAG_CANCEL_CURRENT</c>,
                         <c>PendingIntent#FLAG_UPDATE_CURRENT</c>, or any of the flags supported by
                         <c>Intent#fillIn(Intent, int)</c> to control which unspecified parts of the
                         intent that can be supplied when the actual send happens.</param>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>Obtain a <c>PendingIntent</c> for launching the task constructed by this builder so far.</summary>
        <returns>The obtained PendingIntent</returns>
        <remarks>
          <para>Obtain a <c>PendingIntent</c> for launching the task constructed by this builder so far.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#getPendingIntent(int,%20int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.getPendingIntent(int, int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IntentCount">
      <MemberSignature Language="C#" Value="public virtual int IntentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntentCount" />
      <MemberSignature Language="DocId" Value="P:Android.App.TaskStackBuilder.IntentCount" />
      <MemberSignature Language="F#" Value="member this.IntentCount : int" Usage="Android.App.TaskStackBuilder.IntentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIntentCount", "()I", "GetGetIntentCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getIntentCount", "()I", "GetGetIntentCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>the number of intents added so far.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#getIntentCount()" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.getIntentCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.TaskStackBuilder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.TaskStackBuilder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="C#" Value="public virtual void StartActivities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.StartActivities" />
      <MemberSignature Language="F#" Value="abstract member StartActivities : unit -&gt; unit&#xA;override this.StartActivities : unit -&gt; unit" Usage="taskStackBuilder.StartActivities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivities", "()V", "GetStartActivitiesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivities", "()V", "GetStartActivitiesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start the task stack constructed by this builder.</summary>
        <remarks>
          <para>Start the task stack constructed by this builder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#startActivities()" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.startActivities()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="C#" Value="public virtual void StartActivities (Android.OS.Bundle? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivities(class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.TaskStackBuilder.StartActivities(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member StartActivities : Android.OS.Bundle -&gt; unit&#xA;override this.StartActivities : Android.OS.Bundle -&gt; unit" Usage="taskStackBuilder.StartActivities options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActivities", "(Landroid/os/Bundle;)V", "GetStartActivities_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActivities", "(Landroid/os/Bundle;)V", "GetStartActivities_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="options">Additional options for how the Activity should be started.
            See <c>android.content.Context#startActivity(Intent, Bundle)</c>
            Context.startActivity(Intent, Bundle)} for more details.</param>
        <summary>Start the task stack constructed by this builder.</summary>
        <remarks>
          <para>Start the task stack constructed by this builder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/TaskStackBuilder#startActivities(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.TaskStackBuilder.startActivities(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.TaskStackBuilder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.TaskStackBuilder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.TaskStackBuilder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.TaskStackBuilder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
