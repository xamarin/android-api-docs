<Type Name="BitmapFactory" FullName="Android.Graphics.BitmapFactory">
  <TypeSignature Language="F#" Value="type BitmapFactory = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public class BitmapFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BitmapFactory extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.BitmapFactory" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/BitmapFactory", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Creates Bitmap objects from various sources, including files, streams,
            and byte-arrays.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/BitmapFactory" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Graphics.BitmapFactory : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.BitmapFactory" Usage="new Android.Graphics.BitmapFactory (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected BitmapFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeByteArray">
      <MemberSignature Language="F#" Value="static member DecodeByteArray : byte[] * int * int -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeByteArray (data, offset, length)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeByteArray (byte[]? data, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeByteArray(unsigned int8[] data, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeByteArray(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeByteArray", "([BII)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">byte array of compressed image data</param>
        <param name="offset">offset into imageData for where the decoder should begin
                          parsing.</param>
        <param name="length">the number of bytes, beginning at offset, to parse</param>
        <summary>Decode an immutable bitmap from the specified byte array.</summary>
        <returns>The decoded bitmap, or null if the image could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeByteArray(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeByteArray(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeByteArray">
      <MemberSignature Language="F#" Value="static member DecodeByteArray : byte[] * int * int * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeByteArray (data, offset, length, opts)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeByteArray (byte[]? data, int offset, int length, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeByteArray(unsigned int8[] data, int32 offset, int32 length, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeByteArray(System.Byte[],System.Int32,System.Int32,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeByteArray", "([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="opts">null-ok; Options that control downsampling and whether the
             image should be completely decoded, or just is size returned.</param>
        <param name="data">byte array of compressed image data</param>
        <param name="offset">offset into imageData for where the decoder should begin
                          parsing.</param>
        <param name="length">the number of bytes, beginning at offset, to parse</param>
        <summary>Decode an immutable bitmap from the specified byte array.</summary>
        <returns>The decoded bitmap, or null if the image could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeByteArray(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeByteArray(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeByteArrayAsync">
      <MemberSignature Language="F#" Value="static member DecodeByteArrayAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeByteArrayAsync (data, offset, length)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeByteArrayAsync (byte[]? data, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeByteArrayAsync(unsigned int8[] data, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeByteArrayAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeByteArrayAsync">
      <MemberSignature Language="F#" Value="static member DecodeByteArrayAsync : byte[] * int * int * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeByteArrayAsync (data, offset, length, opts)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeByteArrayAsync (byte[]? data, int offset, int length, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeByteArrayAsync(unsigned int8[] data, int32 offset, int32 length, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeByteArrayAsync(System.Byte[],System.Int32,System.Int32,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFile">
      <MemberSignature Language="F#" Value="static member DecodeFile : string -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeFile pathName" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeFile (string? pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeFile(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeFile", "(Ljava/lang/String;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">complete path name for the file to be decoded.</param>
        <summary>Decode a file path into a bitmap.</summary>
        <returns>the resulting decoded bitmap, or null if it could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeFile(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeFile(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeFile">
      <MemberSignature Language="F#" Value="static member DecodeFile : string * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeFile (pathName, opts)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeFile (string? pathName, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeFile(string pathName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFile(System.String,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeFile", "(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="opts">null-ok; Options that control downsampling and whether the
             image should be completely decoded, or just is size returned.</param>
        <param name="pathName">complete path name for the file to be decoded.</param>
        <summary>Decode a file path into a bitmap.</summary>
        <returns>the resulting decoded bitmap, or null if it could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeFile(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeFile(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeFileAsync">
      <MemberSignature Language="F#" Value="static member DecodeFileAsync : string -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeFileAsync pathName" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeFileAsync (string? pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeFileAsync(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFileAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFileAsync">
      <MemberSignature Language="F#" Value="static member DecodeFileAsync : string * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeFileAsync (pathName, opts)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeFileAsync (string? pathName, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeFileAsync(string pathName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFileAsync(System.String,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFileDescriptor">
      <MemberSignature Language="F#" Value="static member DecodeFileDescriptor : Java.IO.FileDescriptor -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeFileDescriptor fd" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeFileDescriptor (Java.IO.FileDescriptor? fd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeFileDescriptor(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFileDescriptor(Java.IO.FileDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeFileDescriptor", "(Ljava/io/FileDescriptor;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">The file descriptor containing the bitmap data to decode</param>
        <summary>Decode a bitmap from the file descriptor.</summary>
        <returns>the decoded bitmap, or null</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeFileDescriptor(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeFileDescriptor">
      <MemberSignature Language="F#" Value="static member DecodeFileDescriptor : Java.IO.FileDescriptor * Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeFileDescriptor (fd, outPadding, opts)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeFileDescriptor (Java.IO.FileDescriptor? fd, Android.Graphics.Rect? outPadding, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeFileDescriptor(class Java.IO.FileDescriptor fd, class Android.Graphics.Rect outPadding, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFileDescriptor(Java.IO.FileDescriptor,Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeFileDescriptor", "(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="outPadding" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="outPadding">If not null, return the padding rect for the bitmap if
                   it exists, otherwise set padding to [-1,-1,-1,-1]. If
                   no bitmap is returned (null) then padding is
                   unchanged.</param>
        <param name="opts">null-ok; Options that control downsampling and whether the
             image should be completely decoded, or just its size returned.</param>
        <param name="fd">The file descriptor containing the bitmap data to decode</param>
        <summary>Decode a bitmap from the file descriptor.</summary>
        <returns>the decoded bitmap, or null</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeFileDescriptor(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeFileDescriptorAsync">
      <MemberSignature Language="F#" Value="static member DecodeFileDescriptorAsync : Java.IO.FileDescriptor -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeFileDescriptorAsync fd" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeFileDescriptorAsync (Java.IO.FileDescriptor? fd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeFileDescriptorAsync(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFileDescriptorAsync(Java.IO.FileDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFileDescriptorAsync">
      <MemberSignature Language="F#" Value="static member DecodeFileDescriptorAsync : Java.IO.FileDescriptor * Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeFileDescriptorAsync (fd, outPadding, opts)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeFileDescriptorAsync (Java.IO.FileDescriptor? fd, Android.Graphics.Rect? outPadding, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeFileDescriptorAsync(class Java.IO.FileDescriptor fd, class Android.Graphics.Rect outPadding, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeFileDescriptorAsync(Java.IO.FileDescriptor,Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="outPadding" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <param name="outPadding">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeResource">
      <MemberSignature Language="F#" Value="static member DecodeResource : Android.Content.Res.Resources * int -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeResource (res, id)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeResource (Android.Content.Res.Resources? res, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeResource(class Android.Content.Res.Resources res, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeResource(Android.Content.Res.Resources,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeResource", "(Landroid/content/res/Resources;I)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="res">The resources object containing the image data</param>
        <param name="id">The resource id of the image data</param>
        <summary>Synonym for <c>#decodeResource(Resources, int, android.graphics.BitmapFactory.Options)</c>
            with null Options.</summary>
        <returns>The decoded bitmap, or null if the image could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeResource(android.content.res.Resources,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeResource(android.content.res.Resources, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeResource">
      <MemberSignature Language="F#" Value="static member DecodeResource : Android.Content.Res.Resources * int * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeResource (res, id, opts)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeResource (Android.Content.Res.Resources? res, int id, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeResource(class Android.Content.Res.Resources res, int32 id, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeResource(Android.Content.Res.Resources,System.Int32,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeResource", "(Landroid/content/res/Resources;ILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="opts">null-ok; Options that control downsampling and whether the
             image should be completely decoded, or just is size returned.</param>
        <param name="res">The resources object containing the image data</param>
        <param name="id">The resource id of the image data</param>
        <summary>Synonym for <c>#decodeResource(Resources, int, android.graphics.BitmapFactory.Options)</c>
            with null Options.</summary>
        <returns>The decoded bitmap, or null if the image could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeResource(android.content.res.Resources,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeResource(android.content.res.Resources, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeResourceAsync">
      <MemberSignature Language="F#" Value="static member DecodeResourceAsync : Android.Content.Res.Resources * int -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeResourceAsync (res, id)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeResourceAsync (Android.Content.Res.Resources? res, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeResourceAsync(class Android.Content.Res.Resources res, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeResourceAsync(Android.Content.Res.Resources,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeResourceAsync">
      <MemberSignature Language="F#" Value="static member DecodeResourceAsync : Android.Content.Res.Resources * int * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeResourceAsync (res, id, opts)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeResourceAsync (Android.Content.Res.Resources? res, int id, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeResourceAsync(class Android.Content.Res.Resources res, int32 id, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeResourceAsync(Android.Content.Res.Resources,System.Int32,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="id">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeResourceStream">
      <MemberSignature Language="F#" Value="static member DecodeResourceStream : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeResourceStream (res, value, is, pad, opts)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeResourceStream (Android.Content.Res.Resources? res, Android.Util.TypedValue? value, System.IO.Stream? is, Android.Graphics.Rect? pad, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, class Android.Graphics.Rect pad, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeResourceStream(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="pad" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="pad">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>Decode a new Bitmap from an InputStream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeResourceStream(android.content.res.Resources,%20android.util.TypedValue,%20java.io.InputStream,%20android.graphics.Rect,%20android.graphics.Options)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, android.graphics.Rect, android.graphics.Options)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="DecodeResourceStreamAsync">
      <MemberSignature Language="F#" Value="static member DecodeResourceStreamAsync : Android.Content.Res.Resources * Android.Util.TypedValue * System.IO.Stream * Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeResourceStreamAsync (res, value, is, pad, opts)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeResourceStreamAsync (Android.Content.Res.Resources? res, Android.Util.TypedValue? value, System.IO.Stream? is, Android.Graphics.Rect? pad, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, class Android.Graphics.Rect pad, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeResourceStreamAsync(Android.Content.Res.Resources,Android.Util.TypedValue,System.IO.Stream,Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="pad" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="pad">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeStream">
      <MemberSignature Language="F#" Value="static member DecodeStream : System.IO.Stream -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeStream is" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeStream (System.IO.Stream? is);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeStream(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeStream(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeStream", "(Ljava/io/InputStream;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">The input stream that holds the raw data to be decoded into a
                      bitmap.</param>
        <summary>Decode an input stream into a bitmap.</summary>
        <returns>The decoded bitmap, or null if the image data could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeStream(java.io.InputStream)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeStream(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeStream">
      <MemberSignature Language="F#" Value="static member DecodeStream : System.IO.Stream * Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.BitmapFactory.DecodeStream (is, outPadding, opts)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? DecodeStream (System.IO.Stream? is, Android.Graphics.Rect? outPadding, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeStream(class System.IO.Stream is, class Android.Graphics.Rect outPadding, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeStream(System.IO.Stream,Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeStream", "(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="outPadding" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="outPadding">If not null, return the padding rect for the bitmap if
                   it exists, otherwise set padding to [-1,-1,-1,-1]. If
                   no bitmap is returned (null) then padding is
                   unchanged.</param>
        <param name="opts">null-ok; Options that control downsampling and whether the
             image should be completely decoded, or just is size returned.</param>
        <param name="is">The input stream that holds the raw data to be decoded into a
                      bitmap.</param>
        <summary>Decode an input stream into a bitmap.</summary>
        <returns>The decoded bitmap, or null if the image data could not be decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory#decodeStream(java.io.InputStream)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.decodeStream(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeStreamAsync">
      <MemberSignature Language="F#" Value="static member DecodeStreamAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeStreamAsync is" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeStreamAsync (System.IO.Stream? is);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeStreamAsync(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeStreamAsync(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeStreamAsync">
      <MemberSignature Language="F#" Value="static member DecodeStreamAsync : System.IO.Stream * Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;" Usage="Android.Graphics.BitmapFactory.DecodeStreamAsync (is, outPadding, opts)" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap?&gt; DecodeStreamAsync (System.IO.Stream? is, Android.Graphics.Rect? outPadding, Android.Graphics.BitmapFactory.Options? opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Bitmap&gt; DecodeStreamAsync(class System.IO.Stream is, class Android.Graphics.Rect outPadding, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.DecodeStreamAsync(System.IO.Stream,Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Bitmap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="outPadding" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="outPadding">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.BitmapFactory.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.BitmapFactory.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.BitmapFactory.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
