<Type Name="Path" FullName="Android.Graphics.Path">
  <TypeSignature Language="C#" Value="public class Path : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Path extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Path" />
  <TypeSignature Language="F#" Value="type Path = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/Path", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The Path class encapsulates compound (multiple contour) geometric paths
            consisting of straight line segments, quadratic curves, and cubic curves.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/Path" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Path ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create an empty path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Path (Android.Graphics.Path src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Path src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.#ctor(Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Path : Android.Graphics.Path -&gt; Android.Graphics.Path" Usage="new Android.Graphics.Path src" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Path;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Create an empty path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Path (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Path : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Path" Usage="new Android.Graphics.Path (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public virtual void AddArc (Android.Graphics.RectF oval, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddArc(class Android.Graphics.RectF oval, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddArc(Android.Graphics.RectF,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member AddArc : Android.Graphics.RectF * single * single -&gt; unit&#xA;override this.AddArc : Android.Graphics.RectF * single * single -&gt; unit" Usage="path.AddArc (oval, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addArc", "(Landroid/graphics/RectF;FF)V", "GetAddArc_Landroid_graphics_RectF_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oval" Type="Android.Graphics.RectF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="oval">The bounds of oval defining the shape and size of the arc</param>
        <param name="startAngle">Starting angle (in degrees) where the arc begins</param>
        <param name="sweepAngle">Sweep angle (in degrees) measured clockwise</param>
        <summary>Add the specified arc to the path as a new contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public virtual void AddArc (float left, float top, float right, float bottom, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddArc(float32 left, float32 top, float32 right, float32 bottom, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member AddArc : single * single * single * single * single * single -&gt; unit&#xA;override this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="path.AddArc (left, top, right, bottom, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addArc", "(FFFFFF)V", "GetAddArc_FFFFFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="startAngle">Starting angle (in degrees) where the arc begins</param>
        <param name="sweepAngle">Sweep angle (in degrees) measured clockwise</param>
        <summary>Add the specified arc to the path as a new contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCircle">
      <MemberSignature Language="C#" Value="public virtual void AddCircle (float x, float y, float radius, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCircle(float32 x, float32 y, float32 radius, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddCircle(System.Single,System.Single,System.Single,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddCircle : single * single * single * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddCircle : single * single * single * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddCircle (x, y, radius, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addCircle", "(FFFLandroid/graphics/Path$Direction;)V", "GetAddCircle_FFFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the center of a circle to add to the path</param>
        <param name="y">The y-coordinate of the center of a circle to add to the path</param>
        <param name="radius">The radius of a circle to add to the path</param>
        <param name="dir">The direction to wind the circle's contour</param>
        <summary>Add a closed circle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddOval">
      <MemberSignature Language="C#" Value="public virtual void AddOval (Android.Graphics.RectF oval, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOval(class Android.Graphics.RectF oval, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddOval(Android.Graphics.RectF,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddOval : Android.Graphics.RectF * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddOval : Android.Graphics.RectF * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddOval (oval, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOval", "(Landroid/graphics/RectF;Landroid/graphics/Path$Direction;)V", "GetAddOval_Landroid_graphics_RectF_Landroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oval" Type="Android.Graphics.RectF" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="oval">The bounds of the oval to add as a closed contour to the path</param>
        <param name="dir">The direction to wind the oval's contour</param>
        <summary>Add a closed oval contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddOval">
      <MemberSignature Language="C#" Value="public virtual void AddOval (float left, float top, float right, float bottom, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOval(float32 left, float32 top, float32 right, float32 bottom, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddOval(System.Single,System.Single,System.Single,System.Single,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddOval : single * single * single * single * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddOval : single * single * single * single * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddOval (left, top, right, bottom, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOval", "(FFFFLandroid/graphics/Path$Direction;)V", "GetAddOval_FFFFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="dir">The direction to wind the oval's contour</param>
        <summary>Add a closed oval contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public virtual void AddPath (Android.Graphics.Path src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPath(class Android.Graphics.Path src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddPath(Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member AddPath : Android.Graphics.Path -&gt; unit&#xA;override this.AddPath : Android.Graphics.Path -&gt; unit" Usage="path.AddPath src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPath", "(Landroid/graphics/Path;)V", "GetAddPath_Landroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="src">The path that is appended to the current path</param>
        <summary>Add a copy of src to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public virtual void AddPath (Android.Graphics.Path src, Android.Graphics.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPath(class Android.Graphics.Path src, class Android.Graphics.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddPath(Android.Graphics.Path,Android.Graphics.Matrix)" />
      <MemberSignature Language="F#" Value="abstract member AddPath : Android.Graphics.Path * Android.Graphics.Matrix -&gt; unit&#xA;override this.AddPath : Android.Graphics.Path * Android.Graphics.Matrix -&gt; unit" Usage="path.AddPath (src, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPath", "(Landroid/graphics/Path;Landroid/graphics/Matrix;)V", "GetAddPath_Landroid_graphics_Path_Landroid_graphics_Matrix_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
        <Parameter Name="matrix" Type="Android.Graphics.Matrix" />
      </Parameters>
      <Docs>
        <param name="src">The path that is appended to the current path</param>
        <param name="matrix">To be added.</param>
        <summary>Add a copy of src to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public virtual void AddPath (Android.Graphics.Path src, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPath(class Android.Graphics.Path src, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddPath(Android.Graphics.Path,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member AddPath : Android.Graphics.Path * single * single -&gt; unit&#xA;override this.AddPath : Android.Graphics.Path * single * single -&gt; unit" Usage="path.AddPath (src, dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPath", "(Landroid/graphics/Path;FF)V", "GetAddPath_Landroid_graphics_Path_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="src">The path that is appended to the current path</param>
        <param name="dx">The amount to translate the path in X as it is added
</param>
        <param name="dy">To be added.</param>
        <summary>Add a copy of src to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRect">
      <MemberSignature Language="C#" Value="public virtual void AddRect (Android.Graphics.RectF rect, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRect(class Android.Graphics.RectF rect, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddRect(Android.Graphics.RectF,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddRect : Android.Graphics.RectF * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddRect : Android.Graphics.RectF * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddRect (rect, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRect", "(Landroid/graphics/RectF;Landroid/graphics/Path$Direction;)V", "GetAddRect_Landroid_graphics_RectF_Landroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.RectF" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle to add as a closed contour to the path</param>
        <param name="dir">The direction to wind the rectangle's contour</param>
        <summary>Add a closed rectangle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRect">
      <MemberSignature Language="C#" Value="public virtual void AddRect (float left, float top, float right, float bottom, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRect(float32 left, float32 top, float32 right, float32 bottom, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddRect(System.Single,System.Single,System.Single,System.Single,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddRect : single * single * single * single * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddRect : single * single * single * single * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddRect (left, top, right, bottom, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRect", "(FFFFLandroid/graphics/Path$Direction;)V", "GetAddRect_FFFFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="left">The left side of a rectangle to add to the path</param>
        <param name="top">The top of a rectangle to add to the path</param>
        <param name="right">The right side of a rectangle to add to the path</param>
        <param name="bottom">The bottom of a rectangle to add to the path</param>
        <param name="dir">The direction to wind the rectangle's contour</param>
        <summary>Add a closed rectangle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public virtual void AddRoundRect (Android.Graphics.RectF rect, float[] radii, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRoundRect(class Android.Graphics.RectF rect, float32[] radii, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddRoundRect(Android.Graphics.RectF,System.Single[],Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddRoundRect : Android.Graphics.RectF * single[] * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddRoundRect : Android.Graphics.RectF * single[] * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddRoundRect (rect, radii, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRoundRect", "(Landroid/graphics/RectF;[FLandroid/graphics/Path$Direction;)V", "GetAddRoundRect_Landroid_graphics_RectF_arrayFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.RectF" />
        <Parameter Name="radii" Type="System.Single[]" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="rect">The bounds of a round-rectangle to add to the path</param>
        <param name="radii">Array of 8 values, 4 pairs of [X,Y] radii</param>
        <param name="dir">The direction to wind the round-rectangle's contour</param>
        <summary>Add a closed round-rectangle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public virtual void AddRoundRect (Android.Graphics.RectF rect, float rx, float ry, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRoundRect(class Android.Graphics.RectF rect, float32 rx, float32 ry, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddRoundRect(Android.Graphics.RectF,System.Single,System.Single,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddRoundRect : Android.Graphics.RectF * single * single * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddRoundRect : Android.Graphics.RectF * single * single * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddRoundRect (rect, rx, ry, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRoundRect", "(Landroid/graphics/RectF;FFLandroid/graphics/Path$Direction;)V", "GetAddRoundRect_Landroid_graphics_RectF_FFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.RectF" />
        <Parameter Name="rx" Type="System.Single" />
        <Parameter Name="ry" Type="System.Single" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="rect">The bounds of a round-rectangle to add to the path</param>
        <param name="rx">The x-radius of the rounded corners on the round-rectangle</param>
        <param name="ry">The y-radius of the rounded corners on the round-rectangle</param>
        <param name="dir">The direction to wind the round-rectangle's contour</param>
        <summary>Add a closed round-rectangle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public virtual void AddRoundRect (float left, float top, float right, float bottom, float[] radii, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRoundRect(float32 left, float32 top, float32 right, float32 bottom, float32[] radii, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddRoundRect(System.Single,System.Single,System.Single,System.Single,System.Single[],Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddRoundRect : single * single * single * single * single[] * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddRoundRect : single * single * single * single * single[] * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddRoundRect (left, top, right, bottom, radii, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRoundRect", "(FFFF[FLandroid/graphics/Path$Direction;)V", "GetAddRoundRect_FFFFarrayFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="radii" Type="System.Single[]" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="radii">Array of 8 values, 4 pairs of [X,Y] radii</param>
        <param name="dir">The direction to wind the round-rectangle's contour</param>
        <summary>Add a closed round-rectangle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public virtual void AddRoundRect (float left, float top, float right, float bottom, float rx, float ry, Android.Graphics.Path.Direction dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRoundRect(float32 left, float32 top, float32 right, float32 bottom, float32 rx, float32 ry, class Android.Graphics.Path/Direction dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.AddRoundRect(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Android.Graphics.Path.Direction)" />
      <MemberSignature Language="F#" Value="abstract member AddRoundRect : single * single * single * single * single * single * Android.Graphics.Path.Direction -&gt; unit&#xA;override this.AddRoundRect : single * single * single * single * single * single * Android.Graphics.Path.Direction -&gt; unit" Usage="path.AddRoundRect (left, top, right, bottom, rx, ry, dir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRoundRect", "(FFFFFFLandroid/graphics/Path$Direction;)V", "GetAddRoundRect_FFFFFFLandroid_graphics_Path_Direction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="rx" Type="System.Single" />
        <Parameter Name="ry" Type="System.Single" />
        <Parameter Name="dir" Type="Android.Graphics.Path+Direction" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="rx">The x-radius of the rounded corners on the round-rectangle</param>
        <param name="ry">The y-radius of the rounded corners on the round-rectangle</param>
        <param name="dir">The direction to wind the round-rectangle's contour</param>
        <summary>Add a closed round-rectangle contour to the path</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Approximate">
      <MemberSignature Language="C#" Value="public virtual float[] Approximate (float acceptableError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] Approximate(float32 acceptableError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Approximate(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Approximate : single -&gt; single[]&#xA;override this.Approximate : single -&gt; single[]" Usage="path.Approximate acceptableError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("approximate", "(F)[F", "GetApproximate_FHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptableError" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="acceptableError">The acceptable error for a line on the
                                   Path. Typically this would be 0.5 so that
                                   the error is less than half a pixel.</param>
        <summary>Approximate the &lt;code&gt;Path&lt;/code&gt; with a series of line segments.</summary>
        <returns>An array of components for points approximating the Path.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public virtual void ArcTo (Android.Graphics.RectF oval, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(class Android.Graphics.RectF oval, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.ArcTo(Android.Graphics.RectF,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ArcTo : Android.Graphics.RectF * single * single -&gt; unit&#xA;override this.ArcTo : Android.Graphics.RectF * single * single -&gt; unit" Usage="path.ArcTo (oval, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("arcTo", "(Landroid/graphics/RectF;FF)V", "GetArcTo_Landroid_graphics_RectF_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oval" Type="Android.Graphics.RectF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="oval">The bounds of oval defining shape and size of the arc</param>
        <param name="startAngle">Starting angle (in degrees) where the arc begins</param>
        <param name="sweepAngle">Sweep angle (in degrees) measured clockwise, treated
                               mod 360.</param>
        <summary>Append the specified arc to the path as a new contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public virtual void ArcTo (Android.Graphics.RectF oval, float startAngle, float sweepAngle, bool forceMoveTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(class Android.Graphics.RectF oval, float32 startAngle, float32 sweepAngle, bool forceMoveTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.ArcTo(Android.Graphics.RectF,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ArcTo : Android.Graphics.RectF * single * single * bool -&gt; unit&#xA;override this.ArcTo : Android.Graphics.RectF * single * single * bool -&gt; unit" Usage="path.ArcTo (oval, startAngle, sweepAngle, forceMoveTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("arcTo", "(Landroid/graphics/RectF;FFZ)V", "GetArcTo_Landroid_graphics_RectF_FFZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oval" Type="Android.Graphics.RectF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
        <Parameter Name="forceMoveTo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oval">The bounds of oval defining shape and size of the arc</param>
        <param name="startAngle">Starting angle (in degrees) where the arc begins</param>
        <param name="sweepAngle">Sweep angle (in degrees) measured clockwise, treated
                               mod 360.</param>
        <param name="forceMoveTo">If true, always begin a new contour with the arc</param>
        <summary>Append the specified arc to the path as a new contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public virtual void ArcTo (float left, float top, float right, float bottom, float startAngle, float sweepAngle, bool forceMoveTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(float32 left, float32 top, float32 right, float32 bottom, float32 startAngle, float32 sweepAngle, bool forceMoveTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.ArcTo(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ArcTo : single * single * single * single * single * single * bool -&gt; unit&#xA;override this.ArcTo : single * single * single * single * single * single * bool -&gt; unit" Usage="path.ArcTo (left, top, right, bottom, startAngle, sweepAngle, forceMoveTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("arcTo", "(FFFFFFZ)V", "GetArcTo_FFFFFFZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
        <Parameter Name="forceMoveTo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="startAngle">Starting angle (in degrees) where the arc begins</param>
        <param name="sweepAngle">Sweep angle (in degrees) measured clockwise, treated
                               mod 360.</param>
        <param name="forceMoveTo">If true, always begin a new contour with the arc</param>
        <summary>Append the specified arc to the path as a new contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="path.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Close the current contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComputeBounds">
      <MemberSignature Language="C#" Value="public virtual void ComputeBounds (Android.Graphics.RectF bounds, bool exact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputeBounds(class Android.Graphics.RectF bounds, bool exact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.ComputeBounds(Android.Graphics.RectF,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ComputeBounds : Android.Graphics.RectF * bool -&gt; unit&#xA;override this.ComputeBounds : Android.Graphics.RectF * bool -&gt; unit" Usage="path.ComputeBounds (bounds, exact)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeBounds", "(Landroid/graphics/RectF;Z)V", "GetComputeBounds_Landroid_graphics_RectF_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.RectF" />
        <Parameter Name="exact" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bounds">Returns the computed bounds of the path's control points.</param>
        <param name="exact">This parameter is no longer used.</param>
        <summary>Compute the bounds of the control points of the path, and write the
            answer into bounds.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CubicTo">
      <MemberSignature Language="C#" Value="public virtual void CubicTo (float x1, float y1, float x2, float y2, float x3, float y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CubicTo(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.CubicTo(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member CubicTo : single * single * single * single * single * single -&gt; unit&#xA;override this.CubicTo : single * single * single * single * single * single -&gt; unit" Usage="path.CubicTo (x1, y1, x2, y2, x3, y3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cubicTo", "(FFFFFF)V", "GetCubicTo_FFFFFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">The x-coordinate of the 1st control point on a cubic curve</param>
        <param name="y1">The y-coordinate of the 1st control point on a cubic curve</param>
        <param name="x2">The x-coordinate of the 2nd control point on a cubic curve</param>
        <param name="y2">The y-coordinate of the 2nd control point on a cubic curve</param>
        <param name="x3">The x-coordinate of the end point on a cubic curve</param>
        <param name="y3">The y-coordinate of the end point on a cubic curve</param>
        <summary>Add a cubic bezier from the last point, approaching control points
            (x1,y1) and (x2,y2), and ending at (x3,y3).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFillType">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Path.FillType GetFillType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Path/FillType GetFillType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.GetFillType" />
      <MemberSignature Language="F#" Value="abstract member GetFillType : unit -&gt; Android.Graphics.Path.FillType&#xA;override this.GetFillType : unit -&gt; Android.Graphics.Path.FillType" Usage="path.GetFillType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFillType", "()Landroid/graphics/Path$FillType;", "GetGetFillTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Path+FillType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the path's fill type.</summary>
        <returns>the path's fill type</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IncReserve">
      <MemberSignature Language="C#" Value="public virtual void IncReserve (int extraPtCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncReserve(int32 extraPtCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.IncReserve(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IncReserve : int -&gt; unit&#xA;override this.IncReserve : int -&gt; unit" Usage="path.IncReserve extraPtCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("incReserve", "(I)V", "GetIncReserve_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraPtCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="extraPtCount">The number of extra points that may be added to this
                                path</param>
        <summary>Hint to the path to prepare for adding more points.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (Android.Graphics.Path path, Android.Graphics.Path.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(class Android.Graphics.Path path, class Android.Graphics.Path/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.InvokeOp(Android.Graphics.Path,Android.Graphics.Path.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : Android.Graphics.Path * Android.Graphics.Path.Op -&gt; bool&#xA;override this.InvokeOp : Android.Graphics.Path * Android.Graphics.Path.Op -&gt; bool" Usage="path.InvokeOp (path, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("op", "(Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z", "GetInvokeOp_Landroid_graphics_Path_Landroid_graphics_Path_Op_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Android.Graphics.Path" />
        <Parameter Name="op" Type="Android.Graphics.Path+Op" />
      </Parameters>
      <Docs>
        <param name="path">The second operand (for difference, the subtrahend)</param>
        <param name="op">To be added.</param>
        <summary>Set this path to the result of applying the Op to this path and the specified path.</summary>
        <returns>True if operation succeeded, false otherwise and this path remains unmodified.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Path.InvokeOp(Android.Graphics.Path, Android.Graphics.Path, Android.Graphics.Path)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (Android.Graphics.Path path1, Android.Graphics.Path path2, Android.Graphics.Path.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(class Android.Graphics.Path path1, class Android.Graphics.Path path2, class Android.Graphics.Path/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.InvokeOp(Android.Graphics.Path,Android.Graphics.Path,Android.Graphics.Path.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : Android.Graphics.Path * Android.Graphics.Path * Android.Graphics.Path.Op -&gt; bool&#xA;override this.InvokeOp : Android.Graphics.Path * Android.Graphics.Path * Android.Graphics.Path.Op -&gt; bool" Usage="path.InvokeOp (path1, path2, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("op", "(Landroid/graphics/Path;Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z", "GetInvokeOp_Landroid_graphics_Path_Landroid_graphics_Path_Landroid_graphics_Path_Op_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="Android.Graphics.Path" />
        <Parameter Name="path2" Type="Android.Graphics.Path" />
        <Parameter Name="op" Type="Android.Graphics.Path+Op" />
      </Parameters>
      <Docs>
        <param name="path1">The first operand (for difference, the minuend)</param>
        <param name="path2">The second operand (for difference, the subtrahend)</param>
        <param name="op">To be added.</param>
        <summary>Set this path to the result of applying the Op to this path and the specified path.</summary>
        <returns>True if operation succeeded, false otherwise and this path remains unmodified.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Path.InvokeOp(Android.Graphics.Path, .Op)" />
      </Docs>
    </Member>
    <Member MemberName="IsConvex">
      <MemberSignature Language="C#" Value="public virtual bool IsConvex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConvex" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Path.IsConvex" />
      <MemberSignature Language="F#" Value="member this.IsConvex : bool" Usage="Android.Graphics.Path.IsConvex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConvex", "()Z", "GetIsConvexHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the path's convexity, as defined by the content of the path.</summary>
        <value>True if the path is convex.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Path.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="Android.Graphics.Path.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEmpty", "()Z", "GetIsEmptyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the path is empty (contains no lines or curves)</summary>
        <value>true if the path is empty (contains no lines or curves)</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInverseFillType">
      <MemberSignature Language="C#" Value="public virtual bool IsInverseFillType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInverseFillType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Path.IsInverseFillType" />
      <MemberSignature Language="F#" Value="member this.IsInverseFillType : bool" Usage="Android.Graphics.Path.IsInverseFillType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInverseFillType", "()Z", "GetIsInverseFillTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the filltype is one of the INVERSE variants</summary>
        <value>true if the filltype is one of the INVERSE variants</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRect">
      <MemberSignature Language="C#" Value="public virtual bool IsRect (Android.Graphics.RectF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsRect(class Android.Graphics.RectF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.IsRect(Android.Graphics.RectF)" />
      <MemberSignature Language="F#" Value="abstract member IsRect : Android.Graphics.RectF -&gt; bool&#xA;override this.IsRect : Android.Graphics.RectF -&gt; bool" Usage="path.IsRect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isRect", "(Landroid/graphics/RectF;)Z", "GetIsRect_Landroid_graphics_RectF_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.RectF" />
      </Parameters>
      <Docs>
        <param name="rect">If not null, returns the bounds of the path if it specifies
                        a rectangle</param>
        <summary>Returns true if the path specifies a rectangle.</summary>
        <returns>true if the path specifies a rectangle</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Path.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Path.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public virtual void LineTo (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.LineTo(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member LineTo : single * single -&gt; unit&#xA;override this.LineTo : single * single -&gt; unit" Usage="path.LineTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lineTo", "(FF)V", "GetLineTo_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the end of a line</param>
        <param name="y">The y-coordinate of the end of a line</param>
        <summary>Add a line from the last point to the specified point (x,y).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public virtual void MoveTo (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTo(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.MoveTo(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member MoveTo : single * single -&gt; unit&#xA;override this.MoveTo : single * single -&gt; unit" Usage="path.MoveTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("moveTo", "(FF)V", "GetMoveTo_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the start of a new contour</param>
        <param name="y">The y-coordinate of the start of a new contour</param>
        <summary>Set the beginning of the next contour to the point (x,y).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public virtual void Offset (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Offset(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Offset(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Offset : single * single -&gt; unit&#xA;override this.Offset : single * single -&gt; unit" Usage="path.Offset (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offset", "(FF)V", "GetOffset_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The amount in the X direction to offset the entire path</param>
        <param name="dy">The amount in the Y direction to offset the entire path</param>
        <summary>Offset the path by (dx,dy)</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public virtual void Offset (float dx, float dy, Android.Graphics.Path dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Offset(float32 dx, float32 dy, class Android.Graphics.Path dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Offset(System.Single,System.Single,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member Offset : single * single * Android.Graphics.Path -&gt; unit&#xA;override this.Offset : single * single * Android.Graphics.Path -&gt; unit" Usage="path.Offset (dx, dy, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offset", "(FFLandroid/graphics/Path;)V", "GetOffset_FFLandroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="dst" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="dx">The amount in the X direction to offset the entire path</param>
        <param name="dy">The amount in the Y direction to offset the entire path</param>
        <param name="dst">The translated path is written here. If this is null, then
            the original path is modified.
</param>
        <summary>Offset the path by (dx,dy)</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuadTo">
      <MemberSignature Language="C#" Value="public virtual void QuadTo (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadTo(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.QuadTo(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member QuadTo : single * single * single * single -&gt; unit&#xA;override this.QuadTo : single * single * single * single -&gt; unit" Usage="path.QuadTo (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("quadTo", "(FFFF)V", "GetQuadTo_FFFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">The x-coordinate of the control point on a quadratic curve</param>
        <param name="y1">The y-coordinate of the control point on a quadratic curve</param>
        <param name="x2">The x-coordinate of the end point on a quadratic curve</param>
        <param name="y2">The y-coordinate of the end point on a quadratic curve</param>
        <summary>Add a quadratic bezier from the last point, approaching control point
            (x1,y1), and ending at (x2,y2).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RCubicTo">
      <MemberSignature Language="C#" Value="public virtual void RCubicTo (float x1, float y1, float x2, float y2, float x3, float y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RCubicTo(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.RCubicTo(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RCubicTo : single * single * single * single * single * single -&gt; unit&#xA;override this.RCubicTo : single * single * single * single * single * single -&gt; unit" Usage="path.RCubicTo (x1, y1, x2, y2, x3, y3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rCubicTo", "(FFFFFF)V", "GetRCubicTo_FFFFFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">To be added.</param>
        <param name="y1">To be added.</param>
        <param name="x2">To be added.</param>
        <param name="y2">To be added.</param>
        <param name="x3">To be added.</param>
        <param name="y3">To be added.</param>
        <summary>Same as cubicTo, but the coordinates are considered relative to the
            current point on this contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="path.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear any lines and curves from the path, making it empty.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public virtual void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Rewind" />
      <MemberSignature Language="F#" Value="abstract member Rewind : unit -&gt; unit&#xA;override this.Rewind : unit -&gt; unit" Usage="path.Rewind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rewind", "()V", "GetRewindHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rewinds the path: clears any lines and curves from the path but
            keeps the internal data structure for faster reuse.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RLineTo">
      <MemberSignature Language="C#" Value="public virtual void RLineTo (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RLineTo(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.RLineTo(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RLineTo : single * single -&gt; unit&#xA;override this.RLineTo : single * single -&gt; unit" Usage="path.RLineTo (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rLineTo", "(FF)V", "GetRLineTo_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The amount to add to the x-coordinate of the previous point on
                      this contour, to specify a line</param>
        <param name="dy">The amount to add to the y-coordinate of the previous point on
                      this contour, to specify a line</param>
        <summary>Same as lineTo, but the coordinates are considered relative to the last
            point on this contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RMoveTo">
      <MemberSignature Language="C#" Value="public virtual void RMoveTo (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RMoveTo(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.RMoveTo(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RMoveTo : single * single -&gt; unit&#xA;override this.RMoveTo : single * single -&gt; unit" Usage="path.RMoveTo (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rMoveTo", "(FF)V", "GetRMoveTo_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The amount to add to the x-coordinate of the end of the
                      previous contour, to specify the start of a new contour</param>
        <param name="dy">The amount to add to the y-coordinate of the end of the
                      previous contour, to specify the start of a new contour</param>
        <summary>Set the beginning of the next contour relative to the last point on the
            previous contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RQuadTo">
      <MemberSignature Language="C#" Value="public virtual void RQuadTo (float dx1, float dy1, float dx2, float dy2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RQuadTo(float32 dx1, float32 dy1, float32 dx2, float32 dy2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.RQuadTo(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RQuadTo : single * single * single * single -&gt; unit&#xA;override this.RQuadTo : single * single * single * single -&gt; unit" Usage="path.RQuadTo (dx1, dy1, dx2, dy2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rQuadTo", "(FFFF)V", "GetRQuadTo_FFFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx1" Type="System.Single" />
        <Parameter Name="dy1" Type="System.Single" />
        <Parameter Name="dx2" Type="System.Single" />
        <Parameter Name="dy2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx1">The amount to add to the x-coordinate of the last point on
                       this contour, for the control point of a quadratic curve</param>
        <param name="dy1">The amount to add to the y-coordinate of the last point on
                       this contour, for the control point of a quadratic curve</param>
        <param name="dx2">The amount to add to the x-coordinate of the last point on
                       this contour, for the end point of a quadratic curve</param>
        <param name="dy2">The amount to add to the y-coordinate of the last point on
                       this contour, for the end point of a quadratic curve</param>
        <summary>Same as quadTo, but the coordinates are considered relative to the last
            point on this contour.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (Android.Graphics.Path src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class Android.Graphics.Path src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Set(Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member Set : Android.Graphics.Path -&gt; unit&#xA;override this.Set : Android.Graphics.Path -&gt; unit" Usage="path.Set src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(Landroid/graphics/Path;)V", "GetSet_Landroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Replace the contents of this with the contents of src.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFillType">
      <MemberSignature Language="C#" Value="public virtual void SetFillType (Android.Graphics.Path.FillType ft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFillType(class Android.Graphics.Path/FillType ft) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.SetFillType(Android.Graphics.Path.FillType)" />
      <MemberSignature Language="F#" Value="abstract member SetFillType : Android.Graphics.Path.FillType -&gt; unit&#xA;override this.SetFillType : Android.Graphics.Path.FillType -&gt; unit" Usage="path.SetFillType ft" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFillType", "(Landroid/graphics/Path$FillType;)V", "GetSetFillType_Landroid_graphics_Path_FillType_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ft" Type="Android.Graphics.Path+FillType" />
      </Parameters>
      <Docs>
        <param name="ft">The new fill type for this path</param>
        <summary>Set the path's fill type.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLastPoint">
      <MemberSignature Language="C#" Value="public virtual void SetLastPoint (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPoint(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.SetLastPoint(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetLastPoint : single * single -&gt; unit&#xA;override this.SetLastPoint : single * single -&gt; unit" Usage="path.SetLastPoint (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLastPoint", "(FF)V", "GetSetLastPoint_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The new X coordinate for the last point</param>
        <param name="dy">The new Y coordinate for the last point</param>
        <summary>Sets the last point of the path.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Path.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Path.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Path.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Path.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleInverseFillType">
      <MemberSignature Language="C#" Value="public virtual void ToggleInverseFillType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleInverseFillType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.ToggleInverseFillType" />
      <MemberSignature Language="F#" Value="abstract member ToggleInverseFillType : unit -&gt; unit&#xA;override this.ToggleInverseFillType : unit -&gt; unit" Usage="path.ToggleInverseFillType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toggleInverseFillType", "()V", "GetToggleInverseFillTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Toggles the INVERSE state of the filltype</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual void Transform (Android.Graphics.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transform(class Android.Graphics.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Transform(Android.Graphics.Matrix)" />
      <MemberSignature Language="F#" Value="abstract member Transform : Android.Graphics.Matrix -&gt; unit&#xA;override this.Transform : Android.Graphics.Matrix -&gt; unit" Usage="path.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transform", "(Landroid/graphics/Matrix;)V", "GetTransform_Landroid_graphics_Matrix_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="Android.Graphics.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">The matrix to apply to the path</param>
        <summary>Transform the points in this path by matrix.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual void Transform (Android.Graphics.Matrix matrix, Android.Graphics.Path dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transform(class Android.Graphics.Matrix matrix, class Android.Graphics.Path dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Path.Transform(Android.Graphics.Matrix,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member Transform : Android.Graphics.Matrix * Android.Graphics.Path -&gt; unit&#xA;override this.Transform : Android.Graphics.Matrix * Android.Graphics.Path -&gt; unit" Usage="path.Transform (matrix, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transform", "(Landroid/graphics/Matrix;Landroid/graphics/Path;)V", "GetTransform_Landroid_graphics_Matrix_Landroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="Android.Graphics.Matrix" />
        <Parameter Name="dst" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="matrix">The matrix to apply to the path</param>
        <param name="dst">The transformed path is written here. If dst is null,
               then the the original path is modified
</param>
        <summary>Transform the points in this path by matrix.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
